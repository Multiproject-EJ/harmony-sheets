var A9 = Object.defineProperty;
var N9 = (e, t, n) => t in e ? A9(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var Dn = (e, t, n) => N9(e, typeof t != "symbol" ? t + "" : t, n);
function L9(e, t) {
  for (var n = 0; n < t.length; n++) {
    const r = t[n];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const o in r)
        if (o !== "default" && !(o in e)) {
          const s = Object.getOwnPropertyDescriptor(r, o);
          s && Object.defineProperty(e, o, s.get ? s : {
            enumerable: !0,
            get: () => r[o]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
var wl = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function dI(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function $9(e) {
  if (e.__esModule) return e;
  var t = e.default;
  if (typeof t == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
    };
    n.prototype = t.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(e).forEach(function(r) {
    var o = Object.getOwnPropertyDescriptor(e, r);
    Object.defineProperty(n, r, o.get ? o : {
      enumerable: !0,
      get: function() {
        return e[r];
      }
    });
  }), n;
}
var WP = { exports: {} }, Mw = {}, GP = { exports: {} }, Bn = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var F$;
function j9() {
  if (F$) return Bn;
  F$ = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), f = Symbol.for("react.suspense"), m = Symbol.for("react.memo"), g = Symbol.for("react.lazy"), y = Symbol.iterator;
  function w(B) {
    return B === null || typeof B != "object" ? null : (B = y && B[y] || B["@@iterator"], typeof B == "function" ? B : null);
  }
  var C = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, T = Object.assign, E = {};
  function O(B, ie, de) {
    this.props = B, this.context = ie, this.refs = E, this.updater = de || C;
  }
  O.prototype.isReactComponent = {}, O.prototype.setState = function(B, ie) {
    if (typeof B != "object" && typeof B != "function" && B != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, B, ie, "setState");
  }, O.prototype.forceUpdate = function(B) {
    this.updater.enqueueForceUpdate(this, B, "forceUpdate");
  };
  function k() {
  }
  k.prototype = O.prototype;
  function I(B, ie, de) {
    this.props = B, this.context = ie, this.refs = E, this.updater = de || C;
  }
  var M = I.prototype = new k();
  M.constructor = I, T(M, O.prototype), M.isPureReactComponent = !0;
  var N = Array.isArray, P = Object.prototype.hasOwnProperty, F = { current: null }, H = { key: !0, ref: !0, __self: !0, __source: !0 };
  function U(B, ie, de) {
    var ue, he = {}, ge = null, fe = null;
    if (ie != null) for (ue in ie.ref !== void 0 && (fe = ie.ref), ie.key !== void 0 && (ge = "" + ie.key), ie) P.call(ie, ue) && !H.hasOwnProperty(ue) && (he[ue] = ie[ue]);
    var pe = arguments.length - 2;
    if (pe === 1) he.children = de;
    else if (1 < pe) {
      for (var be = Array(pe), we = 0; we < pe; we++) be[we] = arguments[we + 2];
      he.children = be;
    }
    if (B && B.defaultProps) for (ue in pe = B.defaultProps, pe) he[ue] === void 0 && (he[ue] = pe[ue]);
    return { $$typeof: e, type: B, key: ge, ref: fe, props: he, _owner: F.current };
  }
  function z(B, ie) {
    return { $$typeof: e, type: B.type, key: ie, ref: B.ref, props: B.props, _owner: B._owner };
  }
  function A(B) {
    return typeof B == "object" && B !== null && B.$$typeof === e;
  }
  function q(B) {
    var ie = { "=": "=0", ":": "=2" };
    return "$" + B.replace(/[=:]/g, function(de) {
      return ie[de];
    });
  }
  var W = /\/+/g;
  function Y(B, ie) {
    return typeof B == "object" && B !== null && B.key != null ? q("" + B.key) : ie.toString(36);
  }
  function ee(B, ie, de, ue, he) {
    var ge = typeof B;
    (ge === "undefined" || ge === "boolean") && (B = null);
    var fe = !1;
    if (B === null) fe = !0;
    else switch (ge) {
      case "string":
      case "number":
        fe = !0;
        break;
      case "object":
        switch (B.$$typeof) {
          case e:
          case t:
            fe = !0;
        }
    }
    if (fe) return fe = B, he = he(fe), B = ue === "" ? "." + Y(fe, 0) : ue, N(he) ? (de = "", B != null && (de = B.replace(W, "$&/") + "/"), ee(he, ie, de, "", function(we) {
      return we;
    })) : he != null && (A(he) && (he = z(he, de + (!he.key || fe && fe.key === he.key ? "" : ("" + he.key).replace(W, "$&/") + "/") + B)), ie.push(he)), 1;
    if (fe = 0, ue = ue === "" ? "." : ue + ":", N(B)) for (var pe = 0; pe < B.length; pe++) {
      ge = B[pe];
      var be = ue + Y(ge, pe);
      fe += ee(ge, ie, de, be, he);
    }
    else if (be = w(B), typeof be == "function") for (B = be.call(B), pe = 0; !(ge = B.next()).done; ) ge = ge.value, be = ue + Y(ge, pe++), fe += ee(ge, ie, de, be, he);
    else if (ge === "object") throw ie = String(B), Error("Objects are not valid as a React child (found: " + (ie === "[object Object]" ? "object with keys {" + Object.keys(B).join(", ") + "}" : ie) + "). If you meant to render a collection of children, use an array instead.");
    return fe;
  }
  function G(B, ie, de) {
    if (B == null) return B;
    var ue = [], he = 0;
    return ee(B, ue, "", "", function(ge) {
      return ie.call(de, ge, he++);
    }), ue;
  }
  function K(B) {
    if (B._status === -1) {
      var ie = B._result;
      ie = ie(), ie.then(function(de) {
        (B._status === 0 || B._status === -1) && (B._status = 1, B._result = de);
      }, function(de) {
        (B._status === 0 || B._status === -1) && (B._status = 2, B._result = de);
      }), B._status === -1 && (B._status = 0, B._result = ie);
    }
    if (B._status === 1) return B._result.default;
    throw B._result;
  }
  var X = { current: null }, te = { transition: null }, re = { ReactCurrentDispatcher: X, ReactCurrentBatchConfig: te, ReactCurrentOwner: F };
  function Q() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  return Bn.Children = { map: G, forEach: function(B, ie, de) {
    G(B, function() {
      ie.apply(this, arguments);
    }, de);
  }, count: function(B) {
    var ie = 0;
    return G(B, function() {
      ie++;
    }), ie;
  }, toArray: function(B) {
    return G(B, function(ie) {
      return ie;
    }) || [];
  }, only: function(B) {
    if (!A(B)) throw Error("React.Children.only expected to receive a single React element child.");
    return B;
  } }, Bn.Component = O, Bn.Fragment = n, Bn.Profiler = o, Bn.PureComponent = I, Bn.StrictMode = r, Bn.Suspense = f, Bn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = re, Bn.act = Q, Bn.cloneElement = function(B, ie, de) {
    if (B == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + B + ".");
    var ue = T({}, B.props), he = B.key, ge = B.ref, fe = B._owner;
    if (ie != null) {
      if (ie.ref !== void 0 && (ge = ie.ref, fe = F.current), ie.key !== void 0 && (he = "" + ie.key), B.type && B.type.defaultProps) var pe = B.type.defaultProps;
      for (be in ie) P.call(ie, be) && !H.hasOwnProperty(be) && (ue[be] = ie[be] === void 0 && pe !== void 0 ? pe[be] : ie[be]);
    }
    var be = arguments.length - 2;
    if (be === 1) ue.children = de;
    else if (1 < be) {
      pe = Array(be);
      for (var we = 0; we < be; we++) pe[we] = arguments[we + 2];
      ue.children = pe;
    }
    return { $$typeof: e, type: B.type, key: he, ref: ge, props: ue, _owner: fe };
  }, Bn.createContext = function(B) {
    return B = { $$typeof: a, _currentValue: B, _currentValue2: B, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, B.Provider = { $$typeof: s, _context: B }, B.Consumer = B;
  }, Bn.createElement = U, Bn.createFactory = function(B) {
    var ie = U.bind(null, B);
    return ie.type = B, ie;
  }, Bn.createRef = function() {
    return { current: null };
  }, Bn.forwardRef = function(B) {
    return { $$typeof: c, render: B };
  }, Bn.isValidElement = A, Bn.lazy = function(B) {
    return { $$typeof: g, _payload: { _status: -1, _result: B }, _init: K };
  }, Bn.memo = function(B, ie) {
    return { $$typeof: m, type: B, compare: ie === void 0 ? null : ie };
  }, Bn.startTransition = function(B) {
    var ie = te.transition;
    te.transition = {};
    try {
      B();
    } finally {
      te.transition = ie;
    }
  }, Bn.unstable_act = Q, Bn.useCallback = function(B, ie) {
    return X.current.useCallback(B, ie);
  }, Bn.useContext = function(B) {
    return X.current.useContext(B);
  }, Bn.useDebugValue = function() {
  }, Bn.useDeferredValue = function(B) {
    return X.current.useDeferredValue(B);
  }, Bn.useEffect = function(B, ie) {
    return X.current.useEffect(B, ie);
  }, Bn.useId = function() {
    return X.current.useId();
  }, Bn.useImperativeHandle = function(B, ie, de) {
    return X.current.useImperativeHandle(B, ie, de);
  }, Bn.useInsertionEffect = function(B, ie) {
    return X.current.useInsertionEffect(B, ie);
  }, Bn.useLayoutEffect = function(B, ie) {
    return X.current.useLayoutEffect(B, ie);
  }, Bn.useMemo = function(B, ie) {
    return X.current.useMemo(B, ie);
  }, Bn.useReducer = function(B, ie, de) {
    return X.current.useReducer(B, ie, de);
  }, Bn.useRef = function(B) {
    return X.current.useRef(B);
  }, Bn.useState = function(B) {
    return X.current.useState(B);
  }, Bn.useSyncExternalStore = function(B, ie, de) {
    return X.current.useSyncExternalStore(B, ie, de);
  }, Bn.useTransition = function() {
    return X.current.useTransition();
  }, Bn.version = "18.3.1", Bn;
}
var Qw = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Qw.exports;
var z$;
function F9() {
  return z$ || (z$ = 1, function(e, t) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var n = "18.3.1", r = Symbol.for("react.element"), o = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), a = Symbol.for("react.strict_mode"), c = Symbol.for("react.profiler"), f = Symbol.for("react.provider"), m = Symbol.for("react.context"), g = Symbol.for("react.forward_ref"), y = Symbol.for("react.suspense"), w = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), T = Symbol.for("react.lazy"), E = Symbol.for("react.offscreen"), O = Symbol.iterator, k = "@@iterator";
      function I(ne) {
        if (ne === null || typeof ne != "object")
          return null;
        var ve = O && ne[O] || ne[k];
        return typeof ve == "function" ? ve : null;
      }
      var M = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, N = {
        transition: null
      }, P = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, F = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, H = {}, U = null;
      function z(ne) {
        U = ne;
      }
      H.setExtraStackFrame = function(ne) {
        U = ne;
      }, H.getCurrentStack = null, H.getStackAddendum = function() {
        var ne = "";
        U && (ne += U);
        var ve = H.getCurrentStack;
        return ve && (ne += ve() || ""), ne;
      };
      var A = !1, q = !1, W = !1, Y = !1, ee = !1, G = {
        ReactCurrentDispatcher: M,
        ReactCurrentBatchConfig: N,
        ReactCurrentOwner: F
      };
      G.ReactDebugCurrentFrame = H, G.ReactCurrentActQueue = P;
      function K(ne) {
        {
          for (var ve = arguments.length, je = new Array(ve > 1 ? ve - 1 : 0), Ve = 1; Ve < ve; Ve++)
            je[Ve - 1] = arguments[Ve];
          te("warn", ne, je);
        }
      }
      function X(ne) {
        {
          for (var ve = arguments.length, je = new Array(ve > 1 ? ve - 1 : 0), Ve = 1; Ve < ve; Ve++)
            je[Ve - 1] = arguments[Ve];
          te("error", ne, je);
        }
      }
      function te(ne, ve, je) {
        {
          var Ve = G.ReactDebugCurrentFrame, ht = Ve.getStackAddendum();
          ht !== "" && (ve += "%s", je = je.concat([ht]));
          var tn = je.map(function(_t) {
            return String(_t);
          });
          tn.unshift("Warning: " + ve), Function.prototype.apply.call(console[ne], console, tn);
        }
      }
      var re = {};
      function Q(ne, ve) {
        {
          var je = ne.constructor, Ve = je && (je.displayName || je.name) || "ReactClass", ht = Ve + "." + ve;
          if (re[ht])
            return;
          X("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", ve, Ve), re[ht] = !0;
        }
      }
      var B = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(ne) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(ne, ve, je) {
          Q(ne, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(ne, ve, je, Ve) {
          Q(ne, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(ne, ve, je, Ve) {
          Q(ne, "setState");
        }
      }, ie = Object.assign, de = {};
      Object.freeze(de);
      function ue(ne, ve, je) {
        this.props = ne, this.context = ve, this.refs = de, this.updater = je || B;
      }
      ue.prototype.isReactComponent = {}, ue.prototype.setState = function(ne, ve) {
        if (typeof ne != "object" && typeof ne != "function" && ne != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, ne, ve, "setState");
      }, ue.prototype.forceUpdate = function(ne) {
        this.updater.enqueueForceUpdate(this, ne, "forceUpdate");
      };
      {
        var he = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, ge = function(ne, ve) {
          Object.defineProperty(ue.prototype, ne, {
            get: function() {
              K("%s(...) is deprecated in plain JavaScript React classes. %s", ve[0], ve[1]);
            }
          });
        };
        for (var fe in he)
          he.hasOwnProperty(fe) && ge(fe, he[fe]);
      }
      function pe() {
      }
      pe.prototype = ue.prototype;
      function be(ne, ve, je) {
        this.props = ne, this.context = ve, this.refs = de, this.updater = je || B;
      }
      var we = be.prototype = new pe();
      we.constructor = be, ie(we, ue.prototype), we.isPureReactComponent = !0;
      function _e() {
        var ne = {
          current: null
        };
        return Object.seal(ne), ne;
      }
      var ce = Array.isArray;
      function Ce(ne) {
        return ce(ne);
      }
      function Ne(ne) {
        {
          var ve = typeof Symbol == "function" && Symbol.toStringTag, je = ve && ne[Symbol.toStringTag] || ne.constructor.name || "Object";
          return je;
        }
      }
      function Be(ne) {
        try {
          return tt(ne), !1;
        } catch {
          return !0;
        }
      }
      function tt(ne) {
        return "" + ne;
      }
      function $e(ne) {
        if (Be(ne))
          return X("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ne(ne)), tt(ne);
      }
      function rt(ne, ve, je) {
        var Ve = ne.displayName;
        if (Ve)
          return Ve;
        var ht = ve.displayName || ve.name || "";
        return ht !== "" ? je + "(" + ht + ")" : je;
      }
      function ot(ne) {
        return ne.displayName || "Context";
      }
      function wt(ne) {
        if (ne == null)
          return null;
        if (typeof ne.tag == "number" && X("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ne == "function")
          return ne.displayName || ne.name || null;
        if (typeof ne == "string")
          return ne;
        switch (ne) {
          case s:
            return "Fragment";
          case o:
            return "Portal";
          case c:
            return "Profiler";
          case a:
            return "StrictMode";
          case y:
            return "Suspense";
          case w:
            return "SuspenseList";
        }
        if (typeof ne == "object")
          switch (ne.$$typeof) {
            case m:
              var ve = ne;
              return ot(ve) + ".Consumer";
            case f:
              var je = ne;
              return ot(je._context) + ".Provider";
            case g:
              return rt(ne, ne.render, "ForwardRef");
            case C:
              var Ve = ne.displayName || null;
              return Ve !== null ? Ve : wt(ne.type) || "Memo";
            case T: {
              var ht = ne, tn = ht._payload, _t = ht._init;
              try {
                return wt(_t(tn));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var gt = Object.prototype.hasOwnProperty, nt = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, Ft, ut, Et;
      Et = {};
      function Tt(ne) {
        if (gt.call(ne, "ref")) {
          var ve = Object.getOwnPropertyDescriptor(ne, "ref").get;
          if (ve && ve.isReactWarning)
            return !1;
        }
        return ne.ref !== void 0;
      }
      function At(ne) {
        if (gt.call(ne, "key")) {
          var ve = Object.getOwnPropertyDescriptor(ne, "key").get;
          if (ve && ve.isReactWarning)
            return !1;
        }
        return ne.key !== void 0;
      }
      function vt(ne, ve) {
        var je = function() {
          Ft || (Ft = !0, X("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ve));
        };
        je.isReactWarning = !0, Object.defineProperty(ne, "key", {
          get: je,
          configurable: !0
        });
      }
      function Xe(ne, ve) {
        var je = function() {
          ut || (ut = !0, X("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", ve));
        };
        je.isReactWarning = !0, Object.defineProperty(ne, "ref", {
          get: je,
          configurable: !0
        });
      }
      function Oe(ne) {
        if (typeof ne.ref == "string" && F.current && ne.__self && F.current.stateNode !== ne.__self) {
          var ve = wt(F.current.type);
          Et[ve] || (X('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', ve, ne.ref), Et[ve] = !0);
        }
      }
      var Ie = function(ne, ve, je, Ve, ht, tn, _t) {
        var on = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: r,
          // Built-in properties that belong on the element
          type: ne,
          key: ve,
          ref: je,
          props: _t,
          // Record the component responsible for creating this element.
          _owner: tn
        };
        return on._store = {}, Object.defineProperty(on._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(on, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Ve
        }), Object.defineProperty(on, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: ht
        }), Object.freeze && (Object.freeze(on.props), Object.freeze(on)), on;
      };
      function pt(ne, ve, je) {
        var Ve, ht = {}, tn = null, _t = null, on = null, In = null;
        if (ve != null) {
          Tt(ve) && (_t = ve.ref, Oe(ve)), At(ve) && ($e(ve.key), tn = "" + ve.key), on = ve.__self === void 0 ? null : ve.__self, In = ve.__source === void 0 ? null : ve.__source;
          for (Ve in ve)
            gt.call(ve, Ve) && !nt.hasOwnProperty(Ve) && (ht[Ve] = ve[Ve]);
        }
        var Kn = arguments.length - 2;
        if (Kn === 1)
          ht.children = je;
        else if (Kn > 1) {
          for (var Mr = Array(Kn), gr = 0; gr < Kn; gr++)
            Mr[gr] = arguments[gr + 2];
          Object.freeze && Object.freeze(Mr), ht.children = Mr;
        }
        if (ne && ne.defaultProps) {
          var Rn = ne.defaultProps;
          for (Ve in Rn)
            ht[Ve] === void 0 && (ht[Ve] = Rn[Ve]);
        }
        if (tn || _t) {
          var vr = typeof ne == "function" ? ne.displayName || ne.name || "Unknown" : ne;
          tn && vt(ht, vr), _t && Xe(ht, vr);
        }
        return Ie(ne, tn, _t, on, In, F.current, ht);
      }
      function yt(ne, ve) {
        var je = Ie(ne.type, ve, ne.ref, ne._self, ne._source, ne._owner, ne.props);
        return je;
      }
      function zt(ne, ve, je) {
        if (ne == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + ne + ".");
        var Ve, ht = ie({}, ne.props), tn = ne.key, _t = ne.ref, on = ne._self, In = ne._source, Kn = ne._owner;
        if (ve != null) {
          Tt(ve) && (_t = ve.ref, Kn = F.current), At(ve) && ($e(ve.key), tn = "" + ve.key);
          var Mr;
          ne.type && ne.type.defaultProps && (Mr = ne.type.defaultProps);
          for (Ve in ve)
            gt.call(ve, Ve) && !nt.hasOwnProperty(Ve) && (ve[Ve] === void 0 && Mr !== void 0 ? ht[Ve] = Mr[Ve] : ht[Ve] = ve[Ve]);
        }
        var gr = arguments.length - 2;
        if (gr === 1)
          ht.children = je;
        else if (gr > 1) {
          for (var Rn = Array(gr), vr = 0; vr < gr; vr++)
            Rn[vr] = arguments[vr + 2];
          ht.children = Rn;
        }
        return Ie(ne.type, tn, _t, on, In, Kn, ht);
      }
      function bt(ne) {
        return typeof ne == "object" && ne !== null && ne.$$typeof === r;
      }
      var We = ".", St = ":";
      function $t(ne) {
        var ve = /[=:]/g, je = {
          "=": "=0",
          ":": "=2"
        }, Ve = ne.replace(ve, function(ht) {
          return je[ht];
        });
        return "$" + Ve;
      }
      var wn = !1, cn = /\/+/g;
      function Tr(ne) {
        return ne.replace(cn, "$&/");
      }
      function sr(ne, ve) {
        return typeof ne == "object" && ne !== null && ne.key != null ? ($e(ne.key), $t("" + ne.key)) : ve.toString(36);
      }
      function $r(ne, ve, je, Ve, ht) {
        var tn = typeof ne;
        (tn === "undefined" || tn === "boolean") && (ne = null);
        var _t = !1;
        if (ne === null)
          _t = !0;
        else
          switch (tn) {
            case "string":
            case "number":
              _t = !0;
              break;
            case "object":
              switch (ne.$$typeof) {
                case r:
                case o:
                  _t = !0;
              }
          }
        if (_t) {
          var on = ne, In = ht(on), Kn = Ve === "" ? We + sr(on, 0) : Ve;
          if (Ce(In)) {
            var Mr = "";
            Kn != null && (Mr = Tr(Kn) + "/"), $r(In, ve, Mr, "", function(ky) {
              return ky;
            });
          } else In != null && (bt(In) && (In.key && (!on || on.key !== In.key) && $e(In.key), In = yt(
            In,
            // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            je + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            (In.key && (!on || on.key !== In.key) ? (
              // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
              // eslint-disable-next-line react-internal/safe-string-coercion
              Tr("" + In.key) + "/"
            ) : "") + Kn
          )), ve.push(In));
          return 1;
        }
        var gr, Rn, vr = 0, Kr = Ve === "" ? We : Ve + St;
        if (Ce(ne))
          for (var Tu = 0; Tu < ne.length; Tu++)
            gr = ne[Tu], Rn = Kr + sr(gr, Tu), vr += $r(gr, ve, je, Rn, ht);
        else {
          var vp = I(ne);
          if (typeof vp == "function") {
            var Il = ne;
            vp === Il.entries && (wn || K("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), wn = !0);
            for (var yp = vp.call(Il), Rc, Ry = 0; !(Rc = yp.next()).done; )
              gr = Rc.value, Rn = Kr + sr(gr, Ry++), vr += $r(gr, ve, je, Rn, ht);
          } else if (tn === "object") {
            var wm = String(ne);
            throw new Error("Objects are not valid as a React child (found: " + (wm === "[object Object]" ? "object with keys {" + Object.keys(ne).join(", ") + "}" : wm) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return vr;
      }
      function _r(ne, ve, je) {
        if (ne == null)
          return ne;
        var Ve = [], ht = 0;
        return $r(ne, Ve, "", "", function(tn) {
          return ve.call(je, tn, ht++);
        }), Ve;
      }
      function Xo(ne) {
        var ve = 0;
        return _r(ne, function() {
          ve++;
        }), ve;
      }
      function Qo(ne, ve, je) {
        _r(ne, function() {
          ve.apply(this, arguments);
        }, je);
      }
      function Wt(ne) {
        return _r(ne, function(ve) {
          return ve;
        }) || [];
      }
      function hr(ne) {
        if (!bt(ne))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return ne;
      }
      function Jo(ne) {
        var ve = {
          $$typeof: m,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: ne,
          _currentValue2: ne,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        ve.Provider = {
          $$typeof: f,
          _context: ve
        };
        var je = !1, Ve = !1, ht = !1;
        {
          var tn = {
            $$typeof: m,
            _context: ve
          };
          Object.defineProperties(tn, {
            Provider: {
              get: function() {
                return Ve || (Ve = !0, X("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), ve.Provider;
              },
              set: function(_t) {
                ve.Provider = _t;
              }
            },
            _currentValue: {
              get: function() {
                return ve._currentValue;
              },
              set: function(_t) {
                ve._currentValue = _t;
              }
            },
            _currentValue2: {
              get: function() {
                return ve._currentValue2;
              },
              set: function(_t) {
                ve._currentValue2 = _t;
              }
            },
            _threadCount: {
              get: function() {
                return ve._threadCount;
              },
              set: function(_t) {
                ve._threadCount = _t;
              }
            },
            Consumer: {
              get: function() {
                return je || (je = !0, X("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), ve.Consumer;
              }
            },
            displayName: {
              get: function() {
                return ve.displayName;
              },
              set: function(_t) {
                ht || (K("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", _t), ht = !0);
              }
            }
          }), ve.Consumer = tn;
        }
        return ve._currentRenderer = null, ve._currentRenderer2 = null, ve;
      }
      var Gr = -1, oo = 0, qr = 1, Ki = 2;
      function Ri(ne) {
        if (ne._status === Gr) {
          var ve = ne._result, je = ve();
          if (je.then(function(tn) {
            if (ne._status === oo || ne._status === Gr) {
              var _t = ne;
              _t._status = qr, _t._result = tn;
            }
          }, function(tn) {
            if (ne._status === oo || ne._status === Gr) {
              var _t = ne;
              _t._status = Ki, _t._result = tn;
            }
          }), ne._status === Gr) {
            var Ve = ne;
            Ve._status = oo, Ve._result = je;
          }
        }
        if (ne._status === qr) {
          var ht = ne._result;
          return ht === void 0 && X(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, ht), "default" in ht || X(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, ht), ht.default;
        } else
          throw ne._result;
      }
      function Yi(ne) {
        var ve = {
          // We use these fields to store the result.
          _status: Gr,
          _result: ne
        }, je = {
          $$typeof: T,
          _payload: ve,
          _init: Ri
        };
        {
          var Ve, ht;
          Object.defineProperties(je, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return Ve;
              },
              set: function(tn) {
                X("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), Ve = tn, Object.defineProperty(je, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return ht;
              },
              set: function(tn) {
                X("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), ht = tn, Object.defineProperty(je, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return je;
      }
      function Xi(ne) {
        ne != null && ne.$$typeof === C ? X("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof ne != "function" ? X("forwardRef requires a render function but was given %s.", ne === null ? "null" : typeof ne) : ne.length !== 0 && ne.length !== 2 && X("forwardRef render functions accept exactly two parameters: props and ref. %s", ne.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), ne != null && (ne.defaultProps != null || ne.propTypes != null) && X("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var ve = {
          $$typeof: g,
          render: ne
        };
        {
          var je;
          Object.defineProperty(ve, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return je;
            },
            set: function(Ve) {
              je = Ve, !ne.name && !ne.displayName && (ne.displayName = Ve);
            }
          });
        }
        return ve;
      }
      var ye;
      ye = Symbol.for("react.module.reference");
      function Ye(ne) {
        return !!(typeof ne == "string" || typeof ne == "function" || ne === s || ne === c || ee || ne === a || ne === y || ne === w || Y || ne === E || A || q || W || typeof ne == "object" && ne !== null && (ne.$$typeof === T || ne.$$typeof === C || ne.$$typeof === f || ne.$$typeof === m || ne.$$typeof === g || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        ne.$$typeof === ye || ne.getModuleId !== void 0));
      }
      function ft(ne, ve) {
        Ye(ne) || X("memo: The first argument must be a component. Instead received: %s", ne === null ? "null" : typeof ne);
        var je = {
          $$typeof: C,
          type: ne,
          compare: ve === void 0 ? null : ve
        };
        {
          var Ve;
          Object.defineProperty(je, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return Ve;
            },
            set: function(ht) {
              Ve = ht, !ne.name && !ne.displayName && (ne.displayName = ht);
            }
          });
        }
        return je;
      }
      function Ct() {
        var ne = M.current;
        return ne === null && X(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), ne;
      }
      function dn(ne) {
        var ve = Ct();
        if (ne._context !== void 0) {
          var je = ne._context;
          je.Consumer === ne ? X("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : je.Provider === ne && X("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return ve.useContext(ne);
      }
      function De(ne) {
        var ve = Ct();
        return ve.useState(ne);
      }
      function Re(ne, ve, je) {
        var Ve = Ct();
        return Ve.useReducer(ne, ve, je);
      }
      function Je(ne) {
        var ve = Ct();
        return ve.useRef(ne);
      }
      function Bt(ne, ve) {
        var je = Ct();
        return je.useEffect(ne, ve);
      }
      function jt(ne, ve) {
        var je = Ct();
        return je.useInsertionEffect(ne, ve);
      }
      function Kt(ne, ve) {
        var je = Ct();
        return je.useLayoutEffect(ne, ve);
      }
      function Ln(ne, ve) {
        var je = Ct();
        return je.useCallback(ne, ve);
      }
      function Or(ne, ve) {
        var je = Ct();
        return je.useMemo(ne, ve);
      }
      function Zo(ne, ve, je) {
        var Ve = Ct();
        return Ve.useImperativeHandle(ne, ve, je);
      }
      function yn(ne, ve) {
        {
          var je = Ct();
          return je.useDebugValue(ne, ve);
        }
      }
      function Sn() {
        var ne = Ct();
        return ne.useTransition();
      }
      function yi(ne) {
        var ve = Ct();
        return ve.useDeferredValue(ne);
      }
      function Ds() {
        var ne = Ct();
        return ne.useId();
      }
      function Mn(ne, ve, je) {
        var Ve = Ct();
        return Ve.useSyncExternalStore(ne, ve, je);
      }
      var Mo = 0, ki, Qi, bi, pp, Pi, ym, bm;
      function Md() {
      }
      Md.__reactDisabledLog = !0;
      function wu() {
        {
          if (Mo === 0) {
            ki = console.log, Qi = console.info, bi = console.warn, pp = console.error, Pi = console.group, ym = console.groupCollapsed, bm = console.groupEnd;
            var ne = {
              configurable: !0,
              enumerable: !0,
              value: Md,
              writable: !0
            };
            Object.defineProperties(console, {
              info: ne,
              log: ne,
              warn: ne,
              error: ne,
              group: ne,
              groupCollapsed: ne,
              groupEnd: ne
            });
          }
          Mo++;
        }
      }
      function ys() {
        {
          if (Mo--, Mo === 0) {
            var ne = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: ie({}, ne, {
                value: ki
              }),
              info: ie({}, ne, {
                value: Qi
              }),
              warn: ie({}, ne, {
                value: bi
              }),
              error: ie({}, ne, {
                value: pp
              }),
              group: ie({}, ne, {
                value: Pi
              }),
              groupCollapsed: ie({}, ne, {
                value: ym
              }),
              groupEnd: ie({}, ne, {
                value: bm
              })
            });
          }
          Mo < 0 && X("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var da = G.ReactCurrentDispatcher, fa;
      function Id(ne, ve, je) {
        {
          if (fa === void 0)
            try {
              throw Error();
            } catch (ht) {
              var Ve = ht.stack.trim().match(/\n( *(at )?)/);
              fa = Ve && Ve[1] || "";
            }
          return `
` + fa + ne;
        }
      }
      var Ec = !1, Su;
      {
        var Dd = typeof WeakMap == "function" ? WeakMap : Map;
        Su = new Dd();
      }
      function Ad(ne, ve) {
        if (!ne || Ec)
          return "";
        {
          var je = Su.get(ne);
          if (je !== void 0)
            return je;
        }
        var Ve;
        Ec = !0;
        var ht = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var tn;
        tn = da.current, da.current = null, wu();
        try {
          if (ve) {
            var _t = function() {
              throw Error();
            };
            if (Object.defineProperty(_t.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(_t, []);
              } catch (Kr) {
                Ve = Kr;
              }
              Reflect.construct(ne, [], _t);
            } else {
              try {
                _t.call();
              } catch (Kr) {
                Ve = Kr;
              }
              ne.call(_t.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (Kr) {
              Ve = Kr;
            }
            ne();
          }
        } catch (Kr) {
          if (Kr && Ve && typeof Kr.stack == "string") {
            for (var on = Kr.stack.split(`
`), In = Ve.stack.split(`
`), Kn = on.length - 1, Mr = In.length - 1; Kn >= 1 && Mr >= 0 && on[Kn] !== In[Mr]; )
              Mr--;
            for (; Kn >= 1 && Mr >= 0; Kn--, Mr--)
              if (on[Kn] !== In[Mr]) {
                if (Kn !== 1 || Mr !== 1)
                  do
                    if (Kn--, Mr--, Mr < 0 || on[Kn] !== In[Mr]) {
                      var gr = `
` + on[Kn].replace(" at new ", " at ");
                      return ne.displayName && gr.includes("<anonymous>") && (gr = gr.replace("<anonymous>", ne.displayName)), typeof ne == "function" && Su.set(ne, gr), gr;
                    }
                  while (Kn >= 1 && Mr >= 0);
                break;
              }
          }
        } finally {
          Ec = !1, da.current = tn, ys(), Error.prepareStackTrace = ht;
        }
        var Rn = ne ? ne.displayName || ne.name : "", vr = Rn ? Id(Rn) : "";
        return typeof ne == "function" && Su.set(ne, vr), vr;
      }
      function Pl(ne, ve, je) {
        return Ad(ne, !1);
      }
      function _y(ne) {
        var ve = ne.prototype;
        return !!(ve && ve.isReactComponent);
      }
      function Ml(ne, ve, je) {
        if (ne == null)
          return "";
        if (typeof ne == "function")
          return Ad(ne, _y(ne));
        if (typeof ne == "string")
          return Id(ne);
        switch (ne) {
          case y:
            return Id("Suspense");
          case w:
            return Id("SuspenseList");
        }
        if (typeof ne == "object")
          switch (ne.$$typeof) {
            case g:
              return Pl(ne.render);
            case C:
              return Ml(ne.type, ve, je);
            case T: {
              var Ve = ne, ht = Ve._payload, tn = Ve._init;
              try {
                return Ml(tn(ht), ve, je);
              } catch {
              }
            }
          }
        return "";
      }
      var Jn = {}, Nd = G.ReactDebugCurrentFrame;
      function qn(ne) {
        if (ne) {
          var ve = ne._owner, je = Ml(ne.type, ne._source, ve ? ve.type : null);
          Nd.setExtraStackFrame(je);
        } else
          Nd.setExtraStackFrame(null);
      }
      function hp(ne, ve, je, Ve, ht) {
        {
          var tn = Function.call.bind(gt);
          for (var _t in ne)
            if (tn(ne, _t)) {
              var on = void 0;
              try {
                if (typeof ne[_t] != "function") {
                  var In = Error((Ve || "React class") + ": " + je + " type `" + _t + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ne[_t] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw In.name = "Invariant Violation", In;
                }
                on = ne[_t](ve, _t, Ve, je, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Kn) {
                on = Kn;
              }
              on && !(on instanceof Error) && (qn(ht), X("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ve || "React class", je, _t, typeof on), qn(null)), on instanceof Error && !(on.message in Jn) && (Jn[on.message] = !0, qn(ht), X("Failed %s type: %s", je, on.message), qn(null));
            }
        }
      }
      function ja(ne) {
        if (ne) {
          var ve = ne._owner, je = Ml(ne.type, ne._source, ve ? ve.type : null);
          z(je);
        } else
          z(null);
      }
      var gn;
      gn = !1;
      function Ld() {
        if (F.current) {
          var ne = wt(F.current.type);
          if (ne)
            return `

Check the render method of \`` + ne + "`.";
        }
        return "";
      }
      function ei(ne) {
        if (ne !== void 0) {
          var ve = ne.fileName.replace(/^.*[\\\/]/, ""), je = ne.lineNumber;
          return `

Check your code at ` + ve + ":" + je + ".";
        }
        return "";
      }
      function Fa(ne) {
        return ne != null ? ei(ne.__source) : "";
      }
      var Mi = {};
      function za(ne) {
        var ve = Ld();
        if (!ve) {
          var je = typeof ne == "string" ? ne : ne.displayName || ne.name;
          je && (ve = `

Check the top-level render call using <` + je + ">.");
        }
        return ve;
      }
      function jr(ne, ve) {
        if (!(!ne._store || ne._store.validated || ne.key != null)) {
          ne._store.validated = !0;
          var je = za(ve);
          if (!Mi[je]) {
            Mi[je] = !0;
            var Ve = "";
            ne && ne._owner && ne._owner !== F.current && (Ve = " It was passed a child from " + wt(ne._owner.type) + "."), ja(ne), X('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', je, Ve), ja(null);
          }
        }
      }
      function mr(ne, ve) {
        if (typeof ne == "object") {
          if (Ce(ne))
            for (var je = 0; je < ne.length; je++) {
              var Ve = ne[je];
              bt(Ve) && jr(Ve, ve);
            }
          else if (bt(ne))
            ne._store && (ne._store.validated = !0);
          else if (ne) {
            var ht = I(ne);
            if (typeof ht == "function" && ht !== ne.entries)
              for (var tn = ht.call(ne), _t; !(_t = tn.next()).done; )
                bt(_t.value) && jr(_t.value, ve);
          }
        }
      }
      function Cu(ne) {
        {
          var ve = ne.type;
          if (ve == null || typeof ve == "string")
            return;
          var je;
          if (typeof ve == "function")
            je = ve.propTypes;
          else if (typeof ve == "object" && (ve.$$typeof === g || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          ve.$$typeof === C))
            je = ve.propTypes;
          else
            return;
          if (je) {
            var Ve = wt(ve);
            hp(je, ne.props, "prop", Ve, ne);
          } else if (ve.PropTypes !== void 0 && !gn) {
            gn = !0;
            var ht = wt(ve);
            X("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", ht || "Unknown");
          }
          typeof ve.getDefaultProps == "function" && !ve.getDefaultProps.isReactClassApproved && X("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Io(ne) {
        {
          for (var ve = Object.keys(ne.props), je = 0; je < ve.length; je++) {
            var Ve = ve[je];
            if (Ve !== "children" && Ve !== "key") {
              ja(ne), X("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ve), ja(null);
              break;
            }
          }
          ne.ref !== null && (ja(ne), X("Invalid attribute `ref` supplied to `React.Fragment`."), ja(null));
        }
      }
      function Ii(ne, ve, je) {
        var Ve = Ye(ne);
        if (!Ve) {
          var ht = "";
          (ne === void 0 || typeof ne == "object" && ne !== null && Object.keys(ne).length === 0) && (ht += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var tn = Fa(ve);
          tn ? ht += tn : ht += Ld();
          var _t;
          ne === null ? _t = "null" : Ce(ne) ? _t = "array" : ne !== void 0 && ne.$$typeof === r ? (_t = "<" + (wt(ne.type) || "Unknown") + " />", ht = " Did you accidentally export a JSX literal instead of a component?") : _t = typeof ne, X("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", _t, ht);
        }
        var on = pt.apply(this, arguments);
        if (on == null)
          return on;
        if (Ve)
          for (var In = 2; In < arguments.length; In++)
            mr(arguments[In], ne);
        return ne === s ? Io(on) : Cu(on), on;
      }
      var As = !1;
      function Tc(ne) {
        var ve = Ii.bind(null, ne);
        return ve.type = ne, As || (As = !0, K("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(ve, "type", {
          enumerable: !1,
          get: function() {
            return K("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: ne
            }), ne;
          }
        }), ve;
      }
      function mp(ne, ve, je) {
        for (var Ve = zt.apply(this, arguments), ht = 2; ht < arguments.length; ht++)
          mr(arguments[ht], Ve.type);
        return Cu(Ve), Ve;
      }
      function gp(ne, ve) {
        var je = N.transition;
        N.transition = {};
        var Ve = N.transition;
        N.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          ne();
        } finally {
          if (N.transition = je, je === null && Ve._updatedFibers) {
            var ht = Ve._updatedFibers.size;
            ht > 10 && K("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), Ve._updatedFibers.clear();
          }
        }
      }
      var xu = !1, _c = null;
      function Oy(ne) {
        if (_c === null)
          try {
            var ve = ("require" + Math.random()).slice(0, 7), je = e && e[ve];
            _c = je.call(e, "timers").setImmediate;
          } catch {
            _c = function(ht) {
              xu === !1 && (xu = !0, typeof MessageChannel > "u" && X("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var tn = new MessageChannel();
              tn.port1.onmessage = ht, tn.port2.postMessage(void 0);
            };
          }
        return _c(ne);
      }
      var Ns = 0, pa = !1;
      function Ba(ne) {
        {
          var ve = Ns;
          Ns++, P.current === null && (P.current = []);
          var je = P.isBatchingLegacy, Ve;
          try {
            if (P.isBatchingLegacy = !0, Ve = ne(), !je && P.didScheduleLegacyUpdate) {
              var ht = P.current;
              ht !== null && (P.didScheduleLegacyUpdate = !1, Eu(ht));
            }
          } catch (Rn) {
            throw Ls(ve), Rn;
          } finally {
            P.isBatchingLegacy = je;
          }
          if (Ve !== null && typeof Ve == "object" && typeof Ve.then == "function") {
            var tn = Ve, _t = !1, on = {
              then: function(Rn, vr) {
                _t = !0, tn.then(function(Kr) {
                  Ls(ve), Ns === 0 ? $d(Kr, Rn, vr) : Rn(Kr);
                }, function(Kr) {
                  Ls(ve), vr(Kr);
                });
              }
            };
            return !pa && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              _t || (pa = !0, X("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), on;
          } else {
            var In = Ve;
            if (Ls(ve), Ns === 0) {
              var Kn = P.current;
              Kn !== null && (Eu(Kn), P.current = null);
              var Mr = {
                then: function(Rn, vr) {
                  P.current === null ? (P.current = [], $d(In, Rn, vr)) : Rn(In);
                }
              };
              return Mr;
            } else {
              var gr = {
                then: function(Rn, vr) {
                  Rn(In);
                }
              };
              return gr;
            }
          }
        }
      }
      function Ls(ne) {
        ne !== Ns - 1 && X("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), Ns = ne;
      }
      function $d(ne, ve, je) {
        {
          var Ve = P.current;
          if (Ve !== null)
            try {
              Eu(Ve), Oy(function() {
                Ve.length === 0 ? (P.current = null, ve(ne)) : $d(ne, ve, je);
              });
            } catch (ht) {
              je(ht);
            }
          else
            ve(ne);
        }
      }
      var jd = !1;
      function Eu(ne) {
        if (!jd) {
          jd = !0;
          var ve = 0;
          try {
            for (; ve < ne.length; ve++) {
              var je = ne[ve];
              do
                je = je(!0);
              while (je !== null);
            }
            ne.length = 0;
          } catch (Ve) {
            throw ne = ne.slice(ve + 1), Ve;
          } finally {
            jd = !1;
          }
        }
      }
      var Oc = Ii, Fd = mp, zd = Tc, ha = {
        map: _r,
        forEach: Qo,
        count: Xo,
        toArray: Wt,
        only: hr
      };
      t.Children = ha, t.Component = ue, t.Fragment = s, t.Profiler = c, t.PureComponent = be, t.StrictMode = a, t.Suspense = y, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = G, t.act = Ba, t.cloneElement = Fd, t.createContext = Jo, t.createElement = Oc, t.createFactory = zd, t.createRef = _e, t.forwardRef = Xi, t.isValidElement = bt, t.lazy = Yi, t.memo = ft, t.startTransition = gp, t.unstable_act = Ba, t.useCallback = Ln, t.useContext = dn, t.useDebugValue = yn, t.useDeferredValue = yi, t.useEffect = Bt, t.useId = Ds, t.useImperativeHandle = Zo, t.useInsertionEffect = jt, t.useLayoutEffect = Kt, t.useMemo = Or, t.useReducer = Re, t.useRef = Je, t.useState = De, t.useSyncExternalStore = Mn, t.useTransition = Sn, t.version = n, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(Qw, Qw.exports)), Qw.exports;
}
process.env.NODE_ENV === "production" ? GP.exports = j9() : GP.exports = F9();
var x = GP.exports;
const uu = /* @__PURE__ */ dI(x), xT = /* @__PURE__ */ L9({
  __proto__: null,
  default: uu
}, [x]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var B$;
function z9() {
  if (B$) return Mw;
  B$ = 1;
  var e = x, t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, o = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function a(c, f, m) {
    var g, y = {}, w = null, C = null;
    m !== void 0 && (w = "" + m), f.key !== void 0 && (w = "" + f.key), f.ref !== void 0 && (C = f.ref);
    for (g in f) r.call(f, g) && !s.hasOwnProperty(g) && (y[g] = f[g]);
    if (c && c.defaultProps) for (g in f = c.defaultProps, f) y[g] === void 0 && (y[g] = f[g]);
    return { $$typeof: t, type: c, key: w, ref: C, props: y, _owner: o.current };
  }
  return Mw.Fragment = n, Mw.jsx = a, Mw.jsxs = a, Mw;
}
var Iw = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var H$;
function B9() {
  return H$ || (H$ = 1, process.env.NODE_ENV !== "production" && function() {
    var e = x, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), c = Symbol.for("react.context"), f = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), g = Symbol.for("react.suspense_list"), y = Symbol.for("react.memo"), w = Symbol.for("react.lazy"), C = Symbol.for("react.offscreen"), T = Symbol.iterator, E = "@@iterator";
    function O(ye) {
      if (ye === null || typeof ye != "object")
        return null;
      var Ye = T && ye[T] || ye[E];
      return typeof Ye == "function" ? Ye : null;
    }
    var k = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function I(ye) {
      {
        for (var Ye = arguments.length, ft = new Array(Ye > 1 ? Ye - 1 : 0), Ct = 1; Ct < Ye; Ct++)
          ft[Ct - 1] = arguments[Ct];
        M("error", ye, ft);
      }
    }
    function M(ye, Ye, ft) {
      {
        var Ct = k.ReactDebugCurrentFrame, dn = Ct.getStackAddendum();
        dn !== "" && (Ye += "%s", ft = ft.concat([dn]));
        var De = ft.map(function(Re) {
          return String(Re);
        });
        De.unshift("Warning: " + Ye), Function.prototype.apply.call(console[ye], console, De);
      }
    }
    var N = !1, P = !1, F = !1, H = !1, U = !1, z;
    z = Symbol.for("react.module.reference");
    function A(ye) {
      return !!(typeof ye == "string" || typeof ye == "function" || ye === r || ye === s || U || ye === o || ye === m || ye === g || H || ye === C || N || P || F || typeof ye == "object" && ye !== null && (ye.$$typeof === w || ye.$$typeof === y || ye.$$typeof === a || ye.$$typeof === c || ye.$$typeof === f || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      ye.$$typeof === z || ye.getModuleId !== void 0));
    }
    function q(ye, Ye, ft) {
      var Ct = ye.displayName;
      if (Ct)
        return Ct;
      var dn = Ye.displayName || Ye.name || "";
      return dn !== "" ? ft + "(" + dn + ")" : ft;
    }
    function W(ye) {
      return ye.displayName || "Context";
    }
    function Y(ye) {
      if (ye == null)
        return null;
      if (typeof ye.tag == "number" && I("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ye == "function")
        return ye.displayName || ye.name || null;
      if (typeof ye == "string")
        return ye;
      switch (ye) {
        case r:
          return "Fragment";
        case n:
          return "Portal";
        case s:
          return "Profiler";
        case o:
          return "StrictMode";
        case m:
          return "Suspense";
        case g:
          return "SuspenseList";
      }
      if (typeof ye == "object")
        switch (ye.$$typeof) {
          case c:
            var Ye = ye;
            return W(Ye) + ".Consumer";
          case a:
            var ft = ye;
            return W(ft._context) + ".Provider";
          case f:
            return q(ye, ye.render, "ForwardRef");
          case y:
            var Ct = ye.displayName || null;
            return Ct !== null ? Ct : Y(ye.type) || "Memo";
          case w: {
            var dn = ye, De = dn._payload, Re = dn._init;
            try {
              return Y(Re(De));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var ee = Object.assign, G = 0, K, X, te, re, Q, B, ie;
    function de() {
    }
    de.__reactDisabledLog = !0;
    function ue() {
      {
        if (G === 0) {
          K = console.log, X = console.info, te = console.warn, re = console.error, Q = console.group, B = console.groupCollapsed, ie = console.groupEnd;
          var ye = {
            configurable: !0,
            enumerable: !0,
            value: de,
            writable: !0
          };
          Object.defineProperties(console, {
            info: ye,
            log: ye,
            warn: ye,
            error: ye,
            group: ye,
            groupCollapsed: ye,
            groupEnd: ye
          });
        }
        G++;
      }
    }
    function he() {
      {
        if (G--, G === 0) {
          var ye = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: ee({}, ye, {
              value: K
            }),
            info: ee({}, ye, {
              value: X
            }),
            warn: ee({}, ye, {
              value: te
            }),
            error: ee({}, ye, {
              value: re
            }),
            group: ee({}, ye, {
              value: Q
            }),
            groupCollapsed: ee({}, ye, {
              value: B
            }),
            groupEnd: ee({}, ye, {
              value: ie
            })
          });
        }
        G < 0 && I("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var ge = k.ReactCurrentDispatcher, fe;
    function pe(ye, Ye, ft) {
      {
        if (fe === void 0)
          try {
            throw Error();
          } catch (dn) {
            var Ct = dn.stack.trim().match(/\n( *(at )?)/);
            fe = Ct && Ct[1] || "";
          }
        return `
` + fe + ye;
      }
    }
    var be = !1, we;
    {
      var _e = typeof WeakMap == "function" ? WeakMap : Map;
      we = new _e();
    }
    function ce(ye, Ye) {
      if (!ye || be)
        return "";
      {
        var ft = we.get(ye);
        if (ft !== void 0)
          return ft;
      }
      var Ct;
      be = !0;
      var dn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var De;
      De = ge.current, ge.current = null, ue();
      try {
        if (Ye) {
          var Re = function() {
            throw Error();
          };
          if (Object.defineProperty(Re.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(Re, []);
            } catch (yn) {
              Ct = yn;
            }
            Reflect.construct(ye, [], Re);
          } else {
            try {
              Re.call();
            } catch (yn) {
              Ct = yn;
            }
            ye.call(Re.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (yn) {
            Ct = yn;
          }
          ye();
        }
      } catch (yn) {
        if (yn && Ct && typeof yn.stack == "string") {
          for (var Je = yn.stack.split(`
`), Bt = Ct.stack.split(`
`), jt = Je.length - 1, Kt = Bt.length - 1; jt >= 1 && Kt >= 0 && Je[jt] !== Bt[Kt]; )
            Kt--;
          for (; jt >= 1 && Kt >= 0; jt--, Kt--)
            if (Je[jt] !== Bt[Kt]) {
              if (jt !== 1 || Kt !== 1)
                do
                  if (jt--, Kt--, Kt < 0 || Je[jt] !== Bt[Kt]) {
                    var Ln = `
` + Je[jt].replace(" at new ", " at ");
                    return ye.displayName && Ln.includes("<anonymous>") && (Ln = Ln.replace("<anonymous>", ye.displayName)), typeof ye == "function" && we.set(ye, Ln), Ln;
                  }
                while (jt >= 1 && Kt >= 0);
              break;
            }
        }
      } finally {
        be = !1, ge.current = De, he(), Error.prepareStackTrace = dn;
      }
      var Or = ye ? ye.displayName || ye.name : "", Zo = Or ? pe(Or) : "";
      return typeof ye == "function" && we.set(ye, Zo), Zo;
    }
    function Ce(ye, Ye, ft) {
      return ce(ye, !1);
    }
    function Ne(ye) {
      var Ye = ye.prototype;
      return !!(Ye && Ye.isReactComponent);
    }
    function Be(ye, Ye, ft) {
      if (ye == null)
        return "";
      if (typeof ye == "function")
        return ce(ye, Ne(ye));
      if (typeof ye == "string")
        return pe(ye);
      switch (ye) {
        case m:
          return pe("Suspense");
        case g:
          return pe("SuspenseList");
      }
      if (typeof ye == "object")
        switch (ye.$$typeof) {
          case f:
            return Ce(ye.render);
          case y:
            return Be(ye.type, Ye, ft);
          case w: {
            var Ct = ye, dn = Ct._payload, De = Ct._init;
            try {
              return Be(De(dn), Ye, ft);
            } catch {
            }
          }
        }
      return "";
    }
    var tt = Object.prototype.hasOwnProperty, $e = {}, rt = k.ReactDebugCurrentFrame;
    function ot(ye) {
      if (ye) {
        var Ye = ye._owner, ft = Be(ye.type, ye._source, Ye ? Ye.type : null);
        rt.setExtraStackFrame(ft);
      } else
        rt.setExtraStackFrame(null);
    }
    function wt(ye, Ye, ft, Ct, dn) {
      {
        var De = Function.call.bind(tt);
        for (var Re in ye)
          if (De(ye, Re)) {
            var Je = void 0;
            try {
              if (typeof ye[Re] != "function") {
                var Bt = Error((Ct || "React class") + ": " + ft + " type `" + Re + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ye[Re] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Bt.name = "Invariant Violation", Bt;
              }
              Je = ye[Re](Ye, Re, Ct, ft, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (jt) {
              Je = jt;
            }
            Je && !(Je instanceof Error) && (ot(dn), I("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", Ct || "React class", ft, Re, typeof Je), ot(null)), Je instanceof Error && !(Je.message in $e) && ($e[Je.message] = !0, ot(dn), I("Failed %s type: %s", ft, Je.message), ot(null));
          }
      }
    }
    var gt = Array.isArray;
    function nt(ye) {
      return gt(ye);
    }
    function Ft(ye) {
      {
        var Ye = typeof Symbol == "function" && Symbol.toStringTag, ft = Ye && ye[Symbol.toStringTag] || ye.constructor.name || "Object";
        return ft;
      }
    }
    function ut(ye) {
      try {
        return Et(ye), !1;
      } catch {
        return !0;
      }
    }
    function Et(ye) {
      return "" + ye;
    }
    function Tt(ye) {
      if (ut(ye))
        return I("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ft(ye)), Et(ye);
    }
    var At = k.ReactCurrentOwner, vt = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Xe, Oe;
    function Ie(ye) {
      if (tt.call(ye, "ref")) {
        var Ye = Object.getOwnPropertyDescriptor(ye, "ref").get;
        if (Ye && Ye.isReactWarning)
          return !1;
      }
      return ye.ref !== void 0;
    }
    function pt(ye) {
      if (tt.call(ye, "key")) {
        var Ye = Object.getOwnPropertyDescriptor(ye, "key").get;
        if (Ye && Ye.isReactWarning)
          return !1;
      }
      return ye.key !== void 0;
    }
    function yt(ye, Ye) {
      typeof ye.ref == "string" && At.current;
    }
    function zt(ye, Ye) {
      {
        var ft = function() {
          Xe || (Xe = !0, I("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ye));
        };
        ft.isReactWarning = !0, Object.defineProperty(ye, "key", {
          get: ft,
          configurable: !0
        });
      }
    }
    function bt(ye, Ye) {
      {
        var ft = function() {
          Oe || (Oe = !0, I("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ye));
        };
        ft.isReactWarning = !0, Object.defineProperty(ye, "ref", {
          get: ft,
          configurable: !0
        });
      }
    }
    var We = function(ye, Ye, ft, Ct, dn, De, Re) {
      var Je = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: ye,
        key: Ye,
        ref: ft,
        props: Re,
        // Record the component responsible for creating this element.
        _owner: De
      };
      return Je._store = {}, Object.defineProperty(Je._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(Je, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: Ct
      }), Object.defineProperty(Je, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: dn
      }), Object.freeze && (Object.freeze(Je.props), Object.freeze(Je)), Je;
    };
    function St(ye, Ye, ft, Ct, dn) {
      {
        var De, Re = {}, Je = null, Bt = null;
        ft !== void 0 && (Tt(ft), Je = "" + ft), pt(Ye) && (Tt(Ye.key), Je = "" + Ye.key), Ie(Ye) && (Bt = Ye.ref, yt(Ye, dn));
        for (De in Ye)
          tt.call(Ye, De) && !vt.hasOwnProperty(De) && (Re[De] = Ye[De]);
        if (ye && ye.defaultProps) {
          var jt = ye.defaultProps;
          for (De in jt)
            Re[De] === void 0 && (Re[De] = jt[De]);
        }
        if (Je || Bt) {
          var Kt = typeof ye == "function" ? ye.displayName || ye.name || "Unknown" : ye;
          Je && zt(Re, Kt), Bt && bt(Re, Kt);
        }
        return We(ye, Je, Bt, dn, Ct, At.current, Re);
      }
    }
    var $t = k.ReactCurrentOwner, wn = k.ReactDebugCurrentFrame;
    function cn(ye) {
      if (ye) {
        var Ye = ye._owner, ft = Be(ye.type, ye._source, Ye ? Ye.type : null);
        wn.setExtraStackFrame(ft);
      } else
        wn.setExtraStackFrame(null);
    }
    var Tr;
    Tr = !1;
    function sr(ye) {
      return typeof ye == "object" && ye !== null && ye.$$typeof === t;
    }
    function $r() {
      {
        if ($t.current) {
          var ye = Y($t.current.type);
          if (ye)
            return `

Check the render method of \`` + ye + "`.";
        }
        return "";
      }
    }
    function _r(ye) {
      return "";
    }
    var Xo = {};
    function Qo(ye) {
      {
        var Ye = $r();
        if (!Ye) {
          var ft = typeof ye == "string" ? ye : ye.displayName || ye.name;
          ft && (Ye = `

Check the top-level render call using <` + ft + ">.");
        }
        return Ye;
      }
    }
    function Wt(ye, Ye) {
      {
        if (!ye._store || ye._store.validated || ye.key != null)
          return;
        ye._store.validated = !0;
        var ft = Qo(Ye);
        if (Xo[ft])
          return;
        Xo[ft] = !0;
        var Ct = "";
        ye && ye._owner && ye._owner !== $t.current && (Ct = " It was passed a child from " + Y(ye._owner.type) + "."), cn(ye), I('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', ft, Ct), cn(null);
      }
    }
    function hr(ye, Ye) {
      {
        if (typeof ye != "object")
          return;
        if (nt(ye))
          for (var ft = 0; ft < ye.length; ft++) {
            var Ct = ye[ft];
            sr(Ct) && Wt(Ct, Ye);
          }
        else if (sr(ye))
          ye._store && (ye._store.validated = !0);
        else if (ye) {
          var dn = O(ye);
          if (typeof dn == "function" && dn !== ye.entries)
            for (var De = dn.call(ye), Re; !(Re = De.next()).done; )
              sr(Re.value) && Wt(Re.value, Ye);
        }
      }
    }
    function Jo(ye) {
      {
        var Ye = ye.type;
        if (Ye == null || typeof Ye == "string")
          return;
        var ft;
        if (typeof Ye == "function")
          ft = Ye.propTypes;
        else if (typeof Ye == "object" && (Ye.$$typeof === f || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        Ye.$$typeof === y))
          ft = Ye.propTypes;
        else
          return;
        if (ft) {
          var Ct = Y(Ye);
          wt(ft, ye.props, "prop", Ct, ye);
        } else if (Ye.PropTypes !== void 0 && !Tr) {
          Tr = !0;
          var dn = Y(Ye);
          I("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", dn || "Unknown");
        }
        typeof Ye.getDefaultProps == "function" && !Ye.getDefaultProps.isReactClassApproved && I("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Gr(ye) {
      {
        for (var Ye = Object.keys(ye.props), ft = 0; ft < Ye.length; ft++) {
          var Ct = Ye[ft];
          if (Ct !== "children" && Ct !== "key") {
            cn(ye), I("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", Ct), cn(null);
            break;
          }
        }
        ye.ref !== null && (cn(ye), I("Invalid attribute `ref` supplied to `React.Fragment`."), cn(null));
      }
    }
    var oo = {};
    function qr(ye, Ye, ft, Ct, dn, De) {
      {
        var Re = A(ye);
        if (!Re) {
          var Je = "";
          (ye === void 0 || typeof ye == "object" && ye !== null && Object.keys(ye).length === 0) && (Je += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Bt = _r();
          Bt ? Je += Bt : Je += $r();
          var jt;
          ye === null ? jt = "null" : nt(ye) ? jt = "array" : ye !== void 0 && ye.$$typeof === t ? (jt = "<" + (Y(ye.type) || "Unknown") + " />", Je = " Did you accidentally export a JSX literal instead of a component?") : jt = typeof ye, I("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", jt, Je);
        }
        var Kt = St(ye, Ye, ft, dn, De);
        if (Kt == null)
          return Kt;
        if (Re) {
          var Ln = Ye.children;
          if (Ln !== void 0)
            if (Ct)
              if (nt(Ln)) {
                for (var Or = 0; Or < Ln.length; Or++)
                  hr(Ln[Or], ye);
                Object.freeze && Object.freeze(Ln);
              } else
                I("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              hr(Ln, ye);
        }
        if (tt.call(Ye, "key")) {
          var Zo = Y(ye), yn = Object.keys(Ye).filter(function(Ds) {
            return Ds !== "key";
          }), Sn = yn.length > 0 ? "{key: someKey, " + yn.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!oo[Zo + Sn]) {
            var yi = yn.length > 0 ? "{" + yn.join(": ..., ") + ": ...}" : "{}";
            I(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, Sn, Zo, yi, Zo), oo[Zo + Sn] = !0;
          }
        }
        return ye === r ? Gr(Kt) : Jo(Kt), Kt;
      }
    }
    function Ki(ye, Ye, ft) {
      return qr(ye, Ye, ft, !0);
    }
    function Ri(ye, Ye, ft) {
      return qr(ye, Ye, ft, !1);
    }
    var Yi = Ri, Xi = Ki;
    Iw.Fragment = r, Iw.jsx = Yi, Iw.jsxs = Xi;
  }()), Iw;
}
process.env.NODE_ENV === "production" ? WP.exports = z9() : WP.exports = B9();
var $ = WP.exports, Jw = {}, qP = { exports: {} }, Js = {}, xE = { exports: {} }, Vk = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var V$;
function H9() {
  return V$ || (V$ = 1, function(e) {
    function t(te, re) {
      var Q = te.length;
      te.push(re);
      e: for (; 0 < Q; ) {
        var B = Q - 1 >>> 1, ie = te[B];
        if (0 < o(ie, re)) te[B] = re, te[Q] = ie, Q = B;
        else break e;
      }
    }
    function n(te) {
      return te.length === 0 ? null : te[0];
    }
    function r(te) {
      if (te.length === 0) return null;
      var re = te[0], Q = te.pop();
      if (Q !== re) {
        te[0] = Q;
        e: for (var B = 0, ie = te.length, de = ie >>> 1; B < de; ) {
          var ue = 2 * (B + 1) - 1, he = te[ue], ge = ue + 1, fe = te[ge];
          if (0 > o(he, Q)) ge < ie && 0 > o(fe, he) ? (te[B] = fe, te[ge] = Q, B = ge) : (te[B] = he, te[ue] = Q, B = ue);
          else if (ge < ie && 0 > o(fe, Q)) te[B] = fe, te[ge] = Q, B = ge;
          else break e;
        }
      }
      return re;
    }
    function o(te, re) {
      var Q = te.sortIndex - re.sortIndex;
      return Q !== 0 ? Q : te.id - re.id;
    }
    if (typeof performance == "object" && typeof performance.now == "function") {
      var s = performance;
      e.unstable_now = function() {
        return s.now();
      };
    } else {
      var a = Date, c = a.now();
      e.unstable_now = function() {
        return a.now() - c;
      };
    }
    var f = [], m = [], g = 1, y = null, w = 3, C = !1, T = !1, E = !1, O = typeof setTimeout == "function" ? setTimeout : null, k = typeof clearTimeout == "function" ? clearTimeout : null, I = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function M(te) {
      for (var re = n(m); re !== null; ) {
        if (re.callback === null) r(m);
        else if (re.startTime <= te) r(m), re.sortIndex = re.expirationTime, t(f, re);
        else break;
        re = n(m);
      }
    }
    function N(te) {
      if (E = !1, M(te), !T) if (n(f) !== null) T = !0, K(P);
      else {
        var re = n(m);
        re !== null && X(N, re.startTime - te);
      }
    }
    function P(te, re) {
      T = !1, E && (E = !1, k(U), U = -1), C = !0;
      var Q = w;
      try {
        for (M(re), y = n(f); y !== null && (!(y.expirationTime > re) || te && !q()); ) {
          var B = y.callback;
          if (typeof B == "function") {
            y.callback = null, w = y.priorityLevel;
            var ie = B(y.expirationTime <= re);
            re = e.unstable_now(), typeof ie == "function" ? y.callback = ie : y === n(f) && r(f), M(re);
          } else r(f);
          y = n(f);
        }
        if (y !== null) var de = !0;
        else {
          var ue = n(m);
          ue !== null && X(N, ue.startTime - re), de = !1;
        }
        return de;
      } finally {
        y = null, w = Q, C = !1;
      }
    }
    var F = !1, H = null, U = -1, z = 5, A = -1;
    function q() {
      return !(e.unstable_now() - A < z);
    }
    function W() {
      if (H !== null) {
        var te = e.unstable_now();
        A = te;
        var re = !0;
        try {
          re = H(!0, te);
        } finally {
          re ? Y() : (F = !1, H = null);
        }
      } else F = !1;
    }
    var Y;
    if (typeof I == "function") Y = function() {
      I(W);
    };
    else if (typeof MessageChannel < "u") {
      var ee = new MessageChannel(), G = ee.port2;
      ee.port1.onmessage = W, Y = function() {
        G.postMessage(null);
      };
    } else Y = function() {
      O(W, 0);
    };
    function K(te) {
      H = te, F || (F = !0, Y());
    }
    function X(te, re) {
      U = O(function() {
        te(e.unstable_now());
      }, re);
    }
    e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(te) {
      te.callback = null;
    }, e.unstable_continueExecution = function() {
      T || C || (T = !0, K(P));
    }, e.unstable_forceFrameRate = function(te) {
      0 > te || 125 < te ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : z = 0 < te ? Math.floor(1e3 / te) : 5;
    }, e.unstable_getCurrentPriorityLevel = function() {
      return w;
    }, e.unstable_getFirstCallbackNode = function() {
      return n(f);
    }, e.unstable_next = function(te) {
      switch (w) {
        case 1:
        case 2:
        case 3:
          var re = 3;
          break;
        default:
          re = w;
      }
      var Q = w;
      w = re;
      try {
        return te();
      } finally {
        w = Q;
      }
    }, e.unstable_pauseExecution = function() {
    }, e.unstable_requestPaint = function() {
    }, e.unstable_runWithPriority = function(te, re) {
      switch (te) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          te = 3;
      }
      var Q = w;
      w = te;
      try {
        return re();
      } finally {
        w = Q;
      }
    }, e.unstable_scheduleCallback = function(te, re, Q) {
      var B = e.unstable_now();
      switch (typeof Q == "object" && Q !== null ? (Q = Q.delay, Q = typeof Q == "number" && 0 < Q ? B + Q : B) : Q = B, te) {
        case 1:
          var ie = -1;
          break;
        case 2:
          ie = 250;
          break;
        case 5:
          ie = 1073741823;
          break;
        case 4:
          ie = 1e4;
          break;
        default:
          ie = 5e3;
      }
      return ie = Q + ie, te = { id: g++, callback: re, priorityLevel: te, startTime: Q, expirationTime: ie, sortIndex: -1 }, Q > B ? (te.sortIndex = Q, t(m, te), n(f) === null && te === n(m) && (E ? (k(U), U = -1) : E = !0, X(N, Q - B))) : (te.sortIndex = ie, t(f, te), T || C || (T = !0, K(P))), te;
    }, e.unstable_shouldYield = q, e.unstable_wrapCallback = function(te) {
      var re = w;
      return function() {
        var Q = w;
        w = re;
        try {
          return te.apply(this, arguments);
        } finally {
          w = Q;
        }
      };
    };
  }(Vk)), Vk;
}
var Uk = {};
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var U$;
function V9() {
  return U$ || (U$ = 1, function(e) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var t = !1, n = 5;
      function r(Oe, Ie) {
        var pt = Oe.length;
        Oe.push(Ie), a(Oe, Ie, pt);
      }
      function o(Oe) {
        return Oe.length === 0 ? null : Oe[0];
      }
      function s(Oe) {
        if (Oe.length === 0)
          return null;
        var Ie = Oe[0], pt = Oe.pop();
        return pt !== Ie && (Oe[0] = pt, c(Oe, pt, 0)), Ie;
      }
      function a(Oe, Ie, pt) {
        for (var yt = pt; yt > 0; ) {
          var zt = yt - 1 >>> 1, bt = Oe[zt];
          if (f(bt, Ie) > 0)
            Oe[zt] = Ie, Oe[yt] = bt, yt = zt;
          else
            return;
        }
      }
      function c(Oe, Ie, pt) {
        for (var yt = pt, zt = Oe.length, bt = zt >>> 1; yt < bt; ) {
          var We = (yt + 1) * 2 - 1, St = Oe[We], $t = We + 1, wn = Oe[$t];
          if (f(St, Ie) < 0)
            $t < zt && f(wn, St) < 0 ? (Oe[yt] = wn, Oe[$t] = Ie, yt = $t) : (Oe[yt] = St, Oe[We] = Ie, yt = We);
          else if ($t < zt && f(wn, Ie) < 0)
            Oe[yt] = wn, Oe[$t] = Ie, yt = $t;
          else
            return;
        }
      }
      function f(Oe, Ie) {
        var pt = Oe.sortIndex - Ie.sortIndex;
        return pt !== 0 ? pt : Oe.id - Ie.id;
      }
      var m = 1, g = 2, y = 3, w = 4, C = 5;
      function T(Oe, Ie) {
      }
      var E = typeof performance == "object" && typeof performance.now == "function";
      if (E) {
        var O = performance;
        e.unstable_now = function() {
          return O.now();
        };
      } else {
        var k = Date, I = k.now();
        e.unstable_now = function() {
          return k.now() - I;
        };
      }
      var M = 1073741823, N = -1, P = 250, F = 5e3, H = 1e4, U = M, z = [], A = [], q = 1, W = null, Y = y, ee = !1, G = !1, K = !1, X = typeof setTimeout == "function" ? setTimeout : null, te = typeof clearTimeout == "function" ? clearTimeout : null, re = typeof setImmediate < "u" ? setImmediate : null;
      typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
      function Q(Oe) {
        for (var Ie = o(A); Ie !== null; ) {
          if (Ie.callback === null)
            s(A);
          else if (Ie.startTime <= Oe)
            s(A), Ie.sortIndex = Ie.expirationTime, r(z, Ie);
          else
            return;
          Ie = o(A);
        }
      }
      function B(Oe) {
        if (K = !1, Q(Oe), !G)
          if (o(z) !== null)
            G = !0, Et(ie);
          else {
            var Ie = o(A);
            Ie !== null && Tt(B, Ie.startTime - Oe);
          }
      }
      function ie(Oe, Ie) {
        G = !1, K && (K = !1, At()), ee = !0;
        var pt = Y;
        try {
          var yt;
          if (!t) return de(Oe, Ie);
        } finally {
          W = null, Y = pt, ee = !1;
        }
      }
      function de(Oe, Ie) {
        var pt = Ie;
        for (Q(pt), W = o(z); W !== null && !(W.expirationTime > pt && (!Oe || rt())); ) {
          var yt = W.callback;
          if (typeof yt == "function") {
            W.callback = null, Y = W.priorityLevel;
            var zt = W.expirationTime <= pt, bt = yt(zt);
            pt = e.unstable_now(), typeof bt == "function" ? W.callback = bt : W === o(z) && s(z), Q(pt);
          } else
            s(z);
          W = o(z);
        }
        if (W !== null)
          return !0;
        var We = o(A);
        return We !== null && Tt(B, We.startTime - pt), !1;
      }
      function ue(Oe, Ie) {
        switch (Oe) {
          case m:
          case g:
          case y:
          case w:
          case C:
            break;
          default:
            Oe = y;
        }
        var pt = Y;
        Y = Oe;
        try {
          return Ie();
        } finally {
          Y = pt;
        }
      }
      function he(Oe) {
        var Ie;
        switch (Y) {
          case m:
          case g:
          case y:
            Ie = y;
            break;
          default:
            Ie = Y;
            break;
        }
        var pt = Y;
        Y = Ie;
        try {
          return Oe();
        } finally {
          Y = pt;
        }
      }
      function ge(Oe) {
        var Ie = Y;
        return function() {
          var pt = Y;
          Y = Ie;
          try {
            return Oe.apply(this, arguments);
          } finally {
            Y = pt;
          }
        };
      }
      function fe(Oe, Ie, pt) {
        var yt = e.unstable_now(), zt;
        if (typeof pt == "object" && pt !== null) {
          var bt = pt.delay;
          typeof bt == "number" && bt > 0 ? zt = yt + bt : zt = yt;
        } else
          zt = yt;
        var We;
        switch (Oe) {
          case m:
            We = N;
            break;
          case g:
            We = P;
            break;
          case C:
            We = U;
            break;
          case w:
            We = H;
            break;
          case y:
          default:
            We = F;
            break;
        }
        var St = zt + We, $t = {
          id: q++,
          callback: Ie,
          priorityLevel: Oe,
          startTime: zt,
          expirationTime: St,
          sortIndex: -1
        };
        return zt > yt ? ($t.sortIndex = zt, r(A, $t), o(z) === null && $t === o(A) && (K ? At() : K = !0, Tt(B, zt - yt))) : ($t.sortIndex = St, r(z, $t), !G && !ee && (G = !0, Et(ie))), $t;
      }
      function pe() {
      }
      function be() {
        !G && !ee && (G = !0, Et(ie));
      }
      function we() {
        return o(z);
      }
      function _e(Oe) {
        Oe.callback = null;
      }
      function ce() {
        return Y;
      }
      var Ce = !1, Ne = null, Be = -1, tt = n, $e = -1;
      function rt() {
        var Oe = e.unstable_now() - $e;
        return !(Oe < tt);
      }
      function ot() {
      }
      function wt(Oe) {
        if (Oe < 0 || Oe > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        Oe > 0 ? tt = Math.floor(1e3 / Oe) : tt = n;
      }
      var gt = function() {
        if (Ne !== null) {
          var Oe = e.unstable_now();
          $e = Oe;
          var Ie = !0, pt = !0;
          try {
            pt = Ne(Ie, Oe);
          } finally {
            pt ? nt() : (Ce = !1, Ne = null);
          }
        } else
          Ce = !1;
      }, nt;
      if (typeof re == "function")
        nt = function() {
          re(gt);
        };
      else if (typeof MessageChannel < "u") {
        var Ft = new MessageChannel(), ut = Ft.port2;
        Ft.port1.onmessage = gt, nt = function() {
          ut.postMessage(null);
        };
      } else
        nt = function() {
          X(gt, 0);
        };
      function Et(Oe) {
        Ne = Oe, Ce || (Ce = !0, nt());
      }
      function Tt(Oe, Ie) {
        Be = X(function() {
          Oe(e.unstable_now());
        }, Ie);
      }
      function At() {
        te(Be), Be = -1;
      }
      var vt = ot, Xe = null;
      e.unstable_IdlePriority = C, e.unstable_ImmediatePriority = m, e.unstable_LowPriority = w, e.unstable_NormalPriority = y, e.unstable_Profiling = Xe, e.unstable_UserBlockingPriority = g, e.unstable_cancelCallback = _e, e.unstable_continueExecution = be, e.unstable_forceFrameRate = wt, e.unstable_getCurrentPriorityLevel = ce, e.unstable_getFirstCallbackNode = we, e.unstable_next = he, e.unstable_pauseExecution = pe, e.unstable_requestPaint = vt, e.unstable_runWithPriority = ue, e.unstable_scheduleCallback = fe, e.unstable_shouldYield = rt, e.unstable_wrapCallback = ge, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(Uk)), Uk;
}
var W$;
function VB() {
  return W$ || (W$ = 1, process.env.NODE_ENV === "production" ? xE.exports = H9() : xE.exports = V9()), xE.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var G$;
function U9() {
  if (G$) return Js;
  G$ = 1;
  var e = x, t = VB();
  function n(d) {
    for (var p = "https://reactjs.org/docs/error-decoder.html?invariant=" + d, b = 1; b < arguments.length; b++) p += "&args[]=" + encodeURIComponent(arguments[b]);
    return "Minified React error #" + d + "; visit " + p + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var r = /* @__PURE__ */ new Set(), o = {};
  function s(d, p) {
    a(d, p), a(d + "Capture", p);
  }
  function a(d, p) {
    for (o[d] = p, d = 0; d < p.length; d++) r.add(p[d]);
  }
  var c = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), f = Object.prototype.hasOwnProperty, m = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, g = {}, y = {};
  function w(d) {
    return f.call(y, d) ? !0 : f.call(g, d) ? !1 : m.test(d) ? y[d] = !0 : (g[d] = !0, !1);
  }
  function C(d, p, b, _) {
    if (b !== null && b.type === 0) return !1;
    switch (typeof p) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return _ ? !1 : b !== null ? !b.acceptsBooleans : (d = d.toLowerCase().slice(0, 5), d !== "data-" && d !== "aria-");
      default:
        return !1;
    }
  }
  function T(d, p, b, _) {
    if (p === null || typeof p > "u" || C(d, p, b, _)) return !0;
    if (_) return !1;
    if (b !== null) switch (b.type) {
      case 3:
        return !p;
      case 4:
        return p === !1;
      case 5:
        return isNaN(p);
      case 6:
        return isNaN(p) || 1 > p;
    }
    return !1;
  }
  function E(d, p, b, _, D, j, oe) {
    this.acceptsBooleans = p === 2 || p === 3 || p === 4, this.attributeName = _, this.attributeNamespace = D, this.mustUseProperty = b, this.propertyName = d, this.type = p, this.sanitizeURL = j, this.removeEmptyString = oe;
  }
  var O = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(d) {
    O[d] = new E(d, 0, !1, d, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(d) {
    var p = d[0];
    O[p] = new E(p, 1, !1, d[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(d) {
    O[d] = new E(d, 2, !1, d.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(d) {
    O[d] = new E(d, 2, !1, d, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(d) {
    O[d] = new E(d, 3, !1, d.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(d) {
    O[d] = new E(d, 3, !0, d, null, !1, !1);
  }), ["capture", "download"].forEach(function(d) {
    O[d] = new E(d, 4, !1, d, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(d) {
    O[d] = new E(d, 6, !1, d, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(d) {
    O[d] = new E(d, 5, !1, d.toLowerCase(), null, !1, !1);
  });
  var k = /[\-:]([a-z])/g;
  function I(d) {
    return d[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(d) {
    var p = d.replace(
      k,
      I
    );
    O[p] = new E(p, 1, !1, d, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(d) {
    var p = d.replace(k, I);
    O[p] = new E(p, 1, !1, d, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(d) {
    var p = d.replace(k, I);
    O[p] = new E(p, 1, !1, d, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(d) {
    O[d] = new E(d, 1, !1, d.toLowerCase(), null, !1, !1);
  }), O.xlinkHref = new E("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(d) {
    O[d] = new E(d, 1, !1, d.toLowerCase(), null, !0, !0);
  });
  function M(d, p, b, _) {
    var D = O.hasOwnProperty(p) ? O[p] : null;
    (D !== null ? D.type !== 0 : _ || !(2 < p.length) || p[0] !== "o" && p[0] !== "O" || p[1] !== "n" && p[1] !== "N") && (T(p, b, D, _) && (b = null), _ || D === null ? w(p) && (b === null ? d.removeAttribute(p) : d.setAttribute(p, "" + b)) : D.mustUseProperty ? d[D.propertyName] = b === null ? D.type === 3 ? !1 : "" : b : (p = D.attributeName, _ = D.attributeNamespace, b === null ? d.removeAttribute(p) : (D = D.type, b = D === 3 || D === 4 && b === !0 ? "" : "" + b, _ ? d.setAttributeNS(_, p, b) : d.setAttribute(p, b))));
  }
  var N = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, P = Symbol.for("react.element"), F = Symbol.for("react.portal"), H = Symbol.for("react.fragment"), U = Symbol.for("react.strict_mode"), z = Symbol.for("react.profiler"), A = Symbol.for("react.provider"), q = Symbol.for("react.context"), W = Symbol.for("react.forward_ref"), Y = Symbol.for("react.suspense"), ee = Symbol.for("react.suspense_list"), G = Symbol.for("react.memo"), K = Symbol.for("react.lazy"), X = Symbol.for("react.offscreen"), te = Symbol.iterator;
  function re(d) {
    return d === null || typeof d != "object" ? null : (d = te && d[te] || d["@@iterator"], typeof d == "function" ? d : null);
  }
  var Q = Object.assign, B;
  function ie(d) {
    if (B === void 0) try {
      throw Error();
    } catch (b) {
      var p = b.stack.trim().match(/\n( *(at )?)/);
      B = p && p[1] || "";
    }
    return `
` + B + d;
  }
  var de = !1;
  function ue(d, p) {
    if (!d || de) return "";
    de = !0;
    var b = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (p) if (p = function() {
        throw Error();
      }, Object.defineProperty(p.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect == "object" && Reflect.construct) {
        try {
          Reflect.construct(p, []);
        } catch (Fe) {
          var _ = Fe;
        }
        Reflect.construct(d, [], p);
      } else {
        try {
          p.call();
        } catch (Fe) {
          _ = Fe;
        }
        d.call(p.prototype);
      }
      else {
        try {
          throw Error();
        } catch (Fe) {
          _ = Fe;
        }
        d();
      }
    } catch (Fe) {
      if (Fe && _ && typeof Fe.stack == "string") {
        for (var D = Fe.stack.split(`
`), j = _.stack.split(`
`), oe = D.length - 1, me = j.length - 1; 1 <= oe && 0 <= me && D[oe] !== j[me]; ) me--;
        for (; 1 <= oe && 0 <= me; oe--, me--) if (D[oe] !== j[me]) {
          if (oe !== 1 || me !== 1)
            do
              if (oe--, me--, 0 > me || D[oe] !== j[me]) {
                var Se = `
` + D[oe].replace(" at new ", " at ");
                return d.displayName && Se.includes("<anonymous>") && (Se = Se.replace("<anonymous>", d.displayName)), Se;
              }
            while (1 <= oe && 0 <= me);
          break;
        }
      }
    } finally {
      de = !1, Error.prepareStackTrace = b;
    }
    return (d = d ? d.displayName || d.name : "") ? ie(d) : "";
  }
  function he(d) {
    switch (d.tag) {
      case 5:
        return ie(d.type);
      case 16:
        return ie("Lazy");
      case 13:
        return ie("Suspense");
      case 19:
        return ie("SuspenseList");
      case 0:
      case 2:
      case 15:
        return d = ue(d.type, !1), d;
      case 11:
        return d = ue(d.type.render, !1), d;
      case 1:
        return d = ue(d.type, !0), d;
      default:
        return "";
    }
  }
  function ge(d) {
    if (d == null) return null;
    if (typeof d == "function") return d.displayName || d.name || null;
    if (typeof d == "string") return d;
    switch (d) {
      case H:
        return "Fragment";
      case F:
        return "Portal";
      case z:
        return "Profiler";
      case U:
        return "StrictMode";
      case Y:
        return "Suspense";
      case ee:
        return "SuspenseList";
    }
    if (typeof d == "object") switch (d.$$typeof) {
      case q:
        return (d.displayName || "Context") + ".Consumer";
      case A:
        return (d._context.displayName || "Context") + ".Provider";
      case W:
        var p = d.render;
        return d = d.displayName, d || (d = p.displayName || p.name || "", d = d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef"), d;
      case G:
        return p = d.displayName || null, p !== null ? p : ge(d.type) || "Memo";
      case K:
        p = d._payload, d = d._init;
        try {
          return ge(d(p));
        } catch {
        }
    }
    return null;
  }
  function fe(d) {
    var p = d.type;
    switch (d.tag) {
      case 24:
        return "Cache";
      case 9:
        return (p.displayName || "Context") + ".Consumer";
      case 10:
        return (p._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return d = p.render, d = d.displayName || d.name || "", p.displayName || (d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return p;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return ge(p);
      case 8:
        return p === U ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if (typeof p == "function") return p.displayName || p.name || null;
        if (typeof p == "string") return p;
    }
    return null;
  }
  function pe(d) {
    switch (typeof d) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return d;
      case "object":
        return d;
      default:
        return "";
    }
  }
  function be(d) {
    var p = d.type;
    return (d = d.nodeName) && d.toLowerCase() === "input" && (p === "checkbox" || p === "radio");
  }
  function we(d) {
    var p = be(d) ? "checked" : "value", b = Object.getOwnPropertyDescriptor(d.constructor.prototype, p), _ = "" + d[p];
    if (!d.hasOwnProperty(p) && typeof b < "u" && typeof b.get == "function" && typeof b.set == "function") {
      var D = b.get, j = b.set;
      return Object.defineProperty(d, p, { configurable: !0, get: function() {
        return D.call(this);
      }, set: function(oe) {
        _ = "" + oe, j.call(this, oe);
      } }), Object.defineProperty(d, p, { enumerable: b.enumerable }), { getValue: function() {
        return _;
      }, setValue: function(oe) {
        _ = "" + oe;
      }, stopTracking: function() {
        d._valueTracker = null, delete d[p];
      } };
    }
  }
  function _e(d) {
    d._valueTracker || (d._valueTracker = we(d));
  }
  function ce(d) {
    if (!d) return !1;
    var p = d._valueTracker;
    if (!p) return !0;
    var b = p.getValue(), _ = "";
    return d && (_ = be(d) ? d.checked ? "true" : "false" : d.value), d = _, d !== b ? (p.setValue(d), !0) : !1;
  }
  function Ce(d) {
    if (d = d || (typeof document < "u" ? document : void 0), typeof d > "u") return null;
    try {
      return d.activeElement || d.body;
    } catch {
      return d.body;
    }
  }
  function Ne(d, p) {
    var b = p.checked;
    return Q({}, p, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: b ?? d._wrapperState.initialChecked });
  }
  function Be(d, p) {
    var b = p.defaultValue == null ? "" : p.defaultValue, _ = p.checked != null ? p.checked : p.defaultChecked;
    b = pe(p.value != null ? p.value : b), d._wrapperState = { initialChecked: _, initialValue: b, controlled: p.type === "checkbox" || p.type === "radio" ? p.checked != null : p.value != null };
  }
  function tt(d, p) {
    p = p.checked, p != null && M(d, "checked", p, !1);
  }
  function $e(d, p) {
    tt(d, p);
    var b = pe(p.value), _ = p.type;
    if (b != null) _ === "number" ? (b === 0 && d.value === "" || d.value != b) && (d.value = "" + b) : d.value !== "" + b && (d.value = "" + b);
    else if (_ === "submit" || _ === "reset") {
      d.removeAttribute("value");
      return;
    }
    p.hasOwnProperty("value") ? ot(d, p.type, b) : p.hasOwnProperty("defaultValue") && ot(d, p.type, pe(p.defaultValue)), p.checked == null && p.defaultChecked != null && (d.defaultChecked = !!p.defaultChecked);
  }
  function rt(d, p, b) {
    if (p.hasOwnProperty("value") || p.hasOwnProperty("defaultValue")) {
      var _ = p.type;
      if (!(_ !== "submit" && _ !== "reset" || p.value !== void 0 && p.value !== null)) return;
      p = "" + d._wrapperState.initialValue, b || p === d.value || (d.value = p), d.defaultValue = p;
    }
    b = d.name, b !== "" && (d.name = ""), d.defaultChecked = !!d._wrapperState.initialChecked, b !== "" && (d.name = b);
  }
  function ot(d, p, b) {
    (p !== "number" || Ce(d.ownerDocument) !== d) && (b == null ? d.defaultValue = "" + d._wrapperState.initialValue : d.defaultValue !== "" + b && (d.defaultValue = "" + b));
  }
  var wt = Array.isArray;
  function gt(d, p, b, _) {
    if (d = d.options, p) {
      p = {};
      for (var D = 0; D < b.length; D++) p["$" + b[D]] = !0;
      for (b = 0; b < d.length; b++) D = p.hasOwnProperty("$" + d[b].value), d[b].selected !== D && (d[b].selected = D), D && _ && (d[b].defaultSelected = !0);
    } else {
      for (b = "" + pe(b), p = null, D = 0; D < d.length; D++) {
        if (d[D].value === b) {
          d[D].selected = !0, _ && (d[D].defaultSelected = !0);
          return;
        }
        p !== null || d[D].disabled || (p = d[D]);
      }
      p !== null && (p.selected = !0);
    }
  }
  function nt(d, p) {
    if (p.dangerouslySetInnerHTML != null) throw Error(n(91));
    return Q({}, p, { value: void 0, defaultValue: void 0, children: "" + d._wrapperState.initialValue });
  }
  function Ft(d, p) {
    var b = p.value;
    if (b == null) {
      if (b = p.children, p = p.defaultValue, b != null) {
        if (p != null) throw Error(n(92));
        if (wt(b)) {
          if (1 < b.length) throw Error(n(93));
          b = b[0];
        }
        p = b;
      }
      p == null && (p = ""), b = p;
    }
    d._wrapperState = { initialValue: pe(b) };
  }
  function ut(d, p) {
    var b = pe(p.value), _ = pe(p.defaultValue);
    b != null && (b = "" + b, b !== d.value && (d.value = b), p.defaultValue == null && d.defaultValue !== b && (d.defaultValue = b)), _ != null && (d.defaultValue = "" + _);
  }
  function Et(d) {
    var p = d.textContent;
    p === d._wrapperState.initialValue && p !== "" && p !== null && (d.value = p);
  }
  function Tt(d) {
    switch (d) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function At(d, p) {
    return d == null || d === "http://www.w3.org/1999/xhtml" ? Tt(p) : d === "http://www.w3.org/2000/svg" && p === "foreignObject" ? "http://www.w3.org/1999/xhtml" : d;
  }
  var vt, Xe = function(d) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(p, b, _, D) {
      MSApp.execUnsafeLocalFunction(function() {
        return d(p, b, _, D);
      });
    } : d;
  }(function(d, p) {
    if (d.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in d) d.innerHTML = p;
    else {
      for (vt = vt || document.createElement("div"), vt.innerHTML = "<svg>" + p.valueOf().toString() + "</svg>", p = vt.firstChild; d.firstChild; ) d.removeChild(d.firstChild);
      for (; p.firstChild; ) d.appendChild(p.firstChild);
    }
  });
  function Oe(d, p) {
    if (p) {
      var b = d.firstChild;
      if (b && b === d.lastChild && b.nodeType === 3) {
        b.nodeValue = p;
        return;
      }
    }
    d.textContent = p;
  }
  var Ie = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, pt = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Ie).forEach(function(d) {
    pt.forEach(function(p) {
      p = p + d.charAt(0).toUpperCase() + d.substring(1), Ie[p] = Ie[d];
    });
  });
  function yt(d, p, b) {
    return p == null || typeof p == "boolean" || p === "" ? "" : b || typeof p != "number" || p === 0 || Ie.hasOwnProperty(d) && Ie[d] ? ("" + p).trim() : p + "px";
  }
  function zt(d, p) {
    d = d.style;
    for (var b in p) if (p.hasOwnProperty(b)) {
      var _ = b.indexOf("--") === 0, D = yt(b, p[b], _);
      b === "float" && (b = "cssFloat"), _ ? d.setProperty(b, D) : d[b] = D;
    }
  }
  var bt = Q({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function We(d, p) {
    if (p) {
      if (bt[d] && (p.children != null || p.dangerouslySetInnerHTML != null)) throw Error(n(137, d));
      if (p.dangerouslySetInnerHTML != null) {
        if (p.children != null) throw Error(n(60));
        if (typeof p.dangerouslySetInnerHTML != "object" || !("__html" in p.dangerouslySetInnerHTML)) throw Error(n(61));
      }
      if (p.style != null && typeof p.style != "object") throw Error(n(62));
    }
  }
  function St(d, p) {
    if (d.indexOf("-") === -1) return typeof p.is == "string";
    switch (d) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  var $t = null;
  function wn(d) {
    return d = d.target || d.srcElement || window, d.correspondingUseElement && (d = d.correspondingUseElement), d.nodeType === 3 ? d.parentNode : d;
  }
  var cn = null, Tr = null, sr = null;
  function $r(d) {
    if (d = Qt(d)) {
      if (typeof cn != "function") throw Error(n(280));
      var p = d.stateNode;
      p && (p = Yr(p), cn(d.stateNode, d.type, p));
    }
  }
  function _r(d) {
    Tr ? sr ? sr.push(d) : sr = [d] : Tr = d;
  }
  function Xo() {
    if (Tr) {
      var d = Tr, p = sr;
      if (sr = Tr = null, $r(d), p) for (d = 0; d < p.length; d++) $r(p[d]);
    }
  }
  function Qo(d, p) {
    return d(p);
  }
  function Wt() {
  }
  var hr = !1;
  function Jo(d, p, b) {
    if (hr) return d(p, b);
    hr = !0;
    try {
      return Qo(d, p, b);
    } finally {
      hr = !1, (Tr !== null || sr !== null) && (Wt(), Xo());
    }
  }
  function Gr(d, p) {
    var b = d.stateNode;
    if (b === null) return null;
    var _ = Yr(b);
    if (_ === null) return null;
    b = _[p];
    e: switch (p) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (_ = !_.disabled) || (d = d.type, _ = !(d === "button" || d === "input" || d === "select" || d === "textarea")), d = !_;
        break e;
      default:
        d = !1;
    }
    if (d) return null;
    if (b && typeof b != "function") throw Error(n(231, p, typeof b));
    return b;
  }
  var oo = !1;
  if (c) try {
    var qr = {};
    Object.defineProperty(qr, "passive", { get: function() {
      oo = !0;
    } }), window.addEventListener("test", qr, qr), window.removeEventListener("test", qr, qr);
  } catch {
    oo = !1;
  }
  function Ki(d, p, b, _, D, j, oe, me, Se) {
    var Fe = Array.prototype.slice.call(arguments, 3);
    try {
      p.apply(b, Fe);
    } catch (at) {
      this.onError(at);
    }
  }
  var Ri = !1, Yi = null, Xi = !1, ye = null, Ye = { onError: function(d) {
    Ri = !0, Yi = d;
  } };
  function ft(d, p, b, _, D, j, oe, me, Se) {
    Ri = !1, Yi = null, Ki.apply(Ye, arguments);
  }
  function Ct(d, p, b, _, D, j, oe, me, Se) {
    if (ft.apply(this, arguments), Ri) {
      if (Ri) {
        var Fe = Yi;
        Ri = !1, Yi = null;
      } else throw Error(n(198));
      Xi || (Xi = !0, ye = Fe);
    }
  }
  function dn(d) {
    var p = d, b = d;
    if (d.alternate) for (; p.return; ) p = p.return;
    else {
      d = p;
      do
        p = d, p.flags & 4098 && (b = p.return), d = p.return;
      while (d);
    }
    return p.tag === 3 ? b : null;
  }
  function De(d) {
    if (d.tag === 13) {
      var p = d.memoizedState;
      if (p === null && (d = d.alternate, d !== null && (p = d.memoizedState)), p !== null) return p.dehydrated;
    }
    return null;
  }
  function Re(d) {
    if (dn(d) !== d) throw Error(n(188));
  }
  function Je(d) {
    var p = d.alternate;
    if (!p) {
      if (p = dn(d), p === null) throw Error(n(188));
      return p !== d ? null : d;
    }
    for (var b = d, _ = p; ; ) {
      var D = b.return;
      if (D === null) break;
      var j = D.alternate;
      if (j === null) {
        if (_ = D.return, _ !== null) {
          b = _;
          continue;
        }
        break;
      }
      if (D.child === j.child) {
        for (j = D.child; j; ) {
          if (j === b) return Re(D), d;
          if (j === _) return Re(D), p;
          j = j.sibling;
        }
        throw Error(n(188));
      }
      if (b.return !== _.return) b = D, _ = j;
      else {
        for (var oe = !1, me = D.child; me; ) {
          if (me === b) {
            oe = !0, b = D, _ = j;
            break;
          }
          if (me === _) {
            oe = !0, _ = D, b = j;
            break;
          }
          me = me.sibling;
        }
        if (!oe) {
          for (me = j.child; me; ) {
            if (me === b) {
              oe = !0, b = j, _ = D;
              break;
            }
            if (me === _) {
              oe = !0, _ = j, b = D;
              break;
            }
            me = me.sibling;
          }
          if (!oe) throw Error(n(189));
        }
      }
      if (b.alternate !== _) throw Error(n(190));
    }
    if (b.tag !== 3) throw Error(n(188));
    return b.stateNode.current === b ? d : p;
  }
  function Bt(d) {
    return d = Je(d), d !== null ? jt(d) : null;
  }
  function jt(d) {
    if (d.tag === 5 || d.tag === 6) return d;
    for (d = d.child; d !== null; ) {
      var p = jt(d);
      if (p !== null) return p;
      d = d.sibling;
    }
    return null;
  }
  var Kt = t.unstable_scheduleCallback, Ln = t.unstable_cancelCallback, Or = t.unstable_shouldYield, Zo = t.unstable_requestPaint, yn = t.unstable_now, Sn = t.unstable_getCurrentPriorityLevel, yi = t.unstable_ImmediatePriority, Ds = t.unstable_UserBlockingPriority, Mn = t.unstable_NormalPriority, Mo = t.unstable_LowPriority, ki = t.unstable_IdlePriority, Qi = null, bi = null;
  function pp(d) {
    if (bi && typeof bi.onCommitFiberRoot == "function") try {
      bi.onCommitFiberRoot(Qi, d, void 0, (d.current.flags & 128) === 128);
    } catch {
    }
  }
  var Pi = Math.clz32 ? Math.clz32 : Md, ym = Math.log, bm = Math.LN2;
  function Md(d) {
    return d >>>= 0, d === 0 ? 32 : 31 - (ym(d) / bm | 0) | 0;
  }
  var wu = 64, ys = 4194304;
  function da(d) {
    switch (d & -d) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return d & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return d & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return d;
    }
  }
  function fa(d, p) {
    var b = d.pendingLanes;
    if (b === 0) return 0;
    var _ = 0, D = d.suspendedLanes, j = d.pingedLanes, oe = b & 268435455;
    if (oe !== 0) {
      var me = oe & ~D;
      me !== 0 ? _ = da(me) : (j &= oe, j !== 0 && (_ = da(j)));
    } else oe = b & ~D, oe !== 0 ? _ = da(oe) : j !== 0 && (_ = da(j));
    if (_ === 0) return 0;
    if (p !== 0 && p !== _ && !(p & D) && (D = _ & -_, j = p & -p, D >= j || D === 16 && (j & 4194240) !== 0)) return p;
    if (_ & 4 && (_ |= b & 16), p = d.entangledLanes, p !== 0) for (d = d.entanglements, p &= _; 0 < p; ) b = 31 - Pi(p), D = 1 << b, _ |= d[b], p &= ~D;
    return _;
  }
  function Id(d, p) {
    switch (d) {
      case 1:
      case 2:
      case 4:
        return p + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return p + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function Ec(d, p) {
    for (var b = d.suspendedLanes, _ = d.pingedLanes, D = d.expirationTimes, j = d.pendingLanes; 0 < j; ) {
      var oe = 31 - Pi(j), me = 1 << oe, Se = D[oe];
      Se === -1 ? (!(me & b) || me & _) && (D[oe] = Id(me, p)) : Se <= p && (d.expiredLanes |= me), j &= ~me;
    }
  }
  function Su(d) {
    return d = d.pendingLanes & -1073741825, d !== 0 ? d : d & 1073741824 ? 1073741824 : 0;
  }
  function Dd() {
    var d = wu;
    return wu <<= 1, !(wu & 4194240) && (wu = 64), d;
  }
  function Ad(d) {
    for (var p = [], b = 0; 31 > b; b++) p.push(d);
    return p;
  }
  function Pl(d, p, b) {
    d.pendingLanes |= p, p !== 536870912 && (d.suspendedLanes = 0, d.pingedLanes = 0), d = d.eventTimes, p = 31 - Pi(p), d[p] = b;
  }
  function _y(d, p) {
    var b = d.pendingLanes & ~p;
    d.pendingLanes = p, d.suspendedLanes = 0, d.pingedLanes = 0, d.expiredLanes &= p, d.mutableReadLanes &= p, d.entangledLanes &= p, p = d.entanglements;
    var _ = d.eventTimes;
    for (d = d.expirationTimes; 0 < b; ) {
      var D = 31 - Pi(b), j = 1 << D;
      p[D] = 0, _[D] = -1, d[D] = -1, b &= ~j;
    }
  }
  function Ml(d, p) {
    var b = d.entangledLanes |= p;
    for (d = d.entanglements; b; ) {
      var _ = 31 - Pi(b), D = 1 << _;
      D & p | d[_] & p && (d[_] |= p), b &= ~D;
    }
  }
  var Jn = 0;
  function Nd(d) {
    return d &= -d, 1 < d ? 4 < d ? d & 268435455 ? 16 : 536870912 : 4 : 1;
  }
  var qn, hp, ja, gn, Ld, ei = !1, Fa = [], Mi = null, za = null, jr = null, mr = /* @__PURE__ */ new Map(), Cu = /* @__PURE__ */ new Map(), Io = [], Ii = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function As(d, p) {
    switch (d) {
      case "focusin":
      case "focusout":
        Mi = null;
        break;
      case "dragenter":
      case "dragleave":
        za = null;
        break;
      case "mouseover":
      case "mouseout":
        jr = null;
        break;
      case "pointerover":
      case "pointerout":
        mr.delete(p.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Cu.delete(p.pointerId);
    }
  }
  function Tc(d, p, b, _, D, j) {
    return d === null || d.nativeEvent !== j ? (d = { blockedOn: p, domEventName: b, eventSystemFlags: _, nativeEvent: j, targetContainers: [D] }, p !== null && (p = Qt(p), p !== null && hp(p)), d) : (d.eventSystemFlags |= _, p = d.targetContainers, D !== null && p.indexOf(D) === -1 && p.push(D), d);
  }
  function mp(d, p, b, _, D) {
    switch (p) {
      case "focusin":
        return Mi = Tc(Mi, d, p, b, _, D), !0;
      case "dragenter":
        return za = Tc(za, d, p, b, _, D), !0;
      case "mouseover":
        return jr = Tc(jr, d, p, b, _, D), !0;
      case "pointerover":
        var j = D.pointerId;
        return mr.set(j, Tc(mr.get(j) || null, d, p, b, _, D)), !0;
      case "gotpointercapture":
        return j = D.pointerId, Cu.set(j, Tc(Cu.get(j) || null, d, p, b, _, D)), !0;
    }
    return !1;
  }
  function gp(d) {
    var p = Ac(d.target);
    if (p !== null) {
      var b = dn(p);
      if (b !== null) {
        if (p = b.tag, p === 13) {
          if (p = De(b), p !== null) {
            d.blockedOn = p, Ld(d.priority, function() {
              ja(b);
            });
            return;
          }
        } else if (p === 3 && b.stateNode.current.memoizedState.isDehydrated) {
          d.blockedOn = b.tag === 3 ? b.stateNode.containerInfo : null;
          return;
        }
      }
    }
    d.blockedOn = null;
  }
  function xu(d) {
    if (d.blockedOn !== null) return !1;
    for (var p = d.targetContainers; 0 < p.length; ) {
      var b = Fd(d.domEventName, d.eventSystemFlags, p[0], d.nativeEvent);
      if (b === null) {
        b = d.nativeEvent;
        var _ = new b.constructor(b.type, b);
        $t = _, b.target.dispatchEvent(_), $t = null;
      } else return p = Qt(b), p !== null && hp(p), d.blockedOn = b, !1;
      p.shift();
    }
    return !0;
  }
  function _c(d, p, b) {
    xu(d) && b.delete(p);
  }
  function Oy() {
    ei = !1, Mi !== null && xu(Mi) && (Mi = null), za !== null && xu(za) && (za = null), jr !== null && xu(jr) && (jr = null), mr.forEach(_c), Cu.forEach(_c);
  }
  function Ns(d, p) {
    d.blockedOn === p && (d.blockedOn = null, ei || (ei = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, Oy)));
  }
  function pa(d) {
    function p(D) {
      return Ns(D, d);
    }
    if (0 < Fa.length) {
      Ns(Fa[0], d);
      for (var b = 1; b < Fa.length; b++) {
        var _ = Fa[b];
        _.blockedOn === d && (_.blockedOn = null);
      }
    }
    for (Mi !== null && Ns(Mi, d), za !== null && Ns(za, d), jr !== null && Ns(jr, d), mr.forEach(p), Cu.forEach(p), b = 0; b < Io.length; b++) _ = Io[b], _.blockedOn === d && (_.blockedOn = null);
    for (; 0 < Io.length && (b = Io[0], b.blockedOn === null); ) gp(b), b.blockedOn === null && Io.shift();
  }
  var Ba = N.ReactCurrentBatchConfig, Ls = !0;
  function $d(d, p, b, _) {
    var D = Jn, j = Ba.transition;
    Ba.transition = null;
    try {
      Jn = 1, Eu(d, p, b, _);
    } finally {
      Jn = D, Ba.transition = j;
    }
  }
  function jd(d, p, b, _) {
    var D = Jn, j = Ba.transition;
    Ba.transition = null;
    try {
      Jn = 4, Eu(d, p, b, _);
    } finally {
      Jn = D, Ba.transition = j;
    }
  }
  function Eu(d, p, b, _) {
    if (Ls) {
      var D = Fd(d, p, b, _);
      if (D === null) Mm(d, p, _, Oc, b), As(d, _);
      else if (mp(D, d, p, b, _)) _.stopPropagation();
      else if (As(d, _), p & 4 && -1 < Ii.indexOf(d)) {
        for (; D !== null; ) {
          var j = Qt(D);
          if (j !== null && qn(j), j = Fd(d, p, b, _), j === null && Mm(d, p, _, Oc, b), j === D) break;
          D = j;
        }
        D !== null && _.stopPropagation();
      } else Mm(d, p, _, null, b);
    }
  }
  var Oc = null;
  function Fd(d, p, b, _) {
    if (Oc = null, d = wn(_), d = Ac(d), d !== null) if (p = dn(d), p === null) d = null;
    else if (b = p.tag, b === 13) {
      if (d = De(p), d !== null) return d;
      d = null;
    } else if (b === 3) {
      if (p.stateNode.current.memoizedState.isDehydrated) return p.tag === 3 ? p.stateNode.containerInfo : null;
      d = null;
    } else p !== d && (d = null);
    return Oc = d, null;
  }
  function zd(d) {
    switch (d) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (Sn()) {
          case yi:
            return 1;
          case Ds:
            return 4;
          case Mn:
          case Mo:
            return 16;
          case ki:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var ha = null, ne = null, ve = null;
  function je() {
    if (ve) return ve;
    var d, p = ne, b = p.length, _, D = "value" in ha ? ha.value : ha.textContent, j = D.length;
    for (d = 0; d < b && p[d] === D[d]; d++) ;
    var oe = b - d;
    for (_ = 1; _ <= oe && p[b - _] === D[j - _]; _++) ;
    return ve = D.slice(d, 1 < _ ? 1 - _ : void 0);
  }
  function Ve(d) {
    var p = d.keyCode;
    return "charCode" in d ? (d = d.charCode, d === 0 && p === 13 && (d = 13)) : d = p, d === 10 && (d = 13), 32 <= d || d === 13 ? d : 0;
  }
  function ht() {
    return !0;
  }
  function tn() {
    return !1;
  }
  function _t(d) {
    function p(b, _, D, j, oe) {
      this._reactName = b, this._targetInst = D, this.type = _, this.nativeEvent = j, this.target = oe, this.currentTarget = null;
      for (var me in d) d.hasOwnProperty(me) && (b = d[me], this[me] = b ? b(j) : j[me]);
      return this.isDefaultPrevented = (j.defaultPrevented != null ? j.defaultPrevented : j.returnValue === !1) ? ht : tn, this.isPropagationStopped = tn, this;
    }
    return Q(p.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var b = this.nativeEvent;
      b && (b.preventDefault ? b.preventDefault() : typeof b.returnValue != "unknown" && (b.returnValue = !1), this.isDefaultPrevented = ht);
    }, stopPropagation: function() {
      var b = this.nativeEvent;
      b && (b.stopPropagation ? b.stopPropagation() : typeof b.cancelBubble != "unknown" && (b.cancelBubble = !0), this.isPropagationStopped = ht);
    }, persist: function() {
    }, isPersistent: ht }), p;
  }
  var on = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(d) {
    return d.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, In = _t(on), Kn = Q({}, on, { view: 0, detail: 0 }), Mr = _t(Kn), gr, Rn, vr, Kr = Q({}, Kn, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Iy, button: 0, buttons: 0, relatedTarget: function(d) {
    return d.relatedTarget === void 0 ? d.fromElement === d.srcElement ? d.toElement : d.fromElement : d.relatedTarget;
  }, movementX: function(d) {
    return "movementX" in d ? d.movementX : (d !== vr && (vr && d.type === "mousemove" ? (gr = d.screenX - vr.screenX, Rn = d.screenY - vr.screenY) : Rn = gr = 0, vr = d), gr);
  }, movementY: function(d) {
    return "movementY" in d ? d.movementY : Rn;
  } }), Tu = _t(Kr), vp = Q({}, Kr, { dataTransfer: 0 }), Il = _t(vp), yp = Q({}, Kn, { relatedTarget: 0 }), Rc = _t(yp), Ry = Q({}, on, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), wm = _t(Ry), ky = Q({}, on, { clipboardData: function(d) {
    return "clipboardData" in d ? d.clipboardData : window.clipboardData;
  } }), IC = _t(ky), Py = Q({}, on, { data: 0 }), My = _t(Py), DC = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, AC = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, OO = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Dl(d) {
    var p = this.nativeEvent;
    return p.getModifierState ? p.getModifierState(d) : (d = OO[d]) ? !!p[d] : !1;
  }
  function Iy() {
    return Dl;
  }
  var Dy = Q({}, Kn, { key: function(d) {
    if (d.key) {
      var p = DC[d.key] || d.key;
      if (p !== "Unidentified") return p;
    }
    return d.type === "keypress" ? (d = Ve(d), d === 13 ? "Enter" : String.fromCharCode(d)) : d.type === "keydown" || d.type === "keyup" ? AC[d.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Iy, charCode: function(d) {
    return d.type === "keypress" ? Ve(d) : 0;
  }, keyCode: function(d) {
    return d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
  }, which: function(d) {
    return d.type === "keypress" ? Ve(d) : d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
  } }), Ay = _t(Dy), Ny = Q({}, Kr, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), NC = _t(Ny), Sm = Q({}, Kn, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Iy }), LC = _t(Sm), Ji = Q({}, on, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Al = _t(Ji), mo = Q({}, Kr, {
    deltaX: function(d) {
      return "deltaX" in d ? d.deltaX : "wheelDeltaX" in d ? -d.wheelDeltaX : 0;
    },
    deltaY: function(d) {
      return "deltaY" in d ? d.deltaY : "wheelDeltaY" in d ? -d.wheelDeltaY : "wheelDelta" in d ? -d.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Nl = _t(mo), Ly = [9, 13, 27, 32], Bd = c && "CompositionEvent" in window, bp = null;
  c && "documentMode" in document && (bp = document.documentMode);
  var wp = c && "TextEvent" in window && !bp, $C = c && (!Bd || bp && 8 < bp && 11 >= bp), jC = " ", Cm = !1;
  function FC(d, p) {
    switch (d) {
      case "keyup":
        return Ly.indexOf(p.keyCode) !== -1;
      case "keydown":
        return p.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function zC(d) {
    return d = d.detail, typeof d == "object" && "data" in d ? d.data : null;
  }
  var Hd = !1;
  function BC(d, p) {
    switch (d) {
      case "compositionend":
        return zC(p);
      case "keypress":
        return p.which !== 32 ? null : (Cm = !0, jC);
      case "textInput":
        return d = p.data, d === jC && Cm ? null : d;
      default:
        return null;
    }
  }
  function RO(d, p) {
    if (Hd) return d === "compositionend" || !Bd && FC(d, p) ? (d = je(), ve = ne = ha = null, Hd = !1, d) : null;
    switch (d) {
      case "paste":
        return null;
      case "keypress":
        if (!(p.ctrlKey || p.altKey || p.metaKey) || p.ctrlKey && p.altKey) {
          if (p.char && 1 < p.char.length) return p.char;
          if (p.which) return String.fromCharCode(p.which);
        }
        return null;
      case "compositionend":
        return $C && p.locale !== "ko" ? null : p.data;
      default:
        return null;
    }
  }
  var kO = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function HC(d) {
    var p = d && d.nodeName && d.nodeName.toLowerCase();
    return p === "input" ? !!kO[d.type] : p === "textarea";
  }
  function $y(d, p, b, _) {
    _r(_), p = _p(p, "onChange"), 0 < p.length && (b = new In("onChange", "change", null, b, _), d.push({ event: b, listeners: p }));
  }
  var Ha = null, kc = null;
  function VC(d) {
    Ic(d, 0);
  }
  function Sp(d) {
    var p = ga(d);
    if (ce(p)) return d;
  }
  function PO(d, p) {
    if (d === "change") return p;
  }
  var UC = !1;
  if (c) {
    var jy;
    if (c) {
      var Fy = "oninput" in document;
      if (!Fy) {
        var WC = document.createElement("div");
        WC.setAttribute("oninput", "return;"), Fy = typeof WC.oninput == "function";
      }
      jy = Fy;
    } else jy = !1;
    UC = jy && (!document.documentMode || 9 < document.documentMode);
  }
  function GC() {
    Ha && (Ha.detachEvent("onpropertychange", qC), kc = Ha = null);
  }
  function qC(d) {
    if (d.propertyName === "value" && Sp(kc)) {
      var p = [];
      $y(p, kc, d, wn(d)), Jo(VC, p);
    }
  }
  function MO(d, p, b) {
    d === "focusin" ? (GC(), Ha = p, kc = b, Ha.attachEvent("onpropertychange", qC)) : d === "focusout" && GC();
  }
  function KC(d) {
    if (d === "selectionchange" || d === "keyup" || d === "keydown") return Sp(kc);
  }
  function IO(d, p) {
    if (d === "click") return Sp(p);
  }
  function YC(d, p) {
    if (d === "input" || d === "change") return Sp(p);
  }
  function DO(d, p) {
    return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
  }
  var ma = typeof Object.is == "function" ? Object.is : DO;
  function Cp(d, p) {
    if (ma(d, p)) return !0;
    if (typeof d != "object" || d === null || typeof p != "object" || p === null) return !1;
    var b = Object.keys(d), _ = Object.keys(p);
    if (b.length !== _.length) return !1;
    for (_ = 0; _ < b.length; _++) {
      var D = b[_];
      if (!f.call(p, D) || !ma(d[D], p[D])) return !1;
    }
    return !0;
  }
  function XC(d) {
    for (; d && d.firstChild; ) d = d.firstChild;
    return d;
  }
  function xm(d, p) {
    var b = XC(d);
    d = 0;
    for (var _; b; ) {
      if (b.nodeType === 3) {
        if (_ = d + b.textContent.length, d <= p && _ >= p) return { node: b, offset: p - d };
        d = _;
      }
      e: {
        for (; b; ) {
          if (b.nextSibling) {
            b = b.nextSibling;
            break e;
          }
          b = b.parentNode;
        }
        b = void 0;
      }
      b = XC(b);
    }
  }
  function _u(d, p) {
    return d && p ? d === p ? !0 : d && d.nodeType === 3 ? !1 : p && p.nodeType === 3 ? _u(d, p.parentNode) : "contains" in d ? d.contains(p) : d.compareDocumentPosition ? !!(d.compareDocumentPosition(p) & 16) : !1 : !1;
  }
  function xp() {
    for (var d = window, p = Ce(); p instanceof d.HTMLIFrameElement; ) {
      try {
        var b = typeof p.contentWindow.location.href == "string";
      } catch {
        b = !1;
      }
      if (b) d = p.contentWindow;
      else break;
      p = Ce(d.document);
    }
    return p;
  }
  function Em(d) {
    var p = d && d.nodeName && d.nodeName.toLowerCase();
    return p && (p === "input" && (d.type === "text" || d.type === "search" || d.type === "tel" || d.type === "url" || d.type === "password") || p === "textarea" || d.contentEditable === "true");
  }
  function Vd(d) {
    var p = xp(), b = d.focusedElem, _ = d.selectionRange;
    if (p !== b && b && b.ownerDocument && _u(b.ownerDocument.documentElement, b)) {
      if (_ !== null && Em(b)) {
        if (p = _.start, d = _.end, d === void 0 && (d = p), "selectionStart" in b) b.selectionStart = p, b.selectionEnd = Math.min(d, b.value.length);
        else if (d = (p = b.ownerDocument || document) && p.defaultView || window, d.getSelection) {
          d = d.getSelection();
          var D = b.textContent.length, j = Math.min(_.start, D);
          _ = _.end === void 0 ? j : Math.min(_.end, D), !d.extend && j > _ && (D = _, _ = j, j = D), D = xm(b, j);
          var oe = xm(
            b,
            _
          );
          D && oe && (d.rangeCount !== 1 || d.anchorNode !== D.node || d.anchorOffset !== D.offset || d.focusNode !== oe.node || d.focusOffset !== oe.offset) && (p = p.createRange(), p.setStart(D.node, D.offset), d.removeAllRanges(), j > _ ? (d.addRange(p), d.extend(oe.node, oe.offset)) : (p.setEnd(oe.node, oe.offset), d.addRange(p)));
        }
      }
      for (p = [], d = b; d = d.parentNode; ) d.nodeType === 1 && p.push({ element: d, left: d.scrollLeft, top: d.scrollTop });
      for (typeof b.focus == "function" && b.focus(), b = 0; b < p.length; b++) d = p[b], d.element.scrollLeft = d.left, d.element.scrollTop = d.top;
    }
  }
  var AO = c && "documentMode" in document && 11 >= document.documentMode, Ud = null, zy = null, Ep = null, By = !1;
  function Hy(d, p, b) {
    var _ = b.window === b ? b.document : b.nodeType === 9 ? b : b.ownerDocument;
    By || Ud == null || Ud !== Ce(_) || (_ = Ud, "selectionStart" in _ && Em(_) ? _ = { start: _.selectionStart, end: _.selectionEnd } : (_ = (_.ownerDocument && _.ownerDocument.defaultView || window).getSelection(), _ = { anchorNode: _.anchorNode, anchorOffset: _.anchorOffset, focusNode: _.focusNode, focusOffset: _.focusOffset }), Ep && Cp(Ep, _) || (Ep = _, _ = _p(zy, "onSelect"), 0 < _.length && (p = new In("onSelect", "select", null, p, b), d.push({ event: p, listeners: _ }), p.target = Ud)));
  }
  function Tm(d, p) {
    var b = {};
    return b[d.toLowerCase()] = p.toLowerCase(), b["Webkit" + d] = "webkit" + p, b["Moz" + d] = "moz" + p, b;
  }
  var Pc = { animationend: Tm("Animation", "AnimationEnd"), animationiteration: Tm("Animation", "AnimationIteration"), animationstart: Tm("Animation", "AnimationStart"), transitionend: Tm("Transition", "TransitionEnd") }, ti = {}, Vy = {};
  c && (Vy = document.createElement("div").style, "AnimationEvent" in window || (delete Pc.animationend.animation, delete Pc.animationiteration.animation, delete Pc.animationstart.animation), "TransitionEvent" in window || delete Pc.transitionend.transition);
  function _m(d) {
    if (ti[d]) return ti[d];
    if (!Pc[d]) return d;
    var p = Pc[d], b;
    for (b in p) if (p.hasOwnProperty(b) && b in Vy) return ti[d] = p[b];
    return d;
  }
  var QC = _m("animationend"), JC = _m("animationiteration"), ZC = _m("animationstart"), e0 = _m("transitionend"), Uy = /* @__PURE__ */ new Map(), Om = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function $s(d, p) {
    Uy.set(d, p), s(p, [d]);
  }
  for (var Wy = 0; Wy < Om.length; Wy++) {
    var Mc = Om[Wy], NO = Mc.toLowerCase(), LO = Mc[0].toUpperCase() + Mc.slice(1);
    $s(NO, "on" + LO);
  }
  $s(QC, "onAnimationEnd"), $s(JC, "onAnimationIteration"), $s(ZC, "onAnimationStart"), $s("dblclick", "onDoubleClick"), $s("focusin", "onFocus"), $s("focusout", "onBlur"), $s(e0, "onTransitionEnd"), a("onMouseEnter", ["mouseout", "mouseover"]), a("onMouseLeave", ["mouseout", "mouseover"]), a("onPointerEnter", ["pointerout", "pointerover"]), a("onPointerLeave", ["pointerout", "pointerover"]), s("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), s("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), s("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), s("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var Tp = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Gy = new Set("cancel close invalid load scroll toggle".split(" ").concat(Tp));
  function Rm(d, p, b) {
    var _ = d.type || "unknown-event";
    d.currentTarget = b, Ct(_, p, void 0, d), d.currentTarget = null;
  }
  function Ic(d, p) {
    p = (p & 4) !== 0;
    for (var b = 0; b < d.length; b++) {
      var _ = d[b], D = _.event;
      _ = _.listeners;
      e: {
        var j = void 0;
        if (p) for (var oe = _.length - 1; 0 <= oe; oe--) {
          var me = _[oe], Se = me.instance, Fe = me.currentTarget;
          if (me = me.listener, Se !== j && D.isPropagationStopped()) break e;
          Rm(D, me, Fe), j = Se;
        }
        else for (oe = 0; oe < _.length; oe++) {
          if (me = _[oe], Se = me.instance, Fe = me.currentTarget, me = me.listener, Se !== j && D.isPropagationStopped()) break e;
          Rm(D, me, Fe), j = Se;
        }
      }
    }
    if (Xi) throw d = ye, Xi = !1, ye = null, d;
  }
  function ar(d, p) {
    var b = p[kp];
    b === void 0 && (b = p[kp] = /* @__PURE__ */ new Set());
    var _ = d + "__bubble";
    b.has(_) || (t0(p, d, 2, !1), b.add(_));
  }
  function km(d, p, b) {
    var _ = 0;
    p && (_ |= 4), t0(b, d, _, p);
  }
  var Pm = "_reactListening" + Math.random().toString(36).slice(2);
  function Wd(d) {
    if (!d[Pm]) {
      d[Pm] = !0, r.forEach(function(b) {
        b !== "selectionchange" && (Gy.has(b) || km(b, !1, d), km(b, !0, d));
      });
      var p = d.nodeType === 9 ? d : d.ownerDocument;
      p === null || p[Pm] || (p[Pm] = !0, km("selectionchange", !1, p));
    }
  }
  function t0(d, p, b, _) {
    switch (zd(p)) {
      case 1:
        var D = $d;
        break;
      case 4:
        D = jd;
        break;
      default:
        D = Eu;
    }
    b = D.bind(null, p, b, d), D = void 0, !oo || p !== "touchstart" && p !== "touchmove" && p !== "wheel" || (D = !0), _ ? D !== void 0 ? d.addEventListener(p, b, { capture: !0, passive: D }) : d.addEventListener(p, b, !0) : D !== void 0 ? d.addEventListener(p, b, { passive: D }) : d.addEventListener(p, b, !1);
  }
  function Mm(d, p, b, _, D) {
    var j = _;
    if (!(p & 1) && !(p & 2) && _ !== null) e: for (; ; ) {
      if (_ === null) return;
      var oe = _.tag;
      if (oe === 3 || oe === 4) {
        var me = _.stateNode.containerInfo;
        if (me === D || me.nodeType === 8 && me.parentNode === D) break;
        if (oe === 4) for (oe = _.return; oe !== null; ) {
          var Se = oe.tag;
          if ((Se === 3 || Se === 4) && (Se = oe.stateNode.containerInfo, Se === D || Se.nodeType === 8 && Se.parentNode === D)) return;
          oe = oe.return;
        }
        for (; me !== null; ) {
          if (oe = Ac(me), oe === null) return;
          if (Se = oe.tag, Se === 5 || Se === 6) {
            _ = j = oe;
            continue e;
          }
          me = me.parentNode;
        }
      }
      _ = _.return;
    }
    Jo(function() {
      var Fe = j, at = wn(b), ct = [];
      e: {
        var st = Uy.get(d);
        if (st !== void 0) {
          var Mt = In, Ht = d;
          switch (d) {
            case "keypress":
              if (Ve(b) === 0) break e;
            case "keydown":
            case "keyup":
              Mt = Ay;
              break;
            case "focusin":
              Ht = "focus", Mt = Rc;
              break;
            case "focusout":
              Ht = "blur", Mt = Rc;
              break;
            case "beforeblur":
            case "afterblur":
              Mt = Rc;
              break;
            case "click":
              if (b.button === 2) break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              Mt = Tu;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              Mt = Il;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              Mt = LC;
              break;
            case QC:
            case JC:
            case ZC:
              Mt = wm;
              break;
            case e0:
              Mt = Al;
              break;
            case "scroll":
              Mt = Mr;
              break;
            case "wheel":
              Mt = Nl;
              break;
            case "copy":
            case "cut":
            case "paste":
              Mt = IC;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              Mt = NC;
          }
          var Gt = (p & 4) !== 0, uo = !Gt && d === "scroll", ke = Gt ? st !== null ? st + "Capture" : null : st;
          Gt = [];
          for (var Ee = Fe, Ae; Ee !== null; ) {
            Ae = Ee;
            var lt = Ae.stateNode;
            if (Ae.tag === 5 && lt !== null && (Ae = lt, ke !== null && (lt = Gr(Ee, ke), lt != null && Gt.push(Gd(Ee, lt, Ae)))), uo) break;
            Ee = Ee.return;
          }
          0 < Gt.length && (st = new Mt(st, Ht, null, b, at), ct.push({ event: st, listeners: Gt }));
        }
      }
      if (!(p & 7)) {
        e: {
          if (st = d === "mouseover" || d === "pointerover", Mt = d === "mouseout" || d === "pointerout", st && b !== $t && (Ht = b.relatedTarget || b.fromElement) && (Ac(Ht) || Ht[Ll])) break e;
          if ((Mt || st) && (st = at.window === at ? at : (st = at.ownerDocument) ? st.defaultView || st.parentWindow : window, Mt ? (Ht = b.relatedTarget || b.toElement, Mt = Fe, Ht = Ht ? Ac(Ht) : null, Ht !== null && (uo = dn(Ht), Ht !== uo || Ht.tag !== 5 && Ht.tag !== 6) && (Ht = null)) : (Mt = null, Ht = Fe), Mt !== Ht)) {
            if (Gt = Tu, lt = "onMouseLeave", ke = "onMouseEnter", Ee = "mouse", (d === "pointerout" || d === "pointerover") && (Gt = NC, lt = "onPointerLeave", ke = "onPointerEnter", Ee = "pointer"), uo = Mt == null ? st : ga(Mt), Ae = Ht == null ? st : ga(Ht), st = new Gt(lt, Ee + "leave", Mt, b, at), st.target = uo, st.relatedTarget = Ae, lt = null, Ac(at) === Fe && (Gt = new Gt(ke, Ee + "enter", Ht, b, at), Gt.target = Ae, Gt.relatedTarget = uo, lt = Gt), uo = lt, Mt && Ht) t: {
              for (Gt = Mt, ke = Ht, Ee = 0, Ae = Gt; Ae; Ae = Ou(Ae)) Ee++;
              for (Ae = 0, lt = ke; lt; lt = Ou(lt)) Ae++;
              for (; 0 < Ee - Ae; ) Gt = Ou(Gt), Ee--;
              for (; 0 < Ae - Ee; ) ke = Ou(ke), Ae--;
              for (; Ee--; ) {
                if (Gt === ke || ke !== null && Gt === ke.alternate) break t;
                Gt = Ou(Gt), ke = Ou(ke);
              }
              Gt = null;
            }
            else Gt = null;
            Mt !== null && n0(ct, st, Mt, Gt, !1), Ht !== null && uo !== null && n0(ct, uo, Ht, Gt, !0);
          }
        }
        e: {
          if (st = Fe ? ga(Fe) : window, Mt = st.nodeName && st.nodeName.toLowerCase(), Mt === "select" || Mt === "input" && st.type === "file") var Vt = PO;
          else if (HC(st)) if (UC) Vt = YC;
          else {
            Vt = KC;
            var rn = MO;
          }
          else (Mt = st.nodeName) && Mt.toLowerCase() === "input" && (st.type === "checkbox" || st.type === "radio") && (Vt = IO);
          if (Vt && (Vt = Vt(d, Fe))) {
            $y(ct, Vt, b, at);
            break e;
          }
          rn && rn(d, st, Fe), d === "focusout" && (rn = st._wrapperState) && rn.controlled && st.type === "number" && ot(st, "number", st.value);
        }
        switch (rn = Fe ? ga(Fe) : window, d) {
          case "focusin":
            (HC(rn) || rn.contentEditable === "true") && (Ud = rn, zy = Fe, Ep = null);
            break;
          case "focusout":
            Ep = zy = Ud = null;
            break;
          case "mousedown":
            By = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            By = !1, Hy(ct, b, at);
            break;
          case "selectionchange":
            if (AO) break;
          case "keydown":
          case "keyup":
            Hy(ct, b, at);
        }
        var sn;
        if (Bd) e: {
          switch (d) {
            case "compositionstart":
              var hn = "onCompositionStart";
              break e;
            case "compositionend":
              hn = "onCompositionEnd";
              break e;
            case "compositionupdate":
              hn = "onCompositionUpdate";
              break e;
          }
          hn = void 0;
        }
        else Hd ? FC(d, b) && (hn = "onCompositionEnd") : d === "keydown" && b.keyCode === 229 && (hn = "onCompositionStart");
        hn && ($C && b.locale !== "ko" && (Hd || hn !== "onCompositionStart" ? hn === "onCompositionEnd" && Hd && (sn = je()) : (ha = at, ne = "value" in ha ? ha.value : ha.textContent, Hd = !0)), rn = _p(Fe, hn), 0 < rn.length && (hn = new My(hn, d, null, b, at), ct.push({ event: hn, listeners: rn }), sn ? hn.data = sn : (sn = zC(b), sn !== null && (hn.data = sn)))), (sn = wp ? BC(d, b) : RO(d, b)) && (Fe = _p(Fe, "onBeforeInput"), 0 < Fe.length && (at = new My("onBeforeInput", "beforeinput", null, b, at), ct.push({ event: at, listeners: Fe }), at.data = sn));
      }
      Ic(ct, p);
    });
  }
  function Gd(d, p, b) {
    return { instance: d, listener: p, currentTarget: b };
  }
  function _p(d, p) {
    for (var b = p + "Capture", _ = []; d !== null; ) {
      var D = d, j = D.stateNode;
      D.tag === 5 && j !== null && (D = j, j = Gr(d, b), j != null && _.unshift(Gd(d, j, D)), j = Gr(d, p), j != null && _.push(Gd(d, j, D))), d = d.return;
    }
    return _;
  }
  function Ou(d) {
    if (d === null) return null;
    do
      d = d.return;
    while (d && d.tag !== 5);
    return d || null;
  }
  function n0(d, p, b, _, D) {
    for (var j = p._reactName, oe = []; b !== null && b !== _; ) {
      var me = b, Se = me.alternate, Fe = me.stateNode;
      if (Se !== null && Se === _) break;
      me.tag === 5 && Fe !== null && (me = Fe, D ? (Se = Gr(b, j), Se != null && oe.unshift(Gd(b, Se, me))) : D || (Se = Gr(b, j), Se != null && oe.push(Gd(b, Se, me)))), b = b.return;
    }
    oe.length !== 0 && d.push({ event: p, listeners: oe });
  }
  var r0 = /\r\n?/g, $O = /\u0000|\uFFFD/g;
  function o0(d) {
    return (typeof d == "string" ? d : "" + d).replace(r0, `
`).replace($O, "");
  }
  function Im(d, p, b) {
    if (p = o0(p), o0(d) !== p && b) throw Error(n(425));
  }
  function Ru() {
  }
  var Op = null, Dc = null;
  function Dm(d, p) {
    return d === "textarea" || d === "noscript" || typeof p.children == "string" || typeof p.children == "number" || typeof p.dangerouslySetInnerHTML == "object" && p.dangerouslySetInnerHTML !== null && p.dangerouslySetInnerHTML.__html != null;
  }
  var Am = typeof setTimeout == "function" ? setTimeout : void 0, qy = typeof clearTimeout == "function" ? clearTimeout : void 0, i0 = typeof Promise == "function" ? Promise : void 0, qd = typeof queueMicrotask == "function" ? queueMicrotask : typeof i0 < "u" ? function(d) {
    return i0.resolve(null).then(d).catch(Nm);
  } : Am;
  function Nm(d) {
    setTimeout(function() {
      throw d;
    });
  }
  function Kd(d, p) {
    var b = p, _ = 0;
    do {
      var D = b.nextSibling;
      if (d.removeChild(b), D && D.nodeType === 8) if (b = D.data, b === "/$") {
        if (_ === 0) {
          d.removeChild(D), pa(p);
          return;
        }
        _--;
      } else b !== "$" && b !== "$?" && b !== "$!" || _++;
      b = D;
    } while (b);
    pa(p);
  }
  function Va(d) {
    for (; d != null; d = d.nextSibling) {
      var p = d.nodeType;
      if (p === 1 || p === 3) break;
      if (p === 8) {
        if (p = d.data, p === "$" || p === "$!" || p === "$?") break;
        if (p === "/$") return null;
      }
    }
    return d;
  }
  function s0(d) {
    d = d.previousSibling;
    for (var p = 0; d; ) {
      if (d.nodeType === 8) {
        var b = d.data;
        if (b === "$" || b === "$!" || b === "$?") {
          if (p === 0) return d;
          p--;
        } else b === "/$" && p++;
      }
      d = d.previousSibling;
    }
    return null;
  }
  var ku = Math.random().toString(36).slice(2), Ua = "__reactFiber$" + ku, Rp = "__reactProps$" + ku, Ll = "__reactContainer$" + ku, kp = "__reactEvents$" + ku, Yd = "__reactListeners$" + ku, jO = "__reactHandles$" + ku;
  function Ac(d) {
    var p = d[Ua];
    if (p) return p;
    for (var b = d.parentNode; b; ) {
      if (p = b[Ll] || b[Ua]) {
        if (b = p.alternate, p.child !== null || b !== null && b.child !== null) for (d = s0(d); d !== null; ) {
          if (b = d[Ua]) return b;
          d = s0(d);
        }
        return p;
      }
      d = b, b = d.parentNode;
    }
    return null;
  }
  function Qt(d) {
    return d = d[Ua] || d[Ll], !d || d.tag !== 5 && d.tag !== 6 && d.tag !== 13 && d.tag !== 3 ? null : d;
  }
  function ga(d) {
    if (d.tag === 5 || d.tag === 6) return d.stateNode;
    throw Error(n(33));
  }
  function Yr(d) {
    return d[Rp] || null;
  }
  var Hn = [], js = -1;
  function Fs(d) {
    return { current: d };
  }
  function Ir(d) {
    0 > js || (d.current = Hn[js], Hn[js] = null, js--);
  }
  function Xt(d, p) {
    js++, Hn[js] = d.current, d.current = p;
  }
  var wi = {}, no = Fs(wi), Do = Fs(!1), Zi = wi;
  function es(d, p) {
    var b = d.type.contextTypes;
    if (!b) return wi;
    var _ = d.stateNode;
    if (_ && _.__reactInternalMemoizedUnmaskedChildContext === p) return _.__reactInternalMemoizedMaskedChildContext;
    var D = {}, j;
    for (j in b) D[j] = p[j];
    return _ && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = p, d.__reactInternalMemoizedMaskedChildContext = D), D;
  }
  function go(d) {
    return d = d.childContextTypes, d != null;
  }
  function Xd() {
    Ir(Do), Ir(no);
  }
  function a0(d, p, b) {
    if (no.current !== wi) throw Error(n(168));
    Xt(no, p), Xt(Do, b);
  }
  function Pp(d, p, b) {
    var _ = d.stateNode;
    if (p = p.childContextTypes, typeof _.getChildContext != "function") return b;
    _ = _.getChildContext();
    for (var D in _) if (!(D in p)) throw Error(n(108, fe(d) || "Unknown", D));
    return Q({}, b, _);
  }
  function Bo(d) {
    return d = (d = d.stateNode) && d.__reactInternalMemoizedMergedChildContext || wi, Zi = no.current, Xt(no, d), Xt(Do, Do.current), !0;
  }
  function Lm(d, p, b) {
    var _ = d.stateNode;
    if (!_) throw Error(n(169));
    b ? (d = Pp(d, p, Zi), _.__reactInternalMemoizedMergedChildContext = d, Ir(Do), Ir(no), Xt(no, d)) : Ir(Do), Xt(Do, b);
  }
  var Wa = null, Qd = !1, $l = !1;
  function $m(d) {
    Wa === null ? Wa = [d] : Wa.push(d);
  }
  function Pu(d) {
    Qd = !0, $m(d);
  }
  function Ga() {
    if (!$l && Wa !== null) {
      $l = !0;
      var d = 0, p = Jn;
      try {
        var b = Wa;
        for (Jn = 1; d < b.length; d++) {
          var _ = b[d];
          do
            _ = _(!0);
          while (_ !== null);
        }
        Wa = null, Qd = !1;
      } catch (D) {
        throw Wa !== null && (Wa = Wa.slice(d + 1)), Kt(yi, Ga), D;
      } finally {
        Jn = p, $l = !1;
      }
    }
    return null;
  }
  var Mu = [], Iu = 0, Du = null, jl = 0, vo = [], zs = 0, bs = null, qa = 1, Ka = "";
  function Nc(d, p) {
    Mu[Iu++] = jl, Mu[Iu++] = Du, Du = d, jl = p;
  }
  function l0(d, p, b) {
    vo[zs++] = qa, vo[zs++] = Ka, vo[zs++] = bs, bs = d;
    var _ = qa;
    d = Ka;
    var D = 32 - Pi(_) - 1;
    _ &= ~(1 << D), b += 1;
    var j = 32 - Pi(p) + D;
    if (30 < j) {
      var oe = D - D % 5;
      j = (_ & (1 << oe) - 1).toString(32), _ >>= oe, D -= oe, qa = 1 << 32 - Pi(p) + D | b << D | _, Ka = j + d;
    } else qa = 1 << j | b << D | _, Ka = d;
  }
  function jm(d) {
    d.return !== null && (Nc(d, 1), l0(d, 1, 0));
  }
  function Fm(d) {
    for (; d === Du; ) Du = Mu[--Iu], Mu[Iu] = null, jl = Mu[--Iu], Mu[Iu] = null;
    for (; d === bs; ) bs = vo[--zs], vo[zs] = null, Ka = vo[--zs], vo[zs] = null, qa = vo[--zs], vo[zs] = null;
  }
  var ts = null, ns = null, Hr = !1, Bs = null;
  function Ky(d, p) {
    var b = Gs(5, null, null, 0);
    b.elementType = "DELETED", b.stateNode = p, b.return = d, p = d.deletions, p === null ? (d.deletions = [b], d.flags |= 16) : p.push(b);
  }
  function u0(d, p) {
    switch (d.tag) {
      case 5:
        var b = d.type;
        return p = p.nodeType !== 1 || b.toLowerCase() !== p.nodeName.toLowerCase() ? null : p, p !== null ? (d.stateNode = p, ts = d, ns = Va(p.firstChild), !0) : !1;
      case 6:
        return p = d.pendingProps === "" || p.nodeType !== 3 ? null : p, p !== null ? (d.stateNode = p, ts = d, ns = null, !0) : !1;
      case 13:
        return p = p.nodeType !== 8 ? null : p, p !== null ? (b = bs !== null ? { id: qa, overflow: Ka } : null, d.memoizedState = { dehydrated: p, treeContext: b, retryLane: 1073741824 }, b = Gs(18, null, null, 0), b.stateNode = p, b.return = d, d.child = b, ts = d, ns = null, !0) : !1;
      default:
        return !1;
    }
  }
  function Yy(d) {
    return (d.mode & 1) !== 0 && (d.flags & 128) === 0;
  }
  function Xy(d) {
    if (Hr) {
      var p = ns;
      if (p) {
        var b = p;
        if (!u0(d, p)) {
          if (Yy(d)) throw Error(n(418));
          p = Va(b.nextSibling);
          var _ = ts;
          p && u0(d, p) ? Ky(_, b) : (d.flags = d.flags & -4097 | 2, Hr = !1, ts = d);
        }
      } else {
        if (Yy(d)) throw Error(n(418));
        d.flags = d.flags & -4097 | 2, Hr = !1, ts = d;
      }
    }
  }
  function Ao(d) {
    for (d = d.return; d !== null && d.tag !== 5 && d.tag !== 3 && d.tag !== 13; ) d = d.return;
    ts = d;
  }
  function zm(d) {
    if (d !== ts) return !1;
    if (!Hr) return Ao(d), Hr = !0, !1;
    var p;
    if ((p = d.tag !== 3) && !(p = d.tag !== 5) && (p = d.type, p = p !== "head" && p !== "body" && !Dm(d.type, d.memoizedProps)), p && (p = ns)) {
      if (Yy(d)) throw Mp(), Error(n(418));
      for (; p; ) Ky(d, p), p = Va(p.nextSibling);
    }
    if (Ao(d), d.tag === 13) {
      if (d = d.memoizedState, d = d !== null ? d.dehydrated : null, !d) throw Error(n(317));
      e: {
        for (d = d.nextSibling, p = 0; d; ) {
          if (d.nodeType === 8) {
            var b = d.data;
            if (b === "/$") {
              if (p === 0) {
                ns = Va(d.nextSibling);
                break e;
              }
              p--;
            } else b !== "$" && b !== "$!" && b !== "$?" || p++;
          }
          d = d.nextSibling;
        }
        ns = null;
      }
    } else ns = ts ? Va(d.stateNode.nextSibling) : null;
    return !0;
  }
  function Mp() {
    for (var d = ns; d; ) d = Va(d.nextSibling);
  }
  function Au() {
    ns = ts = null, Hr = !1;
  }
  function Fl(d) {
    Bs === null ? Bs = [d] : Bs.push(d);
  }
  var FO = N.ReactCurrentBatchConfig;
  function Lc(d, p, b) {
    if (d = b.ref, d !== null && typeof d != "function" && typeof d != "object") {
      if (b._owner) {
        if (b = b._owner, b) {
          if (b.tag !== 1) throw Error(n(309));
          var _ = b.stateNode;
        }
        if (!_) throw Error(n(147, d));
        var D = _, j = "" + d;
        return p !== null && p.ref !== null && typeof p.ref == "function" && p.ref._stringRef === j ? p.ref : (p = function(oe) {
          var me = D.refs;
          oe === null ? delete me[j] : me[j] = oe;
        }, p._stringRef = j, p);
      }
      if (typeof d != "string") throw Error(n(284));
      if (!b._owner) throw Error(n(290, d));
    }
    return d;
  }
  function Bm(d, p) {
    throw d = Object.prototype.toString.call(p), Error(n(31, d === "[object Object]" ? "object with keys {" + Object.keys(p).join(", ") + "}" : d));
  }
  function c0(d) {
    var p = d._init;
    return p(d._payload);
  }
  function $c(d) {
    function p(ke, Ee) {
      if (d) {
        var Ae = ke.deletions;
        Ae === null ? (ke.deletions = [Ee], ke.flags |= 16) : Ae.push(Ee);
      }
    }
    function b(ke, Ee) {
      if (!d) return null;
      for (; Ee !== null; ) p(ke, Ee), Ee = Ee.sibling;
      return null;
    }
    function _(ke, Ee) {
      for (ke = /* @__PURE__ */ new Map(); Ee !== null; ) Ee.key !== null ? ke.set(Ee.key, Ee) : ke.set(Ee.index, Ee), Ee = Ee.sibling;
      return ke;
    }
    function D(ke, Ee) {
      return ke = Hu(ke, Ee), ke.index = 0, ke.sibling = null, ke;
    }
    function j(ke, Ee, Ae) {
      return ke.index = Ae, d ? (Ae = ke.alternate, Ae !== null ? (Ae = Ae.index, Ae < Ee ? (ke.flags |= 2, Ee) : Ae) : (ke.flags |= 2, Ee)) : (ke.flags |= 1048576, Ee);
    }
    function oe(ke) {
      return d && ke.alternate === null && (ke.flags |= 2), ke;
    }
    function me(ke, Ee, Ae, lt) {
      return Ee === null || Ee.tag !== 6 ? (Ee = Ob(Ae, ke.mode, lt), Ee.return = ke, Ee) : (Ee = D(Ee, Ae), Ee.return = ke, Ee);
    }
    function Se(ke, Ee, Ae, lt) {
      var Vt = Ae.type;
      return Vt === H ? at(ke, Ee, Ae.props.children, lt, Ae.key) : Ee !== null && (Ee.elementType === Vt || typeof Vt == "object" && Vt !== null && Vt.$$typeof === K && c0(Vt) === Ee.type) ? (lt = D(Ee, Ae.props), lt.ref = Lc(ke, Ee, Ae), lt.return = ke, lt) : (lt = ah(Ae.type, Ae.key, Ae.props, null, ke.mode, lt), lt.ref = Lc(ke, Ee, Ae), lt.return = ke, lt);
    }
    function Fe(ke, Ee, Ae, lt) {
      return Ee === null || Ee.tag !== 4 || Ee.stateNode.containerInfo !== Ae.containerInfo || Ee.stateNode.implementation !== Ae.implementation ? (Ee = wg(Ae, ke.mode, lt), Ee.return = ke, Ee) : (Ee = D(Ee, Ae.children || []), Ee.return = ke, Ee);
    }
    function at(ke, Ee, Ae, lt, Vt) {
      return Ee === null || Ee.tag !== 7 ? (Ee = Wl(Ae, ke.mode, lt, Vt), Ee.return = ke, Ee) : (Ee = D(Ee, Ae), Ee.return = ke, Ee);
    }
    function ct(ke, Ee, Ae) {
      if (typeof Ee == "string" && Ee !== "" || typeof Ee == "number") return Ee = Ob("" + Ee, ke.mode, Ae), Ee.return = ke, Ee;
      if (typeof Ee == "object" && Ee !== null) {
        switch (Ee.$$typeof) {
          case P:
            return Ae = ah(Ee.type, Ee.key, Ee.props, null, ke.mode, Ae), Ae.ref = Lc(ke, null, Ee), Ae.return = ke, Ae;
          case F:
            return Ee = wg(Ee, ke.mode, Ae), Ee.return = ke, Ee;
          case K:
            var lt = Ee._init;
            return ct(ke, lt(Ee._payload), Ae);
        }
        if (wt(Ee) || re(Ee)) return Ee = Wl(Ee, ke.mode, Ae, null), Ee.return = ke, Ee;
        Bm(ke, Ee);
      }
      return null;
    }
    function st(ke, Ee, Ae, lt) {
      var Vt = Ee !== null ? Ee.key : null;
      if (typeof Ae == "string" && Ae !== "" || typeof Ae == "number") return Vt !== null ? null : me(ke, Ee, "" + Ae, lt);
      if (typeof Ae == "object" && Ae !== null) {
        switch (Ae.$$typeof) {
          case P:
            return Ae.key === Vt ? Se(ke, Ee, Ae, lt) : null;
          case F:
            return Ae.key === Vt ? Fe(ke, Ee, Ae, lt) : null;
          case K:
            return Vt = Ae._init, st(
              ke,
              Ee,
              Vt(Ae._payload),
              lt
            );
        }
        if (wt(Ae) || re(Ae)) return Vt !== null ? null : at(ke, Ee, Ae, lt, null);
        Bm(ke, Ae);
      }
      return null;
    }
    function Mt(ke, Ee, Ae, lt, Vt) {
      if (typeof lt == "string" && lt !== "" || typeof lt == "number") return ke = ke.get(Ae) || null, me(Ee, ke, "" + lt, Vt);
      if (typeof lt == "object" && lt !== null) {
        switch (lt.$$typeof) {
          case P:
            return ke = ke.get(lt.key === null ? Ae : lt.key) || null, Se(Ee, ke, lt, Vt);
          case F:
            return ke = ke.get(lt.key === null ? Ae : lt.key) || null, Fe(Ee, ke, lt, Vt);
          case K:
            var rn = lt._init;
            return Mt(ke, Ee, Ae, rn(lt._payload), Vt);
        }
        if (wt(lt) || re(lt)) return ke = ke.get(Ae) || null, at(Ee, ke, lt, Vt, null);
        Bm(Ee, lt);
      }
      return null;
    }
    function Ht(ke, Ee, Ae, lt) {
      for (var Vt = null, rn = null, sn = Ee, hn = Ee = 0, Uo = null; sn !== null && hn < Ae.length; hn++) {
        sn.index > hn ? (Uo = sn, sn = null) : Uo = sn.sibling;
        var tr = st(ke, sn, Ae[hn], lt);
        if (tr === null) {
          sn === null && (sn = Uo);
          break;
        }
        d && sn && tr.alternate === null && p(ke, sn), Ee = j(tr, Ee, hn), rn === null ? Vt = tr : rn.sibling = tr, rn = tr, sn = Uo;
      }
      if (hn === Ae.length) return b(ke, sn), Hr && Nc(ke, hn), Vt;
      if (sn === null) {
        for (; hn < Ae.length; hn++) sn = ct(ke, Ae[hn], lt), sn !== null && (Ee = j(sn, Ee, hn), rn === null ? Vt = sn : rn.sibling = sn, rn = sn);
        return Hr && Nc(ke, hn), Vt;
      }
      for (sn = _(ke, sn); hn < Ae.length; hn++) Uo = Mt(sn, ke, hn, Ae[hn], lt), Uo !== null && (d && Uo.alternate !== null && sn.delete(Uo.key === null ? hn : Uo.key), Ee = j(Uo, Ee, hn), rn === null ? Vt = Uo : rn.sibling = Uo, rn = Uo);
      return d && sn.forEach(function(Wu) {
        return p(ke, Wu);
      }), Hr && Nc(ke, hn), Vt;
    }
    function Gt(ke, Ee, Ae, lt) {
      var Vt = re(Ae);
      if (typeof Vt != "function") throw Error(n(150));
      if (Ae = Vt.call(Ae), Ae == null) throw Error(n(151));
      for (var rn = Vt = null, sn = Ee, hn = Ee = 0, Uo = null, tr = Ae.next(); sn !== null && !tr.done; hn++, tr = Ae.next()) {
        sn.index > hn ? (Uo = sn, sn = null) : Uo = sn.sibling;
        var Wu = st(ke, sn, tr.value, lt);
        if (Wu === null) {
          sn === null && (sn = Uo);
          break;
        }
        d && sn && Wu.alternate === null && p(ke, sn), Ee = j(Wu, Ee, hn), rn === null ? Vt = Wu : rn.sibling = Wu, rn = Wu, sn = Uo;
      }
      if (tr.done) return b(
        ke,
        sn
      ), Hr && Nc(ke, hn), Vt;
      if (sn === null) {
        for (; !tr.done; hn++, tr = Ae.next()) tr = ct(ke, tr.value, lt), tr !== null && (Ee = j(tr, Ee, hn), rn === null ? Vt = tr : rn.sibling = tr, rn = tr);
        return Hr && Nc(ke, hn), Vt;
      }
      for (sn = _(ke, sn); !tr.done; hn++, tr = Ae.next()) tr = Mt(sn, ke, hn, tr.value, lt), tr !== null && (d && tr.alternate !== null && sn.delete(tr.key === null ? hn : tr.key), Ee = j(tr, Ee, hn), rn === null ? Vt = tr : rn.sibling = tr, rn = tr);
      return d && sn.forEach(function(G0) {
        return p(ke, G0);
      }), Hr && Nc(ke, hn), Vt;
    }
    function uo(ke, Ee, Ae, lt) {
      if (typeof Ae == "object" && Ae !== null && Ae.type === H && Ae.key === null && (Ae = Ae.props.children), typeof Ae == "object" && Ae !== null) {
        switch (Ae.$$typeof) {
          case P:
            e: {
              for (var Vt = Ae.key, rn = Ee; rn !== null; ) {
                if (rn.key === Vt) {
                  if (Vt = Ae.type, Vt === H) {
                    if (rn.tag === 7) {
                      b(ke, rn.sibling), Ee = D(rn, Ae.props.children), Ee.return = ke, ke = Ee;
                      break e;
                    }
                  } else if (rn.elementType === Vt || typeof Vt == "object" && Vt !== null && Vt.$$typeof === K && c0(Vt) === rn.type) {
                    b(ke, rn.sibling), Ee = D(rn, Ae.props), Ee.ref = Lc(ke, rn, Ae), Ee.return = ke, ke = Ee;
                    break e;
                  }
                  b(ke, rn);
                  break;
                } else p(ke, rn);
                rn = rn.sibling;
              }
              Ae.type === H ? (Ee = Wl(Ae.props.children, ke.mode, lt, Ae.key), Ee.return = ke, ke = Ee) : (lt = ah(Ae.type, Ae.key, Ae.props, null, ke.mode, lt), lt.ref = Lc(ke, Ee, Ae), lt.return = ke, ke = lt);
            }
            return oe(ke);
          case F:
            e: {
              for (rn = Ae.key; Ee !== null; ) {
                if (Ee.key === rn) if (Ee.tag === 4 && Ee.stateNode.containerInfo === Ae.containerInfo && Ee.stateNode.implementation === Ae.implementation) {
                  b(ke, Ee.sibling), Ee = D(Ee, Ae.children || []), Ee.return = ke, ke = Ee;
                  break e;
                } else {
                  b(ke, Ee);
                  break;
                }
                else p(ke, Ee);
                Ee = Ee.sibling;
              }
              Ee = wg(Ae, ke.mode, lt), Ee.return = ke, ke = Ee;
            }
            return oe(ke);
          case K:
            return rn = Ae._init, uo(ke, Ee, rn(Ae._payload), lt);
        }
        if (wt(Ae)) return Ht(ke, Ee, Ae, lt);
        if (re(Ae)) return Gt(ke, Ee, Ae, lt);
        Bm(ke, Ae);
      }
      return typeof Ae == "string" && Ae !== "" || typeof Ae == "number" ? (Ae = "" + Ae, Ee !== null && Ee.tag === 6 ? (b(ke, Ee.sibling), Ee = D(Ee, Ae), Ee.return = ke, ke = Ee) : (b(ke, Ee), Ee = Ob(Ae, ke.mode, lt), Ee.return = ke, ke = Ee), oe(ke)) : b(ke, Ee);
    }
    return uo;
  }
  var io = $c(!0), Rt = $c(!1), ws = Fs(null), rs = null, Jd = null, Qy = null;
  function Jy() {
    Qy = Jd = rs = null;
  }
  function Zy(d) {
    var p = ws.current;
    Ir(ws), d._currentValue = p;
  }
  function eb(d, p, b) {
    for (; d !== null; ) {
      var _ = d.alternate;
      if ((d.childLanes & p) !== p ? (d.childLanes |= p, _ !== null && (_.childLanes |= p)) : _ !== null && (_.childLanes & p) !== p && (_.childLanes |= p), d === b) break;
      d = d.return;
    }
  }
  function Xr(d, p) {
    rs = d, Qy = Jd = null, d = d.dependencies, d !== null && d.firstContext !== null && (d.lanes & p && (bo = !0), d.firstContext = null);
  }
  function Hs(d) {
    var p = d._currentValue;
    if (Qy !== d) if (d = { context: d, memoizedValue: p, next: null }, Jd === null) {
      if (rs === null) throw Error(n(308));
      Jd = d, rs.dependencies = { lanes: 0, firstContext: d };
    } else Jd = Jd.next = d;
    return p;
  }
  var jc = null;
  function tb(d) {
    jc === null ? jc = [d] : jc.push(d);
  }
  function nb(d, p, b, _) {
    var D = p.interleaved;
    return D === null ? (b.next = b, tb(p)) : (b.next = D.next, D.next = b), p.interleaved = b, Ss(d, _);
  }
  function Ss(d, p) {
    d.lanes |= p;
    var b = d.alternate;
    for (b !== null && (b.lanes |= p), b = d, d = d.return; d !== null; ) d.childLanes |= p, b = d.alternate, b !== null && (b.childLanes |= p), b = d, d = d.return;
    return b.tag === 3 ? b.stateNode : null;
  }
  var Cs = !1;
  function rb(d) {
    d.updateQueue = { baseState: d.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function d0(d, p) {
    d = d.updateQueue, p.updateQueue === d && (p.updateQueue = { baseState: d.baseState, firstBaseUpdate: d.firstBaseUpdate, lastBaseUpdate: d.lastBaseUpdate, shared: d.shared, effects: d.effects });
  }
  function zl(d, p) {
    return { eventTime: d, lane: p, tag: 0, payload: null, callback: null, next: null };
  }
  function Nu(d, p, b) {
    var _ = d.updateQueue;
    if (_ === null) return null;
    if (_ = _.shared, Vn & 2) {
      var D = _.pending;
      return D === null ? p.next = p : (p.next = D.next, D.next = p), _.pending = p, Ss(d, b);
    }
    return D = _.interleaved, D === null ? (p.next = p, tb(_)) : (p.next = D.next, D.next = p), _.interleaved = p, Ss(d, b);
  }
  function Hm(d, p, b) {
    if (p = p.updateQueue, p !== null && (p = p.shared, (b & 4194240) !== 0)) {
      var _ = p.lanes;
      _ &= d.pendingLanes, b |= _, p.lanes = b, Ml(d, b);
    }
  }
  function f0(d, p) {
    var b = d.updateQueue, _ = d.alternate;
    if (_ !== null && (_ = _.updateQueue, b === _)) {
      var D = null, j = null;
      if (b = b.firstBaseUpdate, b !== null) {
        do {
          var oe = { eventTime: b.eventTime, lane: b.lane, tag: b.tag, payload: b.payload, callback: b.callback, next: null };
          j === null ? D = j = oe : j = j.next = oe, b = b.next;
        } while (b !== null);
        j === null ? D = j = p : j = j.next = p;
      } else D = j = p;
      b = { baseState: _.baseState, firstBaseUpdate: D, lastBaseUpdate: j, shared: _.shared, effects: _.effects }, d.updateQueue = b;
      return;
    }
    d = b.lastBaseUpdate, d === null ? b.firstBaseUpdate = p : d.next = p, b.lastBaseUpdate = p;
  }
  function Ip(d, p, b, _) {
    var D = d.updateQueue;
    Cs = !1;
    var j = D.firstBaseUpdate, oe = D.lastBaseUpdate, me = D.shared.pending;
    if (me !== null) {
      D.shared.pending = null;
      var Se = me, Fe = Se.next;
      Se.next = null, oe === null ? j = Fe : oe.next = Fe, oe = Se;
      var at = d.alternate;
      at !== null && (at = at.updateQueue, me = at.lastBaseUpdate, me !== oe && (me === null ? at.firstBaseUpdate = Fe : me.next = Fe, at.lastBaseUpdate = Se));
    }
    if (j !== null) {
      var ct = D.baseState;
      oe = 0, at = Fe = Se = null, me = j;
      do {
        var st = me.lane, Mt = me.eventTime;
        if ((_ & st) === st) {
          at !== null && (at = at.next = {
            eventTime: Mt,
            lane: 0,
            tag: me.tag,
            payload: me.payload,
            callback: me.callback,
            next: null
          });
          e: {
            var Ht = d, Gt = me;
            switch (st = p, Mt = b, Gt.tag) {
              case 1:
                if (Ht = Gt.payload, typeof Ht == "function") {
                  ct = Ht.call(Mt, ct, st);
                  break e;
                }
                ct = Ht;
                break e;
              case 3:
                Ht.flags = Ht.flags & -65537 | 128;
              case 0:
                if (Ht = Gt.payload, st = typeof Ht == "function" ? Ht.call(Mt, ct, st) : Ht, st == null) break e;
                ct = Q({}, ct, st);
                break e;
              case 2:
                Cs = !0;
            }
          }
          me.callback !== null && me.lane !== 0 && (d.flags |= 64, st = D.effects, st === null ? D.effects = [me] : st.push(me));
        } else Mt = { eventTime: Mt, lane: st, tag: me.tag, payload: me.payload, callback: me.callback, next: null }, at === null ? (Fe = at = Mt, Se = ct) : at = at.next = Mt, oe |= st;
        if (me = me.next, me === null) {
          if (me = D.shared.pending, me === null) break;
          st = me, me = st.next, st.next = null, D.lastBaseUpdate = st, D.shared.pending = null;
        }
      } while (!0);
      if (at === null && (Se = ct), D.baseState = Se, D.firstBaseUpdate = Fe, D.lastBaseUpdate = at, p = D.shared.interleaved, p !== null) {
        D = p;
        do
          oe |= D.lane, D = D.next;
        while (D !== p);
      } else j === null && (D.shared.lanes = 0);
      Za |= oe, d.lanes = oe, d.memoizedState = ct;
    }
  }
  function ob(d, p, b) {
    if (d = p.effects, p.effects = null, d !== null) for (p = 0; p < d.length; p++) {
      var _ = d[p], D = _.callback;
      if (D !== null) {
        if (_.callback = null, _ = b, typeof D != "function") throw Error(n(191, D));
        D.call(_);
      }
    }
  }
  var Dp = {}, Ya = Fs(Dp), Ap = Fs(Dp), Np = Fs(Dp);
  function Fc(d) {
    if (d === Dp) throw Error(n(174));
    return d;
  }
  function ib(d, p) {
    switch (Xt(Np, p), Xt(Ap, d), Xt(Ya, Dp), d = p.nodeType, d) {
      case 9:
      case 11:
        p = (p = p.documentElement) ? p.namespaceURI : At(null, "");
        break;
      default:
        d = d === 8 ? p.parentNode : p, p = d.namespaceURI || null, d = d.tagName, p = At(p, d);
    }
    Ir(Ya), Xt(Ya, p);
  }
  function zc() {
    Ir(Ya), Ir(Ap), Ir(Np);
  }
  function p0(d) {
    Fc(Np.current);
    var p = Fc(Ya.current), b = At(p, d.type);
    p !== b && (Xt(Ap, d), Xt(Ya, b));
  }
  function Vm(d) {
    Ap.current === d && (Ir(Ya), Ir(Ap));
  }
  var Qr = Fs(0);
  function Um(d) {
    for (var p = d; p !== null; ) {
      if (p.tag === 13) {
        var b = p.memoizedState;
        if (b !== null && (b = b.dehydrated, b === null || b.data === "$?" || b.data === "$!")) return p;
      } else if (p.tag === 19 && p.memoizedProps.revealOrder !== void 0) {
        if (p.flags & 128) return p;
      } else if (p.child !== null) {
        p.child.return = p, p = p.child;
        continue;
      }
      if (p === d) break;
      for (; p.sibling === null; ) {
        if (p.return === null || p.return === d) return null;
        p = p.return;
      }
      p.sibling.return = p.return, p = p.sibling;
    }
    return null;
  }
  var Lp = [];
  function Jt() {
    for (var d = 0; d < Lp.length; d++) Lp[d]._workInProgressVersionPrimary = null;
    Lp.length = 0;
  }
  var kn = N.ReactCurrentDispatcher, Zn = N.ReactCurrentBatchConfig, yr = 0, er = null, yo = null, Ho = null, Wm = !1, $p = !1, Bc = 0, it = 0;
  function Xn() {
    throw Error(n(321));
  }
  function ln(d, p) {
    if (p === null) return !1;
    for (var b = 0; b < p.length && b < d.length; b++) if (!ma(d[b], p[b])) return !1;
    return !0;
  }
  function Lu(d, p, b, _, D, j) {
    if (yr = j, er = p, p.memoizedState = null, p.updateQueue = null, p.lanes = 0, kn.current = d === null || d.memoizedState === null ? sg : Vp, d = b(_, D), $p) {
      j = 0;
      do {
        if ($p = !1, Bc = 0, 25 <= j) throw Error(n(301));
        j += 1, Ho = yo = null, p.updateQueue = null, kn.current = ag, d = b(_, D);
      } while ($p);
    }
    if (kn.current = Gc, p = yo !== null && yo.next !== null, yr = 0, Ho = yo = er = null, Wm = !1, p) throw Error(n(300));
    return d;
  }
  function va() {
    var d = Bc !== 0;
    return Bc = 0, d;
  }
  function Si() {
    var d = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return Ho === null ? er.memoizedState = Ho = d : Ho = Ho.next = d, Ho;
  }
  function so() {
    if (yo === null) {
      var d = er.alternate;
      d = d !== null ? d.memoizedState : null;
    } else d = yo.next;
    var p = Ho === null ? er.memoizedState : Ho.next;
    if (p !== null) Ho = p, yo = d;
    else {
      if (d === null) throw Error(n(310));
      yo = d, d = { memoizedState: yo.memoizedState, baseState: yo.baseState, baseQueue: yo.baseQueue, queue: yo.queue, next: null }, Ho === null ? er.memoizedState = Ho = d : Ho = Ho.next = d;
    }
    return Ho;
  }
  function Bl(d, p) {
    return typeof p == "function" ? p(d) : p;
  }
  function $u(d) {
    var p = so(), b = p.queue;
    if (b === null) throw Error(n(311));
    b.lastRenderedReducer = d;
    var _ = yo, D = _.baseQueue, j = b.pending;
    if (j !== null) {
      if (D !== null) {
        var oe = D.next;
        D.next = j.next, j.next = oe;
      }
      _.baseQueue = D = j, b.pending = null;
    }
    if (D !== null) {
      j = D.next, _ = _.baseState;
      var me = oe = null, Se = null, Fe = j;
      do {
        var at = Fe.lane;
        if ((yr & at) === at) Se !== null && (Se = Se.next = { lane: 0, action: Fe.action, hasEagerState: Fe.hasEagerState, eagerState: Fe.eagerState, next: null }), _ = Fe.hasEagerState ? Fe.eagerState : d(_, Fe.action);
        else {
          var ct = {
            lane: at,
            action: Fe.action,
            hasEagerState: Fe.hasEagerState,
            eagerState: Fe.eagerState,
            next: null
          };
          Se === null ? (me = Se = ct, oe = _) : Se = Se.next = ct, er.lanes |= at, Za |= at;
        }
        Fe = Fe.next;
      } while (Fe !== null && Fe !== j);
      Se === null ? oe = _ : Se.next = me, ma(_, p.memoizedState) || (bo = !0), p.memoizedState = _, p.baseState = oe, p.baseQueue = Se, b.lastRenderedState = _;
    }
    if (d = b.interleaved, d !== null) {
      D = d;
      do
        j = D.lane, er.lanes |= j, Za |= j, D = D.next;
      while (D !== d);
    } else D === null && (b.lanes = 0);
    return [p.memoizedState, b.dispatch];
  }
  function Hc(d) {
    var p = so(), b = p.queue;
    if (b === null) throw Error(n(311));
    b.lastRenderedReducer = d;
    var _ = b.dispatch, D = b.pending, j = p.memoizedState;
    if (D !== null) {
      b.pending = null;
      var oe = D = D.next;
      do
        j = d(j, oe.action), oe = oe.next;
      while (oe !== D);
      ma(j, p.memoizedState) || (bo = !0), p.memoizedState = j, p.baseQueue === null && (p.baseState = j), b.lastRenderedState = j;
    }
    return [j, _];
  }
  function Gm() {
  }
  function qm(d, p) {
    var b = er, _ = so(), D = p(), j = !ma(_.memoizedState, D);
    if (j && (_.memoizedState = D, bo = !0), _ = _.queue, jp(Xm.bind(null, b, _, d), [d]), _.getSnapshot !== p || j || Ho !== null && Ho.memoizedState.tag & 1) {
      if (b.flags |= 2048, Vc(9, Ym.bind(null, b, _, D, p), void 0, null), No === null) throw Error(n(349));
      yr & 30 || Km(b, p, D);
    }
    return D;
  }
  function Km(d, p, b) {
    d.flags |= 16384, d = { getSnapshot: p, value: b }, p = er.updateQueue, p === null ? (p = { lastEffect: null, stores: null }, er.updateQueue = p, p.stores = [d]) : (b = p.stores, b === null ? p.stores = [d] : b.push(d));
  }
  function Ym(d, p, b, _) {
    p.value = b, p.getSnapshot = _, Qm(p) && Jm(d);
  }
  function Xm(d, p, b) {
    return b(function() {
      Qm(p) && Jm(d);
    });
  }
  function Qm(d) {
    var p = d.getSnapshot;
    d = d.value;
    try {
      var b = p();
      return !ma(d, b);
    } catch {
      return !0;
    }
  }
  function Jm(d) {
    var p = Ss(d, 1);
    p !== null && Li(p, d, 1, -1);
  }
  function Zm(d) {
    var p = Si();
    return typeof d == "function" && (d = d()), p.memoizedState = p.baseState = d, d = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Bl, lastRenderedState: d }, p.queue = d, d = d.dispatch = Wc.bind(null, er, d), [p.memoizedState, d];
  }
  function Vc(d, p, b, _) {
    return d = { tag: d, create: p, destroy: b, deps: _, next: null }, p = er.updateQueue, p === null ? (p = { lastEffect: null, stores: null }, er.updateQueue = p, p.lastEffect = d.next = d) : (b = p.lastEffect, b === null ? p.lastEffect = d.next = d : (_ = b.next, b.next = d, d.next = _, p.lastEffect = d)), d;
  }
  function eg() {
    return so().memoizedState;
  }
  function Zd(d, p, b, _) {
    var D = Si();
    er.flags |= d, D.memoizedState = Vc(1 | p, b, void 0, _ === void 0 ? null : _);
  }
  function ef(d, p, b, _) {
    var D = so();
    _ = _ === void 0 ? null : _;
    var j = void 0;
    if (yo !== null) {
      var oe = yo.memoizedState;
      if (j = oe.destroy, _ !== null && ln(_, oe.deps)) {
        D.memoizedState = Vc(p, b, j, _);
        return;
      }
    }
    er.flags |= d, D.memoizedState = Vc(1 | p, b, j, _);
  }
  function tg(d, p) {
    return Zd(8390656, 8, d, p);
  }
  function jp(d, p) {
    return ef(2048, 8, d, p);
  }
  function ng(d, p) {
    return ef(4, 2, d, p);
  }
  function Fp(d, p) {
    return ef(4, 4, d, p);
  }
  function Uc(d, p) {
    if (typeof p == "function") return d = d(), p(d), function() {
      p(null);
    };
    if (p != null) return d = d(), p.current = d, function() {
      p.current = null;
    };
  }
  function rg(d, p, b) {
    return b = b != null ? b.concat([d]) : null, ef(4, 4, Uc.bind(null, p, d), b);
  }
  function zp() {
  }
  function og(d, p) {
    var b = so();
    p = p === void 0 ? null : p;
    var _ = b.memoizedState;
    return _ !== null && p !== null && ln(p, _[1]) ? _[0] : (b.memoizedState = [d, p], d);
  }
  function ig(d, p) {
    var b = so();
    p = p === void 0 ? null : p;
    var _ = b.memoizedState;
    return _ !== null && p !== null && ln(p, _[1]) ? _[0] : (d = d(), b.memoizedState = [d, p], d);
  }
  function sb(d, p, b) {
    return yr & 21 ? (ma(b, p) || (b = Dd(), er.lanes |= b, Za |= b, d.baseState = !0), p) : (d.baseState && (d.baseState = !1, bo = !0), d.memoizedState = b);
  }
  function Bp(d, p) {
    var b = Jn;
    Jn = b !== 0 && 4 > b ? b : 4, d(!0);
    var _ = Zn.transition;
    Zn.transition = {};
    try {
      d(!1), p();
    } finally {
      Jn = b, Zn.transition = _;
    }
  }
  function ab() {
    return so().memoizedState;
  }
  function Hp(d, p, b) {
    var _ = el(d);
    if (b = { lane: _, action: b, hasEagerState: !1, eagerState: null, next: null }, os(d)) h0(p, b);
    else if (b = nb(d, p, b, _), b !== null) {
      var D = Co();
      Li(b, d, _, D), Rr(b, p, _);
    }
  }
  function Wc(d, p, b) {
    var _ = el(d), D = { lane: _, action: b, hasEagerState: !1, eagerState: null, next: null };
    if (os(d)) h0(p, D);
    else {
      var j = d.alternate;
      if (d.lanes === 0 && (j === null || j.lanes === 0) && (j = p.lastRenderedReducer, j !== null)) try {
        var oe = p.lastRenderedState, me = j(oe, b);
        if (D.hasEagerState = !0, D.eagerState = me, ma(me, oe)) {
          var Se = p.interleaved;
          Se === null ? (D.next = D, tb(p)) : (D.next = Se.next, Se.next = D), p.interleaved = D;
          return;
        }
      } catch {
      } finally {
      }
      b = nb(d, p, D, _), b !== null && (D = Co(), Li(b, d, _, D), Rr(b, p, _));
    }
  }
  function os(d) {
    var p = d.alternate;
    return d === er || p !== null && p === er;
  }
  function h0(d, p) {
    $p = Wm = !0;
    var b = d.pending;
    b === null ? p.next = p : (p.next = b.next, b.next = p), d.pending = p;
  }
  function Rr(d, p, b) {
    if (b & 4194240) {
      var _ = p.lanes;
      _ &= d.pendingLanes, b |= _, p.lanes = b, Ml(d, b);
    }
  }
  var Gc = { readContext: Hs, useCallback: Xn, useContext: Xn, useEffect: Xn, useImperativeHandle: Xn, useInsertionEffect: Xn, useLayoutEffect: Xn, useMemo: Xn, useReducer: Xn, useRef: Xn, useState: Xn, useDebugValue: Xn, useDeferredValue: Xn, useTransition: Xn, useMutableSource: Xn, useSyncExternalStore: Xn, useId: Xn, unstable_isNewReconciler: !1 }, sg = { readContext: Hs, useCallback: function(d, p) {
    return Si().memoizedState = [d, p === void 0 ? null : p], d;
  }, useContext: Hs, useEffect: tg, useImperativeHandle: function(d, p, b) {
    return b = b != null ? b.concat([d]) : null, Zd(
      4194308,
      4,
      Uc.bind(null, p, d),
      b
    );
  }, useLayoutEffect: function(d, p) {
    return Zd(4194308, 4, d, p);
  }, useInsertionEffect: function(d, p) {
    return Zd(4, 2, d, p);
  }, useMemo: function(d, p) {
    var b = Si();
    return p = p === void 0 ? null : p, d = d(), b.memoizedState = [d, p], d;
  }, useReducer: function(d, p, b) {
    var _ = Si();
    return p = b !== void 0 ? b(p) : p, _.memoizedState = _.baseState = p, d = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: d, lastRenderedState: p }, _.queue = d, d = d.dispatch = Hp.bind(null, er, d), [_.memoizedState, d];
  }, useRef: function(d) {
    var p = Si();
    return d = { current: d }, p.memoizedState = d;
  }, useState: Zm, useDebugValue: zp, useDeferredValue: function(d) {
    return Si().memoizedState = d;
  }, useTransition: function() {
    var d = Zm(!1), p = d[0];
    return d = Bp.bind(null, d[1]), Si().memoizedState = d, [p, d];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(d, p, b) {
    var _ = er, D = Si();
    if (Hr) {
      if (b === void 0) throw Error(n(407));
      b = b();
    } else {
      if (b = p(), No === null) throw Error(n(349));
      yr & 30 || Km(_, p, b);
    }
    D.memoizedState = b;
    var j = { value: b, getSnapshot: p };
    return D.queue = j, tg(Xm.bind(
      null,
      _,
      j,
      d
    ), [d]), _.flags |= 2048, Vc(9, Ym.bind(null, _, j, b, p), void 0, null), b;
  }, useId: function() {
    var d = Si(), p = No.identifierPrefix;
    if (Hr) {
      var b = Ka, _ = qa;
      b = (_ & ~(1 << 32 - Pi(_) - 1)).toString(32) + b, p = ":" + p + "R" + b, b = Bc++, 0 < b && (p += "H" + b.toString(32)), p += ":";
    } else b = it++, p = ":" + p + "r" + b.toString(32) + ":";
    return d.memoizedState = p;
  }, unstable_isNewReconciler: !1 }, Vp = {
    readContext: Hs,
    useCallback: og,
    useContext: Hs,
    useEffect: jp,
    useImperativeHandle: rg,
    useInsertionEffect: ng,
    useLayoutEffect: Fp,
    useMemo: ig,
    useReducer: $u,
    useRef: eg,
    useState: function() {
      return $u(Bl);
    },
    useDebugValue: zp,
    useDeferredValue: function(d) {
      var p = so();
      return sb(p, yo.memoizedState, d);
    },
    useTransition: function() {
      var d = $u(Bl)[0], p = so().memoizedState;
      return [d, p];
    },
    useMutableSource: Gm,
    useSyncExternalStore: qm,
    useId: ab,
    unstable_isNewReconciler: !1
  }, ag = { readContext: Hs, useCallback: og, useContext: Hs, useEffect: jp, useImperativeHandle: rg, useInsertionEffect: ng, useLayoutEffect: Fp, useMemo: ig, useReducer: Hc, useRef: eg, useState: function() {
    return Hc(Bl);
  }, useDebugValue: zp, useDeferredValue: function(d) {
    var p = so();
    return yo === null ? p.memoizedState = d : sb(p, yo.memoizedState, d);
  }, useTransition: function() {
    var d = Hc(Bl)[0], p = so().memoizedState;
    return [d, p];
  }, useMutableSource: Gm, useSyncExternalStore: qm, useId: ab, unstable_isNewReconciler: !1 };
  function ya(d, p) {
    if (d && d.defaultProps) {
      p = Q({}, p), d = d.defaultProps;
      for (var b in d) p[b] === void 0 && (p[b] = d[b]);
      return p;
    }
    return p;
  }
  function lb(d, p, b, _) {
    p = d.memoizedState, b = b(_, p), b = b == null ? p : Q({}, p, b), d.memoizedState = b, d.lanes === 0 && (d.updateQueue.baseState = b);
  }
  var lg = { isMounted: function(d) {
    return (d = d._reactInternals) ? dn(d) === d : !1;
  }, enqueueSetState: function(d, p, b) {
    d = d._reactInternals;
    var _ = Co(), D = el(d), j = zl(_, D);
    j.payload = p, b != null && (j.callback = b), p = Nu(d, j, D), p !== null && (Li(p, d, D, _), Hm(p, d, D));
  }, enqueueReplaceState: function(d, p, b) {
    d = d._reactInternals;
    var _ = Co(), D = el(d), j = zl(_, D);
    j.tag = 1, j.payload = p, b != null && (j.callback = b), p = Nu(d, j, D), p !== null && (Li(p, d, D, _), Hm(p, d, D));
  }, enqueueForceUpdate: function(d, p) {
    d = d._reactInternals;
    var b = Co(), _ = el(d), D = zl(b, _);
    D.tag = 2, p != null && (D.callback = p), p = Nu(d, D, _), p !== null && (Li(p, d, _, b), Hm(p, d, _));
  } };
  function m0(d, p, b, _, D, j, oe) {
    return d = d.stateNode, typeof d.shouldComponentUpdate == "function" ? d.shouldComponentUpdate(_, j, oe) : p.prototype && p.prototype.isPureReactComponent ? !Cp(b, _) || !Cp(D, j) : !0;
  }
  function ug(d, p, b) {
    var _ = !1, D = wi, j = p.contextType;
    return typeof j == "object" && j !== null ? j = Hs(j) : (D = go(p) ? Zi : no.current, _ = p.contextTypes, j = (_ = _ != null) ? es(d, D) : wi), p = new p(b, j), d.memoizedState = p.state !== null && p.state !== void 0 ? p.state : null, p.updater = lg, d.stateNode = p, p._reactInternals = d, _ && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = D, d.__reactInternalMemoizedMaskedChildContext = j), p;
  }
  function g0(d, p, b, _) {
    d = p.state, typeof p.componentWillReceiveProps == "function" && p.componentWillReceiveProps(b, _), typeof p.UNSAFE_componentWillReceiveProps == "function" && p.UNSAFE_componentWillReceiveProps(b, _), p.state !== d && lg.enqueueReplaceState(p, p.state, null);
  }
  function Up(d, p, b, _) {
    var D = d.stateNode;
    D.props = b, D.state = d.memoizedState, D.refs = {}, rb(d);
    var j = p.contextType;
    typeof j == "object" && j !== null ? D.context = Hs(j) : (j = go(p) ? Zi : no.current, D.context = es(d, j)), D.state = d.memoizedState, j = p.getDerivedStateFromProps, typeof j == "function" && (lb(d, p, j, b), D.state = d.memoizedState), typeof p.getDerivedStateFromProps == "function" || typeof D.getSnapshotBeforeUpdate == "function" || typeof D.UNSAFE_componentWillMount != "function" && typeof D.componentWillMount != "function" || (p = D.state, typeof D.componentWillMount == "function" && D.componentWillMount(), typeof D.UNSAFE_componentWillMount == "function" && D.UNSAFE_componentWillMount(), p !== D.state && lg.enqueueReplaceState(D, D.state, null), Ip(d, b, D, _), D.state = d.memoizedState), typeof D.componentDidMount == "function" && (d.flags |= 4194308);
  }
  function qc(d, p) {
    try {
      var b = "", _ = p;
      do
        b += he(_), _ = _.return;
      while (_);
      var D = b;
    } catch (j) {
      D = `
Error generating stack: ` + j.message + `
` + j.stack;
    }
    return { value: d, source: p, stack: D, digest: null };
  }
  function ub(d, p, b) {
    return { value: d, source: null, stack: b ?? null, digest: p ?? null };
  }
  function cb(d, p) {
    try {
      console.error(p.value);
    } catch (b) {
      setTimeout(function() {
        throw b;
      });
    }
  }
  var cg = typeof WeakMap == "function" ? WeakMap : Map;
  function v0(d, p, b) {
    b = zl(-1, b), b.tag = 3, b.payload = { element: null };
    var _ = p.value;
    return b.callback = function() {
      af || (af = !0, Xc = _), cb(d, p);
    }, b;
  }
  function db(d, p, b) {
    b = zl(-1, b), b.tag = 3;
    var _ = d.type.getDerivedStateFromError;
    if (typeof _ == "function") {
      var D = p.value;
      b.payload = function() {
        return _(D);
      }, b.callback = function() {
        cb(d, p);
      };
    }
    var j = d.stateNode;
    return j !== null && typeof j.componentDidCatch == "function" && (b.callback = function() {
      cb(d, p), typeof _ != "function" && (zu === null ? zu = /* @__PURE__ */ new Set([this]) : zu.add(this));
      var oe = p.stack;
      this.componentDidCatch(p.value, { componentStack: oe !== null ? oe : "" });
    }), b;
  }
  function fb(d, p, b) {
    var _ = d.pingCache;
    if (_ === null) {
      _ = d.pingCache = new cg();
      var D = /* @__PURE__ */ new Set();
      _.set(p, D);
    } else D = _.get(p), D === void 0 && (D = /* @__PURE__ */ new Set(), _.set(p, D));
    D.has(b) || (D.add(b), d = GO.bind(null, d, p, b), p.then(d, d));
  }
  function y0(d) {
    do {
      var p;
      if ((p = d.tag === 13) && (p = d.memoizedState, p = p !== null ? p.dehydrated !== null : !0), p) return d;
      d = d.return;
    } while (d !== null);
    return null;
  }
  function ju(d, p, b, _, D) {
    return d.mode & 1 ? (d.flags |= 65536, d.lanes = D, d) : (d === p ? d.flags |= 65536 : (d.flags |= 128, b.flags |= 131072, b.flags &= -52805, b.tag === 1 && (b.alternate === null ? b.tag = 17 : (p = zl(-1, 1), p.tag = 2, Nu(b, p, 1))), b.lanes |= 1), d);
  }
  var Wp = N.ReactCurrentOwner, bo = !1;
  function ni(d, p, b, _) {
    p.child = d === null ? Rt(p, null, b, _) : io(p, d.child, b, _);
  }
  function is(d, p, b, _, D) {
    b = b.render;
    var j = p.ref;
    return Xr(p, D), _ = Lu(d, p, b, _, j, D), b = va(), d !== null && !bo ? (p.updateQueue = d.updateQueue, p.flags &= -2053, d.lanes &= ~D, Us(d, p, D)) : (Hr && b && jm(p), p.flags |= 1, ni(d, p, _, D), p.child);
  }
  function Kc(d, p, b, _, D) {
    if (d === null) {
      var j = b.type;
      return typeof j == "function" && !_b(j) && j.defaultProps === void 0 && b.compare === null && b.defaultProps === void 0 ? (p.tag = 15, p.type = j, En(d, p, j, _, D)) : (d = ah(b.type, null, _, p, p.mode, D), d.ref = p.ref, d.return = p, p.child = d);
    }
    if (j = d.child, !(d.lanes & D)) {
      var oe = j.memoizedProps;
      if (b = b.compare, b = b !== null ? b : Cp, b(oe, _) && d.ref === p.ref) return Us(d, p, D);
    }
    return p.flags |= 1, d = Hu(j, _), d.ref = p.ref, d.return = p, p.child = d;
  }
  function En(d, p, b, _, D) {
    if (d !== null) {
      var j = d.memoizedProps;
      if (Cp(j, _) && d.ref === p.ref) if (bo = !1, p.pendingProps = _ = j, (d.lanes & D) !== 0) d.flags & 131072 && (bo = !0);
      else return p.lanes = d.lanes, Us(d, p, D);
    }
    return b0(d, p, b, _, D);
  }
  function Gp(d, p, b) {
    var _ = p.pendingProps, D = _.children, j = d !== null ? d.memoizedState : null;
    if (_.mode === "hidden") if (!(p.mode & 1)) p.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, Xt(rf, xs), xs |= b;
    else {
      if (!(b & 1073741824)) return d = j !== null ? j.baseLanes | b : b, p.lanes = p.childLanes = 1073741824, p.memoizedState = { baseLanes: d, cachePool: null, transitions: null }, p.updateQueue = null, Xt(rf, xs), xs |= d, null;
      p.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, _ = j !== null ? j.baseLanes : b, Xt(rf, xs), xs |= _;
    }
    else j !== null ? (_ = j.baseLanes | b, p.memoizedState = null) : _ = b, Xt(rf, xs), xs |= _;
    return ni(d, p, D, b), p.child;
  }
  function pb(d, p) {
    var b = p.ref;
    (d === null && b !== null || d !== null && d.ref !== b) && (p.flags |= 512, p.flags |= 2097152);
  }
  function b0(d, p, b, _, D) {
    var j = go(b) ? Zi : no.current;
    return j = es(p, j), Xr(p, D), b = Lu(d, p, b, _, j, D), _ = va(), d !== null && !bo ? (p.updateQueue = d.updateQueue, p.flags &= -2053, d.lanes &= ~D, Us(d, p, D)) : (Hr && _ && jm(p), p.flags |= 1, ni(d, p, b, D), p.child);
  }
  function w0(d, p, b, _, D) {
    if (go(b)) {
      var j = !0;
      Bo(p);
    } else j = !1;
    if (Xr(p, D), p.stateNode === null) Vs(d, p), ug(p, b, _), Up(p, b, _, D), _ = !0;
    else if (d === null) {
      var oe = p.stateNode, me = p.memoizedProps;
      oe.props = me;
      var Se = oe.context, Fe = b.contextType;
      typeof Fe == "object" && Fe !== null ? Fe = Hs(Fe) : (Fe = go(b) ? Zi : no.current, Fe = es(p, Fe));
      var at = b.getDerivedStateFromProps, ct = typeof at == "function" || typeof oe.getSnapshotBeforeUpdate == "function";
      ct || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (me !== _ || Se !== Fe) && g0(p, oe, _, Fe), Cs = !1;
      var st = p.memoizedState;
      oe.state = st, Ip(p, _, oe, D), Se = p.memoizedState, me !== _ || st !== Se || Do.current || Cs ? (typeof at == "function" && (lb(p, b, at, _), Se = p.memoizedState), (me = Cs || m0(p, b, me, _, st, Se, Fe)) ? (ct || typeof oe.UNSAFE_componentWillMount != "function" && typeof oe.componentWillMount != "function" || (typeof oe.componentWillMount == "function" && oe.componentWillMount(), typeof oe.UNSAFE_componentWillMount == "function" && oe.UNSAFE_componentWillMount()), typeof oe.componentDidMount == "function" && (p.flags |= 4194308)) : (typeof oe.componentDidMount == "function" && (p.flags |= 4194308), p.memoizedProps = _, p.memoizedState = Se), oe.props = _, oe.state = Se, oe.context = Fe, _ = me) : (typeof oe.componentDidMount == "function" && (p.flags |= 4194308), _ = !1);
    } else {
      oe = p.stateNode, d0(d, p), me = p.memoizedProps, Fe = p.type === p.elementType ? me : ya(p.type, me), oe.props = Fe, ct = p.pendingProps, st = oe.context, Se = b.contextType, typeof Se == "object" && Se !== null ? Se = Hs(Se) : (Se = go(b) ? Zi : no.current, Se = es(p, Se));
      var Mt = b.getDerivedStateFromProps;
      (at = typeof Mt == "function" || typeof oe.getSnapshotBeforeUpdate == "function") || typeof oe.UNSAFE_componentWillReceiveProps != "function" && typeof oe.componentWillReceiveProps != "function" || (me !== ct || st !== Se) && g0(p, oe, _, Se), Cs = !1, st = p.memoizedState, oe.state = st, Ip(p, _, oe, D);
      var Ht = p.memoizedState;
      me !== ct || st !== Ht || Do.current || Cs ? (typeof Mt == "function" && (lb(p, b, Mt, _), Ht = p.memoizedState), (Fe = Cs || m0(p, b, Fe, _, st, Ht, Se) || !1) ? (at || typeof oe.UNSAFE_componentWillUpdate != "function" && typeof oe.componentWillUpdate != "function" || (typeof oe.componentWillUpdate == "function" && oe.componentWillUpdate(_, Ht, Se), typeof oe.UNSAFE_componentWillUpdate == "function" && oe.UNSAFE_componentWillUpdate(_, Ht, Se)), typeof oe.componentDidUpdate == "function" && (p.flags |= 4), typeof oe.getSnapshotBeforeUpdate == "function" && (p.flags |= 1024)) : (typeof oe.componentDidUpdate != "function" || me === d.memoizedProps && st === d.memoizedState || (p.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || me === d.memoizedProps && st === d.memoizedState || (p.flags |= 1024), p.memoizedProps = _, p.memoizedState = Ht), oe.props = _, oe.state = Ht, oe.context = Se, _ = Fe) : (typeof oe.componentDidUpdate != "function" || me === d.memoizedProps && st === d.memoizedState || (p.flags |= 4), typeof oe.getSnapshotBeforeUpdate != "function" || me === d.memoizedProps && st === d.memoizedState || (p.flags |= 1024), _ = !1);
    }
    return qp(d, p, b, _, j, D);
  }
  function qp(d, p, b, _, D, j) {
    pb(d, p);
    var oe = (p.flags & 128) !== 0;
    if (!_ && !oe) return D && Lm(p, b, !1), Us(d, p, j);
    _ = p.stateNode, Wp.current = p;
    var me = oe && typeof b.getDerivedStateFromError != "function" ? null : _.render();
    return p.flags |= 1, d !== null && oe ? (p.child = io(p, d.child, null, j), p.child = io(p, null, me, j)) : ni(d, p, me, j), p.memoizedState = _.state, D && Lm(p, b, !0), p.child;
  }
  function tf(d) {
    var p = d.stateNode;
    p.pendingContext ? a0(d, p.pendingContext, p.pendingContext !== p.context) : p.context && a0(d, p.context, !1), ib(d, p.containerInfo);
  }
  function S0(d, p, b, _, D) {
    return Au(), Fl(D), p.flags |= 256, ni(d, p, b, _), p.child;
  }
  var dg = { dehydrated: null, treeContext: null, retryLane: 0 };
  function hb(d) {
    return { baseLanes: d, cachePool: null, transitions: null };
  }
  function fg(d, p, b) {
    var _ = p.pendingProps, D = Qr.current, j = !1, oe = (p.flags & 128) !== 0, me;
    if ((me = oe) || (me = d !== null && d.memoizedState === null ? !1 : (D & 2) !== 0), me ? (j = !0, p.flags &= -129) : (d === null || d.memoizedState !== null) && (D |= 1), Xt(Qr, D & 1), d === null)
      return Xy(p), d = p.memoizedState, d !== null && (d = d.dehydrated, d !== null) ? (p.mode & 1 ? d.data === "$!" ? p.lanes = 8 : p.lanes = 1073741824 : p.lanes = 1, null) : (oe = _.children, d = _.fallback, j ? (_ = p.mode, j = p.child, oe = { mode: "hidden", children: oe }, !(_ & 1) && j !== null ? (j.childLanes = 0, j.pendingProps = oe) : j = Vu(oe, _, 0, null), d = Wl(d, _, b, null), j.return = p, d.return = p, j.sibling = d, p.child = j, p.child.memoizedState = hb(b), p.memoizedState = dg, d) : mb(p, oe));
    if (D = d.memoizedState, D !== null && (me = D.dehydrated, me !== null)) return C0(d, p, oe, _, me, D, b);
    if (j) {
      j = _.fallback, oe = p.mode, D = d.child, me = D.sibling;
      var Se = { mode: "hidden", children: _.children };
      return !(oe & 1) && p.child !== D ? (_ = p.child, _.childLanes = 0, _.pendingProps = Se, p.deletions = null) : (_ = Hu(D, Se), _.subtreeFlags = D.subtreeFlags & 14680064), me !== null ? j = Hu(me, j) : (j = Wl(j, oe, b, null), j.flags |= 2), j.return = p, _.return = p, _.sibling = j, p.child = _, _ = j, j = p.child, oe = d.child.memoizedState, oe = oe === null ? hb(b) : { baseLanes: oe.baseLanes | b, cachePool: null, transitions: oe.transitions }, j.memoizedState = oe, j.childLanes = d.childLanes & ~b, p.memoizedState = dg, _;
    }
    return j = d.child, d = j.sibling, _ = Hu(j, { mode: "visible", children: _.children }), !(p.mode & 1) && (_.lanes = b), _.return = p, _.sibling = null, d !== null && (b = p.deletions, b === null ? (p.deletions = [d], p.flags |= 16) : b.push(d)), p.child = _, p.memoizedState = null, _;
  }
  function mb(d, p) {
    return p = Vu({ mode: "visible", children: p }, d.mode, 0, null), p.return = d, d.child = p;
  }
  function Kp(d, p, b, _) {
    return _ !== null && Fl(_), io(p, d.child, null, b), d = mb(p, p.pendingProps.children), d.flags |= 2, p.memoizedState = null, d;
  }
  function C0(d, p, b, _, D, j, oe) {
    if (b)
      return p.flags & 256 ? (p.flags &= -257, _ = ub(Error(n(422))), Kp(d, p, oe, _)) : p.memoizedState !== null ? (p.child = d.child, p.flags |= 128, null) : (j = _.fallback, D = p.mode, _ = Vu({ mode: "visible", children: _.children }, D, 0, null), j = Wl(j, D, oe, null), j.flags |= 2, _.return = p, j.return = p, _.sibling = j, p.child = _, p.mode & 1 && io(p, d.child, null, oe), p.child.memoizedState = hb(oe), p.memoizedState = dg, j);
    if (!(p.mode & 1)) return Kp(d, p, oe, null);
    if (D.data === "$!") {
      if (_ = D.nextSibling && D.nextSibling.dataset, _) var me = _.dgst;
      return _ = me, j = Error(n(419)), _ = ub(j, _, void 0), Kp(d, p, oe, _);
    }
    if (me = (oe & d.childLanes) !== 0, bo || me) {
      if (_ = No, _ !== null) {
        switch (oe & -oe) {
          case 4:
            D = 2;
            break;
          case 16:
            D = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            D = 32;
            break;
          case 536870912:
            D = 268435456;
            break;
          default:
            D = 0;
        }
        D = D & (_.suspendedLanes | oe) ? 0 : D, D !== 0 && D !== j.retryLane && (j.retryLane = D, Ss(d, D), Li(_, d, D, -1));
      }
      return Tb(), _ = ub(Error(n(421))), Kp(d, p, oe, _);
    }
    return D.data === "$?" ? (p.flags |= 128, p.child = d.child, p = qO.bind(null, d), D._reactRetry = p, null) : (d = j.treeContext, ns = Va(D.nextSibling), ts = p, Hr = !0, Bs = null, d !== null && (vo[zs++] = qa, vo[zs++] = Ka, vo[zs++] = bs, qa = d.id, Ka = d.overflow, bs = p), p = mb(p, _.children), p.flags |= 4096, p);
  }
  function gb(d, p, b) {
    d.lanes |= p;
    var _ = d.alternate;
    _ !== null && (_.lanes |= p), eb(d.return, p, b);
  }
  function Di(d, p, b, _, D) {
    var j = d.memoizedState;
    j === null ? d.memoizedState = { isBackwards: p, rendering: null, renderingStartTime: 0, last: _, tail: b, tailMode: D } : (j.isBackwards = p, j.rendering = null, j.renderingStartTime = 0, j.last = _, j.tail = b, j.tailMode = D);
  }
  function Xa(d, p, b) {
    var _ = p.pendingProps, D = _.revealOrder, j = _.tail;
    if (ni(d, p, _.children, b), _ = Qr.current, _ & 2) _ = _ & 1 | 2, p.flags |= 128;
    else {
      if (d !== null && d.flags & 128) e: for (d = p.child; d !== null; ) {
        if (d.tag === 13) d.memoizedState !== null && gb(d, b, p);
        else if (d.tag === 19) gb(d, b, p);
        else if (d.child !== null) {
          d.child.return = d, d = d.child;
          continue;
        }
        if (d === p) break e;
        for (; d.sibling === null; ) {
          if (d.return === null || d.return === p) break e;
          d = d.return;
        }
        d.sibling.return = d.return, d = d.sibling;
      }
      _ &= 1;
    }
    if (Xt(Qr, _), !(p.mode & 1)) p.memoizedState = null;
    else switch (D) {
      case "forwards":
        for (b = p.child, D = null; b !== null; ) d = b.alternate, d !== null && Um(d) === null && (D = b), b = b.sibling;
        b = D, b === null ? (D = p.child, p.child = null) : (D = b.sibling, b.sibling = null), Di(p, !1, D, b, j);
        break;
      case "backwards":
        for (b = null, D = p.child, p.child = null; D !== null; ) {
          if (d = D.alternate, d !== null && Um(d) === null) {
            p.child = D;
            break;
          }
          d = D.sibling, D.sibling = b, b = D, D = d;
        }
        Di(p, !0, b, null, j);
        break;
      case "together":
        Di(p, !1, null, null, void 0);
        break;
      default:
        p.memoizedState = null;
    }
    return p.child;
  }
  function Vs(d, p) {
    !(p.mode & 1) && d !== null && (d.alternate = null, p.alternate = null, p.flags |= 2);
  }
  function Us(d, p, b) {
    if (d !== null && (p.dependencies = d.dependencies), Za |= p.lanes, !(b & p.childLanes)) return null;
    if (d !== null && p.child !== d.child) throw Error(n(153));
    if (p.child !== null) {
      for (d = p.child, b = Hu(d, d.pendingProps), p.child = b, b.return = p; d.sibling !== null; ) d = d.sibling, b = b.sibling = Hu(d, d.pendingProps), b.return = p;
      b.sibling = null;
    }
    return p.child;
  }
  function Yp(d, p, b) {
    switch (p.tag) {
      case 3:
        tf(p), Au();
        break;
      case 5:
        p0(p);
        break;
      case 1:
        go(p.type) && Bo(p);
        break;
      case 4:
        ib(p, p.stateNode.containerInfo);
        break;
      case 10:
        var _ = p.type._context, D = p.memoizedProps.value;
        Xt(ws, _._currentValue), _._currentValue = D;
        break;
      case 13:
        if (_ = p.memoizedState, _ !== null)
          return _.dehydrated !== null ? (Xt(Qr, Qr.current & 1), p.flags |= 128, null) : b & p.child.childLanes ? fg(d, p, b) : (Xt(Qr, Qr.current & 1), d = Us(d, p, b), d !== null ? d.sibling : null);
        Xt(Qr, Qr.current & 1);
        break;
      case 19:
        if (_ = (b & p.childLanes) !== 0, d.flags & 128) {
          if (_) return Xa(d, p, b);
          p.flags |= 128;
        }
        if (D = p.memoizedState, D !== null && (D.rendering = null, D.tail = null, D.lastEffect = null), Xt(Qr, Qr.current), _) break;
        return null;
      case 22:
      case 23:
        return p.lanes = 0, Gp(d, p, b);
    }
    return Us(d, p, b);
  }
  var Ws, wo, x0, E0;
  Ws = function(d, p) {
    for (var b = p.child; b !== null; ) {
      if (b.tag === 5 || b.tag === 6) d.appendChild(b.stateNode);
      else if (b.tag !== 4 && b.child !== null) {
        b.child.return = b, b = b.child;
        continue;
      }
      if (b === p) break;
      for (; b.sibling === null; ) {
        if (b.return === null || b.return === p) return;
        b = b.return;
      }
      b.sibling.return = b.return, b = b.sibling;
    }
  }, wo = function() {
  }, x0 = function(d, p, b, _) {
    var D = d.memoizedProps;
    if (D !== _) {
      d = p.stateNode, Fc(Ya.current);
      var j = null;
      switch (b) {
        case "input":
          D = Ne(d, D), _ = Ne(d, _), j = [];
          break;
        case "select":
          D = Q({}, D, { value: void 0 }), _ = Q({}, _, { value: void 0 }), j = [];
          break;
        case "textarea":
          D = nt(d, D), _ = nt(d, _), j = [];
          break;
        default:
          typeof D.onClick != "function" && typeof _.onClick == "function" && (d.onclick = Ru);
      }
      We(b, _);
      var oe;
      b = null;
      for (Fe in D) if (!_.hasOwnProperty(Fe) && D.hasOwnProperty(Fe) && D[Fe] != null) if (Fe === "style") {
        var me = D[Fe];
        for (oe in me) me.hasOwnProperty(oe) && (b || (b = {}), b[oe] = "");
      } else Fe !== "dangerouslySetInnerHTML" && Fe !== "children" && Fe !== "suppressContentEditableWarning" && Fe !== "suppressHydrationWarning" && Fe !== "autoFocus" && (o.hasOwnProperty(Fe) ? j || (j = []) : (j = j || []).push(Fe, null));
      for (Fe in _) {
        var Se = _[Fe];
        if (me = D != null ? D[Fe] : void 0, _.hasOwnProperty(Fe) && Se !== me && (Se != null || me != null)) if (Fe === "style") if (me) {
          for (oe in me) !me.hasOwnProperty(oe) || Se && Se.hasOwnProperty(oe) || (b || (b = {}), b[oe] = "");
          for (oe in Se) Se.hasOwnProperty(oe) && me[oe] !== Se[oe] && (b || (b = {}), b[oe] = Se[oe]);
        } else b || (j || (j = []), j.push(
          Fe,
          b
        )), b = Se;
        else Fe === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, me = me ? me.__html : void 0, Se != null && me !== Se && (j = j || []).push(Fe, Se)) : Fe === "children" ? typeof Se != "string" && typeof Se != "number" || (j = j || []).push(Fe, "" + Se) : Fe !== "suppressContentEditableWarning" && Fe !== "suppressHydrationWarning" && (o.hasOwnProperty(Fe) ? (Se != null && Fe === "onScroll" && ar("scroll", d), j || me === Se || (j = [])) : (j = j || []).push(Fe, Se));
      }
      b && (j = j || []).push("style", b);
      var Fe = j;
      (p.updateQueue = Fe) && (p.flags |= 4);
    }
  }, E0 = function(d, p, b, _) {
    b !== _ && (p.flags |= 4);
  };
  function Xp(d, p) {
    if (!Hr) switch (d.tailMode) {
      case "hidden":
        p = d.tail;
        for (var b = null; p !== null; ) p.alternate !== null && (b = p), p = p.sibling;
        b === null ? d.tail = null : b.sibling = null;
        break;
      case "collapsed":
        b = d.tail;
        for (var _ = null; b !== null; ) b.alternate !== null && (_ = b), b = b.sibling;
        _ === null ? p || d.tail === null ? d.tail = null : d.tail.sibling = null : _.sibling = null;
    }
  }
  function Vo(d) {
    var p = d.alternate !== null && d.alternate.child === d.child, b = 0, _ = 0;
    if (p) for (var D = d.child; D !== null; ) b |= D.lanes | D.childLanes, _ |= D.subtreeFlags & 14680064, _ |= D.flags & 14680064, D.return = d, D = D.sibling;
    else for (D = d.child; D !== null; ) b |= D.lanes | D.childLanes, _ |= D.subtreeFlags, _ |= D.flags, D.return = d, D = D.sibling;
    return d.subtreeFlags |= _, d.childLanes = b, p;
  }
  function T0(d, p, b) {
    var _ = p.pendingProps;
    switch (Fm(p), p.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return Vo(p), null;
      case 1:
        return go(p.type) && Xd(), Vo(p), null;
      case 3:
        return _ = p.stateNode, zc(), Ir(Do), Ir(no), Jt(), _.pendingContext && (_.context = _.pendingContext, _.pendingContext = null), (d === null || d.child === null) && (zm(p) ? p.flags |= 4 : d === null || d.memoizedState.isDehydrated && !(p.flags & 256) || (p.flags |= 1024, Bs !== null && (Qc(Bs), Bs = null))), wo(d, p), Vo(p), null;
      case 5:
        Vm(p);
        var D = Fc(Np.current);
        if (b = p.type, d !== null && p.stateNode != null) x0(d, p, b, _, D), d.ref !== p.ref && (p.flags |= 512, p.flags |= 2097152);
        else {
          if (!_) {
            if (p.stateNode === null) throw Error(n(166));
            return Vo(p), null;
          }
          if (d = Fc(Ya.current), zm(p)) {
            _ = p.stateNode, b = p.type;
            var j = p.memoizedProps;
            switch (_[Ua] = p, _[Rp] = j, d = (p.mode & 1) !== 0, b) {
              case "dialog":
                ar("cancel", _), ar("close", _);
                break;
              case "iframe":
              case "object":
              case "embed":
                ar("load", _);
                break;
              case "video":
              case "audio":
                for (D = 0; D < Tp.length; D++) ar(Tp[D], _);
                break;
              case "source":
                ar("error", _);
                break;
              case "img":
              case "image":
              case "link":
                ar(
                  "error",
                  _
                ), ar("load", _);
                break;
              case "details":
                ar("toggle", _);
                break;
              case "input":
                Be(_, j), ar("invalid", _);
                break;
              case "select":
                _._wrapperState = { wasMultiple: !!j.multiple }, ar("invalid", _);
                break;
              case "textarea":
                Ft(_, j), ar("invalid", _);
            }
            We(b, j), D = null;
            for (var oe in j) if (j.hasOwnProperty(oe)) {
              var me = j[oe];
              oe === "children" ? typeof me == "string" ? _.textContent !== me && (j.suppressHydrationWarning !== !0 && Im(_.textContent, me, d), D = ["children", me]) : typeof me == "number" && _.textContent !== "" + me && (j.suppressHydrationWarning !== !0 && Im(
                _.textContent,
                me,
                d
              ), D = ["children", "" + me]) : o.hasOwnProperty(oe) && me != null && oe === "onScroll" && ar("scroll", _);
            }
            switch (b) {
              case "input":
                _e(_), rt(_, j, !0);
                break;
              case "textarea":
                _e(_), Et(_);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof j.onClick == "function" && (_.onclick = Ru);
            }
            _ = D, p.updateQueue = _, _ !== null && (p.flags |= 4);
          } else {
            oe = D.nodeType === 9 ? D : D.ownerDocument, d === "http://www.w3.org/1999/xhtml" && (d = Tt(b)), d === "http://www.w3.org/1999/xhtml" ? b === "script" ? (d = oe.createElement("div"), d.innerHTML = "<script><\/script>", d = d.removeChild(d.firstChild)) : typeof _.is == "string" ? d = oe.createElement(b, { is: _.is }) : (d = oe.createElement(b), b === "select" && (oe = d, _.multiple ? oe.multiple = !0 : _.size && (oe.size = _.size))) : d = oe.createElementNS(d, b), d[Ua] = p, d[Rp] = _, Ws(d, p, !1, !1), p.stateNode = d;
            e: {
              switch (oe = St(b, _), b) {
                case "dialog":
                  ar("cancel", d), ar("close", d), D = _;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  ar("load", d), D = _;
                  break;
                case "video":
                case "audio":
                  for (D = 0; D < Tp.length; D++) ar(Tp[D], d);
                  D = _;
                  break;
                case "source":
                  ar("error", d), D = _;
                  break;
                case "img":
                case "image":
                case "link":
                  ar(
                    "error",
                    d
                  ), ar("load", d), D = _;
                  break;
                case "details":
                  ar("toggle", d), D = _;
                  break;
                case "input":
                  Be(d, _), D = Ne(d, _), ar("invalid", d);
                  break;
                case "option":
                  D = _;
                  break;
                case "select":
                  d._wrapperState = { wasMultiple: !!_.multiple }, D = Q({}, _, { value: void 0 }), ar("invalid", d);
                  break;
                case "textarea":
                  Ft(d, _), D = nt(d, _), ar("invalid", d);
                  break;
                default:
                  D = _;
              }
              We(b, D), me = D;
              for (j in me) if (me.hasOwnProperty(j)) {
                var Se = me[j];
                j === "style" ? zt(d, Se) : j === "dangerouslySetInnerHTML" ? (Se = Se ? Se.__html : void 0, Se != null && Xe(d, Se)) : j === "children" ? typeof Se == "string" ? (b !== "textarea" || Se !== "") && Oe(d, Se) : typeof Se == "number" && Oe(d, "" + Se) : j !== "suppressContentEditableWarning" && j !== "suppressHydrationWarning" && j !== "autoFocus" && (o.hasOwnProperty(j) ? Se != null && j === "onScroll" && ar("scroll", d) : Se != null && M(d, j, Se, oe));
              }
              switch (b) {
                case "input":
                  _e(d), rt(d, _, !1);
                  break;
                case "textarea":
                  _e(d), Et(d);
                  break;
                case "option":
                  _.value != null && d.setAttribute("value", "" + pe(_.value));
                  break;
                case "select":
                  d.multiple = !!_.multiple, j = _.value, j != null ? gt(d, !!_.multiple, j, !1) : _.defaultValue != null && gt(
                    d,
                    !!_.multiple,
                    _.defaultValue,
                    !0
                  );
                  break;
                default:
                  typeof D.onClick == "function" && (d.onclick = Ru);
              }
              switch (b) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  _ = !!_.autoFocus;
                  break e;
                case "img":
                  _ = !0;
                  break e;
                default:
                  _ = !1;
              }
            }
            _ && (p.flags |= 4);
          }
          p.ref !== null && (p.flags |= 512, p.flags |= 2097152);
        }
        return Vo(p), null;
      case 6:
        if (d && p.stateNode != null) E0(d, p, d.memoizedProps, _);
        else {
          if (typeof _ != "string" && p.stateNode === null) throw Error(n(166));
          if (b = Fc(Np.current), Fc(Ya.current), zm(p)) {
            if (_ = p.stateNode, b = p.memoizedProps, _[Ua] = p, (j = _.nodeValue !== b) && (d = ts, d !== null)) switch (d.tag) {
              case 3:
                Im(_.nodeValue, b, (d.mode & 1) !== 0);
                break;
              case 5:
                d.memoizedProps.suppressHydrationWarning !== !0 && Im(_.nodeValue, b, (d.mode & 1) !== 0);
            }
            j && (p.flags |= 4);
          } else _ = (b.nodeType === 9 ? b : b.ownerDocument).createTextNode(_), _[Ua] = p, p.stateNode = _;
        }
        return Vo(p), null;
      case 13:
        if (Ir(Qr), _ = p.memoizedState, d === null || d.memoizedState !== null && d.memoizedState.dehydrated !== null) {
          if (Hr && ns !== null && p.mode & 1 && !(p.flags & 128)) Mp(), Au(), p.flags |= 98560, j = !1;
          else if (j = zm(p), _ !== null && _.dehydrated !== null) {
            if (d === null) {
              if (!j) throw Error(n(318));
              if (j = p.memoizedState, j = j !== null ? j.dehydrated : null, !j) throw Error(n(317));
              j[Ua] = p;
            } else Au(), !(p.flags & 128) && (p.memoizedState = null), p.flags |= 4;
            Vo(p), j = !1;
          } else Bs !== null && (Qc(Bs), Bs = null), j = !0;
          if (!j) return p.flags & 65536 ? p : null;
        }
        return p.flags & 128 ? (p.lanes = b, p) : (_ = _ !== null, _ !== (d !== null && d.memoizedState !== null) && _ && (p.child.flags |= 8192, p.mode & 1 && (d === null || Qr.current & 1 ? lo === 0 && (lo = 3) : Tb())), p.updateQueue !== null && (p.flags |= 4), Vo(p), null);
      case 4:
        return zc(), wo(d, p), d === null && Wd(p.stateNode.containerInfo), Vo(p), null;
      case 10:
        return Zy(p.type._context), Vo(p), null;
      case 17:
        return go(p.type) && Xd(), Vo(p), null;
      case 19:
        if (Ir(Qr), j = p.memoizedState, j === null) return Vo(p), null;
        if (_ = (p.flags & 128) !== 0, oe = j.rendering, oe === null) if (_) Xp(j, !1);
        else {
          if (lo !== 0 || d !== null && d.flags & 128) for (d = p.child; d !== null; ) {
            if (oe = Um(d), oe !== null) {
              for (p.flags |= 128, Xp(j, !1), _ = oe.updateQueue, _ !== null && (p.updateQueue = _, p.flags |= 4), p.subtreeFlags = 0, _ = b, b = p.child; b !== null; ) j = b, d = _, j.flags &= 14680066, oe = j.alternate, oe === null ? (j.childLanes = 0, j.lanes = d, j.child = null, j.subtreeFlags = 0, j.memoizedProps = null, j.memoizedState = null, j.updateQueue = null, j.dependencies = null, j.stateNode = null) : (j.childLanes = oe.childLanes, j.lanes = oe.lanes, j.child = oe.child, j.subtreeFlags = 0, j.deletions = null, j.memoizedProps = oe.memoizedProps, j.memoizedState = oe.memoizedState, j.updateQueue = oe.updateQueue, j.type = oe.type, d = oe.dependencies, j.dependencies = d === null ? null : { lanes: d.lanes, firstContext: d.firstContext }), b = b.sibling;
              return Xt(Qr, Qr.current & 1 | 2), p.child;
            }
            d = d.sibling;
          }
          j.tail !== null && yn() > sf && (p.flags |= 128, _ = !0, Xp(j, !1), p.lanes = 4194304);
        }
        else {
          if (!_) if (d = Um(oe), d !== null) {
            if (p.flags |= 128, _ = !0, b = d.updateQueue, b !== null && (p.updateQueue = b, p.flags |= 4), Xp(j, !0), j.tail === null && j.tailMode === "hidden" && !oe.alternate && !Hr) return Vo(p), null;
          } else 2 * yn() - j.renderingStartTime > sf && b !== 1073741824 && (p.flags |= 128, _ = !0, Xp(j, !1), p.lanes = 4194304);
          j.isBackwards ? (oe.sibling = p.child, p.child = oe) : (b = j.last, b !== null ? b.sibling = oe : p.child = oe, j.last = oe);
        }
        return j.tail !== null ? (p = j.tail, j.rendering = p, j.tail = p.sibling, j.renderingStartTime = yn(), p.sibling = null, b = Qr.current, Xt(Qr, _ ? b & 1 | 2 : b & 1), p) : (Vo(p), null);
      case 22:
      case 23:
        return Eb(), _ = p.memoizedState !== null, d !== null && d.memoizedState !== null !== _ && (p.flags |= 8192), _ && p.mode & 1 ? xs & 1073741824 && (Vo(p), p.subtreeFlags & 6 && (p.flags |= 8192)) : Vo(p), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(n(156, p.tag));
  }
  function pg(d, p) {
    switch (Fm(p), p.tag) {
      case 1:
        return go(p.type) && Xd(), d = p.flags, d & 65536 ? (p.flags = d & -65537 | 128, p) : null;
      case 3:
        return zc(), Ir(Do), Ir(no), Jt(), d = p.flags, d & 65536 && !(d & 128) ? (p.flags = d & -65537 | 128, p) : null;
      case 5:
        return Vm(p), null;
      case 13:
        if (Ir(Qr), d = p.memoizedState, d !== null && d.dehydrated !== null) {
          if (p.alternate === null) throw Error(n(340));
          Au();
        }
        return d = p.flags, d & 65536 ? (p.flags = d & -65537 | 128, p) : null;
      case 19:
        return Ir(Qr), null;
      case 4:
        return zc(), null;
      case 10:
        return Zy(p.type._context), null;
      case 22:
      case 23:
        return Eb(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Qp = !1, Ci = !1, zO = typeof WeakSet == "function" ? WeakSet : Set, Nt = null;
  function nf(d, p) {
    var b = d.ref;
    if (b !== null) if (typeof b == "function") try {
      b(null);
    } catch (_) {
      Vr(d, p, _);
    }
    else b.current = null;
  }
  function hg(d, p, b) {
    try {
      b();
    } catch (_) {
      Vr(d, p, _);
    }
  }
  var _0 = !1;
  function O0(d, p) {
    if (Op = Ls, d = xp(), Em(d)) {
      if ("selectionStart" in d) var b = { start: d.selectionStart, end: d.selectionEnd };
      else e: {
        b = (b = d.ownerDocument) && b.defaultView || window;
        var _ = b.getSelection && b.getSelection();
        if (_ && _.rangeCount !== 0) {
          b = _.anchorNode;
          var D = _.anchorOffset, j = _.focusNode;
          _ = _.focusOffset;
          try {
            b.nodeType, j.nodeType;
          } catch {
            b = null;
            break e;
          }
          var oe = 0, me = -1, Se = -1, Fe = 0, at = 0, ct = d, st = null;
          t: for (; ; ) {
            for (var Mt; ct !== b || D !== 0 && ct.nodeType !== 3 || (me = oe + D), ct !== j || _ !== 0 && ct.nodeType !== 3 || (Se = oe + _), ct.nodeType === 3 && (oe += ct.nodeValue.length), (Mt = ct.firstChild) !== null; )
              st = ct, ct = Mt;
            for (; ; ) {
              if (ct === d) break t;
              if (st === b && ++Fe === D && (me = oe), st === j && ++at === _ && (Se = oe), (Mt = ct.nextSibling) !== null) break;
              ct = st, st = ct.parentNode;
            }
            ct = Mt;
          }
          b = me === -1 || Se === -1 ? null : { start: me, end: Se };
        } else b = null;
      }
      b = b || { start: 0, end: 0 };
    } else b = null;
    for (Dc = { focusedElem: d, selectionRange: b }, Ls = !1, Nt = p; Nt !== null; ) if (p = Nt, d = p.child, (p.subtreeFlags & 1028) !== 0 && d !== null) d.return = p, Nt = d;
    else for (; Nt !== null; ) {
      p = Nt;
      try {
        var Ht = p.alternate;
        if (p.flags & 1024) switch (p.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (Ht !== null) {
              var Gt = Ht.memoizedProps, uo = Ht.memoizedState, ke = p.stateNode, Ee = ke.getSnapshotBeforeUpdate(p.elementType === p.type ? Gt : ya(p.type, Gt), uo);
              ke.__reactInternalSnapshotBeforeUpdate = Ee;
            }
            break;
          case 3:
            var Ae = p.stateNode.containerInfo;
            Ae.nodeType === 1 ? Ae.textContent = "" : Ae.nodeType === 9 && Ae.documentElement && Ae.removeChild(Ae.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(n(163));
        }
      } catch (lt) {
        Vr(p, p.return, lt);
      }
      if (d = p.sibling, d !== null) {
        d.return = p.return, Nt = d;
        break;
      }
      Nt = p.return;
    }
    return Ht = _0, _0 = !1, Ht;
  }
  function Jp(d, p, b) {
    var _ = p.updateQueue;
    if (_ = _ !== null ? _.lastEffect : null, _ !== null) {
      var D = _ = _.next;
      do {
        if ((D.tag & d) === d) {
          var j = D.destroy;
          D.destroy = void 0, j !== void 0 && hg(p, b, j);
        }
        D = D.next;
      } while (D !== _);
    }
  }
  function Zp(d, p) {
    if (p = p.updateQueue, p = p !== null ? p.lastEffect : null, p !== null) {
      var b = p = p.next;
      do {
        if ((b.tag & d) === d) {
          var _ = b.create;
          b.destroy = _();
        }
        b = b.next;
      } while (b !== p);
    }
  }
  function vb(d) {
    var p = d.ref;
    if (p !== null) {
      var b = d.stateNode;
      switch (d.tag) {
        case 5:
          d = b;
          break;
        default:
          d = b;
      }
      typeof p == "function" ? p(d) : p.current = d;
    }
  }
  function mg(d) {
    var p = d.alternate;
    p !== null && (d.alternate = null, mg(p)), d.child = null, d.deletions = null, d.sibling = null, d.tag === 5 && (p = d.stateNode, p !== null && (delete p[Ua], delete p[Rp], delete p[kp], delete p[Yd], delete p[jO])), d.stateNode = null, d.return = null, d.dependencies = null, d.memoizedProps = null, d.memoizedState = null, d.pendingProps = null, d.stateNode = null, d.updateQueue = null;
  }
  function eh(d) {
    return d.tag === 5 || d.tag === 3 || d.tag === 4;
  }
  function Hl(d) {
    e: for (; ; ) {
      for (; d.sibling === null; ) {
        if (d.return === null || eh(d.return)) return null;
        d = d.return;
      }
      for (d.sibling.return = d.return, d = d.sibling; d.tag !== 5 && d.tag !== 6 && d.tag !== 18; ) {
        if (d.flags & 2 || d.child === null || d.tag === 4) continue e;
        d.child.return = d, d = d.child;
      }
      if (!(d.flags & 2)) return d.stateNode;
    }
  }
  function Qa(d, p, b) {
    var _ = d.tag;
    if (_ === 5 || _ === 6) d = d.stateNode, p ? b.nodeType === 8 ? b.parentNode.insertBefore(d, p) : b.insertBefore(d, p) : (b.nodeType === 8 ? (p = b.parentNode, p.insertBefore(d, b)) : (p = b, p.appendChild(d)), b = b._reactRootContainer, b != null || p.onclick !== null || (p.onclick = Ru));
    else if (_ !== 4 && (d = d.child, d !== null)) for (Qa(d, p, b), d = d.sibling; d !== null; ) Qa(d, p, b), d = d.sibling;
  }
  function Ja(d, p, b) {
    var _ = d.tag;
    if (_ === 5 || _ === 6) d = d.stateNode, p ? b.insertBefore(d, p) : b.appendChild(d);
    else if (_ !== 4 && (d = d.child, d !== null)) for (Ja(d, p, b), d = d.sibling; d !== null; ) Ja(d, p, b), d = d.sibling;
  }
  var ao = null, Ai = !1;
  function Ni(d, p, b) {
    for (b = b.child; b !== null; ) R0(d, p, b), b = b.sibling;
  }
  function R0(d, p, b) {
    if (bi && typeof bi.onCommitFiberUnmount == "function") try {
      bi.onCommitFiberUnmount(Qi, b);
    } catch {
    }
    switch (b.tag) {
      case 5:
        Ci || nf(b, p);
      case 6:
        var _ = ao, D = Ai;
        ao = null, Ni(d, p, b), ao = _, Ai = D, ao !== null && (Ai ? (d = ao, b = b.stateNode, d.nodeType === 8 ? d.parentNode.removeChild(b) : d.removeChild(b)) : ao.removeChild(b.stateNode));
        break;
      case 18:
        ao !== null && (Ai ? (d = ao, b = b.stateNode, d.nodeType === 8 ? Kd(d.parentNode, b) : d.nodeType === 1 && Kd(d, b), pa(d)) : Kd(ao, b.stateNode));
        break;
      case 4:
        _ = ao, D = Ai, ao = b.stateNode.containerInfo, Ai = !0, Ni(d, p, b), ao = _, Ai = D;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!Ci && (_ = b.updateQueue, _ !== null && (_ = _.lastEffect, _ !== null))) {
          D = _ = _.next;
          do {
            var j = D, oe = j.destroy;
            j = j.tag, oe !== void 0 && (j & 2 || j & 4) && hg(b, p, oe), D = D.next;
          } while (D !== _);
        }
        Ni(d, p, b);
        break;
      case 1:
        if (!Ci && (nf(b, p), _ = b.stateNode, typeof _.componentWillUnmount == "function")) try {
          _.props = b.memoizedProps, _.state = b.memoizedState, _.componentWillUnmount();
        } catch (me) {
          Vr(b, p, me);
        }
        Ni(d, p, b);
        break;
      case 21:
        Ni(d, p, b);
        break;
      case 22:
        b.mode & 1 ? (Ci = (_ = Ci) || b.memoizedState !== null, Ni(d, p, b), Ci = _) : Ni(d, p, b);
        break;
      default:
        Ni(d, p, b);
    }
  }
  function k0(d) {
    var p = d.updateQueue;
    if (p !== null) {
      d.updateQueue = null;
      var b = d.stateNode;
      b === null && (b = d.stateNode = new zO()), p.forEach(function(_) {
        var D = j0.bind(null, d, _);
        b.has(_) || (b.add(_), _.then(D, D));
      });
    }
  }
  function ba(d, p) {
    var b = p.deletions;
    if (b !== null) for (var _ = 0; _ < b.length; _++) {
      var D = b[_];
      try {
        var j = d, oe = p, me = oe;
        e: for (; me !== null; ) {
          switch (me.tag) {
            case 5:
              ao = me.stateNode, Ai = !1;
              break e;
            case 3:
              ao = me.stateNode.containerInfo, Ai = !0;
              break e;
            case 4:
              ao = me.stateNode.containerInfo, Ai = !0;
              break e;
          }
          me = me.return;
        }
        if (ao === null) throw Error(n(160));
        R0(j, oe, D), ao = null, Ai = !1;
        var Se = D.alternate;
        Se !== null && (Se.return = null), D.return = null;
      } catch (Fe) {
        Vr(D, p, Fe);
      }
    }
    if (p.subtreeFlags & 12854) for (p = p.child; p !== null; ) yb(p, d), p = p.sibling;
  }
  function yb(d, p) {
    var b = d.alternate, _ = d.flags;
    switch (d.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        if (ba(p, d), ss(d), _ & 4) {
          try {
            Jp(3, d, d.return), Zp(3, d);
          } catch (Gt) {
            Vr(d, d.return, Gt);
          }
          try {
            Jp(5, d, d.return);
          } catch (Gt) {
            Vr(d, d.return, Gt);
          }
        }
        break;
      case 1:
        ba(p, d), ss(d), _ & 512 && b !== null && nf(b, b.return);
        break;
      case 5:
        if (ba(p, d), ss(d), _ & 512 && b !== null && nf(b, b.return), d.flags & 32) {
          var D = d.stateNode;
          try {
            Oe(D, "");
          } catch (Gt) {
            Vr(d, d.return, Gt);
          }
        }
        if (_ & 4 && (D = d.stateNode, D != null)) {
          var j = d.memoizedProps, oe = b !== null ? b.memoizedProps : j, me = d.type, Se = d.updateQueue;
          if (d.updateQueue = null, Se !== null) try {
            me === "input" && j.type === "radio" && j.name != null && tt(D, j), St(me, oe);
            var Fe = St(me, j);
            for (oe = 0; oe < Se.length; oe += 2) {
              var at = Se[oe], ct = Se[oe + 1];
              at === "style" ? zt(D, ct) : at === "dangerouslySetInnerHTML" ? Xe(D, ct) : at === "children" ? Oe(D, ct) : M(D, at, ct, Fe);
            }
            switch (me) {
              case "input":
                $e(D, j);
                break;
              case "textarea":
                ut(D, j);
                break;
              case "select":
                var st = D._wrapperState.wasMultiple;
                D._wrapperState.wasMultiple = !!j.multiple;
                var Mt = j.value;
                Mt != null ? gt(D, !!j.multiple, Mt, !1) : st !== !!j.multiple && (j.defaultValue != null ? gt(
                  D,
                  !!j.multiple,
                  j.defaultValue,
                  !0
                ) : gt(D, !!j.multiple, j.multiple ? [] : "", !1));
            }
            D[Rp] = j;
          } catch (Gt) {
            Vr(d, d.return, Gt);
          }
        }
        break;
      case 6:
        if (ba(p, d), ss(d), _ & 4) {
          if (d.stateNode === null) throw Error(n(162));
          D = d.stateNode, j = d.memoizedProps;
          try {
            D.nodeValue = j;
          } catch (Gt) {
            Vr(d, d.return, Gt);
          }
        }
        break;
      case 3:
        if (ba(p, d), ss(d), _ & 4 && b !== null && b.memoizedState.isDehydrated) try {
          pa(p.containerInfo);
        } catch (Gt) {
          Vr(d, d.return, Gt);
        }
        break;
      case 4:
        ba(p, d), ss(d);
        break;
      case 13:
        ba(p, d), ss(d), D = d.child, D.flags & 8192 && (j = D.memoizedState !== null, D.stateNode.isHidden = j, !j || D.alternate !== null && D.alternate.memoizedState !== null || (Sb = yn())), _ & 4 && k0(d);
        break;
      case 22:
        if (at = b !== null && b.memoizedState !== null, d.mode & 1 ? (Ci = (Fe = Ci) || at, ba(p, d), Ci = Fe) : ba(p, d), ss(d), _ & 8192) {
          if (Fe = d.memoizedState !== null, (d.stateNode.isHidden = Fe) && !at && d.mode & 1) for (Nt = d, at = d.child; at !== null; ) {
            for (ct = Nt = at; Nt !== null; ) {
              switch (st = Nt, Mt = st.child, st.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Jp(4, st, st.return);
                  break;
                case 1:
                  nf(st, st.return);
                  var Ht = st.stateNode;
                  if (typeof Ht.componentWillUnmount == "function") {
                    _ = st, b = st.return;
                    try {
                      p = _, Ht.props = p.memoizedProps, Ht.state = p.memoizedState, Ht.componentWillUnmount();
                    } catch (Gt) {
                      Vr(_, b, Gt);
                    }
                  }
                  break;
                case 5:
                  nf(st, st.return);
                  break;
                case 22:
                  if (st.memoizedState !== null) {
                    th(ct);
                    continue;
                  }
              }
              Mt !== null ? (Mt.return = st, Nt = Mt) : th(ct);
            }
            at = at.sibling;
          }
          e: for (at = null, ct = d; ; ) {
            if (ct.tag === 5) {
              if (at === null) {
                at = ct;
                try {
                  D = ct.stateNode, Fe ? (j = D.style, typeof j.setProperty == "function" ? j.setProperty("display", "none", "important") : j.display = "none") : (me = ct.stateNode, Se = ct.memoizedProps.style, oe = Se != null && Se.hasOwnProperty("display") ? Se.display : null, me.style.display = yt("display", oe));
                } catch (Gt) {
                  Vr(d, d.return, Gt);
                }
              }
            } else if (ct.tag === 6) {
              if (at === null) try {
                ct.stateNode.nodeValue = Fe ? "" : ct.memoizedProps;
              } catch (Gt) {
                Vr(d, d.return, Gt);
              }
            } else if ((ct.tag !== 22 && ct.tag !== 23 || ct.memoizedState === null || ct === d) && ct.child !== null) {
              ct.child.return = ct, ct = ct.child;
              continue;
            }
            if (ct === d) break e;
            for (; ct.sibling === null; ) {
              if (ct.return === null || ct.return === d) break e;
              at === ct && (at = null), ct = ct.return;
            }
            at === ct && (at = null), ct.sibling.return = ct.return, ct = ct.sibling;
          }
        }
        break;
      case 19:
        ba(p, d), ss(d), _ & 4 && k0(d);
        break;
      case 21:
        break;
      default:
        ba(
          p,
          d
        ), ss(d);
    }
  }
  function ss(d) {
    var p = d.flags;
    if (p & 2) {
      try {
        e: {
          for (var b = d.return; b !== null; ) {
            if (eh(b)) {
              var _ = b;
              break e;
            }
            b = b.return;
          }
          throw Error(n(160));
        }
        switch (_.tag) {
          case 5:
            var D = _.stateNode;
            _.flags & 32 && (Oe(D, ""), _.flags &= -33);
            var j = Hl(d);
            Ja(d, j, D);
            break;
          case 3:
          case 4:
            var oe = _.stateNode.containerInfo, me = Hl(d);
            Qa(d, me, oe);
            break;
          default:
            throw Error(n(161));
        }
      } catch (Se) {
        Vr(d, d.return, Se);
      }
      d.flags &= -3;
    }
    p & 4096 && (d.flags &= -4097);
  }
  function BO(d, p, b) {
    Nt = d, bb(d);
  }
  function bb(d, p, b) {
    for (var _ = (d.mode & 1) !== 0; Nt !== null; ) {
      var D = Nt, j = D.child;
      if (D.tag === 22 && _) {
        var oe = D.memoizedState !== null || Qp;
        if (!oe) {
          var me = D.alternate, Se = me !== null && me.memoizedState !== null || Ci;
          me = Qp;
          var Fe = Ci;
          if (Qp = oe, (Ci = Se) && !Fe) for (Nt = D; Nt !== null; ) oe = Nt, Se = oe.child, oe.tag === 22 && oe.memoizedState !== null ? wb(D) : Se !== null ? (Se.return = oe, Nt = Se) : wb(D);
          for (; j !== null; ) Nt = j, bb(j), j = j.sibling;
          Nt = D, Qp = me, Ci = Fe;
        }
        P0(d);
      } else D.subtreeFlags & 8772 && j !== null ? (j.return = D, Nt = j) : P0(d);
    }
  }
  function P0(d) {
    for (; Nt !== null; ) {
      var p = Nt;
      if (p.flags & 8772) {
        var b = p.alternate;
        try {
          if (p.flags & 8772) switch (p.tag) {
            case 0:
            case 11:
            case 15:
              Ci || Zp(5, p);
              break;
            case 1:
              var _ = p.stateNode;
              if (p.flags & 4 && !Ci) if (b === null) _.componentDidMount();
              else {
                var D = p.elementType === p.type ? b.memoizedProps : ya(p.type, b.memoizedProps);
                _.componentDidUpdate(D, b.memoizedState, _.__reactInternalSnapshotBeforeUpdate);
              }
              var j = p.updateQueue;
              j !== null && ob(p, j, _);
              break;
            case 3:
              var oe = p.updateQueue;
              if (oe !== null) {
                if (b = null, p.child !== null) switch (p.child.tag) {
                  case 5:
                    b = p.child.stateNode;
                    break;
                  case 1:
                    b = p.child.stateNode;
                }
                ob(p, oe, b);
              }
              break;
            case 5:
              var me = p.stateNode;
              if (b === null && p.flags & 4) {
                b = me;
                var Se = p.memoizedProps;
                switch (p.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    Se.autoFocus && b.focus();
                    break;
                  case "img":
                    Se.src && (b.src = Se.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (p.memoizedState === null) {
                var Fe = p.alternate;
                if (Fe !== null) {
                  var at = Fe.memoizedState;
                  if (at !== null) {
                    var ct = at.dehydrated;
                    ct !== null && pa(ct);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(n(163));
          }
          Ci || p.flags & 512 && vb(p);
        } catch (st) {
          Vr(p, p.return, st);
        }
      }
      if (p === d) {
        Nt = null;
        break;
      }
      if (b = p.sibling, b !== null) {
        b.return = p.return, Nt = b;
        break;
      }
      Nt = p.return;
    }
  }
  function th(d) {
    for (; Nt !== null; ) {
      var p = Nt;
      if (p === d) {
        Nt = null;
        break;
      }
      var b = p.sibling;
      if (b !== null) {
        b.return = p.return, Nt = b;
        break;
      }
      Nt = p.return;
    }
  }
  function wb(d) {
    for (; Nt !== null; ) {
      var p = Nt;
      try {
        switch (p.tag) {
          case 0:
          case 11:
          case 15:
            var b = p.return;
            try {
              Zp(4, p);
            } catch (Se) {
              Vr(p, b, Se);
            }
            break;
          case 1:
            var _ = p.stateNode;
            if (typeof _.componentDidMount == "function") {
              var D = p.return;
              try {
                _.componentDidMount();
              } catch (Se) {
                Vr(p, D, Se);
              }
            }
            var j = p.return;
            try {
              vb(p);
            } catch (Se) {
              Vr(p, j, Se);
            }
            break;
          case 5:
            var oe = p.return;
            try {
              vb(p);
            } catch (Se) {
              Vr(p, oe, Se);
            }
        }
      } catch (Se) {
        Vr(p, p.return, Se);
      }
      if (p === d) {
        Nt = null;
        break;
      }
      var me = p.sibling;
      if (me !== null) {
        me.return = p.return, Nt = me;
        break;
      }
      Nt = p.return;
    }
  }
  var HO = Math.ceil, Fu = N.ReactCurrentDispatcher, Yc = N.ReactCurrentOwner, ri = N.ReactCurrentBatchConfig, Vn = 0, No = null, So = null, oi = 0, xs = 0, rf = Fs(0), lo = 0, nh = null, Za = 0, of = 0, gg = 0, rh = null, as = null, Sb = 0, sf = 1 / 0, Es = null, af = !1, Xc = null, zu = null, vg = !1, Vl = null, oh = 0, Bu = 0, lf = null, ih = -1, xi = 0;
  function Co() {
    return Vn & 6 ? yn() : ih !== -1 ? ih : ih = yn();
  }
  function el(d) {
    return d.mode & 1 ? Vn & 2 && oi !== 0 ? oi & -oi : FO.transition !== null ? (xi === 0 && (xi = Dd()), xi) : (d = Jn, d !== 0 || (d = window.event, d = d === void 0 ? 16 : zd(d.type)), d) : 1;
  }
  function Li(d, p, b, _) {
    if (50 < Bu) throw Bu = 0, lf = null, Error(n(185));
    Pl(d, b, _), (!(Vn & 2) || d !== No) && (d === No && (!(Vn & 2) && (of |= b), lo === 4 && wa(d, oi)), ls(d, _), b === 1 && Vn === 0 && !(p.mode & 1) && (sf = yn() + 500, Qd && Ga()));
  }
  function ls(d, p) {
    var b = d.callbackNode;
    Ec(d, p);
    var _ = fa(d, d === No ? oi : 0);
    if (_ === 0) b !== null && Ln(b), d.callbackNode = null, d.callbackPriority = 0;
    else if (p = _ & -_, d.callbackPriority !== p) {
      if (b != null && Ln(b), p === 1) d.tag === 0 ? Pu(Cb.bind(null, d)) : $m(Cb.bind(null, d)), qd(function() {
        !(Vn & 6) && Ga();
      }), b = null;
      else {
        switch (Nd(_)) {
          case 1:
            b = yi;
            break;
          case 4:
            b = Ds;
            break;
          case 16:
            b = Mn;
            break;
          case 536870912:
            b = ki;
            break;
          default:
            b = Mn;
        }
        b = z0(b, yg.bind(null, d));
      }
      d.callbackPriority = p, d.callbackNode = b;
    }
  }
  function yg(d, p) {
    if (ih = -1, xi = 0, Vn & 6) throw Error(n(327));
    var b = d.callbackNode;
    if (uf() && d.callbackNode !== b) return null;
    var _ = fa(d, d === No ? oi : 0);
    if (_ === 0) return null;
    if (_ & 30 || _ & d.expiredLanes || p) p = bg(d, _);
    else {
      p = _;
      var D = Vn;
      Vn |= 2;
      var j = I0();
      (No !== d || oi !== p) && (Es = null, sf = yn() + 500, Ul(d, p));
      do
        try {
          D0();
          break;
        } catch (me) {
          M0(d, me);
        }
      while (!0);
      Jy(), Fu.current = j, Vn = D, So !== null ? p = 0 : (No = null, oi = 0, p = lo);
    }
    if (p !== 0) {
      if (p === 2 && (D = Su(d), D !== 0 && (_ = D, p = sh(d, D))), p === 1) throw b = nh, Ul(d, 0), wa(d, _), ls(d, yn()), b;
      if (p === 6) wa(d, _);
      else {
        if (D = d.current.alternate, !(_ & 30) && !VO(D) && (p = bg(d, _), p === 2 && (j = Su(d), j !== 0 && (_ = j, p = sh(d, j))), p === 1)) throw b = nh, Ul(d, 0), wa(d, _), ls(d, yn()), b;
        switch (d.finishedWork = D, d.finishedLanes = _, p) {
          case 0:
          case 1:
            throw Error(n(345));
          case 2:
            Zc(d, as, Es);
            break;
          case 3:
            if (wa(d, _), (_ & 130023424) === _ && (p = Sb + 500 - yn(), 10 < p)) {
              if (fa(d, 0) !== 0) break;
              if (D = d.suspendedLanes, (D & _) !== _) {
                Co(), d.pingedLanes |= d.suspendedLanes & D;
                break;
              }
              d.timeoutHandle = Am(Zc.bind(null, d, as, Es), p);
              break;
            }
            Zc(d, as, Es);
            break;
          case 4:
            if (wa(d, _), (_ & 4194240) === _) break;
            for (p = d.eventTimes, D = -1; 0 < _; ) {
              var oe = 31 - Pi(_);
              j = 1 << oe, oe = p[oe], oe > D && (D = oe), _ &= ~j;
            }
            if (_ = D, _ = yn() - _, _ = (120 > _ ? 120 : 480 > _ ? 480 : 1080 > _ ? 1080 : 1920 > _ ? 1920 : 3e3 > _ ? 3e3 : 4320 > _ ? 4320 : 1960 * HO(_ / 1960)) - _, 10 < _) {
              d.timeoutHandle = Am(Zc.bind(null, d, as, Es), _);
              break;
            }
            Zc(d, as, Es);
            break;
          case 5:
            Zc(d, as, Es);
            break;
          default:
            throw Error(n(329));
        }
      }
    }
    return ls(d, yn()), d.callbackNode === b ? yg.bind(null, d) : null;
  }
  function sh(d, p) {
    var b = rh;
    return d.current.memoizedState.isDehydrated && (Ul(d, p).flags |= 256), d = bg(d, p), d !== 2 && (p = as, as = b, p !== null && Qc(p)), d;
  }
  function Qc(d) {
    as === null ? as = d : as.push.apply(as, d);
  }
  function VO(d) {
    for (var p = d; ; ) {
      if (p.flags & 16384) {
        var b = p.updateQueue;
        if (b !== null && (b = b.stores, b !== null)) for (var _ = 0; _ < b.length; _++) {
          var D = b[_], j = D.getSnapshot;
          D = D.value;
          try {
            if (!ma(j(), D)) return !1;
          } catch {
            return !1;
          }
        }
      }
      if (b = p.child, p.subtreeFlags & 16384 && b !== null) b.return = p, p = b;
      else {
        if (p === d) break;
        for (; p.sibling === null; ) {
          if (p.return === null || p.return === d) return !0;
          p = p.return;
        }
        p.sibling.return = p.return, p = p.sibling;
      }
    }
    return !0;
  }
  function wa(d, p) {
    for (p &= ~gg, p &= ~of, d.suspendedLanes |= p, d.pingedLanes &= ~p, d = d.expirationTimes; 0 < p; ) {
      var b = 31 - Pi(p), _ = 1 << b;
      d[b] = -1, p &= ~_;
    }
  }
  function Cb(d) {
    if (Vn & 6) throw Error(n(327));
    uf();
    var p = fa(d, 0);
    if (!(p & 1)) return ls(d, yn()), null;
    var b = bg(d, p);
    if (d.tag !== 0 && b === 2) {
      var _ = Su(d);
      _ !== 0 && (p = _, b = sh(d, _));
    }
    if (b === 1) throw b = nh, Ul(d, 0), wa(d, p), ls(d, yn()), b;
    if (b === 6) throw Error(n(345));
    return d.finishedWork = d.current.alternate, d.finishedLanes = p, Zc(d, as, Es), ls(d, yn()), null;
  }
  function xb(d, p) {
    var b = Vn;
    Vn |= 1;
    try {
      return d(p);
    } finally {
      Vn = b, Vn === 0 && (sf = yn() + 500, Qd && Ga());
    }
  }
  function Jc(d) {
    Vl !== null && Vl.tag === 0 && !(Vn & 6) && uf();
    var p = Vn;
    Vn |= 1;
    var b = ri.transition, _ = Jn;
    try {
      if (ri.transition = null, Jn = 1, d) return d();
    } finally {
      Jn = _, ri.transition = b, Vn = p, !(Vn & 6) && Ga();
    }
  }
  function Eb() {
    xs = rf.current, Ir(rf);
  }
  function Ul(d, p) {
    d.finishedWork = null, d.finishedLanes = 0;
    var b = d.timeoutHandle;
    if (b !== -1 && (d.timeoutHandle = -1, qy(b)), So !== null) for (b = So.return; b !== null; ) {
      var _ = b;
      switch (Fm(_), _.tag) {
        case 1:
          _ = _.type.childContextTypes, _ != null && Xd();
          break;
        case 3:
          zc(), Ir(Do), Ir(no), Jt();
          break;
        case 5:
          Vm(_);
          break;
        case 4:
          zc();
          break;
        case 13:
          Ir(Qr);
          break;
        case 19:
          Ir(Qr);
          break;
        case 10:
          Zy(_.type._context);
          break;
        case 22:
        case 23:
          Eb();
      }
      b = b.return;
    }
    if (No = d, So = d = Hu(d.current, null), oi = xs = p, lo = 0, nh = null, gg = of = Za = 0, as = rh = null, jc !== null) {
      for (p = 0; p < jc.length; p++) if (b = jc[p], _ = b.interleaved, _ !== null) {
        b.interleaved = null;
        var D = _.next, j = b.pending;
        if (j !== null) {
          var oe = j.next;
          j.next = D, _.next = oe;
        }
        b.pending = _;
      }
      jc = null;
    }
    return d;
  }
  function M0(d, p) {
    do {
      var b = So;
      try {
        if (Jy(), kn.current = Gc, Wm) {
          for (var _ = er.memoizedState; _ !== null; ) {
            var D = _.queue;
            D !== null && (D.pending = null), _ = _.next;
          }
          Wm = !1;
        }
        if (yr = 0, Ho = yo = er = null, $p = !1, Bc = 0, Yc.current = null, b === null || b.return === null) {
          lo = 1, nh = p, So = null;
          break;
        }
        e: {
          var j = d, oe = b.return, me = b, Se = p;
          if (p = oi, me.flags |= 32768, Se !== null && typeof Se == "object" && typeof Se.then == "function") {
            var Fe = Se, at = me, ct = at.tag;
            if (!(at.mode & 1) && (ct === 0 || ct === 11 || ct === 15)) {
              var st = at.alternate;
              st ? (at.updateQueue = st.updateQueue, at.memoizedState = st.memoizedState, at.lanes = st.lanes) : (at.updateQueue = null, at.memoizedState = null);
            }
            var Mt = y0(oe);
            if (Mt !== null) {
              Mt.flags &= -257, ju(Mt, oe, me, j, p), Mt.mode & 1 && fb(j, Fe, p), p = Mt, Se = Fe;
              var Ht = p.updateQueue;
              if (Ht === null) {
                var Gt = /* @__PURE__ */ new Set();
                Gt.add(Se), p.updateQueue = Gt;
              } else Ht.add(Se);
              break e;
            } else {
              if (!(p & 1)) {
                fb(j, Fe, p), Tb();
                break e;
              }
              Se = Error(n(426));
            }
          } else if (Hr && me.mode & 1) {
            var uo = y0(oe);
            if (uo !== null) {
              !(uo.flags & 65536) && (uo.flags |= 256), ju(uo, oe, me, j, p), Fl(qc(Se, me));
              break e;
            }
          }
          j = Se = qc(Se, me), lo !== 4 && (lo = 2), rh === null ? rh = [j] : rh.push(j), j = oe;
          do {
            switch (j.tag) {
              case 3:
                j.flags |= 65536, p &= -p, j.lanes |= p;
                var ke = v0(j, Se, p);
                f0(j, ke);
                break e;
              case 1:
                me = Se;
                var Ee = j.type, Ae = j.stateNode;
                if (!(j.flags & 128) && (typeof Ee.getDerivedStateFromError == "function" || Ae !== null && typeof Ae.componentDidCatch == "function" && (zu === null || !zu.has(Ae)))) {
                  j.flags |= 65536, p &= -p, j.lanes |= p;
                  var lt = db(j, me, p);
                  f0(j, lt);
                  break e;
                }
            }
            j = j.return;
          } while (j !== null);
        }
        N0(b);
      } catch (Vt) {
        p = Vt, So === b && b !== null && (So = b = b.return);
        continue;
      }
      break;
    } while (!0);
  }
  function I0() {
    var d = Fu.current;
    return Fu.current = Gc, d === null ? Gc : d;
  }
  function Tb() {
    (lo === 0 || lo === 3 || lo === 2) && (lo = 4), No === null || !(Za & 268435455) && !(of & 268435455) || wa(No, oi);
  }
  function bg(d, p) {
    var b = Vn;
    Vn |= 2;
    var _ = I0();
    (No !== d || oi !== p) && (Es = null, Ul(d, p));
    do
      try {
        UO();
        break;
      } catch (D) {
        M0(d, D);
      }
    while (!0);
    if (Jy(), Vn = b, Fu.current = _, So !== null) throw Error(n(261));
    return No = null, oi = 0, lo;
  }
  function UO() {
    for (; So !== null; ) A0(So);
  }
  function D0() {
    for (; So !== null && !Or(); ) A0(So);
  }
  function A0(d) {
    var p = F0(d.alternate, d, xs);
    d.memoizedProps = d.pendingProps, p === null ? N0(d) : So = p, Yc.current = null;
  }
  function N0(d) {
    var p = d;
    do {
      var b = p.alternate;
      if (d = p.return, p.flags & 32768) {
        if (b = pg(b, p), b !== null) {
          b.flags &= 32767, So = b;
          return;
        }
        if (d !== null) d.flags |= 32768, d.subtreeFlags = 0, d.deletions = null;
        else {
          lo = 6, So = null;
          return;
        }
      } else if (b = T0(b, p, xs), b !== null) {
        So = b;
        return;
      }
      if (p = p.sibling, p !== null) {
        So = p;
        return;
      }
      So = p = d;
    } while (p !== null);
    lo === 0 && (lo = 5);
  }
  function Zc(d, p, b) {
    var _ = Jn, D = ri.transition;
    try {
      ri.transition = null, Jn = 1, WO(d, p, b, _);
    } finally {
      ri.transition = D, Jn = _;
    }
    return null;
  }
  function WO(d, p, b, _) {
    do
      uf();
    while (Vl !== null);
    if (Vn & 6) throw Error(n(327));
    b = d.finishedWork;
    var D = d.finishedLanes;
    if (b === null) return null;
    if (d.finishedWork = null, d.finishedLanes = 0, b === d.current) throw Error(n(177));
    d.callbackNode = null, d.callbackPriority = 0;
    var j = b.lanes | b.childLanes;
    if (_y(d, j), d === No && (So = No = null, oi = 0), !(b.subtreeFlags & 2064) && !(b.flags & 2064) || vg || (vg = !0, z0(Mn, function() {
      return uf(), null;
    })), j = (b.flags & 15990) !== 0, b.subtreeFlags & 15990 || j) {
      j = ri.transition, ri.transition = null;
      var oe = Jn;
      Jn = 1;
      var me = Vn;
      Vn |= 4, Yc.current = null, O0(d, b), yb(b, d), Vd(Dc), Ls = !!Op, Dc = Op = null, d.current = b, BO(b), Zo(), Vn = me, Jn = oe, ri.transition = j;
    } else d.current = b;
    if (vg && (vg = !1, Vl = d, oh = D), j = d.pendingLanes, j === 0 && (zu = null), pp(b.stateNode), ls(d, yn()), p !== null) for (_ = d.onRecoverableError, b = 0; b < p.length; b++) D = p[b], _(D.value, { componentStack: D.stack, digest: D.digest });
    if (af) throw af = !1, d = Xc, Xc = null, d;
    return oh & 1 && d.tag !== 0 && uf(), j = d.pendingLanes, j & 1 ? d === lf ? Bu++ : (Bu = 0, lf = d) : Bu = 0, Ga(), null;
  }
  function uf() {
    if (Vl !== null) {
      var d = Nd(oh), p = ri.transition, b = Jn;
      try {
        if (ri.transition = null, Jn = 16 > d ? 16 : d, Vl === null) var _ = !1;
        else {
          if (d = Vl, Vl = null, oh = 0, Vn & 6) throw Error(n(331));
          var D = Vn;
          for (Vn |= 4, Nt = d.current; Nt !== null; ) {
            var j = Nt, oe = j.child;
            if (Nt.flags & 16) {
              var me = j.deletions;
              if (me !== null) {
                for (var Se = 0; Se < me.length; Se++) {
                  var Fe = me[Se];
                  for (Nt = Fe; Nt !== null; ) {
                    var at = Nt;
                    switch (at.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Jp(8, at, j);
                    }
                    var ct = at.child;
                    if (ct !== null) ct.return = at, Nt = ct;
                    else for (; Nt !== null; ) {
                      at = Nt;
                      var st = at.sibling, Mt = at.return;
                      if (mg(at), at === Fe) {
                        Nt = null;
                        break;
                      }
                      if (st !== null) {
                        st.return = Mt, Nt = st;
                        break;
                      }
                      Nt = Mt;
                    }
                  }
                }
                var Ht = j.alternate;
                if (Ht !== null) {
                  var Gt = Ht.child;
                  if (Gt !== null) {
                    Ht.child = null;
                    do {
                      var uo = Gt.sibling;
                      Gt.sibling = null, Gt = uo;
                    } while (Gt !== null);
                  }
                }
                Nt = j;
              }
            }
            if (j.subtreeFlags & 2064 && oe !== null) oe.return = j, Nt = oe;
            else e: for (; Nt !== null; ) {
              if (j = Nt, j.flags & 2048) switch (j.tag) {
                case 0:
                case 11:
                case 15:
                  Jp(9, j, j.return);
              }
              var ke = j.sibling;
              if (ke !== null) {
                ke.return = j.return, Nt = ke;
                break e;
              }
              Nt = j.return;
            }
          }
          var Ee = d.current;
          for (Nt = Ee; Nt !== null; ) {
            oe = Nt;
            var Ae = oe.child;
            if (oe.subtreeFlags & 2064 && Ae !== null) Ae.return = oe, Nt = Ae;
            else e: for (oe = Ee; Nt !== null; ) {
              if (me = Nt, me.flags & 2048) try {
                switch (me.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Zp(9, me);
                }
              } catch (Vt) {
                Vr(me, me.return, Vt);
              }
              if (me === oe) {
                Nt = null;
                break e;
              }
              var lt = me.sibling;
              if (lt !== null) {
                lt.return = me.return, Nt = lt;
                break e;
              }
              Nt = me.return;
            }
          }
          if (Vn = D, Ga(), bi && typeof bi.onPostCommitFiberRoot == "function") try {
            bi.onPostCommitFiberRoot(Qi, d);
          } catch {
          }
          _ = !0;
        }
        return _;
      } finally {
        Jn = b, ri.transition = p;
      }
    }
    return !1;
  }
  function L0(d, p, b) {
    p = qc(b, p), p = v0(d, p, 1), d = Nu(d, p, 1), p = Co(), d !== null && (Pl(d, 1, p), ls(d, p));
  }
  function Vr(d, p, b) {
    if (d.tag === 3) L0(d, d, b);
    else for (; p !== null; ) {
      if (p.tag === 3) {
        L0(p, d, b);
        break;
      } else if (p.tag === 1) {
        var _ = p.stateNode;
        if (typeof p.type.getDerivedStateFromError == "function" || typeof _.componentDidCatch == "function" && (zu === null || !zu.has(_))) {
          d = qc(b, d), d = db(p, d, 1), p = Nu(p, d, 1), d = Co(), p !== null && (Pl(p, 1, d), ls(p, d));
          break;
        }
      }
      p = p.return;
    }
  }
  function GO(d, p, b) {
    var _ = d.pingCache;
    _ !== null && _.delete(p), p = Co(), d.pingedLanes |= d.suspendedLanes & b, No === d && (oi & b) === b && (lo === 4 || lo === 3 && (oi & 130023424) === oi && 500 > yn() - Sb ? Ul(d, 0) : gg |= b), ls(d, p);
  }
  function $0(d, p) {
    p === 0 && (d.mode & 1 ? (p = ys, ys <<= 1, !(ys & 130023424) && (ys = 4194304)) : p = 1);
    var b = Co();
    d = Ss(d, p), d !== null && (Pl(d, p, b), ls(d, b));
  }
  function qO(d) {
    var p = d.memoizedState, b = 0;
    p !== null && (b = p.retryLane), $0(d, b);
  }
  function j0(d, p) {
    var b = 0;
    switch (d.tag) {
      case 13:
        var _ = d.stateNode, D = d.memoizedState;
        D !== null && (b = D.retryLane);
        break;
      case 19:
        _ = d.stateNode;
        break;
      default:
        throw Error(n(314));
    }
    _ !== null && _.delete(p), $0(d, b);
  }
  var F0;
  F0 = function(d, p, b) {
    if (d !== null) if (d.memoizedProps !== p.pendingProps || Do.current) bo = !0;
    else {
      if (!(d.lanes & b) && !(p.flags & 128)) return bo = !1, Yp(d, p, b);
      bo = !!(d.flags & 131072);
    }
    else bo = !1, Hr && p.flags & 1048576 && l0(p, jl, p.index);
    switch (p.lanes = 0, p.tag) {
      case 2:
        var _ = p.type;
        Vs(d, p), d = p.pendingProps;
        var D = es(p, no.current);
        Xr(p, b), D = Lu(null, p, _, d, D, b);
        var j = va();
        return p.flags |= 1, typeof D == "object" && D !== null && typeof D.render == "function" && D.$$typeof === void 0 ? (p.tag = 1, p.memoizedState = null, p.updateQueue = null, go(_) ? (j = !0, Bo(p)) : j = !1, p.memoizedState = D.state !== null && D.state !== void 0 ? D.state : null, rb(p), D.updater = lg, p.stateNode = D, D._reactInternals = p, Up(p, _, d, b), p = qp(null, p, _, !0, j, b)) : (p.tag = 0, Hr && j && jm(p), ni(null, p, D, b), p = p.child), p;
      case 16:
        _ = p.elementType;
        e: {
          switch (Vs(d, p), d = p.pendingProps, D = _._init, _ = D(_._payload), p.type = _, D = p.tag = YO(_), d = ya(_, d), D) {
            case 0:
              p = b0(null, p, _, d, b);
              break e;
            case 1:
              p = w0(null, p, _, d, b);
              break e;
            case 11:
              p = is(null, p, _, d, b);
              break e;
            case 14:
              p = Kc(null, p, _, ya(_.type, d), b);
              break e;
          }
          throw Error(n(
            306,
            _,
            ""
          ));
        }
        return p;
      case 0:
        return _ = p.type, D = p.pendingProps, D = p.elementType === _ ? D : ya(_, D), b0(d, p, _, D, b);
      case 1:
        return _ = p.type, D = p.pendingProps, D = p.elementType === _ ? D : ya(_, D), w0(d, p, _, D, b);
      case 3:
        e: {
          if (tf(p), d === null) throw Error(n(387));
          _ = p.pendingProps, j = p.memoizedState, D = j.element, d0(d, p), Ip(p, _, null, b);
          var oe = p.memoizedState;
          if (_ = oe.element, j.isDehydrated) if (j = { element: _, isDehydrated: !1, cache: oe.cache, pendingSuspenseBoundaries: oe.pendingSuspenseBoundaries, transitions: oe.transitions }, p.updateQueue.baseState = j, p.memoizedState = j, p.flags & 256) {
            D = qc(Error(n(423)), p), p = S0(d, p, _, b, D);
            break e;
          } else if (_ !== D) {
            D = qc(Error(n(424)), p), p = S0(d, p, _, b, D);
            break e;
          } else for (ns = Va(p.stateNode.containerInfo.firstChild), ts = p, Hr = !0, Bs = null, b = Rt(p, null, _, b), p.child = b; b; ) b.flags = b.flags & -3 | 4096, b = b.sibling;
          else {
            if (Au(), _ === D) {
              p = Us(d, p, b);
              break e;
            }
            ni(d, p, _, b);
          }
          p = p.child;
        }
        return p;
      case 5:
        return p0(p), d === null && Xy(p), _ = p.type, D = p.pendingProps, j = d !== null ? d.memoizedProps : null, oe = D.children, Dm(_, D) ? oe = null : j !== null && Dm(_, j) && (p.flags |= 32), pb(d, p), ni(d, p, oe, b), p.child;
      case 6:
        return d === null && Xy(p), null;
      case 13:
        return fg(d, p, b);
      case 4:
        return ib(p, p.stateNode.containerInfo), _ = p.pendingProps, d === null ? p.child = io(p, null, _, b) : ni(d, p, _, b), p.child;
      case 11:
        return _ = p.type, D = p.pendingProps, D = p.elementType === _ ? D : ya(_, D), is(d, p, _, D, b);
      case 7:
        return ni(d, p, p.pendingProps, b), p.child;
      case 8:
        return ni(d, p, p.pendingProps.children, b), p.child;
      case 12:
        return ni(d, p, p.pendingProps.children, b), p.child;
      case 10:
        e: {
          if (_ = p.type._context, D = p.pendingProps, j = p.memoizedProps, oe = D.value, Xt(ws, _._currentValue), _._currentValue = oe, j !== null) if (ma(j.value, oe)) {
            if (j.children === D.children && !Do.current) {
              p = Us(d, p, b);
              break e;
            }
          } else for (j = p.child, j !== null && (j.return = p); j !== null; ) {
            var me = j.dependencies;
            if (me !== null) {
              oe = j.child;
              for (var Se = me.firstContext; Se !== null; ) {
                if (Se.context === _) {
                  if (j.tag === 1) {
                    Se = zl(-1, b & -b), Se.tag = 2;
                    var Fe = j.updateQueue;
                    if (Fe !== null) {
                      Fe = Fe.shared;
                      var at = Fe.pending;
                      at === null ? Se.next = Se : (Se.next = at.next, at.next = Se), Fe.pending = Se;
                    }
                  }
                  j.lanes |= b, Se = j.alternate, Se !== null && (Se.lanes |= b), eb(
                    j.return,
                    b,
                    p
                  ), me.lanes |= b;
                  break;
                }
                Se = Se.next;
              }
            } else if (j.tag === 10) oe = j.type === p.type ? null : j.child;
            else if (j.tag === 18) {
              if (oe = j.return, oe === null) throw Error(n(341));
              oe.lanes |= b, me = oe.alternate, me !== null && (me.lanes |= b), eb(oe, b, p), oe = j.sibling;
            } else oe = j.child;
            if (oe !== null) oe.return = j;
            else for (oe = j; oe !== null; ) {
              if (oe === p) {
                oe = null;
                break;
              }
              if (j = oe.sibling, j !== null) {
                j.return = oe.return, oe = j;
                break;
              }
              oe = oe.return;
            }
            j = oe;
          }
          ni(d, p, D.children, b), p = p.child;
        }
        return p;
      case 9:
        return D = p.type, _ = p.pendingProps.children, Xr(p, b), D = Hs(D), _ = _(D), p.flags |= 1, ni(d, p, _, b), p.child;
      case 14:
        return _ = p.type, D = ya(_, p.pendingProps), D = ya(_.type, D), Kc(d, p, _, D, b);
      case 15:
        return En(d, p, p.type, p.pendingProps, b);
      case 17:
        return _ = p.type, D = p.pendingProps, D = p.elementType === _ ? D : ya(_, D), Vs(d, p), p.tag = 1, go(_) ? (d = !0, Bo(p)) : d = !1, Xr(p, b), ug(p, _, D), Up(p, _, D, b), qp(null, p, _, !0, d, b);
      case 19:
        return Xa(d, p, b);
      case 22:
        return Gp(d, p, b);
    }
    throw Error(n(156, p.tag));
  };
  function z0(d, p) {
    return Kt(d, p);
  }
  function KO(d, p, b, _) {
    this.tag = d, this.key = b, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = p, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = _, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function Gs(d, p, b, _) {
    return new KO(d, p, b, _);
  }
  function _b(d) {
    return d = d.prototype, !(!d || !d.isReactComponent);
  }
  function YO(d) {
    if (typeof d == "function") return _b(d) ? 1 : 0;
    if (d != null) {
      if (d = d.$$typeof, d === W) return 11;
      if (d === G) return 14;
    }
    return 2;
  }
  function Hu(d, p) {
    var b = d.alternate;
    return b === null ? (b = Gs(d.tag, p, d.key, d.mode), b.elementType = d.elementType, b.type = d.type, b.stateNode = d.stateNode, b.alternate = d, d.alternate = b) : (b.pendingProps = p, b.type = d.type, b.flags = 0, b.subtreeFlags = 0, b.deletions = null), b.flags = d.flags & 14680064, b.childLanes = d.childLanes, b.lanes = d.lanes, b.child = d.child, b.memoizedProps = d.memoizedProps, b.memoizedState = d.memoizedState, b.updateQueue = d.updateQueue, p = d.dependencies, b.dependencies = p === null ? null : { lanes: p.lanes, firstContext: p.firstContext }, b.sibling = d.sibling, b.index = d.index, b.ref = d.ref, b;
  }
  function ah(d, p, b, _, D, j) {
    var oe = 2;
    if (_ = d, typeof d == "function") _b(d) && (oe = 1);
    else if (typeof d == "string") oe = 5;
    else e: switch (d) {
      case H:
        return Wl(b.children, D, j, p);
      case U:
        oe = 8, D |= 8;
        break;
      case z:
        return d = Gs(12, b, p, D | 2), d.elementType = z, d.lanes = j, d;
      case Y:
        return d = Gs(13, b, p, D), d.elementType = Y, d.lanes = j, d;
      case ee:
        return d = Gs(19, b, p, D), d.elementType = ee, d.lanes = j, d;
      case X:
        return Vu(b, D, j, p);
      default:
        if (typeof d == "object" && d !== null) switch (d.$$typeof) {
          case A:
            oe = 10;
            break e;
          case q:
            oe = 9;
            break e;
          case W:
            oe = 11;
            break e;
          case G:
            oe = 14;
            break e;
          case K:
            oe = 16, _ = null;
            break e;
        }
        throw Error(n(130, d == null ? d : typeof d, ""));
    }
    return p = Gs(oe, b, p, D), p.elementType = d, p.type = _, p.lanes = j, p;
  }
  function Wl(d, p, b, _) {
    return d = Gs(7, d, _, p), d.lanes = b, d;
  }
  function Vu(d, p, b, _) {
    return d = Gs(22, d, _, p), d.elementType = X, d.lanes = b, d.stateNode = { isHidden: !1 }, d;
  }
  function Ob(d, p, b) {
    return d = Gs(6, d, null, p), d.lanes = b, d;
  }
  function wg(d, p, b) {
    return p = Gs(4, d.children !== null ? d.children : [], d.key, p), p.lanes = b, p.stateNode = { containerInfo: d.containerInfo, pendingChildren: null, implementation: d.implementation }, p;
  }
  function B0(d, p, b, _, D) {
    this.tag = p, this.containerInfo = d, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = Ad(0), this.expirationTimes = Ad(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = Ad(0), this.identifierPrefix = _, this.onRecoverableError = D, this.mutableSourceEagerHydrationData = null;
  }
  function Sg(d, p, b, _, D, j, oe, me, Se) {
    return d = new B0(d, p, b, me, Se), p === 1 ? (p = 1, j === !0 && (p |= 8)) : p = 0, j = Gs(3, null, null, p), d.current = j, j.stateNode = d, j.memoizedState = { element: _, isDehydrated: b, cache: null, transitions: null, pendingSuspenseBoundaries: null }, rb(j), d;
  }
  function XO(d, p, b) {
    var _ = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: F, key: _ == null ? null : "" + _, children: d, containerInfo: p, implementation: b };
  }
  function Rb(d) {
    if (!d) return wi;
    d = d._reactInternals;
    e: {
      if (dn(d) !== d || d.tag !== 1) throw Error(n(170));
      var p = d;
      do {
        switch (p.tag) {
          case 3:
            p = p.stateNode.context;
            break e;
          case 1:
            if (go(p.type)) {
              p = p.stateNode.__reactInternalMemoizedMergedChildContext;
              break e;
            }
        }
        p = p.return;
      } while (p !== null);
      throw Error(n(171));
    }
    if (d.tag === 1) {
      var b = d.type;
      if (go(b)) return Pp(d, b, p);
    }
    return p;
  }
  function H0(d, p, b, _, D, j, oe, me, Se) {
    return d = Sg(b, _, !0, d, D, j, oe, me, Se), d.context = Rb(null), b = d.current, _ = Co(), D = el(b), j = zl(_, D), j.callback = p ?? null, Nu(b, j, D), d.current.lanes = D, Pl(d, D, _), ls(d, _), d;
  }
  function Cg(d, p, b, _) {
    var D = p.current, j = Co(), oe = el(D);
    return b = Rb(b), p.context === null ? p.context = b : p.pendingContext = b, p = zl(j, oe), p.payload = { element: d }, _ = _ === void 0 ? null : _, _ !== null && (p.callback = _), d = Nu(D, p, oe), d !== null && (Li(d, D, oe, j), Hm(d, D, oe)), oe;
  }
  function xg(d) {
    if (d = d.current, !d.child) return null;
    switch (d.child.tag) {
      case 5:
        return d.child.stateNode;
      default:
        return d.child.stateNode;
    }
  }
  function kb(d, p) {
    if (d = d.memoizedState, d !== null && d.dehydrated !== null) {
      var b = d.retryLane;
      d.retryLane = b !== 0 && b < p ? b : p;
    }
  }
  function Eg(d, p) {
    kb(d, p), (d = d.alternate) && kb(d, p);
  }
  function V0() {
    return null;
  }
  var ed = typeof reportError == "function" ? reportError : function(d) {
    console.error(d);
  };
  function Pb(d) {
    this._internalRoot = d;
  }
  Tg.prototype.render = Pb.prototype.render = function(d) {
    var p = this._internalRoot;
    if (p === null) throw Error(n(409));
    Cg(d, p, null, null);
  }, Tg.prototype.unmount = Pb.prototype.unmount = function() {
    var d = this._internalRoot;
    if (d !== null) {
      this._internalRoot = null;
      var p = d.containerInfo;
      Jc(function() {
        Cg(null, d, null, null);
      }), p[Ll] = null;
    }
  };
  function Tg(d) {
    this._internalRoot = d;
  }
  Tg.prototype.unstable_scheduleHydration = function(d) {
    if (d) {
      var p = gn();
      d = { blockedOn: null, target: d, priority: p };
      for (var b = 0; b < Io.length && p !== 0 && p < Io[b].priority; b++) ;
      Io.splice(b, 0, d), b === 0 && gp(d);
    }
  };
  function Mb(d) {
    return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11);
  }
  function _g(d) {
    return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11 && (d.nodeType !== 8 || d.nodeValue !== " react-mount-point-unstable "));
  }
  function U0() {
  }
  function QO(d, p, b, _, D) {
    if (D) {
      if (typeof _ == "function") {
        var j = _;
        _ = function() {
          var Fe = xg(oe);
          j.call(Fe);
        };
      }
      var oe = H0(p, _, d, 0, null, !1, !1, "", U0);
      return d._reactRootContainer = oe, d[Ll] = oe.current, Wd(d.nodeType === 8 ? d.parentNode : d), Jc(), oe;
    }
    for (; D = d.lastChild; ) d.removeChild(D);
    if (typeof _ == "function") {
      var me = _;
      _ = function() {
        var Fe = xg(Se);
        me.call(Fe);
      };
    }
    var Se = Sg(d, 0, !1, null, null, !1, !1, "", U0);
    return d._reactRootContainer = Se, d[Ll] = Se.current, Wd(d.nodeType === 8 ? d.parentNode : d), Jc(function() {
      Cg(p, Se, b, _);
    }), Se;
  }
  function lh(d, p, b, _, D) {
    var j = b._reactRootContainer;
    if (j) {
      var oe = j;
      if (typeof D == "function") {
        var me = D;
        D = function() {
          var Se = xg(oe);
          me.call(Se);
        };
      }
      Cg(p, oe, d, D);
    } else oe = QO(b, p, d, D, _);
    return xg(oe);
  }
  qn = function(d) {
    switch (d.tag) {
      case 3:
        var p = d.stateNode;
        if (p.current.memoizedState.isDehydrated) {
          var b = da(p.pendingLanes);
          b !== 0 && (Ml(p, b | 1), ls(p, yn()), !(Vn & 6) && (sf = yn() + 500, Ga()));
        }
        break;
      case 13:
        Jc(function() {
          var _ = Ss(d, 1);
          if (_ !== null) {
            var D = Co();
            Li(_, d, 1, D);
          }
        }), Eg(d, 1);
    }
  }, hp = function(d) {
    if (d.tag === 13) {
      var p = Ss(d, 134217728);
      if (p !== null) {
        var b = Co();
        Li(p, d, 134217728, b);
      }
      Eg(d, 134217728);
    }
  }, ja = function(d) {
    if (d.tag === 13) {
      var p = el(d), b = Ss(d, p);
      if (b !== null) {
        var _ = Co();
        Li(b, d, p, _);
      }
      Eg(d, p);
    }
  }, gn = function() {
    return Jn;
  }, Ld = function(d, p) {
    var b = Jn;
    try {
      return Jn = d, p();
    } finally {
      Jn = b;
    }
  }, cn = function(d, p, b) {
    switch (p) {
      case "input":
        if ($e(d, b), p = b.name, b.type === "radio" && p != null) {
          for (b = d; b.parentNode; ) b = b.parentNode;
          for (b = b.querySelectorAll("input[name=" + JSON.stringify("" + p) + '][type="radio"]'), p = 0; p < b.length; p++) {
            var _ = b[p];
            if (_ !== d && _.form === d.form) {
              var D = Yr(_);
              if (!D) throw Error(n(90));
              ce(_), $e(_, D);
            }
          }
        }
        break;
      case "textarea":
        ut(d, b);
        break;
      case "select":
        p = b.value, p != null && gt(d, !!b.multiple, p, !1);
    }
  }, Qo = xb, Wt = Jc;
  var JO = { usingClientEntryPoint: !1, Events: [Qt, ga, Yr, _r, Xo, xb] }, uh = { findFiberByHostInstance: Ac, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" }, W0 = { bundleType: uh.bundleType, version: uh.version, rendererPackageName: uh.rendererPackageName, rendererConfig: uh.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: N.ReactCurrentDispatcher, findHostInstanceByFiber: function(d) {
    return d = Bt(d), d === null ? null : d.stateNode;
  }, findFiberByHostInstance: uh.findFiberByHostInstance || V0, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var Uu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!Uu.isDisabled && Uu.supportsFiber) try {
      Qi = Uu.inject(W0), bi = Uu;
    } catch {
    }
  }
  return Js.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = JO, Js.createPortal = function(d, p) {
    var b = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!Mb(p)) throw Error(n(200));
    return XO(d, p, null, b);
  }, Js.createRoot = function(d, p) {
    if (!Mb(d)) throw Error(n(299));
    var b = !1, _ = "", D = ed;
    return p != null && (p.unstable_strictMode === !0 && (b = !0), p.identifierPrefix !== void 0 && (_ = p.identifierPrefix), p.onRecoverableError !== void 0 && (D = p.onRecoverableError)), p = Sg(d, 1, !1, null, null, b, !1, _, D), d[Ll] = p.current, Wd(d.nodeType === 8 ? d.parentNode : d), new Pb(p);
  }, Js.findDOMNode = function(d) {
    if (d == null) return null;
    if (d.nodeType === 1) return d;
    var p = d._reactInternals;
    if (p === void 0)
      throw typeof d.render == "function" ? Error(n(188)) : (d = Object.keys(d).join(","), Error(n(268, d)));
    return d = Bt(p), d = d === null ? null : d.stateNode, d;
  }, Js.flushSync = function(d) {
    return Jc(d);
  }, Js.hydrate = function(d, p, b) {
    if (!_g(p)) throw Error(n(200));
    return lh(null, d, p, !0, b);
  }, Js.hydrateRoot = function(d, p, b) {
    if (!Mb(d)) throw Error(n(405));
    var _ = b != null && b.hydratedSources || null, D = !1, j = "", oe = ed;
    if (b != null && (b.unstable_strictMode === !0 && (D = !0), b.identifierPrefix !== void 0 && (j = b.identifierPrefix), b.onRecoverableError !== void 0 && (oe = b.onRecoverableError)), p = H0(p, null, d, 1, b ?? null, D, !1, j, oe), d[Ll] = p.current, Wd(d), _) for (d = 0; d < _.length; d++) b = _[d], D = b._getVersion, D = D(b._source), p.mutableSourceEagerHydrationData == null ? p.mutableSourceEagerHydrationData = [b, D] : p.mutableSourceEagerHydrationData.push(
      b,
      D
    );
    return new Tg(p);
  }, Js.render = function(d, p, b) {
    if (!_g(p)) throw Error(n(200));
    return lh(null, d, p, !1, b);
  }, Js.unmountComponentAtNode = function(d) {
    if (!_g(d)) throw Error(n(40));
    return d._reactRootContainer ? (Jc(function() {
      lh(null, null, d, !1, function() {
        d._reactRootContainer = null, d[Ll] = null;
      });
    }), !0) : !1;
  }, Js.unstable_batchedUpdates = xb, Js.unstable_renderSubtreeIntoContainer = function(d, p, b, _) {
    if (!_g(b)) throw Error(n(200));
    if (d == null || d._reactInternals === void 0) throw Error(n(38));
    return lh(d, p, b, !1, _);
  }, Js.version = "18.3.1-next-f1338f8080-20240426", Js;
}
var Zs = {};
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var q$;
function W9() {
  return q$ || (q$ = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = x, t = VB(), n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, r = !1;
    function o(i) {
      r = i;
    }
    function s(i) {
      if (!r) {
        for (var l = arguments.length, h = new Array(l > 1 ? l - 1 : 0), v = 1; v < l; v++)
          h[v - 1] = arguments[v];
        c("warn", i, h);
      }
    }
    function a(i) {
      if (!r) {
        for (var l = arguments.length, h = new Array(l > 1 ? l - 1 : 0), v = 1; v < l; v++)
          h[v - 1] = arguments[v];
        c("error", i, h);
      }
    }
    function c(i, l, h) {
      {
        var v = n.ReactDebugCurrentFrame, S = v.getStackAddendum();
        S !== "" && (l += "%s", h = h.concat([S]));
        var R = h.map(function(L) {
          return String(L);
        });
        R.unshift("Warning: " + l), Function.prototype.apply.call(console[i], console, R);
      }
    }
    var f = 0, m = 1, g = 2, y = 3, w = 4, C = 5, T = 6, E = 7, O = 8, k = 9, I = 10, M = 11, N = 12, P = 13, F = 14, H = 15, U = 16, z = 17, A = 18, q = 19, W = 21, Y = 22, ee = 23, G = 24, K = 25, X = !0, te = !1, re = !1, Q = !1, B = !1, ie = !0, de = !0, ue = !0, he = !0, ge = /* @__PURE__ */ new Set(), fe = {}, pe = {};
    function be(i, l) {
      we(i, l), we(i + "Capture", l);
    }
    function we(i, l) {
      fe[i] && a("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", i), fe[i] = l;
      {
        var h = i.toLowerCase();
        pe[h] = i, i === "onDoubleClick" && (pe.ondblclick = i);
      }
      for (var v = 0; v < l.length; v++)
        ge.add(l[v]);
    }
    var _e = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ce = Object.prototype.hasOwnProperty;
    function Ce(i) {
      {
        var l = typeof Symbol == "function" && Symbol.toStringTag, h = l && i[Symbol.toStringTag] || i.constructor.name || "Object";
        return h;
      }
    }
    function Ne(i) {
      try {
        return Be(i), !1;
      } catch {
        return !0;
      }
    }
    function Be(i) {
      return "" + i;
    }
    function tt(i, l) {
      if (Ne(i))
        return a("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", l, Ce(i)), Be(i);
    }
    function $e(i) {
      if (Ne(i))
        return a("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ce(i)), Be(i);
    }
    function rt(i, l) {
      if (Ne(i))
        return a("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", l, Ce(i)), Be(i);
    }
    function ot(i, l) {
      if (Ne(i))
        return a("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", l, Ce(i)), Be(i);
    }
    function wt(i) {
      if (Ne(i))
        return a("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", Ce(i)), Be(i);
    }
    function gt(i) {
      if (Ne(i))
        return a("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", Ce(i)), Be(i);
    }
    var nt = 0, Ft = 1, ut = 2, Et = 3, Tt = 4, At = 5, vt = 6, Xe = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", Oe = Xe + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", Ie = new RegExp("^[" + Xe + "][" + Oe + "]*$"), pt = {}, yt = {};
    function zt(i) {
      return ce.call(yt, i) ? !0 : ce.call(pt, i) ? !1 : Ie.test(i) ? (yt[i] = !0, !0) : (pt[i] = !0, a("Invalid attribute name: `%s`", i), !1);
    }
    function bt(i, l, h) {
      return l !== null ? l.type === nt : h ? !1 : i.length > 2 && (i[0] === "o" || i[0] === "O") && (i[1] === "n" || i[1] === "N");
    }
    function We(i, l, h, v) {
      if (h !== null && h.type === nt)
        return !1;
      switch (typeof l) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (v)
            return !1;
          if (h !== null)
            return !h.acceptsBooleans;
          var S = i.toLowerCase().slice(0, 5);
          return S !== "data-" && S !== "aria-";
        }
        default:
          return !1;
      }
    }
    function St(i, l, h, v) {
      if (l === null || typeof l > "u" || We(i, l, h, v))
        return !0;
      if (v)
        return !1;
      if (h !== null)
        switch (h.type) {
          case Et:
            return !l;
          case Tt:
            return l === !1;
          case At:
            return isNaN(l);
          case vt:
            return isNaN(l) || l < 1;
        }
      return !1;
    }
    function $t(i) {
      return cn.hasOwnProperty(i) ? cn[i] : null;
    }
    function wn(i, l, h, v, S, R, L) {
      this.acceptsBooleans = l === ut || l === Et || l === Tt, this.attributeName = v, this.attributeNamespace = S, this.mustUseProperty = h, this.propertyName = i, this.type = l, this.sanitizeURL = R, this.removeEmptyString = L;
    }
    var cn = {}, Tr = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    Tr.forEach(function(i) {
      cn[i] = new wn(
        i,
        nt,
        !1,
        // mustUseProperty
        i,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(i) {
      var l = i[0], h = i[1];
      cn[l] = new wn(
        l,
        Ft,
        !1,
        // mustUseProperty
        h,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(i) {
      cn[i] = new wn(
        i,
        ut,
        !1,
        // mustUseProperty
        i.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(i) {
      cn[i] = new wn(
        i,
        ut,
        !1,
        // mustUseProperty
        i,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(i) {
      cn[i] = new wn(
        i,
        Et,
        !1,
        // mustUseProperty
        i.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      cn[i] = new wn(
        i,
        Et,
        !0,
        // mustUseProperty
        i,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      cn[i] = new wn(
        i,
        Tt,
        !1,
        // mustUseProperty
        i,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      cn[i] = new wn(
        i,
        vt,
        !1,
        // mustUseProperty
        i,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(i) {
      cn[i] = new wn(
        i,
        At,
        !1,
        // mustUseProperty
        i.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var sr = /[\-\:]([a-z])/g, $r = function(i) {
      return i[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      var l = i.replace(sr, $r);
      cn[l] = new wn(
        l,
        Ft,
        !1,
        // mustUseProperty
        i,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      var l = i.replace(sr, $r);
      cn[l] = new wn(
        l,
        Ft,
        !1,
        // mustUseProperty
        i,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(i) {
      var l = i.replace(sr, $r);
      cn[l] = new wn(
        l,
        Ft,
        !1,
        // mustUseProperty
        i,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(i) {
      cn[i] = new wn(
        i,
        Ft,
        !1,
        // mustUseProperty
        i.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var _r = "xlinkHref";
    cn[_r] = new wn(
      "xlinkHref",
      Ft,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(i) {
      cn[i] = new wn(
        i,
        Ft,
        !1,
        // mustUseProperty
        i.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var Xo = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, Qo = !1;
    function Wt(i) {
      !Qo && Xo.test(i) && (Qo = !0, a("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(i)));
    }
    function hr(i, l, h, v) {
      if (v.mustUseProperty) {
        var S = v.propertyName;
        return i[S];
      } else {
        tt(h, l), v.sanitizeURL && Wt("" + h);
        var R = v.attributeName, L = null;
        if (v.type === Tt) {
          if (i.hasAttribute(R)) {
            var V = i.getAttribute(R);
            return V === "" ? !0 : St(l, h, v, !1) ? V : V === "" + h ? h : V;
          }
        } else if (i.hasAttribute(R)) {
          if (St(l, h, v, !1))
            return i.getAttribute(R);
          if (v.type === Et)
            return h;
          L = i.getAttribute(R);
        }
        return St(l, h, v, !1) ? L === null ? h : L : L === "" + h ? h : L;
      }
    }
    function Jo(i, l, h, v) {
      {
        if (!zt(l))
          return;
        if (!i.hasAttribute(l))
          return h === void 0 ? void 0 : null;
        var S = i.getAttribute(l);
        return tt(h, l), S === "" + h ? h : S;
      }
    }
    function Gr(i, l, h, v) {
      var S = $t(l);
      if (!bt(l, S, v)) {
        if (St(l, h, S, v) && (h = null), v || S === null) {
          if (zt(l)) {
            var R = l;
            h === null ? i.removeAttribute(R) : (tt(h, l), i.setAttribute(R, "" + h));
          }
          return;
        }
        var L = S.mustUseProperty;
        if (L) {
          var V = S.propertyName;
          if (h === null) {
            var Z = S.type;
            i[V] = Z === Et ? !1 : "";
          } else
            i[V] = h;
          return;
        }
        var ae = S.attributeName, le = S.attributeNamespace;
        if (h === null)
          i.removeAttribute(ae);
        else {
          var Te = S.type, xe;
          Te === Et || Te === Tt && h === !0 ? xe = "" : (tt(h, ae), xe = "" + h, S.sanitizeURL && Wt(xe.toString())), le ? i.setAttributeNS(le, ae, xe) : i.setAttribute(ae, xe);
        }
      }
    }
    var oo = Symbol.for("react.element"), qr = Symbol.for("react.portal"), Ki = Symbol.for("react.fragment"), Ri = Symbol.for("react.strict_mode"), Yi = Symbol.for("react.profiler"), Xi = Symbol.for("react.provider"), ye = Symbol.for("react.context"), Ye = Symbol.for("react.forward_ref"), ft = Symbol.for("react.suspense"), Ct = Symbol.for("react.suspense_list"), dn = Symbol.for("react.memo"), De = Symbol.for("react.lazy"), Re = Symbol.for("react.scope"), Je = Symbol.for("react.debug_trace_mode"), Bt = Symbol.for("react.offscreen"), jt = Symbol.for("react.legacy_hidden"), Kt = Symbol.for("react.cache"), Ln = Symbol.for("react.tracing_marker"), Or = Symbol.iterator, Zo = "@@iterator";
    function yn(i) {
      if (i === null || typeof i != "object")
        return null;
      var l = Or && i[Or] || i[Zo];
      return typeof l == "function" ? l : null;
    }
    var Sn = Object.assign, yi = 0, Ds, Mn, Mo, ki, Qi, bi, pp;
    function Pi() {
    }
    Pi.__reactDisabledLog = !0;
    function ym() {
      {
        if (yi === 0) {
          Ds = console.log, Mn = console.info, Mo = console.warn, ki = console.error, Qi = console.group, bi = console.groupCollapsed, pp = console.groupEnd;
          var i = {
            configurable: !0,
            enumerable: !0,
            value: Pi,
            writable: !0
          };
          Object.defineProperties(console, {
            info: i,
            log: i,
            warn: i,
            error: i,
            group: i,
            groupCollapsed: i,
            groupEnd: i
          });
        }
        yi++;
      }
    }
    function bm() {
      {
        if (yi--, yi === 0) {
          var i = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: Sn({}, i, {
              value: Ds
            }),
            info: Sn({}, i, {
              value: Mn
            }),
            warn: Sn({}, i, {
              value: Mo
            }),
            error: Sn({}, i, {
              value: ki
            }),
            group: Sn({}, i, {
              value: Qi
            }),
            groupCollapsed: Sn({}, i, {
              value: bi
            }),
            groupEnd: Sn({}, i, {
              value: pp
            })
          });
        }
        yi < 0 && a("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Md = n.ReactCurrentDispatcher, wu;
    function ys(i, l, h) {
      {
        if (wu === void 0)
          try {
            throw Error();
          } catch (S) {
            var v = S.stack.trim().match(/\n( *(at )?)/);
            wu = v && v[1] || "";
          }
        return `
` + wu + i;
      }
    }
    var da = !1, fa;
    {
      var Id = typeof WeakMap == "function" ? WeakMap : Map;
      fa = new Id();
    }
    function Ec(i, l) {
      if (!i || da)
        return "";
      {
        var h = fa.get(i);
        if (h !== void 0)
          return h;
      }
      var v;
      da = !0;
      var S = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var R;
      R = Md.current, Md.current = null, ym();
      try {
        if (l) {
          var L = function() {
            throw Error();
          };
          if (Object.defineProperty(L.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(L, []);
            } catch (ze) {
              v = ze;
            }
            Reflect.construct(i, [], L);
          } else {
            try {
              L.call();
            } catch (ze) {
              v = ze;
            }
            i.call(L.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (ze) {
            v = ze;
          }
          i();
        }
      } catch (ze) {
        if (ze && v && typeof ze.stack == "string") {
          for (var V = ze.stack.split(`
`), Z = v.stack.split(`
`), ae = V.length - 1, le = Z.length - 1; ae >= 1 && le >= 0 && V[ae] !== Z[le]; )
            le--;
          for (; ae >= 1 && le >= 0; ae--, le--)
            if (V[ae] !== Z[le]) {
              if (ae !== 1 || le !== 1)
                do
                  if (ae--, le--, le < 0 || V[ae] !== Z[le]) {
                    var Te = `
` + V[ae].replace(" at new ", " at ");
                    return i.displayName && Te.includes("<anonymous>") && (Te = Te.replace("<anonymous>", i.displayName)), typeof i == "function" && fa.set(i, Te), Te;
                  }
                while (ae >= 1 && le >= 0);
              break;
            }
        }
      } finally {
        da = !1, Md.current = R, bm(), Error.prepareStackTrace = S;
      }
      var xe = i ? i.displayName || i.name : "", Le = xe ? ys(xe) : "";
      return typeof i == "function" && fa.set(i, Le), Le;
    }
    function Su(i, l, h) {
      return Ec(i, !0);
    }
    function Dd(i, l, h) {
      return Ec(i, !1);
    }
    function Ad(i) {
      var l = i.prototype;
      return !!(l && l.isReactComponent);
    }
    function Pl(i, l, h) {
      if (i == null)
        return "";
      if (typeof i == "function")
        return Ec(i, Ad(i));
      if (typeof i == "string")
        return ys(i);
      switch (i) {
        case ft:
          return ys("Suspense");
        case Ct:
          return ys("SuspenseList");
      }
      if (typeof i == "object")
        switch (i.$$typeof) {
          case Ye:
            return Dd(i.render);
          case dn:
            return Pl(i.type, l, h);
          case De: {
            var v = i, S = v._payload, R = v._init;
            try {
              return Pl(R(S), l, h);
            } catch {
            }
          }
        }
      return "";
    }
    function _y(i) {
      switch (i._debugOwner && i._debugOwner.type, i._debugSource, i.tag) {
        case C:
          return ys(i.type);
        case U:
          return ys("Lazy");
        case P:
          return ys("Suspense");
        case q:
          return ys("SuspenseList");
        case f:
        case g:
        case H:
          return Dd(i.type);
        case M:
          return Dd(i.type.render);
        case m:
          return Su(i.type);
        default:
          return "";
      }
    }
    function Ml(i) {
      try {
        var l = "", h = i;
        do
          l += _y(h), h = h.return;
        while (h);
        return l;
      } catch (v) {
        return `
Error generating stack: ` + v.message + `
` + v.stack;
      }
    }
    function Jn(i, l, h) {
      var v = i.displayName;
      if (v)
        return v;
      var S = l.displayName || l.name || "";
      return S !== "" ? h + "(" + S + ")" : h;
    }
    function Nd(i) {
      return i.displayName || "Context";
    }
    function qn(i) {
      if (i == null)
        return null;
      if (typeof i.tag == "number" && a("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof i == "function")
        return i.displayName || i.name || null;
      if (typeof i == "string")
        return i;
      switch (i) {
        case Ki:
          return "Fragment";
        case qr:
          return "Portal";
        case Yi:
          return "Profiler";
        case Ri:
          return "StrictMode";
        case ft:
          return "Suspense";
        case Ct:
          return "SuspenseList";
      }
      if (typeof i == "object")
        switch (i.$$typeof) {
          case ye:
            var l = i;
            return Nd(l) + ".Consumer";
          case Xi:
            var h = i;
            return Nd(h._context) + ".Provider";
          case Ye:
            return Jn(i, i.render, "ForwardRef");
          case dn:
            var v = i.displayName || null;
            return v !== null ? v : qn(i.type) || "Memo";
          case De: {
            var S = i, R = S._payload, L = S._init;
            try {
              return qn(L(R));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    function hp(i, l, h) {
      var v = l.displayName || l.name || "";
      return i.displayName || (v !== "" ? h + "(" + v + ")" : h);
    }
    function ja(i) {
      return i.displayName || "Context";
    }
    function gn(i) {
      var l = i.tag, h = i.type;
      switch (l) {
        case G:
          return "Cache";
        case k:
          var v = h;
          return ja(v) + ".Consumer";
        case I:
          var S = h;
          return ja(S._context) + ".Provider";
        case A:
          return "DehydratedFragment";
        case M:
          return hp(h, h.render, "ForwardRef");
        case E:
          return "Fragment";
        case C:
          return h;
        case w:
          return "Portal";
        case y:
          return "Root";
        case T:
          return "Text";
        case U:
          return qn(h);
        case O:
          return h === Ri ? "StrictMode" : "Mode";
        case Y:
          return "Offscreen";
        case N:
          return "Profiler";
        case W:
          return "Scope";
        case P:
          return "Suspense";
        case q:
          return "SuspenseList";
        case K:
          return "TracingMarker";
        case m:
        case f:
        case z:
        case g:
        case F:
        case H:
          if (typeof h == "function")
            return h.displayName || h.name || null;
          if (typeof h == "string")
            return h;
          break;
      }
      return null;
    }
    var Ld = n.ReactDebugCurrentFrame, ei = null, Fa = !1;
    function Mi() {
      {
        if (ei === null)
          return null;
        var i = ei._debugOwner;
        if (i !== null && typeof i < "u")
          return gn(i);
      }
      return null;
    }
    function za() {
      return ei === null ? "" : Ml(ei);
    }
    function jr() {
      Ld.getCurrentStack = null, ei = null, Fa = !1;
    }
    function mr(i) {
      Ld.getCurrentStack = i === null ? null : za, ei = i, Fa = !1;
    }
    function Cu() {
      return ei;
    }
    function Io(i) {
      Fa = i;
    }
    function Ii(i) {
      return "" + i;
    }
    function As(i) {
      switch (typeof i) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return i;
        case "object":
          return gt(i), i;
        default:
          return "";
      }
    }
    var Tc = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function mp(i, l) {
      Tc[l.type] || l.onChange || l.onInput || l.readOnly || l.disabled || l.value == null || a("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), l.onChange || l.readOnly || l.disabled || l.checked == null || a("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function gp(i) {
      var l = i.type, h = i.nodeName;
      return h && h.toLowerCase() === "input" && (l === "checkbox" || l === "radio");
    }
    function xu(i) {
      return i._valueTracker;
    }
    function _c(i) {
      i._valueTracker = null;
    }
    function Oy(i) {
      var l = "";
      return i && (gp(i) ? l = i.checked ? "true" : "false" : l = i.value), l;
    }
    function Ns(i) {
      var l = gp(i) ? "checked" : "value", h = Object.getOwnPropertyDescriptor(i.constructor.prototype, l);
      gt(i[l]);
      var v = "" + i[l];
      if (!(i.hasOwnProperty(l) || typeof h > "u" || typeof h.get != "function" || typeof h.set != "function")) {
        var S = h.get, R = h.set;
        Object.defineProperty(i, l, {
          configurable: !0,
          get: function() {
            return S.call(this);
          },
          set: function(V) {
            gt(V), v = "" + V, R.call(this, V);
          }
        }), Object.defineProperty(i, l, {
          enumerable: h.enumerable
        });
        var L = {
          getValue: function() {
            return v;
          },
          setValue: function(V) {
            gt(V), v = "" + V;
          },
          stopTracking: function() {
            _c(i), delete i[l];
          }
        };
        return L;
      }
    }
    function pa(i) {
      xu(i) || (i._valueTracker = Ns(i));
    }
    function Ba(i) {
      if (!i)
        return !1;
      var l = xu(i);
      if (!l)
        return !0;
      var h = l.getValue(), v = Oy(i);
      return v !== h ? (l.setValue(v), !0) : !1;
    }
    function Ls(i) {
      if (i = i || (typeof document < "u" ? document : void 0), typeof i > "u")
        return null;
      try {
        return i.activeElement || i.body;
      } catch {
        return i.body;
      }
    }
    var $d = !1, jd = !1, Eu = !1, Oc = !1;
    function Fd(i) {
      var l = i.type === "checkbox" || i.type === "radio";
      return l ? i.checked != null : i.value != null;
    }
    function zd(i, l) {
      var h = i, v = l.checked, S = Sn({}, l, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: v ?? h._wrapperState.initialChecked
      });
      return S;
    }
    function ha(i, l) {
      mp("input", l), l.checked !== void 0 && l.defaultChecked !== void 0 && !jd && (a("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Mi() || "A component", l.type), jd = !0), l.value !== void 0 && l.defaultValue !== void 0 && !$d && (a("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", Mi() || "A component", l.type), $d = !0);
      var h = i, v = l.defaultValue == null ? "" : l.defaultValue;
      h._wrapperState = {
        initialChecked: l.checked != null ? l.checked : l.defaultChecked,
        initialValue: As(l.value != null ? l.value : v),
        controlled: Fd(l)
      };
    }
    function ne(i, l) {
      var h = i, v = l.checked;
      v != null && Gr(h, "checked", v, !1);
    }
    function ve(i, l) {
      var h = i;
      {
        var v = Fd(l);
        !h._wrapperState.controlled && v && !Oc && (a("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Oc = !0), h._wrapperState.controlled && !v && !Eu && (a("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Eu = !0);
      }
      ne(i, l);
      var S = As(l.value), R = l.type;
      if (S != null)
        R === "number" ? (S === 0 && h.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        h.value != S) && (h.value = Ii(S)) : h.value !== Ii(S) && (h.value = Ii(S));
      else if (R === "submit" || R === "reset") {
        h.removeAttribute("value");
        return;
      }
      l.hasOwnProperty("value") ? tn(h, l.type, S) : l.hasOwnProperty("defaultValue") && tn(h, l.type, As(l.defaultValue)), l.checked == null && l.defaultChecked != null && (h.defaultChecked = !!l.defaultChecked);
    }
    function je(i, l, h) {
      var v = i;
      if (l.hasOwnProperty("value") || l.hasOwnProperty("defaultValue")) {
        var S = l.type, R = S === "submit" || S === "reset";
        if (R && (l.value === void 0 || l.value === null))
          return;
        var L = Ii(v._wrapperState.initialValue);
        h || L !== v.value && (v.value = L), v.defaultValue = L;
      }
      var V = v.name;
      V !== "" && (v.name = ""), v.defaultChecked = !v.defaultChecked, v.defaultChecked = !!v._wrapperState.initialChecked, V !== "" && (v.name = V);
    }
    function Ve(i, l) {
      var h = i;
      ve(h, l), ht(h, l);
    }
    function ht(i, l) {
      var h = l.name;
      if (l.type === "radio" && h != null) {
        for (var v = i; v.parentNode; )
          v = v.parentNode;
        tt(h, "name");
        for (var S = v.querySelectorAll("input[name=" + JSON.stringify("" + h) + '][type="radio"]'), R = 0; R < S.length; R++) {
          var L = S[R];
          if (!(L === i || L.form !== i.form)) {
            var V = ux(L);
            if (!V)
              throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            Ba(L), ve(L, V);
          }
        }
      }
    }
    function tn(i, l, h) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (l !== "number" || Ls(i.ownerDocument) !== i) && (h == null ? i.defaultValue = Ii(i._wrapperState.initialValue) : i.defaultValue !== Ii(h) && (i.defaultValue = Ii(h)));
    }
    var _t = !1, on = !1, In = !1;
    function Kn(i, l) {
      l.value == null && (typeof l.children == "object" && l.children !== null ? e.Children.forEach(l.children, function(h) {
        h != null && (typeof h == "string" || typeof h == "number" || on || (on = !0, a("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
      }) : l.dangerouslySetInnerHTML != null && (In || (In = !0, a("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), l.selected != null && !_t && (a("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), _t = !0);
    }
    function Mr(i, l) {
      l.value != null && i.setAttribute("value", Ii(As(l.value)));
    }
    var gr = Array.isArray;
    function Rn(i) {
      return gr(i);
    }
    var vr;
    vr = !1;
    function Kr() {
      var i = Mi();
      return i ? `

Check the render method of \`` + i + "`." : "";
    }
    var Tu = ["value", "defaultValue"];
    function vp(i) {
      {
        mp("select", i);
        for (var l = 0; l < Tu.length; l++) {
          var h = Tu[l];
          if (i[h] != null) {
            var v = Rn(i[h]);
            i.multiple && !v ? a("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", h, Kr()) : !i.multiple && v && a("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", h, Kr());
          }
        }
      }
    }
    function Il(i, l, h, v) {
      var S = i.options;
      if (l) {
        for (var R = h, L = {}, V = 0; V < R.length; V++)
          L["$" + R[V]] = !0;
        for (var Z = 0; Z < S.length; Z++) {
          var ae = L.hasOwnProperty("$" + S[Z].value);
          S[Z].selected !== ae && (S[Z].selected = ae), ae && v && (S[Z].defaultSelected = !0);
        }
      } else {
        for (var le = Ii(As(h)), Te = null, xe = 0; xe < S.length; xe++) {
          if (S[xe].value === le) {
            S[xe].selected = !0, v && (S[xe].defaultSelected = !0);
            return;
          }
          Te === null && !S[xe].disabled && (Te = S[xe]);
        }
        Te !== null && (Te.selected = !0);
      }
    }
    function yp(i, l) {
      return Sn({}, l, {
        value: void 0
      });
    }
    function Rc(i, l) {
      var h = i;
      vp(l), h._wrapperState = {
        wasMultiple: !!l.multiple
      }, l.value !== void 0 && l.defaultValue !== void 0 && !vr && (a("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), vr = !0);
    }
    function Ry(i, l) {
      var h = i;
      h.multiple = !!l.multiple;
      var v = l.value;
      v != null ? Il(h, !!l.multiple, v, !1) : l.defaultValue != null && Il(h, !!l.multiple, l.defaultValue, !0);
    }
    function wm(i, l) {
      var h = i, v = h._wrapperState.wasMultiple;
      h._wrapperState.wasMultiple = !!l.multiple;
      var S = l.value;
      S != null ? Il(h, !!l.multiple, S, !1) : v !== !!l.multiple && (l.defaultValue != null ? Il(h, !!l.multiple, l.defaultValue, !0) : Il(h, !!l.multiple, l.multiple ? [] : "", !1));
    }
    function ky(i, l) {
      var h = i, v = l.value;
      v != null && Il(h, !!l.multiple, v, !1);
    }
    var IC = !1;
    function Py(i, l) {
      var h = i;
      if (l.dangerouslySetInnerHTML != null)
        throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var v = Sn({}, l, {
        value: void 0,
        defaultValue: void 0,
        children: Ii(h._wrapperState.initialValue)
      });
      return v;
    }
    function My(i, l) {
      var h = i;
      mp("textarea", l), l.value !== void 0 && l.defaultValue !== void 0 && !IC && (a("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", Mi() || "A component"), IC = !0);
      var v = l.value;
      if (v == null) {
        var S = l.children, R = l.defaultValue;
        if (S != null) {
          a("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (R != null)
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Rn(S)) {
              if (S.length > 1)
                throw new Error("<textarea> can only have at most one child.");
              S = S[0];
            }
            R = S;
          }
        }
        R == null && (R = ""), v = R;
      }
      h._wrapperState = {
        initialValue: As(v)
      };
    }
    function DC(i, l) {
      var h = i, v = As(l.value), S = As(l.defaultValue);
      if (v != null) {
        var R = Ii(v);
        R !== h.value && (h.value = R), l.defaultValue == null && h.defaultValue !== R && (h.defaultValue = R);
      }
      S != null && (h.defaultValue = Ii(S));
    }
    function AC(i, l) {
      var h = i, v = h.textContent;
      v === h._wrapperState.initialValue && v !== "" && v !== null && (h.value = v);
    }
    function OO(i, l) {
      DC(i, l);
    }
    var Dl = "http://www.w3.org/1999/xhtml", Iy = "http://www.w3.org/1998/Math/MathML", Dy = "http://www.w3.org/2000/svg";
    function Ay(i) {
      switch (i) {
        case "svg":
          return Dy;
        case "math":
          return Iy;
        default:
          return Dl;
      }
    }
    function Ny(i, l) {
      return i == null || i === Dl ? Ay(l) : i === Dy && l === "foreignObject" ? Dl : i;
    }
    var NC = function(i) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(l, h, v, S) {
        MSApp.execUnsafeLocalFunction(function() {
          return i(l, h, v, S);
        });
      } : i;
    }, Sm, LC = NC(function(i, l) {
      if (i.namespaceURI === Dy && !("innerHTML" in i)) {
        Sm = Sm || document.createElement("div"), Sm.innerHTML = "<svg>" + l.valueOf().toString() + "</svg>";
        for (var h = Sm.firstChild; i.firstChild; )
          i.removeChild(i.firstChild);
        for (; h.firstChild; )
          i.appendChild(h.firstChild);
        return;
      }
      i.innerHTML = l;
    }), Ji = 1, Al = 3, mo = 8, Nl = 9, Ly = 11, Bd = function(i, l) {
      if (l) {
        var h = i.firstChild;
        if (h && h === i.lastChild && h.nodeType === Al) {
          h.nodeValue = l;
          return;
        }
      }
      i.textContent = l;
    }, bp = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, wp = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function $C(i, l) {
      return i + l.charAt(0).toUpperCase() + l.substring(1);
    }
    var jC = ["Webkit", "ms", "Moz", "O"];
    Object.keys(wp).forEach(function(i) {
      jC.forEach(function(l) {
        wp[$C(l, i)] = wp[i];
      });
    });
    function Cm(i, l, h) {
      var v = l == null || typeof l == "boolean" || l === "";
      return v ? "" : !h && typeof l == "number" && l !== 0 && !(wp.hasOwnProperty(i) && wp[i]) ? l + "px" : (ot(l, i), ("" + l).trim());
    }
    var FC = /([A-Z])/g, zC = /^ms-/;
    function Hd(i) {
      return i.replace(FC, "-$1").toLowerCase().replace(zC, "-ms-");
    }
    var BC = function() {
    };
    {
      var RO = /^(?:webkit|moz|o)[A-Z]/, kO = /^-ms-/, HC = /-(.)/g, $y = /;\s*$/, Ha = {}, kc = {}, VC = !1, Sp = !1, PO = function(i) {
        return i.replace(HC, function(l, h) {
          return h.toUpperCase();
        });
      }, UC = function(i) {
        Ha.hasOwnProperty(i) && Ha[i] || (Ha[i] = !0, a(
          "Unsupported style property %s. Did you mean %s?",
          i,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          PO(i.replace(kO, "ms-"))
        ));
      }, jy = function(i) {
        Ha.hasOwnProperty(i) && Ha[i] || (Ha[i] = !0, a("Unsupported vendor-prefixed style property %s. Did you mean %s?", i, i.charAt(0).toUpperCase() + i.slice(1)));
      }, Fy = function(i, l) {
        kc.hasOwnProperty(l) && kc[l] || (kc[l] = !0, a(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, i, l.replace($y, "")));
      }, WC = function(i, l) {
        VC || (VC = !0, a("`NaN` is an invalid value for the `%s` css style property.", i));
      }, GC = function(i, l) {
        Sp || (Sp = !0, a("`Infinity` is an invalid value for the `%s` css style property.", i));
      };
      BC = function(i, l) {
        i.indexOf("-") > -1 ? UC(i) : RO.test(i) ? jy(i) : $y.test(l) && Fy(i, l), typeof l == "number" && (isNaN(l) ? WC(i, l) : isFinite(l) || GC(i, l));
      };
    }
    var qC = BC;
    function MO(i) {
      {
        var l = "", h = "";
        for (var v in i)
          if (i.hasOwnProperty(v)) {
            var S = i[v];
            if (S != null) {
              var R = v.indexOf("--") === 0;
              l += h + (R ? v : Hd(v)) + ":", l += Cm(v, S, R), h = ";";
            }
          }
        return l || null;
      }
    }
    function KC(i, l) {
      var h = i.style;
      for (var v in l)
        if (l.hasOwnProperty(v)) {
          var S = v.indexOf("--") === 0;
          S || qC(v, l[v]);
          var R = Cm(v, l[v], S);
          v === "float" && (v = "cssFloat"), S ? h.setProperty(v, R) : h[v] = R;
        }
    }
    function IO(i) {
      return i == null || typeof i == "boolean" || i === "";
    }
    function YC(i) {
      var l = {};
      for (var h in i)
        for (var v = bp[h] || [h], S = 0; S < v.length; S++)
          l[v[S]] = h;
      return l;
    }
    function DO(i, l) {
      {
        if (!l)
          return;
        var h = YC(i), v = YC(l), S = {};
        for (var R in h) {
          var L = h[R], V = v[R];
          if (V && L !== V) {
            var Z = L + "," + V;
            if (S[Z])
              continue;
            S[Z] = !0, a("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", IO(i[L]) ? "Removing" : "Updating", L, V);
          }
        }
      }
    }
    var ma = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, Cp = Sn({
      menuitem: !0
    }, ma), XC = "__html";
    function xm(i, l) {
      if (l) {
        if (Cp[i] && (l.children != null || l.dangerouslySetInnerHTML != null))
          throw new Error(i + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (l.dangerouslySetInnerHTML != null) {
          if (l.children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof l.dangerouslySetInnerHTML != "object" || !(XC in l.dangerouslySetInnerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!l.suppressContentEditableWarning && l.contentEditable && l.children != null && a("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), l.style != null && typeof l.style != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function _u(i, l) {
      if (i.indexOf("-") === -1)
        return typeof l.is == "string";
      switch (i) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var xp = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      imagesizes: "imageSizes",
      imagesrcset: "imageSrcSet",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, Em = {
      "aria-current": 0,
      // state
      "aria-description": 0,
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, Vd = {}, AO = new RegExp("^(aria)-[" + Oe + "]*$"), Ud = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
    function zy(i, l) {
      {
        if (ce.call(Vd, l) && Vd[l])
          return !0;
        if (Ud.test(l)) {
          var h = "aria-" + l.slice(4).toLowerCase(), v = Em.hasOwnProperty(h) ? h : null;
          if (v == null)
            return a("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", l), Vd[l] = !0, !0;
          if (l !== v)
            return a("Invalid ARIA attribute `%s`. Did you mean `%s`?", l, v), Vd[l] = !0, !0;
        }
        if (AO.test(l)) {
          var S = l.toLowerCase(), R = Em.hasOwnProperty(S) ? S : null;
          if (R == null)
            return Vd[l] = !0, !1;
          if (l !== R)
            return a("Unknown ARIA attribute `%s`. Did you mean `%s`?", l, R), Vd[l] = !0, !0;
        }
      }
      return !0;
    }
    function Ep(i, l) {
      {
        var h = [];
        for (var v in l) {
          var S = zy(i, v);
          S || h.push(v);
        }
        var R = h.map(function(L) {
          return "`" + L + "`";
        }).join(", ");
        h.length === 1 ? a("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", R, i) : h.length > 1 && a("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", R, i);
      }
    }
    function By(i, l) {
      _u(i, l) || Ep(i, l);
    }
    var Hy = !1;
    function Tm(i, l) {
      {
        if (i !== "input" && i !== "textarea" && i !== "select")
          return;
        l != null && l.value === null && !Hy && (Hy = !0, i === "select" && l.multiple ? a("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", i) : a("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", i));
      }
    }
    var Pc = function() {
    };
    {
      var ti = {}, Vy = /^on./, _m = /^on[^A-Z]/, QC = new RegExp("^(aria)-[" + Oe + "]*$"), JC = new RegExp("^(aria)[A-Z][" + Oe + "]*$");
      Pc = function(i, l, h, v) {
        if (ce.call(ti, l) && ti[l])
          return !0;
        var S = l.toLowerCase();
        if (S === "onfocusin" || S === "onfocusout")
          return a("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), ti[l] = !0, !0;
        if (v != null) {
          var R = v.registrationNameDependencies, L = v.possibleRegistrationNames;
          if (R.hasOwnProperty(l))
            return !0;
          var V = L.hasOwnProperty(S) ? L[S] : null;
          if (V != null)
            return a("Invalid event handler property `%s`. Did you mean `%s`?", l, V), ti[l] = !0, !0;
          if (Vy.test(l))
            return a("Unknown event handler property `%s`. It will be ignored.", l), ti[l] = !0, !0;
        } else if (Vy.test(l))
          return _m.test(l) && a("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", l), ti[l] = !0, !0;
        if (QC.test(l) || JC.test(l))
          return !0;
        if (S === "innerhtml")
          return a("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), ti[l] = !0, !0;
        if (S === "aria")
          return a("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), ti[l] = !0, !0;
        if (S === "is" && h !== null && h !== void 0 && typeof h != "string")
          return a("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof h), ti[l] = !0, !0;
        if (typeof h == "number" && isNaN(h))
          return a("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", l), ti[l] = !0, !0;
        var Z = $t(l), ae = Z !== null && Z.type === nt;
        if (xp.hasOwnProperty(S)) {
          var le = xp[S];
          if (le !== l)
            return a("Invalid DOM property `%s`. Did you mean `%s`?", l, le), ti[l] = !0, !0;
        } else if (!ae && l !== S)
          return a("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", l, S), ti[l] = !0, !0;
        return typeof h == "boolean" && We(l, h, Z, !1) ? (h ? a('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', h, l, l, h, l) : a('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', h, l, l, h, l, l, l), ti[l] = !0, !0) : ae ? !0 : We(l, h, Z, !1) ? (ti[l] = !0, !1) : ((h === "false" || h === "true") && Z !== null && Z.type === Et && (a("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", h, l, h === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', l, h), ti[l] = !0), !0);
      };
    }
    var ZC = function(i, l, h) {
      {
        var v = [];
        for (var S in l) {
          var R = Pc(i, S, l[S], h);
          R || v.push(S);
        }
        var L = v.map(function(V) {
          return "`" + V + "`";
        }).join(", ");
        v.length === 1 ? a("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", L, i) : v.length > 1 && a("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", L, i);
      }
    };
    function e0(i, l, h) {
      _u(i, l) || ZC(i, l, h);
    }
    var Uy = 1, Om = 2, $s = 4, Wy = Uy | Om | $s, Mc = null;
    function NO(i) {
      Mc !== null && a("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), Mc = i;
    }
    function LO() {
      Mc === null && a("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), Mc = null;
    }
    function Tp(i) {
      return i === Mc;
    }
    function Gy(i) {
      var l = i.target || i.srcElement || window;
      return l.correspondingUseElement && (l = l.correspondingUseElement), l.nodeType === Al ? l.parentNode : l;
    }
    var Rm = null, Ic = null, ar = null;
    function km(i) {
      var l = ff(i);
      if (l) {
        if (typeof Rm != "function")
          throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var h = l.stateNode;
        if (h) {
          var v = ux(h);
          Rm(l.stateNode, l.type, v);
        }
      }
    }
    function Pm(i) {
      Rm = i;
    }
    function Wd(i) {
      Ic ? ar ? ar.push(i) : ar = [i] : Ic = i;
    }
    function t0() {
      return Ic !== null || ar !== null;
    }
    function Mm() {
      if (Ic) {
        var i = Ic, l = ar;
        if (Ic = null, ar = null, km(i), l)
          for (var h = 0; h < l.length; h++)
            km(l[h]);
      }
    }
    var Gd = function(i, l) {
      return i(l);
    }, _p = function() {
    }, Ou = !1;
    function n0() {
      var i = t0();
      i && (_p(), Mm());
    }
    function r0(i, l, h) {
      if (Ou)
        return i(l, h);
      Ou = !0;
      try {
        return Gd(i, l, h);
      } finally {
        Ou = !1, n0();
      }
    }
    function $O(i, l, h) {
      Gd = i, _p = h;
    }
    function o0(i) {
      return i === "button" || i === "input" || i === "select" || i === "textarea";
    }
    function Im(i, l, h) {
      switch (i) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(h.disabled && o0(l));
        default:
          return !1;
      }
    }
    function Ru(i, l) {
      var h = i.stateNode;
      if (h === null)
        return null;
      var v = ux(h);
      if (v === null)
        return null;
      var S = v[l];
      if (Im(l, i.type, v))
        return null;
      if (S && typeof S != "function")
        throw new Error("Expected `" + l + "` listener to be a function, instead got a value of `" + typeof S + "` type.");
      return S;
    }
    var Op = !1;
    if (_e)
      try {
        var Dc = {};
        Object.defineProperty(Dc, "passive", {
          get: function() {
            Op = !0;
          }
        }), window.addEventListener("test", Dc, Dc), window.removeEventListener("test", Dc, Dc);
      } catch {
        Op = !1;
      }
    function Dm(i, l, h, v, S, R, L, V, Z) {
      var ae = Array.prototype.slice.call(arguments, 3);
      try {
        l.apply(h, ae);
      } catch (le) {
        this.onError(le);
      }
    }
    var Am = Dm;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var qy = document.createElement("react");
      Am = function(l, h, v, S, R, L, V, Z, ae) {
        if (typeof document > "u" || document === null)
          throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var le = document.createEvent("Event"), Te = !1, xe = !0, Le = window.event, ze = Object.getOwnPropertyDescriptor(window, "event");
        function Ge() {
          qy.removeEventListener(qe, nn, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = Le);
        }
        var kt = Array.prototype.slice.call(arguments, 3);
        function nn() {
          Te = !0, Ge(), h.apply(v, kt), xe = !1;
        }
        var Yt, Wn = !1, Fn = !1;
        function Pe(Me) {
          if (Yt = Me.error, Wn = !0, Yt === null && Me.colno === 0 && Me.lineno === 0 && (Fn = !0), Me.defaultPrevented && Yt != null && typeof Yt == "object")
            try {
              Yt._suppressLogging = !0;
            } catch {
            }
        }
        var qe = "react-" + (l || "invokeguardedcallback");
        if (window.addEventListener("error", Pe), qy.addEventListener(qe, nn, !1), le.initEvent(qe, !1, !1), qy.dispatchEvent(le), ze && Object.defineProperty(window, "event", ze), Te && xe && (Wn ? Fn && (Yt = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : Yt = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(Yt)), window.removeEventListener("error", Pe), !Te)
          return Ge(), Dm.apply(this, arguments);
      };
    }
    var i0 = Am, qd = !1, Nm = null, Kd = !1, Va = null, s0 = {
      onError: function(i) {
        qd = !0, Nm = i;
      }
    };
    function ku(i, l, h, v, S, R, L, V, Z) {
      qd = !1, Nm = null, i0.apply(s0, arguments);
    }
    function Ua(i, l, h, v, S, R, L, V, Z) {
      if (ku.apply(this, arguments), qd) {
        var ae = kp();
        Kd || (Kd = !0, Va = ae);
      }
    }
    function Rp() {
      if (Kd) {
        var i = Va;
        throw Kd = !1, Va = null, i;
      }
    }
    function Ll() {
      return qd;
    }
    function kp() {
      if (qd) {
        var i = Nm;
        return qd = !1, Nm = null, i;
      } else
        throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Yd(i) {
      return i._reactInternals;
    }
    function jO(i) {
      return i._reactInternals !== void 0;
    }
    function Ac(i, l) {
      i._reactInternals = l;
    }
    var Qt = (
      /*                      */
      0
    ), ga = (
      /*                */
      1
    ), Yr = (
      /*                    */
      2
    ), Hn = (
      /*                       */
      4
    ), js = (
      /*                */
      16
    ), Fs = (
      /*                 */
      32
    ), Ir = (
      /*                     */
      64
    ), Xt = (
      /*                   */
      128
    ), wi = (
      /*            */
      256
    ), no = (
      /*                          */
      512
    ), Do = (
      /*                     */
      1024
    ), Zi = (
      /*                      */
      2048
    ), es = (
      /*                    */
      4096
    ), go = (
      /*                   */
      8192
    ), Xd = (
      /*             */
      16384
    ), a0 = (
      /*               */
      32767
    ), Pp = (
      /*                   */
      32768
    ), Bo = (
      /*                */
      65536
    ), Lm = (
      /* */
      131072
    ), Wa = (
      /*                       */
      1048576
    ), Qd = (
      /*                    */
      2097152
    ), $l = (
      /*                 */
      4194304
    ), $m = (
      /*                */
      8388608
    ), Pu = (
      /*               */
      16777216
    ), Ga = (
      /*              */
      33554432
    ), Mu = (
      // TODO: Remove Update flag from before mutation phase by re-landing Visibility
      // flag logic (see #20043)
      Hn | Do | 0
    ), Iu = Yr | Hn | js | Fs | no | es | go, Du = Hn | Ir | no | go, jl = Zi | js, vo = $l | $m | Qd, zs = n.ReactCurrentOwner;
    function bs(i) {
      var l = i, h = i;
      if (i.alternate)
        for (; l.return; )
          l = l.return;
      else {
        var v = l;
        do
          l = v, (l.flags & (Yr | es)) !== Qt && (h = l.return), v = l.return;
        while (v);
      }
      return l.tag === y ? h : null;
    }
    function qa(i) {
      if (i.tag === P) {
        var l = i.memoizedState;
        if (l === null) {
          var h = i.alternate;
          h !== null && (l = h.memoizedState);
        }
        if (l !== null)
          return l.dehydrated;
      }
      return null;
    }
    function Ka(i) {
      return i.tag === y ? i.stateNode.containerInfo : null;
    }
    function Nc(i) {
      return bs(i) === i;
    }
    function l0(i) {
      {
        var l = zs.current;
        if (l !== null && l.tag === m) {
          var h = l, v = h.stateNode;
          v._warnedAboutRefsInRender || a("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", gn(h) || "A component"), v._warnedAboutRefsInRender = !0;
        }
      }
      var S = Yd(i);
      return S ? bs(S) === S : !1;
    }
    function jm(i) {
      if (bs(i) !== i)
        throw new Error("Unable to find node on an unmounted component.");
    }
    function Fm(i) {
      var l = i.alternate;
      if (!l) {
        var h = bs(i);
        if (h === null)
          throw new Error("Unable to find node on an unmounted component.");
        return h !== i ? null : i;
      }
      for (var v = i, S = l; ; ) {
        var R = v.return;
        if (R === null)
          break;
        var L = R.alternate;
        if (L === null) {
          var V = R.return;
          if (V !== null) {
            v = S = V;
            continue;
          }
          break;
        }
        if (R.child === L.child) {
          for (var Z = R.child; Z; ) {
            if (Z === v)
              return jm(R), i;
            if (Z === S)
              return jm(R), l;
            Z = Z.sibling;
          }
          throw new Error("Unable to find node on an unmounted component.");
        }
        if (v.return !== S.return)
          v = R, S = L;
        else {
          for (var ae = !1, le = R.child; le; ) {
            if (le === v) {
              ae = !0, v = R, S = L;
              break;
            }
            if (le === S) {
              ae = !0, S = R, v = L;
              break;
            }
            le = le.sibling;
          }
          if (!ae) {
            for (le = L.child; le; ) {
              if (le === v) {
                ae = !0, v = L, S = R;
                break;
              }
              if (le === S) {
                ae = !0, S = L, v = R;
                break;
              }
              le = le.sibling;
            }
            if (!ae)
              throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (v.alternate !== S)
          throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (v.tag !== y)
        throw new Error("Unable to find node on an unmounted component.");
      return v.stateNode.current === v ? i : l;
    }
    function ts(i) {
      var l = Fm(i);
      return l !== null ? ns(l) : null;
    }
    function ns(i) {
      if (i.tag === C || i.tag === T)
        return i;
      for (var l = i.child; l !== null; ) {
        var h = ns(l);
        if (h !== null)
          return h;
        l = l.sibling;
      }
      return null;
    }
    function Hr(i) {
      var l = Fm(i);
      return l !== null ? Bs(l) : null;
    }
    function Bs(i) {
      if (i.tag === C || i.tag === T)
        return i;
      for (var l = i.child; l !== null; ) {
        if (l.tag !== w) {
          var h = Bs(l);
          if (h !== null)
            return h;
        }
        l = l.sibling;
      }
      return null;
    }
    var Ky = t.unstable_scheduleCallback, u0 = t.unstable_cancelCallback, Yy = t.unstable_shouldYield, Xy = t.unstable_requestPaint, Ao = t.unstable_now, zm = t.unstable_getCurrentPriorityLevel, Mp = t.unstable_ImmediatePriority, Au = t.unstable_UserBlockingPriority, Fl = t.unstable_NormalPriority, FO = t.unstable_LowPriority, Lc = t.unstable_IdlePriority, Bm = t.unstable_yieldValue, c0 = t.unstable_setDisableYieldValue, $c = null, io = null, Rt = null, ws = !1, rs = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function Jd(i) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var l = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (l.isDisabled)
        return !0;
      if (!l.supportsFiber)
        return a("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        de && (i = Sn({}, i, {
          getLaneLabelMap: jc,
          injectProfilingHooks: Hs
        })), $c = l.inject(i), io = l;
      } catch (h) {
        a("React instrumentation encountered an error: %s.", h);
      }
      return !!l.checkDCE;
    }
    function Qy(i, l) {
      if (io && typeof io.onScheduleFiberRoot == "function")
        try {
          io.onScheduleFiberRoot($c, i, l);
        } catch (h) {
          ws || (ws = !0, a("React instrumentation encountered an error: %s", h));
        }
    }
    function Jy(i, l) {
      if (io && typeof io.onCommitFiberRoot == "function")
        try {
          var h = (i.current.flags & Xt) === Xt;
          if (ue) {
            var v;
            switch (l) {
              case Di:
                v = Mp;
                break;
              case Xa:
                v = Au;
                break;
              case Vs:
                v = Fl;
                break;
              case Us:
                v = Lc;
                break;
              default:
                v = Fl;
                break;
            }
            io.onCommitFiberRoot($c, i, v, h);
          }
        } catch (S) {
          ws || (ws = !0, a("React instrumentation encountered an error: %s", S));
        }
    }
    function Zy(i) {
      if (io && typeof io.onPostCommitFiberRoot == "function")
        try {
          io.onPostCommitFiberRoot($c, i);
        } catch (l) {
          ws || (ws = !0, a("React instrumentation encountered an error: %s", l));
        }
    }
    function eb(i) {
      if (io && typeof io.onCommitFiberUnmount == "function")
        try {
          io.onCommitFiberUnmount($c, i);
        } catch (l) {
          ws || (ws = !0, a("React instrumentation encountered an error: %s", l));
        }
    }
    function Xr(i) {
      if (typeof Bm == "function" && (c0(i), o(i)), io && typeof io.setStrictMode == "function")
        try {
          io.setStrictMode($c, i);
        } catch (l) {
          ws || (ws = !0, a("React instrumentation encountered an error: %s", l));
        }
    }
    function Hs(i) {
      Rt = i;
    }
    function jc() {
      {
        for (var i = /* @__PURE__ */ new Map(), l = 1, h = 0; h < Bc; h++) {
          var v = h0(l);
          i.set(l, v), l *= 2;
        }
        return i;
      }
    }
    function tb(i) {
      Rt !== null && typeof Rt.markCommitStarted == "function" && Rt.markCommitStarted(i);
    }
    function nb() {
      Rt !== null && typeof Rt.markCommitStopped == "function" && Rt.markCommitStopped();
    }
    function Ss(i) {
      Rt !== null && typeof Rt.markComponentRenderStarted == "function" && Rt.markComponentRenderStarted(i);
    }
    function Cs() {
      Rt !== null && typeof Rt.markComponentRenderStopped == "function" && Rt.markComponentRenderStopped();
    }
    function rb(i) {
      Rt !== null && typeof Rt.markComponentPassiveEffectMountStarted == "function" && Rt.markComponentPassiveEffectMountStarted(i);
    }
    function d0() {
      Rt !== null && typeof Rt.markComponentPassiveEffectMountStopped == "function" && Rt.markComponentPassiveEffectMountStopped();
    }
    function zl(i) {
      Rt !== null && typeof Rt.markComponentPassiveEffectUnmountStarted == "function" && Rt.markComponentPassiveEffectUnmountStarted(i);
    }
    function Nu() {
      Rt !== null && typeof Rt.markComponentPassiveEffectUnmountStopped == "function" && Rt.markComponentPassiveEffectUnmountStopped();
    }
    function Hm(i) {
      Rt !== null && typeof Rt.markComponentLayoutEffectMountStarted == "function" && Rt.markComponentLayoutEffectMountStarted(i);
    }
    function f0() {
      Rt !== null && typeof Rt.markComponentLayoutEffectMountStopped == "function" && Rt.markComponentLayoutEffectMountStopped();
    }
    function Ip(i) {
      Rt !== null && typeof Rt.markComponentLayoutEffectUnmountStarted == "function" && Rt.markComponentLayoutEffectUnmountStarted(i);
    }
    function ob() {
      Rt !== null && typeof Rt.markComponentLayoutEffectUnmountStopped == "function" && Rt.markComponentLayoutEffectUnmountStopped();
    }
    function Dp(i, l, h) {
      Rt !== null && typeof Rt.markComponentErrored == "function" && Rt.markComponentErrored(i, l, h);
    }
    function Ya(i, l, h) {
      Rt !== null && typeof Rt.markComponentSuspended == "function" && Rt.markComponentSuspended(i, l, h);
    }
    function Ap(i) {
      Rt !== null && typeof Rt.markLayoutEffectsStarted == "function" && Rt.markLayoutEffectsStarted(i);
    }
    function Np() {
      Rt !== null && typeof Rt.markLayoutEffectsStopped == "function" && Rt.markLayoutEffectsStopped();
    }
    function Fc(i) {
      Rt !== null && typeof Rt.markPassiveEffectsStarted == "function" && Rt.markPassiveEffectsStarted(i);
    }
    function ib() {
      Rt !== null && typeof Rt.markPassiveEffectsStopped == "function" && Rt.markPassiveEffectsStopped();
    }
    function zc(i) {
      Rt !== null && typeof Rt.markRenderStarted == "function" && Rt.markRenderStarted(i);
    }
    function p0() {
      Rt !== null && typeof Rt.markRenderYielded == "function" && Rt.markRenderYielded();
    }
    function Vm() {
      Rt !== null && typeof Rt.markRenderStopped == "function" && Rt.markRenderStopped();
    }
    function Qr(i) {
      Rt !== null && typeof Rt.markRenderScheduled == "function" && Rt.markRenderScheduled(i);
    }
    function Um(i, l) {
      Rt !== null && typeof Rt.markForceUpdateScheduled == "function" && Rt.markForceUpdateScheduled(i, l);
    }
    function Lp(i, l) {
      Rt !== null && typeof Rt.markStateUpdateScheduled == "function" && Rt.markStateUpdateScheduled(i, l);
    }
    var Jt = (
      /*                         */
      0
    ), kn = (
      /*                 */
      1
    ), Zn = (
      /*                    */
      2
    ), yr = (
      /*               */
      8
    ), er = (
      /*              */
      16
    ), yo = Math.clz32 ? Math.clz32 : $p, Ho = Math.log, Wm = Math.LN2;
    function $p(i) {
      var l = i >>> 0;
      return l === 0 ? 32 : 31 - (Ho(l) / Wm | 0) | 0;
    }
    var Bc = 31, it = (
      /*                        */
      0
    ), Xn = (
      /*                          */
      0
    ), ln = (
      /*                        */
      1
    ), Lu = (
      /*    */
      2
    ), va = (
      /*             */
      4
    ), Si = (
      /*            */
      8
    ), so = (
      /*                     */
      16
    ), Bl = (
      /*                */
      32
    ), $u = (
      /*                       */
      4194240
    ), Hc = (
      /*                        */
      64
    ), Gm = (
      /*                        */
      128
    ), qm = (
      /*                        */
      256
    ), Km = (
      /*                        */
      512
    ), Ym = (
      /*                        */
      1024
    ), Xm = (
      /*                        */
      2048
    ), Qm = (
      /*                        */
      4096
    ), Jm = (
      /*                        */
      8192
    ), Zm = (
      /*                        */
      16384
    ), Vc = (
      /*                       */
      32768
    ), eg = (
      /*                       */
      65536
    ), Zd = (
      /*                       */
      131072
    ), ef = (
      /*                       */
      262144
    ), tg = (
      /*                       */
      524288
    ), jp = (
      /*                       */
      1048576
    ), ng = (
      /*                       */
      2097152
    ), Fp = (
      /*                            */
      130023424
    ), Uc = (
      /*                             */
      4194304
    ), rg = (
      /*                             */
      8388608
    ), zp = (
      /*                             */
      16777216
    ), og = (
      /*                             */
      33554432
    ), ig = (
      /*                             */
      67108864
    ), sb = Uc, Bp = (
      /*          */
      134217728
    ), ab = (
      /*                          */
      268435455
    ), Hp = (
      /*               */
      268435456
    ), Wc = (
      /*                        */
      536870912
    ), os = (
      /*                   */
      1073741824
    );
    function h0(i) {
      {
        if (i & ln)
          return "Sync";
        if (i & Lu)
          return "InputContinuousHydration";
        if (i & va)
          return "InputContinuous";
        if (i & Si)
          return "DefaultHydration";
        if (i & so)
          return "Default";
        if (i & Bl)
          return "TransitionHydration";
        if (i & $u)
          return "Transition";
        if (i & Fp)
          return "Retry";
        if (i & Bp)
          return "SelectiveHydration";
        if (i & Hp)
          return "IdleHydration";
        if (i & Wc)
          return "Idle";
        if (i & os)
          return "Offscreen";
      }
    }
    var Rr = -1, Gc = Hc, sg = Uc;
    function Vp(i) {
      switch (ju(i)) {
        case ln:
          return ln;
        case Lu:
          return Lu;
        case va:
          return va;
        case Si:
          return Si;
        case so:
          return so;
        case Bl:
          return Bl;
        case Hc:
        case Gm:
        case qm:
        case Km:
        case Ym:
        case Xm:
        case Qm:
        case Jm:
        case Zm:
        case Vc:
        case eg:
        case Zd:
        case ef:
        case tg:
        case jp:
        case ng:
          return i & $u;
        case Uc:
        case rg:
        case zp:
        case og:
        case ig:
          return i & Fp;
        case Bp:
          return Bp;
        case Hp:
          return Hp;
        case Wc:
          return Wc;
        case os:
          return os;
        default:
          return a("Should have found matching lanes. This is a bug in React."), i;
      }
    }
    function ag(i, l) {
      var h = i.pendingLanes;
      if (h === it)
        return it;
      var v = it, S = i.suspendedLanes, R = i.pingedLanes, L = h & ab;
      if (L !== it) {
        var V = L & ~S;
        if (V !== it)
          v = Vp(V);
        else {
          var Z = L & R;
          Z !== it && (v = Vp(Z));
        }
      } else {
        var ae = h & ~S;
        ae !== it ? v = Vp(ae) : R !== it && (v = Vp(R));
      }
      if (v === it)
        return it;
      if (l !== it && l !== v && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (l & S) === it) {
        var le = ju(v), Te = ju(l);
        if (
          // Tests whether the next lane is equal or lower priority than the wip
          // one. This works because the bits decrease in priority as you go left.
          le >= Te || // Default priority updates should not interrupt transition updates. The
          // only difference between default updates and transition updates is that
          // default updates do not support refresh transitions.
          le === so && (Te & $u) !== it
        )
          return l;
      }
      (v & va) !== it && (v |= h & so);
      var xe = i.entangledLanes;
      if (xe !== it)
        for (var Le = i.entanglements, ze = v & xe; ze > 0; ) {
          var Ge = bo(ze), kt = 1 << Ge;
          v |= Le[Ge], ze &= ~kt;
        }
      return v;
    }
    function ya(i, l) {
      for (var h = i.eventTimes, v = Rr; l > 0; ) {
        var S = bo(l), R = 1 << S, L = h[S];
        L > v && (v = L), l &= ~R;
      }
      return v;
    }
    function lb(i, l) {
      switch (i) {
        case ln:
        case Lu:
        case va:
          return l + 250;
        case Si:
        case so:
        case Bl:
        case Hc:
        case Gm:
        case qm:
        case Km:
        case Ym:
        case Xm:
        case Qm:
        case Jm:
        case Zm:
        case Vc:
        case eg:
        case Zd:
        case ef:
        case tg:
        case jp:
        case ng:
          return l + 5e3;
        case Uc:
        case rg:
        case zp:
        case og:
        case ig:
          return Rr;
        case Bp:
        case Hp:
        case Wc:
        case os:
          return Rr;
        default:
          return a("Should have found matching lanes. This is a bug in React."), Rr;
      }
    }
    function lg(i, l) {
      for (var h = i.pendingLanes, v = i.suspendedLanes, S = i.pingedLanes, R = i.expirationTimes, L = h; L > 0; ) {
        var V = bo(L), Z = 1 << V, ae = R[V];
        ae === Rr ? ((Z & v) === it || (Z & S) !== it) && (R[V] = lb(Z, l)) : ae <= l && (i.expiredLanes |= Z), L &= ~Z;
      }
    }
    function m0(i) {
      return Vp(i.pendingLanes);
    }
    function ug(i) {
      var l = i.pendingLanes & ~os;
      return l !== it ? l : l & os ? os : it;
    }
    function g0(i) {
      return (i & ln) !== it;
    }
    function Up(i) {
      return (i & ab) !== it;
    }
    function qc(i) {
      return (i & Fp) === i;
    }
    function ub(i) {
      var l = ln | va | so;
      return (i & l) === it;
    }
    function cb(i) {
      return (i & $u) === i;
    }
    function cg(i, l) {
      var h = Lu | va | Si | so;
      return (l & h) !== it;
    }
    function v0(i, l) {
      return (l & i.expiredLanes) !== it;
    }
    function db(i) {
      return (i & $u) !== it;
    }
    function fb() {
      var i = Gc;
      return Gc <<= 1, (Gc & $u) === it && (Gc = Hc), i;
    }
    function y0() {
      var i = sg;
      return sg <<= 1, (sg & Fp) === it && (sg = Uc), i;
    }
    function ju(i) {
      return i & -i;
    }
    function Wp(i) {
      return ju(i);
    }
    function bo(i) {
      return 31 - yo(i);
    }
    function ni(i) {
      return bo(i);
    }
    function is(i, l) {
      return (i & l) !== it;
    }
    function Kc(i, l) {
      return (i & l) === l;
    }
    function En(i, l) {
      return i | l;
    }
    function Gp(i, l) {
      return i & ~l;
    }
    function pb(i, l) {
      return i & l;
    }
    function b0(i) {
      return i;
    }
    function w0(i, l) {
      return i !== Xn && i < l ? i : l;
    }
    function qp(i) {
      for (var l = [], h = 0; h < Bc; h++)
        l.push(i);
      return l;
    }
    function tf(i, l, h) {
      i.pendingLanes |= l, l !== Wc && (i.suspendedLanes = it, i.pingedLanes = it);
      var v = i.eventTimes, S = ni(l);
      v[S] = h;
    }
    function S0(i, l) {
      i.suspendedLanes |= l, i.pingedLanes &= ~l;
      for (var h = i.expirationTimes, v = l; v > 0; ) {
        var S = bo(v), R = 1 << S;
        h[S] = Rr, v &= ~R;
      }
    }
    function dg(i, l, h) {
      i.pingedLanes |= i.suspendedLanes & l;
    }
    function hb(i, l) {
      var h = i.pendingLanes & ~l;
      i.pendingLanes = l, i.suspendedLanes = it, i.pingedLanes = it, i.expiredLanes &= l, i.mutableReadLanes &= l, i.entangledLanes &= l;
      for (var v = i.entanglements, S = i.eventTimes, R = i.expirationTimes, L = h; L > 0; ) {
        var V = bo(L), Z = 1 << V;
        v[V] = it, S[V] = Rr, R[V] = Rr, L &= ~Z;
      }
    }
    function fg(i, l) {
      for (var h = i.entangledLanes |= l, v = i.entanglements, S = h; S; ) {
        var R = bo(S), L = 1 << R;
        // Is this one of the newly entangled lanes?
        L & l | // Is this lane transitively entangled with the newly entangled lanes?
        v[R] & l && (v[R] |= l), S &= ~L;
      }
    }
    function mb(i, l) {
      var h = ju(l), v;
      switch (h) {
        case va:
          v = Lu;
          break;
        case so:
          v = Si;
          break;
        case Hc:
        case Gm:
        case qm:
        case Km:
        case Ym:
        case Xm:
        case Qm:
        case Jm:
        case Zm:
        case Vc:
        case eg:
        case Zd:
        case ef:
        case tg:
        case jp:
        case ng:
        case Uc:
        case rg:
        case zp:
        case og:
        case ig:
          v = Bl;
          break;
        case Wc:
          v = Hp;
          break;
        default:
          v = Xn;
          break;
      }
      return (v & (i.suspendedLanes | l)) !== Xn ? Xn : v;
    }
    function Kp(i, l, h) {
      if (rs)
        for (var v = i.pendingUpdatersLaneMap; h > 0; ) {
          var S = ni(h), R = 1 << S, L = v[S];
          L.add(l), h &= ~R;
        }
    }
    function C0(i, l) {
      if (rs)
        for (var h = i.pendingUpdatersLaneMap, v = i.memoizedUpdaters; l > 0; ) {
          var S = ni(l), R = 1 << S, L = h[S];
          L.size > 0 && (L.forEach(function(V) {
            var Z = V.alternate;
            (Z === null || !v.has(Z)) && v.add(V);
          }), L.clear()), l &= ~R;
        }
    }
    function gb(i, l) {
      return null;
    }
    var Di = ln, Xa = va, Vs = so, Us = Wc, Yp = Xn;
    function Ws() {
      return Yp;
    }
    function wo(i) {
      Yp = i;
    }
    function x0(i, l) {
      var h = Yp;
      try {
        return Yp = i, l();
      } finally {
        Yp = h;
      }
    }
    function E0(i, l) {
      return i !== 0 && i < l ? i : l;
    }
    function Xp(i, l) {
      return i > l ? i : l;
    }
    function Vo(i, l) {
      return i !== 0 && i < l;
    }
    function T0(i) {
      var l = ju(i);
      return Vo(Di, l) ? Vo(Xa, l) ? Up(l) ? Vs : Us : Xa : Di;
    }
    function pg(i) {
      var l = i.current.memoizedState;
      return l.isDehydrated;
    }
    var Qp;
    function Ci(i) {
      Qp = i;
    }
    function zO(i) {
      Qp(i);
    }
    var Nt;
    function nf(i) {
      Nt = i;
    }
    var hg;
    function _0(i) {
      hg = i;
    }
    var O0;
    function Jp(i) {
      O0 = i;
    }
    var Zp;
    function vb(i) {
      Zp = i;
    }
    var mg = !1, eh = [], Hl = null, Qa = null, Ja = null, ao = /* @__PURE__ */ new Map(), Ai = /* @__PURE__ */ new Map(), Ni = [], R0 = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function k0(i) {
      return R0.indexOf(i) > -1;
    }
    function ba(i, l, h, v, S) {
      return {
        blockedOn: i,
        domEventName: l,
        eventSystemFlags: h,
        nativeEvent: S,
        targetContainers: [v]
      };
    }
    function yb(i, l) {
      switch (i) {
        case "focusin":
        case "focusout":
          Hl = null;
          break;
        case "dragenter":
        case "dragleave":
          Qa = null;
          break;
        case "mouseover":
        case "mouseout":
          Ja = null;
          break;
        case "pointerover":
        case "pointerout": {
          var h = l.pointerId;
          ao.delete(h);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var v = l.pointerId;
          Ai.delete(v);
          break;
        }
      }
    }
    function ss(i, l, h, v, S, R) {
      if (i === null || i.nativeEvent !== R) {
        var L = ba(l, h, v, S, R);
        if (l !== null) {
          var V = ff(l);
          V !== null && Nt(V);
        }
        return L;
      }
      i.eventSystemFlags |= v;
      var Z = i.targetContainers;
      return S !== null && Z.indexOf(S) === -1 && Z.push(S), i;
    }
    function BO(i, l, h, v, S) {
      switch (l) {
        case "focusin": {
          var R = S;
          return Hl = ss(Hl, i, l, h, v, R), !0;
        }
        case "dragenter": {
          var L = S;
          return Qa = ss(Qa, i, l, h, v, L), !0;
        }
        case "mouseover": {
          var V = S;
          return Ja = ss(Ja, i, l, h, v, V), !0;
        }
        case "pointerover": {
          var Z = S, ae = Z.pointerId;
          return ao.set(ae, ss(ao.get(ae) || null, i, l, h, v, Z)), !0;
        }
        case "gotpointercapture": {
          var le = S, Te = le.pointerId;
          return Ai.set(Te, ss(Ai.get(Te) || null, i, l, h, v, le)), !0;
        }
      }
      return !1;
    }
    function bb(i) {
      var l = fh(i.target);
      if (l !== null) {
        var h = bs(l);
        if (h !== null) {
          var v = h.tag;
          if (v === P) {
            var S = qa(h);
            if (S !== null) {
              i.blockedOn = S, Zp(i.priority, function() {
                hg(h);
              });
              return;
            }
          } else if (v === y) {
            var R = h.stateNode;
            if (pg(R)) {
              i.blockedOn = Ka(h);
              return;
            }
          }
        }
      }
      i.blockedOn = null;
    }
    function P0(i) {
      for (var l = O0(), h = {
        blockedOn: null,
        target: i,
        priority: l
      }, v = 0; v < Ni.length && Vo(l, Ni[v].priority); v++)
        ;
      Ni.splice(v, 0, h), v === 0 && bb(h);
    }
    function th(i) {
      if (i.blockedOn !== null)
        return !1;
      for (var l = i.targetContainers; l.length > 0; ) {
        var h = l[0], v = of(i.domEventName, i.eventSystemFlags, h, i.nativeEvent);
        if (v === null) {
          var S = i.nativeEvent, R = new S.constructor(S.type, S);
          NO(R), S.target.dispatchEvent(R), LO();
        } else {
          var L = ff(v);
          return L !== null && Nt(L), i.blockedOn = v, !1;
        }
        l.shift();
      }
      return !0;
    }
    function wb(i, l, h) {
      th(i) && h.delete(l);
    }
    function HO() {
      mg = !1, Hl !== null && th(Hl) && (Hl = null), Qa !== null && th(Qa) && (Qa = null), Ja !== null && th(Ja) && (Ja = null), ao.forEach(wb), Ai.forEach(wb);
    }
    function Fu(i, l) {
      i.blockedOn === l && (i.blockedOn = null, mg || (mg = !0, t.unstable_scheduleCallback(t.unstable_NormalPriority, HO)));
    }
    function Yc(i) {
      if (eh.length > 0) {
        Fu(eh[0], i);
        for (var l = 1; l < eh.length; l++) {
          var h = eh[l];
          h.blockedOn === i && (h.blockedOn = null);
        }
      }
      Hl !== null && Fu(Hl, i), Qa !== null && Fu(Qa, i), Ja !== null && Fu(Ja, i);
      var v = function(V) {
        return Fu(V, i);
      };
      ao.forEach(v), Ai.forEach(v);
      for (var S = 0; S < Ni.length; S++) {
        var R = Ni[S];
        R.blockedOn === i && (R.blockedOn = null);
      }
      for (; Ni.length > 0; ) {
        var L = Ni[0];
        if (L.blockedOn !== null)
          break;
        bb(L), L.blockedOn === null && Ni.shift();
      }
    }
    var ri = n.ReactCurrentBatchConfig, Vn = !0;
    function No(i) {
      Vn = !!i;
    }
    function So() {
      return Vn;
    }
    function oi(i, l, h) {
      var v = gg(l), S;
      switch (v) {
        case Di:
          S = xs;
          break;
        case Xa:
          S = rf;
          break;
        case Vs:
        default:
          S = lo;
          break;
      }
      return S.bind(null, l, h, i);
    }
    function xs(i, l, h, v) {
      var S = Ws(), R = ri.transition;
      ri.transition = null;
      try {
        wo(Di), lo(i, l, h, v);
      } finally {
        wo(S), ri.transition = R;
      }
    }
    function rf(i, l, h, v) {
      var S = Ws(), R = ri.transition;
      ri.transition = null;
      try {
        wo(Xa), lo(i, l, h, v);
      } finally {
        wo(S), ri.transition = R;
      }
    }
    function lo(i, l, h, v) {
      Vn && nh(i, l, h, v);
    }
    function nh(i, l, h, v) {
      var S = of(i, l, h, v);
      if (S === null) {
        i1(i, l, v, Za, h), yb(i, v);
        return;
      }
      if (BO(S, i, l, h, v)) {
        v.stopPropagation();
        return;
      }
      if (yb(i, v), l & $s && k0(i)) {
        for (; S !== null; ) {
          var R = ff(S);
          R !== null && zO(R);
          var L = of(i, l, h, v);
          if (L === null && i1(i, l, v, Za, h), L === S)
            break;
          S = L;
        }
        S !== null && v.stopPropagation();
        return;
      }
      i1(i, l, v, null, h);
    }
    var Za = null;
    function of(i, l, h, v) {
      Za = null;
      var S = Gy(v), R = fh(S);
      if (R !== null) {
        var L = bs(R);
        if (L === null)
          R = null;
        else {
          var V = L.tag;
          if (V === P) {
            var Z = qa(L);
            if (Z !== null)
              return Z;
            R = null;
          } else if (V === y) {
            var ae = L.stateNode;
            if (pg(ae))
              return Ka(L);
            R = null;
          } else L !== R && (R = null);
        }
      }
      return Za = R, null;
    }
    function gg(i) {
      switch (i) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return Di;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return Xa;
        case "message": {
          var l = zm();
          switch (l) {
            case Mp:
              return Di;
            case Au:
              return Xa;
            case Fl:
            case FO:
              return Vs;
            case Lc:
              return Us;
            default:
              return Vs;
          }
        }
        default:
          return Vs;
      }
    }
    function rh(i, l, h) {
      return i.addEventListener(l, h, !1), h;
    }
    function as(i, l, h) {
      return i.addEventListener(l, h, !0), h;
    }
    function Sb(i, l, h, v) {
      return i.addEventListener(l, h, {
        capture: !0,
        passive: v
      }), h;
    }
    function sf(i, l, h, v) {
      return i.addEventListener(l, h, {
        passive: v
      }), h;
    }
    var Es = null, af = null, Xc = null;
    function zu(i) {
      return Es = i, af = oh(), !0;
    }
    function vg() {
      Es = null, af = null, Xc = null;
    }
    function Vl() {
      if (Xc)
        return Xc;
      var i, l = af, h = l.length, v, S = oh(), R = S.length;
      for (i = 0; i < h && l[i] === S[i]; i++)
        ;
      var L = h - i;
      for (v = 1; v <= L && l[h - v] === S[R - v]; v++)
        ;
      var V = v > 1 ? 1 - v : void 0;
      return Xc = S.slice(i, V), Xc;
    }
    function oh() {
      return "value" in Es ? Es.value : Es.textContent;
    }
    function Bu(i) {
      var l, h = i.keyCode;
      return "charCode" in i ? (l = i.charCode, l === 0 && h === 13 && (l = 13)) : l = h, l === 10 && (l = 13), l >= 32 || l === 13 ? l : 0;
    }
    function lf() {
      return !0;
    }
    function ih() {
      return !1;
    }
    function xi(i) {
      function l(h, v, S, R, L) {
        this._reactName = h, this._targetInst = S, this.type = v, this.nativeEvent = R, this.target = L, this.currentTarget = null;
        for (var V in i)
          if (i.hasOwnProperty(V)) {
            var Z = i[V];
            Z ? this[V] = Z(R) : this[V] = R[V];
          }
        var ae = R.defaultPrevented != null ? R.defaultPrevented : R.returnValue === !1;
        return ae ? this.isDefaultPrevented = lf : this.isDefaultPrevented = ih, this.isPropagationStopped = ih, this;
      }
      return Sn(l.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var h = this.nativeEvent;
          h && (h.preventDefault ? h.preventDefault() : typeof h.returnValue != "unknown" && (h.returnValue = !1), this.isDefaultPrevented = lf);
        },
        stopPropagation: function() {
          var h = this.nativeEvent;
          h && (h.stopPropagation ? h.stopPropagation() : typeof h.cancelBubble != "unknown" && (h.cancelBubble = !0), this.isPropagationStopped = lf);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: lf
      }), l;
    }
    var Co = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(i) {
        return i.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, el = xi(Co), Li = Sn({}, Co, {
      view: 0,
      detail: 0
    }), ls = xi(Li), yg, sh, Qc;
    function VO(i) {
      i !== Qc && (Qc && i.type === "mousemove" ? (yg = i.screenX - Qc.screenX, sh = i.screenY - Qc.screenY) : (yg = 0, sh = 0), Qc = i);
    }
    var wa = Sn({}, Li, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: Vr,
      button: 0,
      buttons: 0,
      relatedTarget: function(i) {
        return i.relatedTarget === void 0 ? i.fromElement === i.srcElement ? i.toElement : i.fromElement : i.relatedTarget;
      },
      movementX: function(i) {
        return "movementX" in i ? i.movementX : (VO(i), yg);
      },
      movementY: function(i) {
        return "movementY" in i ? i.movementY : sh;
      }
    }), Cb = xi(wa), xb = Sn({}, wa, {
      dataTransfer: 0
    }), Jc = xi(xb), Eb = Sn({}, Li, {
      relatedTarget: 0
    }), Ul = xi(Eb), M0 = Sn({}, Co, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), I0 = xi(M0), Tb = Sn({}, Co, {
      clipboardData: function(i) {
        return "clipboardData" in i ? i.clipboardData : window.clipboardData;
      }
    }), bg = xi(Tb), UO = Sn({}, Co, {
      data: 0
    }), D0 = xi(UO), A0 = D0, N0 = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Zc = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function WO(i) {
      if (i.key) {
        var l = N0[i.key] || i.key;
        if (l !== "Unidentified")
          return l;
      }
      if (i.type === "keypress") {
        var h = Bu(i);
        return h === 13 ? "Enter" : String.fromCharCode(h);
      }
      return i.type === "keydown" || i.type === "keyup" ? Zc[i.keyCode] || "Unidentified" : "";
    }
    var uf = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function L0(i) {
      var l = this, h = l.nativeEvent;
      if (h.getModifierState)
        return h.getModifierState(i);
      var v = uf[i];
      return v ? !!h[v] : !1;
    }
    function Vr(i) {
      return L0;
    }
    var GO = Sn({}, Li, {
      key: WO,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: Vr,
      // Legacy Interface
      charCode: function(i) {
        return i.type === "keypress" ? Bu(i) : 0;
      },
      keyCode: function(i) {
        return i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0;
      },
      which: function(i) {
        return i.type === "keypress" ? Bu(i) : i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0;
      }
    }), $0 = xi(GO), qO = Sn({}, wa, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), j0 = xi(qO), F0 = Sn({}, Li, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: Vr
    }), z0 = xi(F0), KO = Sn({}, Co, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Gs = xi(KO), _b = Sn({}, wa, {
      deltaX: function(i) {
        return "deltaX" in i ? i.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in i ? -i.wheelDeltaX : 0
        );
      },
      deltaY: function(i) {
        return "deltaY" in i ? i.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in i ? -i.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in i ? -i.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), YO = xi(_b), Hu = [9, 13, 27, 32], ah = 229, Wl = _e && "CompositionEvent" in window, Vu = null;
    _e && "documentMode" in document && (Vu = document.documentMode);
    var Ob = _e && "TextEvent" in window && !Vu, wg = _e && (!Wl || Vu && Vu > 8 && Vu <= 11), B0 = 32, Sg = String.fromCharCode(B0);
    function XO() {
      be("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), be("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), be("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var Rb = !1;
    function H0(i) {
      return (i.ctrlKey || i.altKey || i.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(i.ctrlKey && i.altKey);
    }
    function Cg(i) {
      switch (i) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function xg(i, l) {
      return i === "keydown" && l.keyCode === ah;
    }
    function kb(i, l) {
      switch (i) {
        case "keyup":
          return Hu.indexOf(l.keyCode) !== -1;
        case "keydown":
          return l.keyCode !== ah;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function Eg(i) {
      var l = i.detail;
      return typeof l == "object" && "data" in l ? l.data : null;
    }
    function V0(i) {
      return i.locale === "ko";
    }
    var ed = !1;
    function Pb(i, l, h, v, S) {
      var R, L;
      if (Wl ? R = Cg(l) : ed ? kb(l, v) && (R = "onCompositionEnd") : xg(l, v) && (R = "onCompositionStart"), !R)
        return null;
      wg && !V0(v) && (!ed && R === "onCompositionStart" ? ed = zu(S) : R === "onCompositionEnd" && ed && (L = Vl()));
      var V = X0(h, R);
      if (V.length > 0) {
        var Z = new D0(R, l, null, v, S);
        if (i.push({
          event: Z,
          listeners: V
        }), L)
          Z.data = L;
        else {
          var ae = Eg(v);
          ae !== null && (Z.data = ae);
        }
      }
    }
    function Tg(i, l) {
      switch (i) {
        case "compositionend":
          return Eg(l);
        case "keypress":
          var h = l.which;
          return h !== B0 ? null : (Rb = !0, Sg);
        case "textInput":
          var v = l.data;
          return v === Sg && Rb ? null : v;
        default:
          return null;
      }
    }
    function Mb(i, l) {
      if (ed) {
        if (i === "compositionend" || !Wl && kb(i, l)) {
          var h = Vl();
          return vg(), ed = !1, h;
        }
        return null;
      }
      switch (i) {
        case "paste":
          return null;
        case "keypress":
          if (!H0(l)) {
            if (l.char && l.char.length > 1)
              return l.char;
            if (l.which)
              return String.fromCharCode(l.which);
          }
          return null;
        case "compositionend":
          return wg && !V0(l) ? null : l.data;
        default:
          return null;
      }
    }
    function _g(i, l, h, v, S) {
      var R;
      if (Ob ? R = Tg(l, v) : R = Mb(l, v), !R)
        return null;
      var L = X0(h, "onBeforeInput");
      if (L.length > 0) {
        var V = new A0("onBeforeInput", "beforeinput", null, v, S);
        i.push({
          event: V,
          listeners: L
        }), V.data = R;
      }
    }
    function U0(i, l, h, v, S, R, L) {
      Pb(i, l, h, v, S), _g(i, l, h, v, S);
    }
    var QO = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function lh(i) {
      var l = i && i.nodeName && i.nodeName.toLowerCase();
      return l === "input" ? !!QO[i.type] : l === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function JO(i) {
      if (!_e)
        return !1;
      var l = "on" + i, h = l in document;
      if (!h) {
        var v = document.createElement("div");
        v.setAttribute(l, "return;"), h = typeof v[l] == "function";
      }
      return h;
    }
    function uh() {
      be("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function W0(i, l, h, v) {
      Wd(v);
      var S = X0(l, "onChange");
      if (S.length > 0) {
        var R = new el("onChange", "change", null, h, v);
        i.push({
          event: R,
          listeners: S
        });
      }
    }
    var Uu = null, d = null;
    function p(i) {
      var l = i.nodeName && i.nodeName.toLowerCase();
      return l === "select" || l === "input" && i.type === "file";
    }
    function b(i) {
      var l = [];
      W0(l, d, i, Gy(i)), r0(_, l);
    }
    function _(i) {
      gA(i, 0);
    }
    function D(i) {
      var l = Ig(i);
      if (Ba(l))
        return i;
    }
    function j(i, l) {
      if (i === "change")
        return l;
    }
    var oe = !1;
    _e && (oe = JO("input") && (!document.documentMode || document.documentMode > 9));
    function me(i, l) {
      Uu = i, d = l, Uu.attachEvent("onpropertychange", Fe);
    }
    function Se() {
      Uu && (Uu.detachEvent("onpropertychange", Fe), Uu = null, d = null);
    }
    function Fe(i) {
      i.propertyName === "value" && D(d) && b(i);
    }
    function at(i, l, h) {
      i === "focusin" ? (Se(), me(l, h)) : i === "focusout" && Se();
    }
    function ct(i, l) {
      if (i === "selectionchange" || i === "keyup" || i === "keydown")
        return D(d);
    }
    function st(i) {
      var l = i.nodeName;
      return l && l.toLowerCase() === "input" && (i.type === "checkbox" || i.type === "radio");
    }
    function Mt(i, l) {
      if (i === "click")
        return D(l);
    }
    function Ht(i, l) {
      if (i === "input" || i === "change")
        return D(l);
    }
    function Gt(i) {
      var l = i._wrapperState;
      !l || !l.controlled || i.type !== "number" || tn(i, "number", i.value);
    }
    function uo(i, l, h, v, S, R, L) {
      var V = h ? Ig(h) : window, Z, ae;
      if (p(V) ? Z = j : lh(V) ? oe ? Z = Ht : (Z = ct, ae = at) : st(V) && (Z = Mt), Z) {
        var le = Z(l, h);
        if (le) {
          W0(i, le, v, S);
          return;
        }
      }
      ae && ae(l, V, h), l === "focusout" && Gt(V);
    }
    function ke() {
      we("onMouseEnter", ["mouseout", "mouseover"]), we("onMouseLeave", ["mouseout", "mouseover"]), we("onPointerEnter", ["pointerout", "pointerover"]), we("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function Ee(i, l, h, v, S, R, L) {
      var V = l === "mouseover" || l === "pointerover", Z = l === "mouseout" || l === "pointerout";
      if (V && !Tp(v)) {
        var ae = v.relatedTarget || v.fromElement;
        if (ae && (fh(ae) || Wb(ae)))
          return;
      }
      if (!(!Z && !V)) {
        var le;
        if (S.window === S)
          le = S;
        else {
          var Te = S.ownerDocument;
          Te ? le = Te.defaultView || Te.parentWindow : le = window;
        }
        var xe, Le;
        if (Z) {
          var ze = v.relatedTarget || v.toElement;
          if (xe = h, Le = ze ? fh(ze) : null, Le !== null) {
            var Ge = bs(Le);
            (Le !== Ge || Le.tag !== C && Le.tag !== T) && (Le = null);
          }
        } else
          xe = null, Le = h;
        if (xe !== Le) {
          var kt = Cb, nn = "onMouseLeave", Yt = "onMouseEnter", Wn = "mouse";
          (l === "pointerout" || l === "pointerover") && (kt = j0, nn = "onPointerLeave", Yt = "onPointerEnter", Wn = "pointer");
          var Fn = xe == null ? le : Ig(xe), Pe = Le == null ? le : Ig(Le), qe = new kt(nn, Wn + "leave", xe, v, S);
          qe.target = Fn, qe.relatedTarget = Pe;
          var Me = null, dt = fh(S);
          if (dt === h) {
            var Dt = new kt(Yt, Wn + "enter", Le, v, S);
            Dt.target = Pe, Dt.relatedTarget = Fn, Me = Dt;
          }
          fG(i, qe, Me, xe, Le);
        }
      }
    }
    function Ae(i, l) {
      return i === l && (i !== 0 || 1 / i === 1 / l) || i !== i && l !== l;
    }
    var lt = typeof Object.is == "function" ? Object.is : Ae;
    function Vt(i, l) {
      if (lt(i, l))
        return !0;
      if (typeof i != "object" || i === null || typeof l != "object" || l === null)
        return !1;
      var h = Object.keys(i), v = Object.keys(l);
      if (h.length !== v.length)
        return !1;
      for (var S = 0; S < h.length; S++) {
        var R = h[S];
        if (!ce.call(l, R) || !lt(i[R], l[R]))
          return !1;
      }
      return !0;
    }
    function rn(i) {
      for (; i && i.firstChild; )
        i = i.firstChild;
      return i;
    }
    function sn(i) {
      for (; i; ) {
        if (i.nextSibling)
          return i.nextSibling;
        i = i.parentNode;
      }
    }
    function hn(i, l) {
      for (var h = rn(i), v = 0, S = 0; h; ) {
        if (h.nodeType === Al) {
          if (S = v + h.textContent.length, v <= l && S >= l)
            return {
              node: h,
              offset: l - v
            };
          v = S;
        }
        h = rn(sn(h));
      }
    }
    function Uo(i) {
      var l = i.ownerDocument, h = l && l.defaultView || window, v = h.getSelection && h.getSelection();
      if (!v || v.rangeCount === 0)
        return null;
      var S = v.anchorNode, R = v.anchorOffset, L = v.focusNode, V = v.focusOffset;
      try {
        S.nodeType, L.nodeType;
      } catch {
        return null;
      }
      return tr(i, S, R, L, V);
    }
    function tr(i, l, h, v, S) {
      var R = 0, L = -1, V = -1, Z = 0, ae = 0, le = i, Te = null;
      e: for (; ; ) {
        for (var xe = null; le === l && (h === 0 || le.nodeType === Al) && (L = R + h), le === v && (S === 0 || le.nodeType === Al) && (V = R + S), le.nodeType === Al && (R += le.nodeValue.length), (xe = le.firstChild) !== null; )
          Te = le, le = xe;
        for (; ; ) {
          if (le === i)
            break e;
          if (Te === l && ++Z === h && (L = R), Te === v && ++ae === S && (V = R), (xe = le.nextSibling) !== null)
            break;
          le = Te, Te = le.parentNode;
        }
        le = xe;
      }
      return L === -1 || V === -1 ? null : {
        start: L,
        end: V
      };
    }
    function Wu(i, l) {
      var h = i.ownerDocument || document, v = h && h.defaultView || window;
      if (v.getSelection) {
        var S = v.getSelection(), R = i.textContent.length, L = Math.min(l.start, R), V = l.end === void 0 ? L : Math.min(l.end, R);
        if (!S.extend && L > V) {
          var Z = V;
          V = L, L = Z;
        }
        var ae = hn(i, L), le = hn(i, V);
        if (ae && le) {
          if (S.rangeCount === 1 && S.anchorNode === ae.node && S.anchorOffset === ae.offset && S.focusNode === le.node && S.focusOffset === le.offset)
            return;
          var Te = h.createRange();
          Te.setStart(ae.node, ae.offset), S.removeAllRanges(), L > V ? (S.addRange(Te), S.extend(le.node, le.offset)) : (Te.setEnd(le.node, le.offset), S.addRange(Te));
        }
      }
    }
    function G0(i) {
      return i && i.nodeType === Al;
    }
    function iA(i, l) {
      return !i || !l ? !1 : i === l ? !0 : G0(i) ? !1 : G0(l) ? iA(i, l.parentNode) : "contains" in i ? i.contains(l) : i.compareDocumentPosition ? !!(i.compareDocumentPosition(l) & 16) : !1;
    }
    function K4(i) {
      return i && i.ownerDocument && iA(i.ownerDocument.documentElement, i);
    }
    function Y4(i) {
      try {
        return typeof i.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function sA() {
      for (var i = window, l = Ls(); l instanceof i.HTMLIFrameElement; ) {
        if (Y4(l))
          i = l.contentWindow;
        else
          return l;
        l = Ls(i.document);
      }
      return l;
    }
    function ZO(i) {
      var l = i && i.nodeName && i.nodeName.toLowerCase();
      return l && (l === "input" && (i.type === "text" || i.type === "search" || i.type === "tel" || i.type === "url" || i.type === "password") || l === "textarea" || i.contentEditable === "true");
    }
    function X4() {
      var i = sA();
      return {
        focusedElem: i,
        selectionRange: ZO(i) ? J4(i) : null
      };
    }
    function Q4(i) {
      var l = sA(), h = i.focusedElem, v = i.selectionRange;
      if (l !== h && K4(h)) {
        v !== null && ZO(h) && Z4(h, v);
        for (var S = [], R = h; R = R.parentNode; )
          R.nodeType === Ji && S.push({
            element: R,
            left: R.scrollLeft,
            top: R.scrollTop
          });
        typeof h.focus == "function" && h.focus();
        for (var L = 0; L < S.length; L++) {
          var V = S[L];
          V.element.scrollLeft = V.left, V.element.scrollTop = V.top;
        }
      }
    }
    function J4(i) {
      var l;
      return "selectionStart" in i ? l = {
        start: i.selectionStart,
        end: i.selectionEnd
      } : l = Uo(i), l || {
        start: 0,
        end: 0
      };
    }
    function Z4(i, l) {
      var h = l.start, v = l.end;
      v === void 0 && (v = h), "selectionStart" in i ? (i.selectionStart = h, i.selectionEnd = Math.min(v, i.value.length)) : Wu(i, l);
    }
    var eG = _e && "documentMode" in document && document.documentMode <= 11;
    function tG() {
      be("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var Og = null, e1 = null, Ib = null, t1 = !1;
    function nG(i) {
      if ("selectionStart" in i && ZO(i))
        return {
          start: i.selectionStart,
          end: i.selectionEnd
        };
      var l = i.ownerDocument && i.ownerDocument.defaultView || window, h = l.getSelection();
      return {
        anchorNode: h.anchorNode,
        anchorOffset: h.anchorOffset,
        focusNode: h.focusNode,
        focusOffset: h.focusOffset
      };
    }
    function rG(i) {
      return i.window === i ? i.document : i.nodeType === Nl ? i : i.ownerDocument;
    }
    function aA(i, l, h) {
      var v = rG(h);
      if (!(t1 || Og == null || Og !== Ls(v))) {
        var S = nG(Og);
        if (!Ib || !Vt(Ib, S)) {
          Ib = S;
          var R = X0(e1, "onSelect");
          if (R.length > 0) {
            var L = new el("onSelect", "select", null, l, h);
            i.push({
              event: L,
              listeners: R
            }), L.target = Og;
          }
        }
      }
    }
    function oG(i, l, h, v, S, R, L) {
      var V = h ? Ig(h) : window;
      switch (l) {
        case "focusin":
          (lh(V) || V.contentEditable === "true") && (Og = V, e1 = h, Ib = null);
          break;
        case "focusout":
          Og = null, e1 = null, Ib = null;
          break;
        case "mousedown":
          t1 = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          t1 = !1, aA(i, v, S);
          break;
        case "selectionchange":
          if (eG)
            break;
        case "keydown":
        case "keyup":
          aA(i, v, S);
      }
    }
    function q0(i, l) {
      var h = {};
      return h[i.toLowerCase()] = l.toLowerCase(), h["Webkit" + i] = "webkit" + l, h["Moz" + i] = "moz" + l, h;
    }
    var Rg = {
      animationend: q0("Animation", "AnimationEnd"),
      animationiteration: q0("Animation", "AnimationIteration"),
      animationstart: q0("Animation", "AnimationStart"),
      transitionend: q0("Transition", "TransitionEnd")
    }, n1 = {}, lA = {};
    _e && (lA = document.createElement("div").style, "AnimationEvent" in window || (delete Rg.animationend.animation, delete Rg.animationiteration.animation, delete Rg.animationstart.animation), "TransitionEvent" in window || delete Rg.transitionend.transition);
    function K0(i) {
      if (n1[i])
        return n1[i];
      if (!Rg[i])
        return i;
      var l = Rg[i];
      for (var h in l)
        if (l.hasOwnProperty(h) && h in lA)
          return n1[i] = l[h];
      return i;
    }
    var uA = K0("animationend"), cA = K0("animationiteration"), dA = K0("animationstart"), fA = K0("transitionend"), pA = /* @__PURE__ */ new Map(), hA = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
    function cf(i, l) {
      pA.set(i, l), be(l, [i]);
    }
    function iG() {
      for (var i = 0; i < hA.length; i++) {
        var l = hA[i], h = l.toLowerCase(), v = l[0].toUpperCase() + l.slice(1);
        cf(h, "on" + v);
      }
      cf(uA, "onAnimationEnd"), cf(cA, "onAnimationIteration"), cf(dA, "onAnimationStart"), cf("dblclick", "onDoubleClick"), cf("focusin", "onFocus"), cf("focusout", "onBlur"), cf(fA, "onTransitionEnd");
    }
    function sG(i, l, h, v, S, R, L) {
      var V = pA.get(l);
      if (V !== void 0) {
        var Z = el, ae = l;
        switch (l) {
          case "keypress":
            if (Bu(v) === 0)
              return;
          case "keydown":
          case "keyup":
            Z = $0;
            break;
          case "focusin":
            ae = "focus", Z = Ul;
            break;
          case "focusout":
            ae = "blur", Z = Ul;
            break;
          case "beforeblur":
          case "afterblur":
            Z = Ul;
            break;
          case "click":
            if (v.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            Z = Cb;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            Z = Jc;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            Z = z0;
            break;
          case uA:
          case cA:
          case dA:
            Z = I0;
            break;
          case fA:
            Z = Gs;
            break;
          case "scroll":
            Z = ls;
            break;
          case "wheel":
            Z = YO;
            break;
          case "copy":
          case "cut":
          case "paste":
            Z = bg;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            Z = j0;
            break;
        }
        var le = (R & $s) !== 0;
        {
          var Te = !le && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          l === "scroll", xe = cG(h, V, v.type, le, Te);
          if (xe.length > 0) {
            var Le = new Z(V, ae, null, v, S);
            i.push({
              event: Le,
              listeners: xe
            });
          }
        }
      }
    }
    iG(), ke(), uh(), tG(), XO();
    function aG(i, l, h, v, S, R, L) {
      sG(i, l, h, v, S, R);
      var V = (R & Wy) === 0;
      V && (Ee(i, l, h, v, S), uo(i, l, h, v, S), oG(i, l, h, v, S), U0(i, l, h, v, S));
    }
    var Db = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], r1 = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(Db));
    function mA(i, l, h) {
      var v = i.type || "unknown-event";
      i.currentTarget = h, Ua(v, l, void 0, i), i.currentTarget = null;
    }
    function lG(i, l, h) {
      var v;
      if (h)
        for (var S = l.length - 1; S >= 0; S--) {
          var R = l[S], L = R.instance, V = R.currentTarget, Z = R.listener;
          if (L !== v && i.isPropagationStopped())
            return;
          mA(i, Z, V), v = L;
        }
      else
        for (var ae = 0; ae < l.length; ae++) {
          var le = l[ae], Te = le.instance, xe = le.currentTarget, Le = le.listener;
          if (Te !== v && i.isPropagationStopped())
            return;
          mA(i, Le, xe), v = Te;
        }
    }
    function gA(i, l) {
      for (var h = (l & $s) !== 0, v = 0; v < i.length; v++) {
        var S = i[v], R = S.event, L = S.listeners;
        lG(R, L, h);
      }
      Rp();
    }
    function uG(i, l, h, v, S) {
      var R = Gy(h), L = [];
      aG(L, i, v, h, R, l), gA(L, l);
    }
    function Jr(i, l) {
      r1.has(i) || a('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', i);
      var h = !1, v = F3(l), S = pG(i);
      v.has(S) || (vA(l, i, Om, h), v.add(S));
    }
    function o1(i, l, h) {
      r1.has(i) && !l && a('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', i);
      var v = 0;
      l && (v |= $s), vA(h, i, v, l);
    }
    var Y0 = "_reactListening" + Math.random().toString(36).slice(2);
    function Ab(i) {
      if (!i[Y0]) {
        i[Y0] = !0, ge.forEach(function(h) {
          h !== "selectionchange" && (r1.has(h) || o1(h, !1, i), o1(h, !0, i));
        });
        var l = i.nodeType === Nl ? i : i.ownerDocument;
        l !== null && (l[Y0] || (l[Y0] = !0, o1("selectionchange", !1, l)));
      }
    }
    function vA(i, l, h, v, S) {
      var R = oi(i, l, h), L = void 0;
      Op && (l === "touchstart" || l === "touchmove" || l === "wheel") && (L = !0), i = i, v ? L !== void 0 ? Sb(i, l, R, L) : as(i, l, R) : L !== void 0 ? sf(i, l, R, L) : rh(i, l, R);
    }
    function yA(i, l) {
      return i === l || i.nodeType === mo && i.parentNode === l;
    }
    function i1(i, l, h, v, S) {
      var R = v;
      if (!(l & Uy) && !(l & Om)) {
        var L = S;
        if (v !== null) {
          var V = v;
          e: for (; ; ) {
            if (V === null)
              return;
            var Z = V.tag;
            if (Z === y || Z === w) {
              var ae = V.stateNode.containerInfo;
              if (yA(ae, L))
                break;
              if (Z === w)
                for (var le = V.return; le !== null; ) {
                  var Te = le.tag;
                  if (Te === y || Te === w) {
                    var xe = le.stateNode.containerInfo;
                    if (yA(xe, L))
                      return;
                  }
                  le = le.return;
                }
              for (; ae !== null; ) {
                var Le = fh(ae);
                if (Le === null)
                  return;
                var ze = Le.tag;
                if (ze === C || ze === T) {
                  V = R = Le;
                  continue e;
                }
                ae = ae.parentNode;
              }
            }
            V = V.return;
          }
        }
      }
      r0(function() {
        return uG(i, l, h, R);
      });
    }
    function Nb(i, l, h) {
      return {
        instance: i,
        listener: l,
        currentTarget: h
      };
    }
    function cG(i, l, h, v, S, R) {
      for (var L = l !== null ? l + "Capture" : null, V = v ? L : l, Z = [], ae = i, le = null; ae !== null; ) {
        var Te = ae, xe = Te.stateNode, Le = Te.tag;
        if (Le === C && xe !== null && (le = xe, V !== null)) {
          var ze = Ru(ae, V);
          ze != null && Z.push(Nb(ae, ze, le));
        }
        if (S)
          break;
        ae = ae.return;
      }
      return Z;
    }
    function X0(i, l) {
      for (var h = l + "Capture", v = [], S = i; S !== null; ) {
        var R = S, L = R.stateNode, V = R.tag;
        if (V === C && L !== null) {
          var Z = L, ae = Ru(S, h);
          ae != null && v.unshift(Nb(S, ae, Z));
          var le = Ru(S, l);
          le != null && v.push(Nb(S, le, Z));
        }
        S = S.return;
      }
      return v;
    }
    function kg(i) {
      if (i === null)
        return null;
      do
        i = i.return;
      while (i && i.tag !== C);
      return i || null;
    }
    function dG(i, l) {
      for (var h = i, v = l, S = 0, R = h; R; R = kg(R))
        S++;
      for (var L = 0, V = v; V; V = kg(V))
        L++;
      for (; S - L > 0; )
        h = kg(h), S--;
      for (; L - S > 0; )
        v = kg(v), L--;
      for (var Z = S; Z--; ) {
        if (h === v || v !== null && h === v.alternate)
          return h;
        h = kg(h), v = kg(v);
      }
      return null;
    }
    function bA(i, l, h, v, S) {
      for (var R = l._reactName, L = [], V = h; V !== null && V !== v; ) {
        var Z = V, ae = Z.alternate, le = Z.stateNode, Te = Z.tag;
        if (ae !== null && ae === v)
          break;
        if (Te === C && le !== null) {
          var xe = le;
          if (S) {
            var Le = Ru(V, R);
            Le != null && L.unshift(Nb(V, Le, xe));
          } else if (!S) {
            var ze = Ru(V, R);
            ze != null && L.push(Nb(V, ze, xe));
          }
        }
        V = V.return;
      }
      L.length !== 0 && i.push({
        event: l,
        listeners: L
      });
    }
    function fG(i, l, h, v, S) {
      var R = v && S ? dG(v, S) : null;
      v !== null && bA(i, l, v, R, !1), S !== null && h !== null && bA(i, h, S, R, !0);
    }
    function pG(i, l) {
      return i + "__bubble";
    }
    var qs = !1, Lb = "dangerouslySetInnerHTML", Q0 = "suppressContentEditableWarning", df = "suppressHydrationWarning", wA = "autoFocus", ch = "children", dh = "style", J0 = "__html", s1, Z0, $b, SA, ex, CA, xA;
    s1 = {
      // There are working polyfills for <dialog>. Let people use it.
      dialog: !0,
      // Electron ships a custom <webview> tag to display external web content in
      // an isolated frame and process.
      // This tag is not present in non Electron environments such as JSDom which
      // is often used for testing purposes.
      // @see https://electronjs.org/docs/api/webview-tag
      webview: !0
    }, Z0 = function(i, l) {
      By(i, l), Tm(i, l), e0(i, l, {
        registrationNameDependencies: fe,
        possibleRegistrationNames: pe
      });
    }, CA = _e && !document.documentMode, $b = function(i, l, h) {
      if (!qs) {
        var v = tx(h), S = tx(l);
        S !== v && (qs = !0, a("Prop `%s` did not match. Server: %s Client: %s", i, JSON.stringify(S), JSON.stringify(v)));
      }
    }, SA = function(i) {
      if (!qs) {
        qs = !0;
        var l = [];
        i.forEach(function(h) {
          l.push(h);
        }), a("Extra attributes from the server: %s", l);
      }
    }, ex = function(i, l) {
      l === !1 ? a("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", i, i, i) : a("Expected `%s` listener to be a function, instead got a value of `%s` type.", i, typeof l);
    }, xA = function(i, l) {
      var h = i.namespaceURI === Dl ? i.ownerDocument.createElement(i.tagName) : i.ownerDocument.createElementNS(i.namespaceURI, i.tagName);
      return h.innerHTML = l, h.innerHTML;
    };
    var hG = /\r\n?/g, mG = /\u0000|\uFFFD/g;
    function tx(i) {
      wt(i);
      var l = typeof i == "string" ? i : "" + i;
      return l.replace(hG, `
`).replace(mG, "");
    }
    function nx(i, l, h, v) {
      var S = tx(l), R = tx(i);
      if (R !== S && (v && (qs || (qs = !0, a('Text content did not match. Server: "%s" Client: "%s"', R, S))), h && X))
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function EA(i) {
      return i.nodeType === Nl ? i : i.ownerDocument;
    }
    function gG() {
    }
    function rx(i) {
      i.onclick = gG;
    }
    function vG(i, l, h, v, S) {
      for (var R in v)
        if (v.hasOwnProperty(R)) {
          var L = v[R];
          if (R === dh)
            L && Object.freeze(L), KC(l, L);
          else if (R === Lb) {
            var V = L ? L[J0] : void 0;
            V != null && LC(l, V);
          } else if (R === ch)
            if (typeof L == "string") {
              var Z = i !== "textarea" || L !== "";
              Z && Bd(l, L);
            } else typeof L == "number" && Bd(l, "" + L);
          else R === Q0 || R === df || R === wA || (fe.hasOwnProperty(R) ? L != null && (typeof L != "function" && ex(R, L), R === "onScroll" && Jr("scroll", l)) : L != null && Gr(l, R, L, S));
        }
    }
    function yG(i, l, h, v) {
      for (var S = 0; S < l.length; S += 2) {
        var R = l[S], L = l[S + 1];
        R === dh ? KC(i, L) : R === Lb ? LC(i, L) : R === ch ? Bd(i, L) : Gr(i, R, L, v);
      }
    }
    function bG(i, l, h, v) {
      var S, R = EA(h), L, V = v;
      if (V === Dl && (V = Ay(i)), V === Dl) {
        if (S = _u(i, l), !S && i !== i.toLowerCase() && a("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", i), i === "script") {
          var Z = R.createElement("div");
          Z.innerHTML = "<script><\/script>";
          var ae = Z.firstChild;
          L = Z.removeChild(ae);
        } else if (typeof l.is == "string")
          L = R.createElement(i, {
            is: l.is
          });
        else if (L = R.createElement(i), i === "select") {
          var le = L;
          l.multiple ? le.multiple = !0 : l.size && (le.size = l.size);
        }
      } else
        L = R.createElementNS(V, i);
      return V === Dl && !S && Object.prototype.toString.call(L) === "[object HTMLUnknownElement]" && !ce.call(s1, i) && (s1[i] = !0, a("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", i)), L;
    }
    function wG(i, l) {
      return EA(l).createTextNode(i);
    }
    function SG(i, l, h, v) {
      var S = _u(l, h);
      Z0(l, h);
      var R;
      switch (l) {
        case "dialog":
          Jr("cancel", i), Jr("close", i), R = h;
          break;
        case "iframe":
        case "object":
        case "embed":
          Jr("load", i), R = h;
          break;
        case "video":
        case "audio":
          for (var L = 0; L < Db.length; L++)
            Jr(Db[L], i);
          R = h;
          break;
        case "source":
          Jr("error", i), R = h;
          break;
        case "img":
        case "image":
        case "link":
          Jr("error", i), Jr("load", i), R = h;
          break;
        case "details":
          Jr("toggle", i), R = h;
          break;
        case "input":
          ha(i, h), R = zd(i, h), Jr("invalid", i);
          break;
        case "option":
          Kn(i, h), R = h;
          break;
        case "select":
          Rc(i, h), R = yp(i, h), Jr("invalid", i);
          break;
        case "textarea":
          My(i, h), R = Py(i, h), Jr("invalid", i);
          break;
        default:
          R = h;
      }
      switch (xm(l, R), vG(l, i, v, R, S), l) {
        case "input":
          pa(i), je(i, h, !1);
          break;
        case "textarea":
          pa(i), AC(i);
          break;
        case "option":
          Mr(i, h);
          break;
        case "select":
          Ry(i, h);
          break;
        default:
          typeof R.onClick == "function" && rx(i);
          break;
      }
    }
    function CG(i, l, h, v, S) {
      Z0(l, v);
      var R = null, L, V;
      switch (l) {
        case "input":
          L = zd(i, h), V = zd(i, v), R = [];
          break;
        case "select":
          L = yp(i, h), V = yp(i, v), R = [];
          break;
        case "textarea":
          L = Py(i, h), V = Py(i, v), R = [];
          break;
        default:
          L = h, V = v, typeof L.onClick != "function" && typeof V.onClick == "function" && rx(i);
          break;
      }
      xm(l, V);
      var Z, ae, le = null;
      for (Z in L)
        if (!(V.hasOwnProperty(Z) || !L.hasOwnProperty(Z) || L[Z] == null))
          if (Z === dh) {
            var Te = L[Z];
            for (ae in Te)
              Te.hasOwnProperty(ae) && (le || (le = {}), le[ae] = "");
          } else Z === Lb || Z === ch || Z === Q0 || Z === df || Z === wA || (fe.hasOwnProperty(Z) ? R || (R = []) : (R = R || []).push(Z, null));
      for (Z in V) {
        var xe = V[Z], Le = L != null ? L[Z] : void 0;
        if (!(!V.hasOwnProperty(Z) || xe === Le || xe == null && Le == null))
          if (Z === dh)
            if (xe && Object.freeze(xe), Le) {
              for (ae in Le)
                Le.hasOwnProperty(ae) && (!xe || !xe.hasOwnProperty(ae)) && (le || (le = {}), le[ae] = "");
              for (ae in xe)
                xe.hasOwnProperty(ae) && Le[ae] !== xe[ae] && (le || (le = {}), le[ae] = xe[ae]);
            } else
              le || (R || (R = []), R.push(Z, le)), le = xe;
          else if (Z === Lb) {
            var ze = xe ? xe[J0] : void 0, Ge = Le ? Le[J0] : void 0;
            ze != null && Ge !== ze && (R = R || []).push(Z, ze);
          } else Z === ch ? (typeof xe == "string" || typeof xe == "number") && (R = R || []).push(Z, "" + xe) : Z === Q0 || Z === df || (fe.hasOwnProperty(Z) ? (xe != null && (typeof xe != "function" && ex(Z, xe), Z === "onScroll" && Jr("scroll", i)), !R && Le !== xe && (R = [])) : (R = R || []).push(Z, xe));
      }
      return le && (DO(le, V[dh]), (R = R || []).push(dh, le)), R;
    }
    function xG(i, l, h, v, S) {
      h === "input" && S.type === "radio" && S.name != null && ne(i, S);
      var R = _u(h, v), L = _u(h, S);
      switch (yG(i, l, R, L), h) {
        case "input":
          ve(i, S);
          break;
        case "textarea":
          DC(i, S);
          break;
        case "select":
          wm(i, S);
          break;
      }
    }
    function EG(i) {
      {
        var l = i.toLowerCase();
        return xp.hasOwnProperty(l) && xp[l] || null;
      }
    }
    function TG(i, l, h, v, S, R, L) {
      var V, Z;
      switch (V = _u(l, h), Z0(l, h), l) {
        case "dialog":
          Jr("cancel", i), Jr("close", i);
          break;
        case "iframe":
        case "object":
        case "embed":
          Jr("load", i);
          break;
        case "video":
        case "audio":
          for (var ae = 0; ae < Db.length; ae++)
            Jr(Db[ae], i);
          break;
        case "source":
          Jr("error", i);
          break;
        case "img":
        case "image":
        case "link":
          Jr("error", i), Jr("load", i);
          break;
        case "details":
          Jr("toggle", i);
          break;
        case "input":
          ha(i, h), Jr("invalid", i);
          break;
        case "option":
          Kn(i, h);
          break;
        case "select":
          Rc(i, h), Jr("invalid", i);
          break;
        case "textarea":
          My(i, h), Jr("invalid", i);
          break;
      }
      xm(l, h);
      {
        Z = /* @__PURE__ */ new Set();
        for (var le = i.attributes, Te = 0; Te < le.length; Te++) {
          var xe = le[Te].name.toLowerCase();
          switch (xe) {
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              Z.add(le[Te].name);
          }
        }
      }
      var Le = null;
      for (var ze in h)
        if (h.hasOwnProperty(ze)) {
          var Ge = h[ze];
          if (ze === ch)
            typeof Ge == "string" ? i.textContent !== Ge && (h[df] !== !0 && nx(i.textContent, Ge, R, L), Le = [ch, Ge]) : typeof Ge == "number" && i.textContent !== "" + Ge && (h[df] !== !0 && nx(i.textContent, Ge, R, L), Le = [ch, "" + Ge]);
          else if (fe.hasOwnProperty(ze))
            Ge != null && (typeof Ge != "function" && ex(ze, Ge), ze === "onScroll" && Jr("scroll", i));
          else if (L && // Convince Flow we've calculated it (it's DEV-only in this method.)
          typeof V == "boolean") {
            var kt = void 0, nn = $t(ze);
            if (h[df] !== !0) {
              if (!(ze === Q0 || ze === df || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              ze === "value" || ze === "checked" || ze === "selected")) {
                if (ze === Lb) {
                  var Yt = i.innerHTML, Wn = Ge ? Ge[J0] : void 0;
                  if (Wn != null) {
                    var Fn = xA(i, Wn);
                    Fn !== Yt && $b(ze, Yt, Fn);
                  }
                } else if (ze === dh) {
                  if (Z.delete(ze), CA) {
                    var Pe = MO(Ge);
                    kt = i.getAttribute("style"), Pe !== kt && $b(ze, kt, Pe);
                  }
                } else if (V && !B)
                  Z.delete(ze.toLowerCase()), kt = Jo(i, ze, Ge), Ge !== kt && $b(ze, kt, Ge);
                else if (!bt(ze, nn, V) && !St(ze, Ge, nn, V)) {
                  var qe = !1;
                  if (nn !== null)
                    Z.delete(nn.attributeName), kt = hr(i, ze, Ge, nn);
                  else {
                    var Me = v;
                    if (Me === Dl && (Me = Ay(l)), Me === Dl)
                      Z.delete(ze.toLowerCase());
                    else {
                      var dt = EG(ze);
                      dt !== null && dt !== ze && (qe = !0, Z.delete(dt)), Z.delete(ze);
                    }
                    kt = Jo(i, ze, Ge);
                  }
                  var Dt = B;
                  !Dt && Ge !== kt && !qe && $b(ze, kt, Ge);
                }
              }
            }
          }
        }
      switch (L && // $FlowFixMe - Should be inferred as not undefined.
      Z.size > 0 && h[df] !== !0 && SA(Z), l) {
        case "input":
          pa(i), je(i, h, !0);
          break;
        case "textarea":
          pa(i), AC(i);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof h.onClick == "function" && rx(i);
          break;
      }
      return Le;
    }
    function _G(i, l, h) {
      var v = i.nodeValue !== l;
      return v;
    }
    function a1(i, l) {
      {
        if (qs)
          return;
        qs = !0, a("Did not expect server HTML to contain a <%s> in <%s>.", l.nodeName.toLowerCase(), i.nodeName.toLowerCase());
      }
    }
    function l1(i, l) {
      {
        if (qs)
          return;
        qs = !0, a('Did not expect server HTML to contain the text node "%s" in <%s>.', l.nodeValue, i.nodeName.toLowerCase());
      }
    }
    function u1(i, l, h) {
      {
        if (qs)
          return;
        qs = !0, a("Expected server HTML to contain a matching <%s> in <%s>.", l, i.nodeName.toLowerCase());
      }
    }
    function c1(i, l) {
      {
        if (l === "" || qs)
          return;
        qs = !0, a('Expected server HTML to contain a matching text node for "%s" in <%s>.', l, i.nodeName.toLowerCase());
      }
    }
    function OG(i, l, h) {
      switch (l) {
        case "input":
          Ve(i, h);
          return;
        case "textarea":
          OO(i, h);
          return;
        case "select":
          ky(i, h);
          return;
      }
    }
    var jb = function() {
    }, Fb = function() {
    };
    {
      var RG = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], TA = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], kG = TA.concat(["button"]), PG = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], _A = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Fb = function(i, l) {
        var h = Sn({}, i || _A), v = {
          tag: l
        };
        return TA.indexOf(l) !== -1 && (h.aTagInScope = null, h.buttonTagInScope = null, h.nobrTagInScope = null), kG.indexOf(l) !== -1 && (h.pTagInButtonScope = null), RG.indexOf(l) !== -1 && l !== "address" && l !== "div" && l !== "p" && (h.listItemTagAutoclosing = null, h.dlItemTagAutoclosing = null), h.current = v, l === "form" && (h.formTag = v), l === "a" && (h.aTagInScope = v), l === "button" && (h.buttonTagInScope = v), l === "nobr" && (h.nobrTagInScope = v), l === "p" && (h.pTagInButtonScope = v), l === "li" && (h.listItemTagAutoclosing = v), (l === "dd" || l === "dt") && (h.dlItemTagAutoclosing = v), h;
      };
      var MG = function(i, l) {
        switch (l) {
          case "select":
            return i === "option" || i === "optgroup" || i === "#text";
          case "optgroup":
            return i === "option" || i === "#text";
          case "option":
            return i === "#text";
          case "tr":
            return i === "th" || i === "td" || i === "style" || i === "script" || i === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return i === "tr" || i === "style" || i === "script" || i === "template";
          case "colgroup":
            return i === "col" || i === "template";
          case "table":
            return i === "caption" || i === "colgroup" || i === "tbody" || i === "tfoot" || i === "thead" || i === "style" || i === "script" || i === "template";
          case "head":
            return i === "base" || i === "basefont" || i === "bgsound" || i === "link" || i === "meta" || i === "title" || i === "noscript" || i === "noframes" || i === "style" || i === "script" || i === "template";
          case "html":
            return i === "head" || i === "body" || i === "frameset";
          case "frameset":
            return i === "frame";
          case "#document":
            return i === "html";
        }
        switch (i) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return l !== "h1" && l !== "h2" && l !== "h3" && l !== "h4" && l !== "h5" && l !== "h6";
          case "rp":
          case "rt":
            return PG.indexOf(l) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return l == null;
        }
        return !0;
      }, IG = function(i, l) {
        switch (i) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return l.pTagInButtonScope;
          case "form":
            return l.formTag || l.pTagInButtonScope;
          case "li":
            return l.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return l.dlItemTagAutoclosing;
          case "button":
            return l.buttonTagInScope;
          case "a":
            return l.aTagInScope;
          case "nobr":
            return l.nobrTagInScope;
        }
        return null;
      }, OA = {};
      jb = function(i, l, h) {
        h = h || _A;
        var v = h.current, S = v && v.tag;
        l != null && (i != null && a("validateDOMNesting: when childText is passed, childTag should be null"), i = "#text");
        var R = MG(i, S) ? null : v, L = R ? null : IG(i, h), V = R || L;
        if (V) {
          var Z = V.tag, ae = !!R + "|" + i + "|" + Z;
          if (!OA[ae]) {
            OA[ae] = !0;
            var le = i, Te = "";
            if (i === "#text" ? /\S/.test(l) ? le = "Text nodes" : (le = "Whitespace text nodes", Te = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : le = "<" + i + ">", R) {
              var xe = "";
              Z === "table" && i === "tr" && (xe += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), a("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", le, Z, Te, xe);
            } else
              a("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", le, Z);
          }
        }
      };
    }
    var ox = "suppressHydrationWarning", ix = "$", sx = "/$", zb = "$?", Bb = "$!", DG = "style", d1 = null, f1 = null;
    function AG(i) {
      var l, h, v = i.nodeType;
      switch (v) {
        case Nl:
        case Ly: {
          l = v === Nl ? "#document" : "#fragment";
          var S = i.documentElement;
          h = S ? S.namespaceURI : Ny(null, "");
          break;
        }
        default: {
          var R = v === mo ? i.parentNode : i, L = R.namespaceURI || null;
          l = R.tagName, h = Ny(L, l);
          break;
        }
      }
      {
        var V = l.toLowerCase(), Z = Fb(null, V);
        return {
          namespace: h,
          ancestorInfo: Z
        };
      }
    }
    function NG(i, l, h) {
      {
        var v = i, S = Ny(v.namespace, l), R = Fb(v.ancestorInfo, l);
        return {
          namespace: S,
          ancestorInfo: R
        };
      }
    }
    function qCe(i) {
      return i;
    }
    function LG(i) {
      d1 = So(), f1 = X4();
      var l = null;
      return No(!1), l;
    }
    function $G(i) {
      Q4(f1), No(d1), d1 = null, f1 = null;
    }
    function jG(i, l, h, v, S) {
      var R;
      {
        var L = v;
        if (jb(i, null, L.ancestorInfo), typeof l.children == "string" || typeof l.children == "number") {
          var V = "" + l.children, Z = Fb(L.ancestorInfo, i);
          jb(null, V, Z);
        }
        R = L.namespace;
      }
      var ae = bG(i, l, h, R);
      return Ub(S, ae), w1(ae, l), ae;
    }
    function FG(i, l) {
      i.appendChild(l);
    }
    function zG(i, l, h, v, S) {
      switch (SG(i, l, h, v), l) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!h.autoFocus;
        case "img":
          return !0;
        default:
          return !1;
      }
    }
    function BG(i, l, h, v, S, R) {
      {
        var L = R;
        if (typeof v.children != typeof h.children && (typeof v.children == "string" || typeof v.children == "number")) {
          var V = "" + v.children, Z = Fb(L.ancestorInfo, l);
          jb(null, V, Z);
        }
      }
      return CG(i, l, h, v);
    }
    function p1(i, l) {
      return i === "textarea" || i === "noscript" || typeof l.children == "string" || typeof l.children == "number" || typeof l.dangerouslySetInnerHTML == "object" && l.dangerouslySetInnerHTML !== null && l.dangerouslySetInnerHTML.__html != null;
    }
    function HG(i, l, h, v) {
      {
        var S = h;
        jb(null, i, S.ancestorInfo);
      }
      var R = wG(i, l);
      return Ub(v, R), R;
    }
    function VG() {
      var i = window.event;
      return i === void 0 ? Vs : gg(i.type);
    }
    var h1 = typeof setTimeout == "function" ? setTimeout : void 0, UG = typeof clearTimeout == "function" ? clearTimeout : void 0, m1 = -1, RA = typeof Promise == "function" ? Promise : void 0, WG = typeof queueMicrotask == "function" ? queueMicrotask : typeof RA < "u" ? function(i) {
      return RA.resolve(null).then(i).catch(GG);
    } : h1;
    function GG(i) {
      setTimeout(function() {
        throw i;
      });
    }
    function qG(i, l, h, v) {
      switch (l) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          h.autoFocus && i.focus();
          return;
        case "img": {
          h.src && (i.src = h.src);
          return;
        }
      }
    }
    function KG(i, l, h, v, S, R) {
      xG(i, l, h, v, S), w1(i, S);
    }
    function kA(i) {
      Bd(i, "");
    }
    function YG(i, l, h) {
      i.nodeValue = h;
    }
    function XG(i, l) {
      i.appendChild(l);
    }
    function QG(i, l) {
      var h;
      i.nodeType === mo ? (h = i.parentNode, h.insertBefore(l, i)) : (h = i, h.appendChild(l));
      var v = i._reactRootContainer;
      v == null && h.onclick === null && rx(h);
    }
    function JG(i, l, h) {
      i.insertBefore(l, h);
    }
    function ZG(i, l, h) {
      i.nodeType === mo ? i.parentNode.insertBefore(l, h) : i.insertBefore(l, h);
    }
    function e3(i, l) {
      i.removeChild(l);
    }
    function t3(i, l) {
      i.nodeType === mo ? i.parentNode.removeChild(l) : i.removeChild(l);
    }
    function g1(i, l) {
      var h = l, v = 0;
      do {
        var S = h.nextSibling;
        if (i.removeChild(h), S && S.nodeType === mo) {
          var R = S.data;
          if (R === sx)
            if (v === 0) {
              i.removeChild(S), Yc(l);
              return;
            } else
              v--;
          else (R === ix || R === zb || R === Bb) && v++;
        }
        h = S;
      } while (h);
      Yc(l);
    }
    function n3(i, l) {
      i.nodeType === mo ? g1(i.parentNode, l) : i.nodeType === Ji && g1(i, l), Yc(i);
    }
    function r3(i) {
      i = i;
      var l = i.style;
      typeof l.setProperty == "function" ? l.setProperty("display", "none", "important") : l.display = "none";
    }
    function o3(i) {
      i.nodeValue = "";
    }
    function i3(i, l) {
      i = i;
      var h = l[DG], v = h != null && h.hasOwnProperty("display") ? h.display : null;
      i.style.display = Cm("display", v);
    }
    function s3(i, l) {
      i.nodeValue = l;
    }
    function a3(i) {
      i.nodeType === Ji ? i.textContent = "" : i.nodeType === Nl && i.documentElement && i.removeChild(i.documentElement);
    }
    function l3(i, l, h) {
      return i.nodeType !== Ji || l.toLowerCase() !== i.nodeName.toLowerCase() ? null : i;
    }
    function u3(i, l) {
      return l === "" || i.nodeType !== Al ? null : i;
    }
    function c3(i) {
      return i.nodeType !== mo ? null : i;
    }
    function PA(i) {
      return i.data === zb;
    }
    function v1(i) {
      return i.data === Bb;
    }
    function d3(i) {
      var l = i.nextSibling && i.nextSibling.dataset, h, v, S;
      return l && (h = l.dgst, v = l.msg, S = l.stck), {
        message: v,
        digest: h,
        stack: S
      };
    }
    function f3(i, l) {
      i._reactRetry = l;
    }
    function ax(i) {
      for (; i != null; i = i.nextSibling) {
        var l = i.nodeType;
        if (l === Ji || l === Al)
          break;
        if (l === mo) {
          var h = i.data;
          if (h === ix || h === Bb || h === zb)
            break;
          if (h === sx)
            return null;
        }
      }
      return i;
    }
    function Hb(i) {
      return ax(i.nextSibling);
    }
    function p3(i) {
      return ax(i.firstChild);
    }
    function h3(i) {
      return ax(i.firstChild);
    }
    function m3(i) {
      return ax(i.nextSibling);
    }
    function g3(i, l, h, v, S, R, L) {
      Ub(R, i), w1(i, h);
      var V;
      {
        var Z = S;
        V = Z.namespace;
      }
      var ae = (R.mode & kn) !== Jt;
      return TG(i, l, h, V, v, ae, L);
    }
    function v3(i, l, h, v) {
      return Ub(h, i), h.mode & kn, _G(i, l);
    }
    function y3(i, l) {
      Ub(l, i);
    }
    function b3(i) {
      for (var l = i.nextSibling, h = 0; l; ) {
        if (l.nodeType === mo) {
          var v = l.data;
          if (v === sx) {
            if (h === 0)
              return Hb(l);
            h--;
          } else (v === ix || v === Bb || v === zb) && h++;
        }
        l = l.nextSibling;
      }
      return null;
    }
    function MA(i) {
      for (var l = i.previousSibling, h = 0; l; ) {
        if (l.nodeType === mo) {
          var v = l.data;
          if (v === ix || v === Bb || v === zb) {
            if (h === 0)
              return l;
            h--;
          } else v === sx && h++;
        }
        l = l.previousSibling;
      }
      return null;
    }
    function w3(i) {
      Yc(i);
    }
    function S3(i) {
      Yc(i);
    }
    function C3(i) {
      return i !== "head" && i !== "body";
    }
    function x3(i, l, h, v) {
      var S = !0;
      nx(l.nodeValue, h, v, S);
    }
    function E3(i, l, h, v, S, R) {
      if (l[ox] !== !0) {
        var L = !0;
        nx(v.nodeValue, S, R, L);
      }
    }
    function T3(i, l) {
      l.nodeType === Ji ? a1(i, l) : l.nodeType === mo || l1(i, l);
    }
    function _3(i, l) {
      {
        var h = i.parentNode;
        h !== null && (l.nodeType === Ji ? a1(h, l) : l.nodeType === mo || l1(h, l));
      }
    }
    function O3(i, l, h, v, S) {
      (S || l[ox] !== !0) && (v.nodeType === Ji ? a1(h, v) : v.nodeType === mo || l1(h, v));
    }
    function R3(i, l, h) {
      u1(i, l);
    }
    function k3(i, l) {
      c1(i, l);
    }
    function P3(i, l, h) {
      {
        var v = i.parentNode;
        v !== null && u1(v, l);
      }
    }
    function M3(i, l) {
      {
        var h = i.parentNode;
        h !== null && c1(h, l);
      }
    }
    function I3(i, l, h, v, S, R) {
      (R || l[ox] !== !0) && u1(h, v);
    }
    function D3(i, l, h, v, S) {
      (S || l[ox] !== !0) && c1(h, v);
    }
    function A3(i) {
      a("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", i.nodeName.toLowerCase());
    }
    function N3(i) {
      Ab(i);
    }
    var Pg = Math.random().toString(36).slice(2), Mg = "__reactFiber$" + Pg, y1 = "__reactProps$" + Pg, Vb = "__reactContainer$" + Pg, b1 = "__reactEvents$" + Pg, L3 = "__reactListeners$" + Pg, $3 = "__reactHandles$" + Pg;
    function j3(i) {
      delete i[Mg], delete i[y1], delete i[b1], delete i[L3], delete i[$3];
    }
    function Ub(i, l) {
      l[Mg] = i;
    }
    function lx(i, l) {
      l[Vb] = i;
    }
    function IA(i) {
      i[Vb] = null;
    }
    function Wb(i) {
      return !!i[Vb];
    }
    function fh(i) {
      var l = i[Mg];
      if (l)
        return l;
      for (var h = i.parentNode; h; ) {
        if (l = h[Vb] || h[Mg], l) {
          var v = l.alternate;
          if (l.child !== null || v !== null && v.child !== null)
            for (var S = MA(i); S !== null; ) {
              var R = S[Mg];
              if (R)
                return R;
              S = MA(S);
            }
          return l;
        }
        i = h, h = i.parentNode;
      }
      return null;
    }
    function ff(i) {
      var l = i[Mg] || i[Vb];
      return l && (l.tag === C || l.tag === T || l.tag === P || l.tag === y) ? l : null;
    }
    function Ig(i) {
      if (i.tag === C || i.tag === T)
        return i.stateNode;
      throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function ux(i) {
      return i[y1] || null;
    }
    function w1(i, l) {
      i[y1] = l;
    }
    function F3(i) {
      var l = i[b1];
      return l === void 0 && (l = i[b1] = /* @__PURE__ */ new Set()), l;
    }
    var DA = {}, AA = n.ReactDebugCurrentFrame;
    function cx(i) {
      if (i) {
        var l = i._owner, h = Pl(i.type, i._source, l ? l.type : null);
        AA.setExtraStackFrame(h);
      } else
        AA.setExtraStackFrame(null);
    }
    function Gl(i, l, h, v, S) {
      {
        var R = Function.call.bind(ce);
        for (var L in i)
          if (R(i, L)) {
            var V = void 0;
            try {
              if (typeof i[L] != "function") {
                var Z = Error((v || "React class") + ": " + h + " type `" + L + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof i[L] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Z.name = "Invariant Violation", Z;
              }
              V = i[L](l, L, v, h, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ae) {
              V = ae;
            }
            V && !(V instanceof Error) && (cx(S), a("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", v || "React class", h, L, typeof V), cx(null)), V instanceof Error && !(V.message in DA) && (DA[V.message] = !0, cx(S), a("Failed %s type: %s", h, V.message), cx(null));
          }
      }
    }
    var S1 = [], dx;
    dx = [];
    var td = -1;
    function pf(i) {
      return {
        current: i
      };
    }
    function us(i, l) {
      if (td < 0) {
        a("Unexpected pop.");
        return;
      }
      l !== dx[td] && a("Unexpected Fiber popped."), i.current = S1[td], S1[td] = null, dx[td] = null, td--;
    }
    function cs(i, l, h) {
      td++, S1[td] = i.current, dx[td] = h, i.current = l;
    }
    var C1;
    C1 = {};
    var Sa = {};
    Object.freeze(Sa);
    var nd = pf(Sa), Gu = pf(!1), x1 = Sa;
    function Dg(i, l, h) {
      return h && qu(l) ? x1 : nd.current;
    }
    function NA(i, l, h) {
      {
        var v = i.stateNode;
        v.__reactInternalMemoizedUnmaskedChildContext = l, v.__reactInternalMemoizedMaskedChildContext = h;
      }
    }
    function Ag(i, l) {
      {
        var h = i.type, v = h.contextTypes;
        if (!v)
          return Sa;
        var S = i.stateNode;
        if (S && S.__reactInternalMemoizedUnmaskedChildContext === l)
          return S.__reactInternalMemoizedMaskedChildContext;
        var R = {};
        for (var L in v)
          R[L] = l[L];
        {
          var V = gn(i) || "Unknown";
          Gl(v, R, "context", V);
        }
        return S && NA(i, l, R), R;
      }
    }
    function fx() {
      return Gu.current;
    }
    function qu(i) {
      {
        var l = i.childContextTypes;
        return l != null;
      }
    }
    function px(i) {
      us(Gu, i), us(nd, i);
    }
    function E1(i) {
      us(Gu, i), us(nd, i);
    }
    function LA(i, l, h) {
      {
        if (nd.current !== Sa)
          throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        cs(nd, l, i), cs(Gu, h, i);
      }
    }
    function $A(i, l, h) {
      {
        var v = i.stateNode, S = l.childContextTypes;
        if (typeof v.getChildContext != "function") {
          {
            var R = gn(i) || "Unknown";
            C1[R] || (C1[R] = !0, a("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", R, R));
          }
          return h;
        }
        var L = v.getChildContext();
        for (var V in L)
          if (!(V in S))
            throw new Error((gn(i) || "Unknown") + '.getChildContext(): key "' + V + '" is not defined in childContextTypes.');
        {
          var Z = gn(i) || "Unknown";
          Gl(S, L, "child context", Z);
        }
        return Sn({}, h, L);
      }
    }
    function hx(i) {
      {
        var l = i.stateNode, h = l && l.__reactInternalMemoizedMergedChildContext || Sa;
        return x1 = nd.current, cs(nd, h, i), cs(Gu, Gu.current, i), !0;
      }
    }
    function jA(i, l, h) {
      {
        var v = i.stateNode;
        if (!v)
          throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (h) {
          var S = $A(i, l, x1);
          v.__reactInternalMemoizedMergedChildContext = S, us(Gu, i), us(nd, i), cs(nd, S, i), cs(Gu, h, i);
        } else
          us(Gu, i), cs(Gu, h, i);
      }
    }
    function z3(i) {
      {
        if (!Nc(i) || i.tag !== m)
          throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var l = i;
        do {
          switch (l.tag) {
            case y:
              return l.stateNode.context;
            case m: {
              var h = l.type;
              if (qu(h))
                return l.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          l = l.return;
        } while (l !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var hf = 0, mx = 1, rd = null, T1 = !1, _1 = !1;
    function FA(i) {
      rd === null ? rd = [i] : rd.push(i);
    }
    function B3(i) {
      T1 = !0, FA(i);
    }
    function zA() {
      T1 && mf();
    }
    function mf() {
      if (!_1 && rd !== null) {
        _1 = !0;
        var i = 0, l = Ws();
        try {
          var h = !0, v = rd;
          for (wo(Di); i < v.length; i++) {
            var S = v[i];
            do
              S = S(h);
            while (S !== null);
          }
          rd = null, T1 = !1;
        } catch (R) {
          throw rd !== null && (rd = rd.slice(i + 1)), Ky(Mp, mf), R;
        } finally {
          wo(l), _1 = !1;
        }
      }
      return null;
    }
    var Ng = [], Lg = 0, gx = null, vx = 0, tl = [], nl = 0, ph = null, od = 1, id = "";
    function H3(i) {
      return mh(), (i.flags & Wa) !== Qt;
    }
    function V3(i) {
      return mh(), vx;
    }
    function U3() {
      var i = id, l = od, h = l & ~W3(l);
      return h.toString(32) + i;
    }
    function hh(i, l) {
      mh(), Ng[Lg++] = vx, Ng[Lg++] = gx, gx = i, vx = l;
    }
    function BA(i, l, h) {
      mh(), tl[nl++] = od, tl[nl++] = id, tl[nl++] = ph, ph = i;
      var v = od, S = id, R = yx(v) - 1, L = v & ~(1 << R), V = h + 1, Z = yx(l) + R;
      if (Z > 30) {
        var ae = R - R % 5, le = (1 << ae) - 1, Te = (L & le).toString(32), xe = L >> ae, Le = R - ae, ze = yx(l) + Le, Ge = V << Le, kt = Ge | xe, nn = Te + S;
        od = 1 << ze | kt, id = nn;
      } else {
        var Yt = V << R, Wn = Yt | L, Fn = S;
        od = 1 << Z | Wn, id = Fn;
      }
    }
    function O1(i) {
      mh();
      var l = i.return;
      if (l !== null) {
        var h = 1, v = 0;
        hh(i, h), BA(i, h, v);
      }
    }
    function yx(i) {
      return 32 - yo(i);
    }
    function W3(i) {
      return 1 << yx(i) - 1;
    }
    function R1(i) {
      for (; i === gx; )
        gx = Ng[--Lg], Ng[Lg] = null, vx = Ng[--Lg], Ng[Lg] = null;
      for (; i === ph; )
        ph = tl[--nl], tl[nl] = null, id = tl[--nl], tl[nl] = null, od = tl[--nl], tl[nl] = null;
    }
    function G3() {
      return mh(), ph !== null ? {
        id: od,
        overflow: id
      } : null;
    }
    function q3(i, l) {
      mh(), tl[nl++] = od, tl[nl++] = id, tl[nl++] = ph, od = l.id, id = l.overflow, ph = i;
    }
    function mh() {
      ji() || a("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    var $i = null, rl = null, ql = !1, gh = !1, gf = null;
    function K3() {
      ql && a("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function HA() {
      gh = !0;
    }
    function Y3() {
      return gh;
    }
    function X3(i) {
      var l = i.stateNode.containerInfo;
      return rl = h3(l), $i = i, ql = !0, gf = null, gh = !1, !0;
    }
    function Q3(i, l, h) {
      return rl = m3(l), $i = i, ql = !0, gf = null, gh = !1, h !== null && q3(i, h), !0;
    }
    function VA(i, l) {
      switch (i.tag) {
        case y: {
          T3(i.stateNode.containerInfo, l);
          break;
        }
        case C: {
          var h = (i.mode & kn) !== Jt;
          O3(
            i.type,
            i.memoizedProps,
            i.stateNode,
            l,
            // TODO: Delete this argument when we remove the legacy root API.
            h
          );
          break;
        }
        case P: {
          var v = i.memoizedState;
          v.dehydrated !== null && _3(v.dehydrated, l);
          break;
        }
      }
    }
    function UA(i, l) {
      VA(i, l);
      var h = t9();
      h.stateNode = l, h.return = i;
      var v = i.deletions;
      v === null ? (i.deletions = [h], i.flags |= js) : v.push(h);
    }
    function k1(i, l) {
      {
        if (gh)
          return;
        switch (i.tag) {
          case y: {
            var h = i.stateNode.containerInfo;
            switch (l.tag) {
              case C:
                var v = l.type;
                l.pendingProps, R3(h, v);
                break;
              case T:
                var S = l.pendingProps;
                k3(h, S);
                break;
            }
            break;
          }
          case C: {
            var R = i.type, L = i.memoizedProps, V = i.stateNode;
            switch (l.tag) {
              case C: {
                var Z = l.type, ae = l.pendingProps, le = (i.mode & kn) !== Jt;
                I3(
                  R,
                  L,
                  V,
                  Z,
                  ae,
                  // TODO: Delete this argument when we remove the legacy root API.
                  le
                );
                break;
              }
              case T: {
                var Te = l.pendingProps, xe = (i.mode & kn) !== Jt;
                D3(
                  R,
                  L,
                  V,
                  Te,
                  // TODO: Delete this argument when we remove the legacy root API.
                  xe
                );
                break;
              }
            }
            break;
          }
          case P: {
            var Le = i.memoizedState, ze = Le.dehydrated;
            if (ze !== null) switch (l.tag) {
              case C:
                var Ge = l.type;
                l.pendingProps, P3(ze, Ge);
                break;
              case T:
                var kt = l.pendingProps;
                M3(ze, kt);
                break;
            }
            break;
          }
          default:
            return;
        }
      }
    }
    function WA(i, l) {
      l.flags = l.flags & ~es | Yr, k1(i, l);
    }
    function GA(i, l) {
      switch (i.tag) {
        case C: {
          var h = i.type;
          i.pendingProps;
          var v = l3(l, h);
          return v !== null ? (i.stateNode = v, $i = i, rl = p3(v), !0) : !1;
        }
        case T: {
          var S = i.pendingProps, R = u3(l, S);
          return R !== null ? (i.stateNode = R, $i = i, rl = null, !0) : !1;
        }
        case P: {
          var L = c3(l);
          if (L !== null) {
            var V = {
              dehydrated: L,
              treeContext: G3(),
              retryLane: os
            };
            i.memoizedState = V;
            var Z = n9(L);
            return Z.return = i, i.child = Z, $i = i, rl = null, !0;
          }
          return !1;
        }
        default:
          return !1;
      }
    }
    function P1(i) {
      return (i.mode & kn) !== Jt && (i.flags & Xt) === Qt;
    }
    function M1(i) {
      throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function I1(i) {
      if (ql) {
        var l = rl;
        if (!l) {
          P1(i) && (k1($i, i), M1()), WA($i, i), ql = !1, $i = i;
          return;
        }
        var h = l;
        if (!GA(i, l)) {
          P1(i) && (k1($i, i), M1()), l = Hb(h);
          var v = $i;
          if (!l || !GA(i, l)) {
            WA($i, i), ql = !1, $i = i;
            return;
          }
          UA(v, h);
        }
      }
    }
    function J3(i, l, h) {
      var v = i.stateNode, S = !gh, R = g3(v, i.type, i.memoizedProps, l, h, i, S);
      return i.updateQueue = R, R !== null;
    }
    function Z3(i) {
      var l = i.stateNode, h = i.memoizedProps, v = v3(l, h, i);
      if (v) {
        var S = $i;
        if (S !== null)
          switch (S.tag) {
            case y: {
              var R = S.stateNode.containerInfo, L = (S.mode & kn) !== Jt;
              x3(
                R,
                l,
                h,
                // TODO: Delete this argument when we remove the legacy root API.
                L
              );
              break;
            }
            case C: {
              var V = S.type, Z = S.memoizedProps, ae = S.stateNode, le = (S.mode & kn) !== Jt;
              E3(
                V,
                Z,
                ae,
                l,
                h,
                // TODO: Delete this argument when we remove the legacy root API.
                le
              );
              break;
            }
          }
      }
      return v;
    }
    function e6(i) {
      var l = i.memoizedState, h = l !== null ? l.dehydrated : null;
      if (!h)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      y3(h, i);
    }
    function t6(i) {
      var l = i.memoizedState, h = l !== null ? l.dehydrated : null;
      if (!h)
        throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return b3(h);
    }
    function qA(i) {
      for (var l = i.return; l !== null && l.tag !== C && l.tag !== y && l.tag !== P; )
        l = l.return;
      $i = l;
    }
    function bx(i) {
      if (i !== $i)
        return !1;
      if (!ql)
        return qA(i), ql = !0, !1;
      if (i.tag !== y && (i.tag !== C || C3(i.type) && !p1(i.type, i.memoizedProps))) {
        var l = rl;
        if (l)
          if (P1(i))
            KA(i), M1();
          else
            for (; l; )
              UA(i, l), l = Hb(l);
      }
      return qA(i), i.tag === P ? rl = t6(i) : rl = $i ? Hb(i.stateNode) : null, !0;
    }
    function n6() {
      return ql && rl !== null;
    }
    function KA(i) {
      for (var l = rl; l; )
        VA(i, l), l = Hb(l);
    }
    function $g() {
      $i = null, rl = null, ql = !1, gh = !1;
    }
    function YA() {
      gf !== null && (HL(gf), gf = null);
    }
    function ji() {
      return ql;
    }
    function D1(i) {
      gf === null ? gf = [i] : gf.push(i);
    }
    var r6 = n.ReactCurrentBatchConfig, o6 = null;
    function i6() {
      return r6.transition;
    }
    var Kl = {
      recordUnsafeLifecycleWarnings: function(i, l) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(i, l) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var s6 = function(i) {
        for (var l = null, h = i; h !== null; )
          h.mode & yr && (l = h), h = h.return;
        return l;
      }, vh = function(i) {
        var l = [];
        return i.forEach(function(h) {
          l.push(h);
        }), l.sort().join(", ");
      }, Gb = [], qb = [], Kb = [], Yb = [], Xb = [], Qb = [], yh = /* @__PURE__ */ new Set();
      Kl.recordUnsafeLifecycleWarnings = function(i, l) {
        yh.has(i.type) || (typeof l.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        l.componentWillMount.__suppressDeprecationWarning !== !0 && Gb.push(i), i.mode & yr && typeof l.UNSAFE_componentWillMount == "function" && qb.push(i), typeof l.componentWillReceiveProps == "function" && l.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && Kb.push(i), i.mode & yr && typeof l.UNSAFE_componentWillReceiveProps == "function" && Yb.push(i), typeof l.componentWillUpdate == "function" && l.componentWillUpdate.__suppressDeprecationWarning !== !0 && Xb.push(i), i.mode & yr && typeof l.UNSAFE_componentWillUpdate == "function" && Qb.push(i));
      }, Kl.flushPendingUnsafeLifecycleWarnings = function() {
        var i = /* @__PURE__ */ new Set();
        Gb.length > 0 && (Gb.forEach(function(xe) {
          i.add(gn(xe) || "Component"), yh.add(xe.type);
        }), Gb = []);
        var l = /* @__PURE__ */ new Set();
        qb.length > 0 && (qb.forEach(function(xe) {
          l.add(gn(xe) || "Component"), yh.add(xe.type);
        }), qb = []);
        var h = /* @__PURE__ */ new Set();
        Kb.length > 0 && (Kb.forEach(function(xe) {
          h.add(gn(xe) || "Component"), yh.add(xe.type);
        }), Kb = []);
        var v = /* @__PURE__ */ new Set();
        Yb.length > 0 && (Yb.forEach(function(xe) {
          v.add(gn(xe) || "Component"), yh.add(xe.type);
        }), Yb = []);
        var S = /* @__PURE__ */ new Set();
        Xb.length > 0 && (Xb.forEach(function(xe) {
          S.add(gn(xe) || "Component"), yh.add(xe.type);
        }), Xb = []);
        var R = /* @__PURE__ */ new Set();
        if (Qb.length > 0 && (Qb.forEach(function(xe) {
          R.add(gn(xe) || "Component"), yh.add(xe.type);
        }), Qb = []), l.size > 0) {
          var L = vh(l);
          a(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, L);
        }
        if (v.size > 0) {
          var V = vh(v);
          a(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, V);
        }
        if (R.size > 0) {
          var Z = vh(R);
          a(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, Z);
        }
        if (i.size > 0) {
          var ae = vh(i);
          s(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, ae);
        }
        if (h.size > 0) {
          var le = vh(h);
          s(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, le);
        }
        if (S.size > 0) {
          var Te = vh(S);
          s(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, Te);
        }
      };
      var wx = /* @__PURE__ */ new Map(), XA = /* @__PURE__ */ new Set();
      Kl.recordLegacyContextWarning = function(i, l) {
        var h = s6(i);
        if (h === null) {
          a("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!XA.has(i.type)) {
          var v = wx.get(h);
          (i.type.contextTypes != null || i.type.childContextTypes != null || l !== null && typeof l.getChildContext == "function") && (v === void 0 && (v = [], wx.set(h, v)), v.push(i));
        }
      }, Kl.flushLegacyContextWarning = function() {
        wx.forEach(function(i, l) {
          if (i.length !== 0) {
            var h = i[0], v = /* @__PURE__ */ new Set();
            i.forEach(function(R) {
              v.add(gn(R) || "Component"), XA.add(R.type);
            });
            var S = vh(v);
            try {
              mr(h), a(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, S);
            } finally {
              jr();
            }
          }
        });
      }, Kl.discardPendingWarnings = function() {
        Gb = [], qb = [], Kb = [], Yb = [], Xb = [], Qb = [], wx = /* @__PURE__ */ new Map();
      };
    }
    var A1, N1, L1, $1, j1, QA = function(i, l) {
    };
    A1 = !1, N1 = !1, L1 = {}, $1 = {}, j1 = {}, QA = function(i, l) {
      if (!(i === null || typeof i != "object") && !(!i._store || i._store.validated || i.key != null)) {
        if (typeof i._store != "object")
          throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        i._store.validated = !0;
        var h = gn(l) || "Component";
        $1[h] || ($1[h] = !0, a('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    function a6(i) {
      return i.prototype && i.prototype.isReactComponent;
    }
    function Jb(i, l, h) {
      var v = h.ref;
      if (v !== null && typeof v != "function" && typeof v != "object") {
        if ((i.mode & yr || ie) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(h._owner && h._self && h._owner.stateNode !== h._self) && // Will already throw with "Function components cannot have string refs"
        !(h._owner && h._owner.tag !== m) && // Will already warn with "Function components cannot be given refs"
        !(typeof h.type == "function" && !a6(h.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
        h._owner) {
          var S = gn(i) || "Component";
          L1[S] || (a('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', S, v), L1[S] = !0);
        }
        if (h._owner) {
          var R = h._owner, L;
          if (R) {
            var V = R;
            if (V.tag !== m)
              throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            L = V.stateNode;
          }
          if (!L)
            throw new Error("Missing owner for string ref " + v + ". This error is likely caused by a bug in React. Please file an issue.");
          var Z = L;
          rt(v, "ref");
          var ae = "" + v;
          if (l !== null && l.ref !== null && typeof l.ref == "function" && l.ref._stringRef === ae)
            return l.ref;
          var le = function(Te) {
            var xe = Z.refs;
            Te === null ? delete xe[ae] : xe[ae] = Te;
          };
          return le._stringRef = ae, le;
        } else {
          if (typeof v != "string")
            throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!h._owner)
            throw new Error("Element ref was specified as a string (" + v + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return v;
    }
    function Sx(i, l) {
      var h = Object.prototype.toString.call(l);
      throw new Error("Objects are not valid as a React child (found: " + (h === "[object Object]" ? "object with keys {" + Object.keys(l).join(", ") + "}" : h) + "). If you meant to render a collection of children, use an array instead.");
    }
    function Cx(i) {
      {
        var l = gn(i) || "Component";
        if (j1[l])
          return;
        j1[l] = !0, a("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function JA(i) {
      var l = i._payload, h = i._init;
      return h(l);
    }
    function ZA(i) {
      function l(Pe, qe) {
        if (i) {
          var Me = Pe.deletions;
          Me === null ? (Pe.deletions = [qe], Pe.flags |= js) : Me.push(qe);
        }
      }
      function h(Pe, qe) {
        if (!i)
          return null;
        for (var Me = qe; Me !== null; )
          l(Pe, Me), Me = Me.sibling;
        return null;
      }
      function v(Pe, qe) {
        for (var Me = /* @__PURE__ */ new Map(), dt = qe; dt !== null; )
          dt.key !== null ? Me.set(dt.key, dt) : Me.set(dt.index, dt), dt = dt.sibling;
        return Me;
      }
      function S(Pe, qe) {
        var Me = Oh(Pe, qe);
        return Me.index = 0, Me.sibling = null, Me;
      }
      function R(Pe, qe, Me) {
        if (Pe.index = Me, !i)
          return Pe.flags |= Wa, qe;
        var dt = Pe.alternate;
        if (dt !== null) {
          var Dt = dt.index;
          return Dt < qe ? (Pe.flags |= Yr, qe) : Dt;
        } else
          return Pe.flags |= Yr, qe;
      }
      function L(Pe) {
        return i && Pe.alternate === null && (Pe.flags |= Yr), Pe;
      }
      function V(Pe, qe, Me, dt) {
        if (qe === null || qe.tag !== T) {
          var Dt = Dk(Me, Pe.mode, dt);
          return Dt.return = Pe, Dt;
        } else {
          var Pt = S(qe, Me);
          return Pt.return = Pe, Pt;
        }
      }
      function Z(Pe, qe, Me, dt) {
        var Dt = Me.type;
        if (Dt === Ki)
          return le(Pe, qe, Me.props.children, dt, Me.key);
        if (qe !== null && (qe.elementType === Dt || // Keep this check inline so it only runs on the false path:
        o$(qe, Me) || // Lazy types should reconcile their resolved type.
        // We need to do this after the Hot Reloading check above,
        // because hot reloading has different semantics than prod because
        // it doesn't resuspend. So we can't let the call below suspend.
        typeof Dt == "object" && Dt !== null && Dt.$$typeof === De && JA(Dt) === qe.type)) {
          var Pt = S(qe, Me.props);
          return Pt.ref = Jb(Pe, qe, Me), Pt.return = Pe, Pt._debugSource = Me._source, Pt._debugOwner = Me._owner, Pt;
        }
        var fn = Ik(Me, Pe.mode, dt);
        return fn.ref = Jb(Pe, qe, Me), fn.return = Pe, fn;
      }
      function ae(Pe, qe, Me, dt) {
        if (qe === null || qe.tag !== w || qe.stateNode.containerInfo !== Me.containerInfo || qe.stateNode.implementation !== Me.implementation) {
          var Dt = Ak(Me, Pe.mode, dt);
          return Dt.return = Pe, Dt;
        } else {
          var Pt = S(qe, Me.children || []);
          return Pt.return = Pe, Pt;
        }
      }
      function le(Pe, qe, Me, dt, Dt) {
        if (qe === null || qe.tag !== E) {
          var Pt = Of(Me, Pe.mode, dt, Dt);
          return Pt.return = Pe, Pt;
        } else {
          var fn = S(qe, Me);
          return fn.return = Pe, fn;
        }
      }
      function Te(Pe, qe, Me) {
        if (typeof qe == "string" && qe !== "" || typeof qe == "number") {
          var dt = Dk("" + qe, Pe.mode, Me);
          return dt.return = Pe, dt;
        }
        if (typeof qe == "object" && qe !== null) {
          switch (qe.$$typeof) {
            case oo: {
              var Dt = Ik(qe, Pe.mode, Me);
              return Dt.ref = Jb(Pe, null, qe), Dt.return = Pe, Dt;
            }
            case qr: {
              var Pt = Ak(qe, Pe.mode, Me);
              return Pt.return = Pe, Pt;
            }
            case De: {
              var fn = qe._payload, Cn = qe._init;
              return Te(Pe, Cn(fn), Me);
            }
          }
          if (Rn(qe) || yn(qe)) {
            var wr = Of(qe, Pe.mode, Me, null);
            return wr.return = Pe, wr;
          }
          Sx(Pe, qe);
        }
        return typeof qe == "function" && Cx(Pe), null;
      }
      function xe(Pe, qe, Me, dt) {
        var Dt = qe !== null ? qe.key : null;
        if (typeof Me == "string" && Me !== "" || typeof Me == "number")
          return Dt !== null ? null : V(Pe, qe, "" + Me, dt);
        if (typeof Me == "object" && Me !== null) {
          switch (Me.$$typeof) {
            case oo:
              return Me.key === Dt ? Z(Pe, qe, Me, dt) : null;
            case qr:
              return Me.key === Dt ? ae(Pe, qe, Me, dt) : null;
            case De: {
              var Pt = Me._payload, fn = Me._init;
              return xe(Pe, qe, fn(Pt), dt);
            }
          }
          if (Rn(Me) || yn(Me))
            return Dt !== null ? null : le(Pe, qe, Me, dt, null);
          Sx(Pe, Me);
        }
        return typeof Me == "function" && Cx(Pe), null;
      }
      function Le(Pe, qe, Me, dt, Dt) {
        if (typeof dt == "string" && dt !== "" || typeof dt == "number") {
          var Pt = Pe.get(Me) || null;
          return V(qe, Pt, "" + dt, Dt);
        }
        if (typeof dt == "object" && dt !== null) {
          switch (dt.$$typeof) {
            case oo: {
              var fn = Pe.get(dt.key === null ? Me : dt.key) || null;
              return Z(qe, fn, dt, Dt);
            }
            case qr: {
              var Cn = Pe.get(dt.key === null ? Me : dt.key) || null;
              return ae(qe, Cn, dt, Dt);
            }
            case De:
              var wr = dt._payload, nr = dt._init;
              return Le(Pe, qe, Me, nr(wr), Dt);
          }
          if (Rn(dt) || yn(dt)) {
            var Lo = Pe.get(Me) || null;
            return le(qe, Lo, dt, Dt, null);
          }
          Sx(qe, dt);
        }
        return typeof dt == "function" && Cx(qe), null;
      }
      function ze(Pe, qe, Me) {
        {
          if (typeof Pe != "object" || Pe === null)
            return qe;
          switch (Pe.$$typeof) {
            case oo:
            case qr:
              QA(Pe, Me);
              var dt = Pe.key;
              if (typeof dt != "string")
                break;
              if (qe === null) {
                qe = /* @__PURE__ */ new Set(), qe.add(dt);
                break;
              }
              if (!qe.has(dt)) {
                qe.add(dt);
                break;
              }
              a("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", dt);
              break;
            case De:
              var Dt = Pe._payload, Pt = Pe._init;
              ze(Pt(Dt), qe, Me);
              break;
          }
        }
        return qe;
      }
      function Ge(Pe, qe, Me, dt) {
        for (var Dt = null, Pt = 0; Pt < Me.length; Pt++) {
          var fn = Me[Pt];
          Dt = ze(fn, Dt, Pe);
        }
        for (var Cn = null, wr = null, nr = qe, Lo = 0, rr = 0, xo = null; nr !== null && rr < Me.length; rr++) {
          nr.index > rr ? (xo = nr, nr = null) : xo = nr.sibling;
          var fs = xe(Pe, nr, Me[rr], dt);
          if (fs === null) {
            nr === null && (nr = xo);
            break;
          }
          i && nr && fs.alternate === null && l(Pe, nr), Lo = R(fs, Lo, rr), wr === null ? Cn = fs : wr.sibling = fs, wr = fs, nr = xo;
        }
        if (rr === Me.length) {
          if (h(Pe, nr), ji()) {
            var Wi = rr;
            hh(Pe, Wi);
          }
          return Cn;
        }
        if (nr === null) {
          for (; rr < Me.length; rr++) {
            var xa = Te(Pe, Me[rr], dt);
            xa !== null && (Lo = R(xa, Lo, rr), wr === null ? Cn = xa : wr.sibling = xa, wr = xa);
          }
          if (ji()) {
            var Rs = rr;
            hh(Pe, Rs);
          }
          return Cn;
        }
        for (var ks = v(Pe, nr); rr < Me.length; rr++) {
          var ps = Le(ks, Pe, rr, Me[rr], dt);
          ps !== null && (i && ps.alternate !== null && ks.delete(ps.key === null ? rr : ps.key), Lo = R(ps, Lo, rr), wr === null ? Cn = ps : wr.sibling = ps, wr = ps);
        }
        if (i && ks.forEach(function(nv) {
          return l(Pe, nv);
        }), ji()) {
          var fd = rr;
          hh(Pe, fd);
        }
        return Cn;
      }
      function kt(Pe, qe, Me, dt) {
        var Dt = yn(Me);
        if (typeof Dt != "function")
          throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          Me[Symbol.toStringTag] === "Generator" && (N1 || a("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), N1 = !0), Me.entries === Dt && (A1 || a("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), A1 = !0);
          var Pt = Dt.call(Me);
          if (Pt)
            for (var fn = null, Cn = Pt.next(); !Cn.done; Cn = Pt.next()) {
              var wr = Cn.value;
              fn = ze(wr, fn, Pe);
            }
        }
        var nr = Dt.call(Me);
        if (nr == null)
          throw new Error("An iterable object provided no iterator.");
        for (var Lo = null, rr = null, xo = qe, fs = 0, Wi = 0, xa = null, Rs = nr.next(); xo !== null && !Rs.done; Wi++, Rs = nr.next()) {
          xo.index > Wi ? (xa = xo, xo = null) : xa = xo.sibling;
          var ks = xe(Pe, xo, Rs.value, dt);
          if (ks === null) {
            xo === null && (xo = xa);
            break;
          }
          i && xo && ks.alternate === null && l(Pe, xo), fs = R(ks, fs, Wi), rr === null ? Lo = ks : rr.sibling = ks, rr = ks, xo = xa;
        }
        if (Rs.done) {
          if (h(Pe, xo), ji()) {
            var ps = Wi;
            hh(Pe, ps);
          }
          return Lo;
        }
        if (xo === null) {
          for (; !Rs.done; Wi++, Rs = nr.next()) {
            var fd = Te(Pe, Rs.value, dt);
            fd !== null && (fs = R(fd, fs, Wi), rr === null ? Lo = fd : rr.sibling = fd, rr = fd);
          }
          if (ji()) {
            var nv = Wi;
            hh(Pe, nv);
          }
          return Lo;
        }
        for (var Pw = v(Pe, xo); !Rs.done; Wi++, Rs = nr.next()) {
          var tc = Le(Pw, Pe, Wi, Rs.value, dt);
          tc !== null && (i && tc.alternate !== null && Pw.delete(tc.key === null ? Wi : tc.key), fs = R(tc, fs, Wi), rr === null ? Lo = tc : rr.sibling = tc, rr = tc);
        }
        if (i && Pw.forEach(function(D9) {
          return l(Pe, D9);
        }), ji()) {
          var I9 = Wi;
          hh(Pe, I9);
        }
        return Lo;
      }
      function nn(Pe, qe, Me, dt) {
        if (qe !== null && qe.tag === T) {
          h(Pe, qe.sibling);
          var Dt = S(qe, Me);
          return Dt.return = Pe, Dt;
        }
        h(Pe, qe);
        var Pt = Dk(Me, Pe.mode, dt);
        return Pt.return = Pe, Pt;
      }
      function Yt(Pe, qe, Me, dt) {
        for (var Dt = Me.key, Pt = qe; Pt !== null; ) {
          if (Pt.key === Dt) {
            var fn = Me.type;
            if (fn === Ki) {
              if (Pt.tag === E) {
                h(Pe, Pt.sibling);
                var Cn = S(Pt, Me.props.children);
                return Cn.return = Pe, Cn._debugSource = Me._source, Cn._debugOwner = Me._owner, Cn;
              }
            } else if (Pt.elementType === fn || // Keep this check inline so it only runs on the false path:
            o$(Pt, Me) || // Lazy types should reconcile their resolved type.
            // We need to do this after the Hot Reloading check above,
            // because hot reloading has different semantics than prod because
            // it doesn't resuspend. So we can't let the call below suspend.
            typeof fn == "object" && fn !== null && fn.$$typeof === De && JA(fn) === Pt.type) {
              h(Pe, Pt.sibling);
              var wr = S(Pt, Me.props);
              return wr.ref = Jb(Pe, Pt, Me), wr.return = Pe, wr._debugSource = Me._source, wr._debugOwner = Me._owner, wr;
            }
            h(Pe, Pt);
            break;
          } else
            l(Pe, Pt);
          Pt = Pt.sibling;
        }
        if (Me.type === Ki) {
          var nr = Of(Me.props.children, Pe.mode, dt, Me.key);
          return nr.return = Pe, nr;
        } else {
          var Lo = Ik(Me, Pe.mode, dt);
          return Lo.ref = Jb(Pe, qe, Me), Lo.return = Pe, Lo;
        }
      }
      function Wn(Pe, qe, Me, dt) {
        for (var Dt = Me.key, Pt = qe; Pt !== null; ) {
          if (Pt.key === Dt)
            if (Pt.tag === w && Pt.stateNode.containerInfo === Me.containerInfo && Pt.stateNode.implementation === Me.implementation) {
              h(Pe, Pt.sibling);
              var fn = S(Pt, Me.children || []);
              return fn.return = Pe, fn;
            } else {
              h(Pe, Pt);
              break;
            }
          else
            l(Pe, Pt);
          Pt = Pt.sibling;
        }
        var Cn = Ak(Me, Pe.mode, dt);
        return Cn.return = Pe, Cn;
      }
      function Fn(Pe, qe, Me, dt) {
        var Dt = typeof Me == "object" && Me !== null && Me.type === Ki && Me.key === null;
        if (Dt && (Me = Me.props.children), typeof Me == "object" && Me !== null) {
          switch (Me.$$typeof) {
            case oo:
              return L(Yt(Pe, qe, Me, dt));
            case qr:
              return L(Wn(Pe, qe, Me, dt));
            case De:
              var Pt = Me._payload, fn = Me._init;
              return Fn(Pe, qe, fn(Pt), dt);
          }
          if (Rn(Me))
            return Ge(Pe, qe, Me, dt);
          if (yn(Me))
            return kt(Pe, qe, Me, dt);
          Sx(Pe, Me);
        }
        return typeof Me == "string" && Me !== "" || typeof Me == "number" ? L(nn(Pe, qe, "" + Me, dt)) : (typeof Me == "function" && Cx(Pe), h(Pe, qe));
      }
      return Fn;
    }
    var jg = ZA(!0), eN = ZA(!1);
    function l6(i, l) {
      if (i !== null && l.child !== i.child)
        throw new Error("Resuming work not yet implemented.");
      if (l.child !== null) {
        var h = l.child, v = Oh(h, h.pendingProps);
        for (l.child = v, v.return = l; h.sibling !== null; )
          h = h.sibling, v = v.sibling = Oh(h, h.pendingProps), v.return = l;
        v.sibling = null;
      }
    }
    function u6(i, l) {
      for (var h = i.child; h !== null; )
        X8(h, l), h = h.sibling;
    }
    var F1 = pf(null), z1;
    z1 = {};
    var xx = null, Fg = null, B1 = null, Ex = !1;
    function Tx() {
      xx = null, Fg = null, B1 = null, Ex = !1;
    }
    function tN() {
      Ex = !0;
    }
    function nN() {
      Ex = !1;
    }
    function rN(i, l, h) {
      cs(F1, l._currentValue, i), l._currentValue = h, l._currentRenderer !== void 0 && l._currentRenderer !== null && l._currentRenderer !== z1 && a("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), l._currentRenderer = z1;
    }
    function H1(i, l) {
      var h = F1.current;
      us(F1, l), i._currentValue = h;
    }
    function V1(i, l, h) {
      for (var v = i; v !== null; ) {
        var S = v.alternate;
        if (Kc(v.childLanes, l) ? S !== null && !Kc(S.childLanes, l) && (S.childLanes = En(S.childLanes, l)) : (v.childLanes = En(v.childLanes, l), S !== null && (S.childLanes = En(S.childLanes, l))), v === h)
          break;
        v = v.return;
      }
      v !== h && a("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function c6(i, l, h) {
      d6(i, l, h);
    }
    function d6(i, l, h) {
      var v = i.child;
      for (v !== null && (v.return = i); v !== null; ) {
        var S = void 0, R = v.dependencies;
        if (R !== null) {
          S = v.child;
          for (var L = R.firstContext; L !== null; ) {
            if (L.context === l) {
              if (v.tag === m) {
                var V = Wp(h), Z = sd(Rr, V);
                Z.tag = Ox;
                var ae = v.updateQueue;
                if (ae !== null) {
                  var le = ae.shared, Te = le.pending;
                  Te === null ? Z.next = Z : (Z.next = Te.next, Te.next = Z), le.pending = Z;
                }
              }
              v.lanes = En(v.lanes, h);
              var xe = v.alternate;
              xe !== null && (xe.lanes = En(xe.lanes, h)), V1(v.return, h, i), R.lanes = En(R.lanes, h);
              break;
            }
            L = L.next;
          }
        } else if (v.tag === I)
          S = v.type === i.type ? null : v.child;
        else if (v.tag === A) {
          var Le = v.return;
          if (Le === null)
            throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
          Le.lanes = En(Le.lanes, h);
          var ze = Le.alternate;
          ze !== null && (ze.lanes = En(ze.lanes, h)), V1(Le, h, i), S = v.sibling;
        } else
          S = v.child;
        if (S !== null)
          S.return = v;
        else
          for (S = v; S !== null; ) {
            if (S === i) {
              S = null;
              break;
            }
            var Ge = S.sibling;
            if (Ge !== null) {
              Ge.return = S.return, S = Ge;
              break;
            }
            S = S.return;
          }
        v = S;
      }
    }
    function zg(i, l) {
      xx = i, Fg = null, B1 = null;
      var h = i.dependencies;
      if (h !== null) {
        var v = h.firstContext;
        v !== null && (is(h.lanes, l) && pw(), h.firstContext = null);
      }
    }
    function Wo(i) {
      Ex && a("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      var l = i._currentValue;
      if (B1 !== i) {
        var h = {
          context: i,
          memoizedValue: l,
          next: null
        };
        if (Fg === null) {
          if (xx === null)
            throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          Fg = h, xx.dependencies = {
            lanes: it,
            firstContext: h
          };
        } else
          Fg = Fg.next = h;
      }
      return l;
    }
    var bh = null;
    function U1(i) {
      bh === null ? bh = [i] : bh.push(i);
    }
    function f6() {
      if (bh !== null) {
        for (var i = 0; i < bh.length; i++) {
          var l = bh[i], h = l.interleaved;
          if (h !== null) {
            l.interleaved = null;
            var v = h.next, S = l.pending;
            if (S !== null) {
              var R = S.next;
              S.next = v, h.next = R;
            }
            l.pending = h;
          }
        }
        bh = null;
      }
    }
    function oN(i, l, h, v) {
      var S = l.interleaved;
      return S === null ? (h.next = h, U1(l)) : (h.next = S.next, S.next = h), l.interleaved = h, _x(i, v);
    }
    function p6(i, l, h, v) {
      var S = l.interleaved;
      S === null ? (h.next = h, U1(l)) : (h.next = S.next, S.next = h), l.interleaved = h;
    }
    function h6(i, l, h, v) {
      var S = l.interleaved;
      return S === null ? (h.next = h, U1(l)) : (h.next = S.next, S.next = h), l.interleaved = h, _x(i, v);
    }
    function Ks(i, l) {
      return _x(i, l);
    }
    var m6 = _x;
    function _x(i, l) {
      i.lanes = En(i.lanes, l);
      var h = i.alternate;
      h !== null && (h.lanes = En(h.lanes, l)), h === null && (i.flags & (Yr | es)) !== Qt && e$(i);
      for (var v = i, S = i.return; S !== null; )
        S.childLanes = En(S.childLanes, l), h = S.alternate, h !== null ? h.childLanes = En(h.childLanes, l) : (S.flags & (Yr | es)) !== Qt && e$(i), v = S, S = S.return;
      if (v.tag === y) {
        var R = v.stateNode;
        return R;
      } else
        return null;
    }
    var iN = 0, sN = 1, Ox = 2, W1 = 3, Rx = !1, G1, kx;
    G1 = !1, kx = null;
    function q1(i) {
      var l = {
        baseState: i.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null,
          interleaved: null,
          lanes: it
        },
        effects: null
      };
      i.updateQueue = l;
    }
    function aN(i, l) {
      var h = l.updateQueue, v = i.updateQueue;
      if (h === v) {
        var S = {
          baseState: v.baseState,
          firstBaseUpdate: v.firstBaseUpdate,
          lastBaseUpdate: v.lastBaseUpdate,
          shared: v.shared,
          effects: v.effects
        };
        l.updateQueue = S;
      }
    }
    function sd(i, l) {
      var h = {
        eventTime: i,
        lane: l,
        tag: iN,
        payload: null,
        callback: null,
        next: null
      };
      return h;
    }
    function vf(i, l, h) {
      var v = i.updateQueue;
      if (v === null)
        return null;
      var S = v.shared;
      if (kx === S && !G1 && (a("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), G1 = !0), p8()) {
        var R = S.pending;
        return R === null ? l.next = l : (l.next = R.next, R.next = l), S.pending = l, m6(i, h);
      } else
        return h6(i, S, l, h);
    }
    function Px(i, l, h) {
      var v = l.updateQueue;
      if (v !== null) {
        var S = v.shared;
        if (db(h)) {
          var R = S.lanes;
          R = pb(R, i.pendingLanes);
          var L = En(R, h);
          S.lanes = L, fg(i, L);
        }
      }
    }
    function K1(i, l) {
      var h = i.updateQueue, v = i.alternate;
      if (v !== null) {
        var S = v.updateQueue;
        if (h === S) {
          var R = null, L = null, V = h.firstBaseUpdate;
          if (V !== null) {
            var Z = V;
            do {
              var ae = {
                eventTime: Z.eventTime,
                lane: Z.lane,
                tag: Z.tag,
                payload: Z.payload,
                callback: Z.callback,
                next: null
              };
              L === null ? R = L = ae : (L.next = ae, L = ae), Z = Z.next;
            } while (Z !== null);
            L === null ? R = L = l : (L.next = l, L = l);
          } else
            R = L = l;
          h = {
            baseState: S.baseState,
            firstBaseUpdate: R,
            lastBaseUpdate: L,
            shared: S.shared,
            effects: S.effects
          }, i.updateQueue = h;
          return;
        }
      }
      var le = h.lastBaseUpdate;
      le === null ? h.firstBaseUpdate = l : le.next = l, h.lastBaseUpdate = l;
    }
    function g6(i, l, h, v, S, R) {
      switch (h.tag) {
        case sN: {
          var L = h.payload;
          if (typeof L == "function") {
            tN();
            var V = L.call(R, v, S);
            {
              if (i.mode & yr) {
                Xr(!0);
                try {
                  L.call(R, v, S);
                } finally {
                  Xr(!1);
                }
              }
              nN();
            }
            return V;
          }
          return L;
        }
        case W1:
          i.flags = i.flags & ~Bo | Xt;
        case iN: {
          var Z = h.payload, ae;
          if (typeof Z == "function") {
            tN(), ae = Z.call(R, v, S);
            {
              if (i.mode & yr) {
                Xr(!0);
                try {
                  Z.call(R, v, S);
                } finally {
                  Xr(!1);
                }
              }
              nN();
            }
          } else
            ae = Z;
          return ae == null ? v : Sn({}, v, ae);
        }
        case Ox:
          return Rx = !0, v;
      }
      return v;
    }
    function Mx(i, l, h, v) {
      var S = i.updateQueue;
      Rx = !1, kx = S.shared;
      var R = S.firstBaseUpdate, L = S.lastBaseUpdate, V = S.shared.pending;
      if (V !== null) {
        S.shared.pending = null;
        var Z = V, ae = Z.next;
        Z.next = null, L === null ? R = ae : L.next = ae, L = Z;
        var le = i.alternate;
        if (le !== null) {
          var Te = le.updateQueue, xe = Te.lastBaseUpdate;
          xe !== L && (xe === null ? Te.firstBaseUpdate = ae : xe.next = ae, Te.lastBaseUpdate = Z);
        }
      }
      if (R !== null) {
        var Le = S.baseState, ze = it, Ge = null, kt = null, nn = null, Yt = R;
        do {
          var Wn = Yt.lane, Fn = Yt.eventTime;
          if (Kc(v, Wn)) {
            if (nn !== null) {
              var qe = {
                eventTime: Fn,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Xn,
                tag: Yt.tag,
                payload: Yt.payload,
                callback: Yt.callback,
                next: null
              };
              nn = nn.next = qe;
            }
            Le = g6(i, S, Yt, Le, l, h);
            var Me = Yt.callback;
            if (Me !== null && // If the update was already committed, we should not queue its
            // callback again.
            Yt.lane !== Xn) {
              i.flags |= Ir;
              var dt = S.effects;
              dt === null ? S.effects = [Yt] : dt.push(Yt);
            }
          } else {
            var Pe = {
              eventTime: Fn,
              lane: Wn,
              tag: Yt.tag,
              payload: Yt.payload,
              callback: Yt.callback,
              next: null
            };
            nn === null ? (kt = nn = Pe, Ge = Le) : nn = nn.next = Pe, ze = En(ze, Wn);
          }
          if (Yt = Yt.next, Yt === null) {
            if (V = S.shared.pending, V === null)
              break;
            var Dt = V, Pt = Dt.next;
            Dt.next = null, Yt = Pt, S.lastBaseUpdate = Dt, S.shared.pending = null;
          }
        } while (!0);
        nn === null && (Ge = Le), S.baseState = Ge, S.firstBaseUpdate = kt, S.lastBaseUpdate = nn;
        var fn = S.shared.interleaved;
        if (fn !== null) {
          var Cn = fn;
          do
            ze = En(ze, Cn.lane), Cn = Cn.next;
          while (Cn !== fn);
        } else R === null && (S.shared.lanes = it);
        Tw(ze), i.lanes = ze, i.memoizedState = Le;
      }
      kx = null;
    }
    function v6(i, l) {
      if (typeof i != "function")
        throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + i));
      i.call(l);
    }
    function lN() {
      Rx = !1;
    }
    function Ix() {
      return Rx;
    }
    function uN(i, l, h) {
      var v = l.effects;
      if (l.effects = null, v !== null)
        for (var S = 0; S < v.length; S++) {
          var R = v[S], L = R.callback;
          L !== null && (R.callback = null, v6(L, h));
        }
    }
    var Zb = {}, yf = pf(Zb), ew = pf(Zb), Dx = pf(Zb);
    function Ax(i) {
      if (i === Zb)
        throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return i;
    }
    function cN() {
      var i = Ax(Dx.current);
      return i;
    }
    function Y1(i, l) {
      cs(Dx, l, i), cs(ew, i, i), cs(yf, Zb, i);
      var h = AG(l);
      us(yf, i), cs(yf, h, i);
    }
    function Bg(i) {
      us(yf, i), us(ew, i), us(Dx, i);
    }
    function X1() {
      var i = Ax(yf.current);
      return i;
    }
    function dN(i) {
      Ax(Dx.current);
      var l = Ax(yf.current), h = NG(l, i.type);
      l !== h && (cs(ew, i, i), cs(yf, h, i));
    }
    function Q1(i) {
      ew.current === i && (us(yf, i), us(ew, i));
    }
    var y6 = 0, fN = 1, pN = 1, tw = 2, Yl = pf(y6);
    function J1(i, l) {
      return (i & l) !== 0;
    }
    function Hg(i) {
      return i & fN;
    }
    function Z1(i, l) {
      return i & fN | l;
    }
    function b6(i, l) {
      return i | l;
    }
    function bf(i, l) {
      cs(Yl, l, i);
    }
    function Vg(i) {
      us(Yl, i);
    }
    function w6(i, l) {
      var h = i.memoizedState;
      return h !== null ? h.dehydrated !== null : (i.memoizedProps, !0);
    }
    function Nx(i) {
      for (var l = i; l !== null; ) {
        if (l.tag === P) {
          var h = l.memoizedState;
          if (h !== null) {
            var v = h.dehydrated;
            if (v === null || PA(v) || v1(v))
              return l;
          }
        } else if (l.tag === q && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        l.memoizedProps.revealOrder !== void 0) {
          var S = (l.flags & Xt) !== Qt;
          if (S)
            return l;
        } else if (l.child !== null) {
          l.child.return = l, l = l.child;
          continue;
        }
        if (l === i)
          return null;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === i)
            return null;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      return null;
    }
    var Ys = (
      /*   */
      0
    ), ii = (
      /* */
      1
    ), Ku = (
      /*  */
      2
    ), si = (
      /*    */
      4
    ), Fi = (
      /*   */
      8
    ), eR = [];
    function tR() {
      for (var i = 0; i < eR.length; i++) {
        var l = eR[i];
        l._workInProgressVersionPrimary = null;
      }
      eR.length = 0;
    }
    function S6(i, l) {
      var h = l._getVersion, v = h(l._source);
      i.mutableSourceEagerHydrationData == null ? i.mutableSourceEagerHydrationData = [l, v] : i.mutableSourceEagerHydrationData.push(l, v);
    }
    var It = n.ReactCurrentDispatcher, nw = n.ReactCurrentBatchConfig, nR, Ug;
    nR = /* @__PURE__ */ new Set();
    var wh = it, br = null, ai = null, li = null, Lx = !1, rw = !1, ow = 0, C6 = 0, x6 = 25, Qe = null, ol = null, wf = -1, rR = !1;
    function lr() {
      {
        var i = Qe;
        ol === null ? ol = [i] : ol.push(i);
      }
    }
    function xt() {
      {
        var i = Qe;
        ol !== null && (wf++, ol[wf] !== i && E6(i));
      }
    }
    function Wg(i) {
      i != null && !Rn(i) && a("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", Qe, typeof i);
    }
    function E6(i) {
      {
        var l = gn(br);
        if (!nR.has(l) && (nR.add(l), ol !== null)) {
          for (var h = "", v = 30, S = 0; S <= wf; S++) {
            for (var R = ol[S], L = S === wf ? i : R, V = S + 1 + ". " + R; V.length < v; )
              V += " ";
            V += L + `
`, h += V;
          }
          a(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, l, h);
        }
      }
    }
    function ds() {
      throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function oR(i, l) {
      if (rR)
        return !1;
      if (l === null)
        return a("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", Qe), !1;
      i.length !== l.length && a(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, Qe, "[" + l.join(", ") + "]", "[" + i.join(", ") + "]");
      for (var h = 0; h < l.length && h < i.length; h++)
        if (!lt(i[h], l[h]))
          return !1;
      return !0;
    }
    function Gg(i, l, h, v, S, R) {
      wh = R, br = l, ol = i !== null ? i._debugHookTypes : null, wf = -1, rR = i !== null && i.type !== l.type, l.memoizedState = null, l.updateQueue = null, l.lanes = it, i !== null && i.memoizedState !== null ? It.current = NN : ol !== null ? It.current = AN : It.current = DN;
      var L = h(v, S);
      if (rw) {
        var V = 0;
        do {
          if (rw = !1, ow = 0, V >= x6)
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          V += 1, rR = !1, ai = null, li = null, l.updateQueue = null, wf = -1, It.current = LN, L = h(v, S);
        } while (rw);
      }
      It.current = Yx, l._debugHookTypes = ol;
      var Z = ai !== null && ai.next !== null;
      if (wh = it, br = null, ai = null, li = null, Qe = null, ol = null, wf = -1, i !== null && (i.flags & vo) !== (l.flags & vo) && // Disable this warning in legacy mode, because legacy Suspense is weird
      // and creates false positives. To make this work in legacy mode, we'd
      // need to mark fibers that commit in an incomplete state, somehow. For
      // now I'll disable the warning that most of the bugs that would trigger
      // it are either exclusive to concurrent mode or exist in both.
      (i.mode & kn) !== Jt && a("Internal React error: Expected static flag was missing. Please notify the React team."), Lx = !1, Z)
        throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return L;
    }
    function qg() {
      var i = ow !== 0;
      return ow = 0, i;
    }
    function hN(i, l, h) {
      l.updateQueue = i.updateQueue, (l.mode & er) !== Jt ? l.flags &= -50333701 : l.flags &= -2053, i.lanes = Gp(i.lanes, h);
    }
    function mN() {
      if (It.current = Yx, Lx) {
        for (var i = br.memoizedState; i !== null; ) {
          var l = i.queue;
          l !== null && (l.pending = null), i = i.next;
        }
        Lx = !1;
      }
      wh = it, br = null, ai = null, li = null, ol = null, wf = -1, Qe = null, RN = !1, rw = !1, ow = 0;
    }
    function Yu() {
      var i = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return li === null ? br.memoizedState = li = i : li = li.next = i, li;
    }
    function il() {
      var i;
      if (ai === null) {
        var l = br.alternate;
        l !== null ? i = l.memoizedState : i = null;
      } else
        i = ai.next;
      var h;
      if (li === null ? h = br.memoizedState : h = li.next, h !== null)
        li = h, h = li.next, ai = i;
      else {
        if (i === null)
          throw new Error("Rendered more hooks than during the previous render.");
        ai = i;
        var v = {
          memoizedState: ai.memoizedState,
          baseState: ai.baseState,
          baseQueue: ai.baseQueue,
          queue: ai.queue,
          next: null
        };
        li === null ? br.memoizedState = li = v : li = li.next = v;
      }
      return li;
    }
    function gN() {
      return {
        lastEffect: null,
        stores: null
      };
    }
    function iR(i, l) {
      return typeof l == "function" ? l(i) : l;
    }
    function sR(i, l, h) {
      var v = Yu(), S;
      h !== void 0 ? S = h(l) : S = l, v.memoizedState = v.baseState = S;
      var R = {
        pending: null,
        interleaved: null,
        lanes: it,
        dispatch: null,
        lastRenderedReducer: i,
        lastRenderedState: S
      };
      v.queue = R;
      var L = R.dispatch = R6.bind(null, br, R);
      return [v.memoizedState, L];
    }
    function aR(i, l, h) {
      var v = il(), S = v.queue;
      if (S === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      S.lastRenderedReducer = i;
      var R = ai, L = R.baseQueue, V = S.pending;
      if (V !== null) {
        if (L !== null) {
          var Z = L.next, ae = V.next;
          L.next = ae, V.next = Z;
        }
        R.baseQueue !== L && a("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), R.baseQueue = L = V, S.pending = null;
      }
      if (L !== null) {
        var le = L.next, Te = R.baseState, xe = null, Le = null, ze = null, Ge = le;
        do {
          var kt = Ge.lane;
          if (Kc(wh, kt)) {
            if (ze !== null) {
              var Yt = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Xn,
                action: Ge.action,
                hasEagerState: Ge.hasEagerState,
                eagerState: Ge.eagerState,
                next: null
              };
              ze = ze.next = Yt;
            }
            if (Ge.hasEagerState)
              Te = Ge.eagerState;
            else {
              var Wn = Ge.action;
              Te = i(Te, Wn);
            }
          } else {
            var nn = {
              lane: kt,
              action: Ge.action,
              hasEagerState: Ge.hasEagerState,
              eagerState: Ge.eagerState,
              next: null
            };
            ze === null ? (Le = ze = nn, xe = Te) : ze = ze.next = nn, br.lanes = En(br.lanes, kt), Tw(kt);
          }
          Ge = Ge.next;
        } while (Ge !== null && Ge !== le);
        ze === null ? xe = Te : ze.next = Le, lt(Te, v.memoizedState) || pw(), v.memoizedState = Te, v.baseState = xe, v.baseQueue = ze, S.lastRenderedState = Te;
      }
      var Fn = S.interleaved;
      if (Fn !== null) {
        var Pe = Fn;
        do {
          var qe = Pe.lane;
          br.lanes = En(br.lanes, qe), Tw(qe), Pe = Pe.next;
        } while (Pe !== Fn);
      } else L === null && (S.lanes = it);
      var Me = S.dispatch;
      return [v.memoizedState, Me];
    }
    function lR(i, l, h) {
      var v = il(), S = v.queue;
      if (S === null)
        throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      S.lastRenderedReducer = i;
      var R = S.dispatch, L = S.pending, V = v.memoizedState;
      if (L !== null) {
        S.pending = null;
        var Z = L.next, ae = Z;
        do {
          var le = ae.action;
          V = i(V, le), ae = ae.next;
        } while (ae !== Z);
        lt(V, v.memoizedState) || pw(), v.memoizedState = V, v.baseQueue === null && (v.baseState = V), S.lastRenderedState = V;
      }
      return [V, R];
    }
    function KCe(i, l, h) {
    }
    function YCe(i, l, h) {
    }
    function uR(i, l, h) {
      var v = br, S = Yu(), R, L = ji();
      if (L) {
        if (h === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        R = h(), Ug || R !== h() && (a("The result of getServerSnapshot should be cached to avoid an infinite loop"), Ug = !0);
      } else {
        if (R = l(), !Ug) {
          var V = l();
          lt(R, V) || (a("The result of getSnapshot should be cached to avoid an infinite loop"), Ug = !0);
        }
        var Z = hE();
        if (Z === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        cg(Z, wh) || vN(v, l, R);
      }
      S.memoizedState = R;
      var ae = {
        value: R,
        getSnapshot: l
      };
      return S.queue = ae, Bx(bN.bind(null, v, ae, i), [i]), v.flags |= Zi, iw(ii | Fi, yN.bind(null, v, ae, R, l), void 0, null), R;
    }
    function $x(i, l, h) {
      var v = br, S = il(), R = l();
      if (!Ug) {
        var L = l();
        lt(R, L) || (a("The result of getSnapshot should be cached to avoid an infinite loop"), Ug = !0);
      }
      var V = S.memoizedState, Z = !lt(V, R);
      Z && (S.memoizedState = R, pw());
      var ae = S.queue;
      if (aw(bN.bind(null, v, ae, i), [i]), ae.getSnapshot !== l || Z || // Check if the susbcribe function changed. We can save some memory by
      // checking whether we scheduled a subscription effect above.
      li !== null && li.memoizedState.tag & ii) {
        v.flags |= Zi, iw(ii | Fi, yN.bind(null, v, ae, R, l), void 0, null);
        var le = hE();
        if (le === null)
          throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        cg(le, wh) || vN(v, l, R);
      }
      return R;
    }
    function vN(i, l, h) {
      i.flags |= Xd;
      var v = {
        getSnapshot: l,
        value: h
      }, S = br.updateQueue;
      if (S === null)
        S = gN(), br.updateQueue = S, S.stores = [v];
      else {
        var R = S.stores;
        R === null ? S.stores = [v] : R.push(v);
      }
    }
    function yN(i, l, h, v) {
      l.value = h, l.getSnapshot = v, wN(l) && SN(i);
    }
    function bN(i, l, h) {
      var v = function() {
        wN(l) && SN(i);
      };
      return h(v);
    }
    function wN(i) {
      var l = i.getSnapshot, h = i.value;
      try {
        var v = l();
        return !lt(h, v);
      } catch {
        return !0;
      }
    }
    function SN(i) {
      var l = Ks(i, ln);
      l !== null && fi(l, i, ln, Rr);
    }
    function jx(i) {
      var l = Yu();
      typeof i == "function" && (i = i()), l.memoizedState = l.baseState = i;
      var h = {
        pending: null,
        interleaved: null,
        lanes: it,
        dispatch: null,
        lastRenderedReducer: iR,
        lastRenderedState: i
      };
      l.queue = h;
      var v = h.dispatch = k6.bind(null, br, h);
      return [l.memoizedState, v];
    }
    function cR(i) {
      return aR(iR);
    }
    function dR(i) {
      return lR(iR);
    }
    function iw(i, l, h, v) {
      var S = {
        tag: i,
        create: l,
        destroy: h,
        deps: v,
        // Circular
        next: null
      }, R = br.updateQueue;
      if (R === null)
        R = gN(), br.updateQueue = R, R.lastEffect = S.next = S;
      else {
        var L = R.lastEffect;
        if (L === null)
          R.lastEffect = S.next = S;
        else {
          var V = L.next;
          L.next = S, S.next = V, R.lastEffect = S;
        }
      }
      return S;
    }
    function fR(i) {
      var l = Yu();
      {
        var h = {
          current: i
        };
        return l.memoizedState = h, h;
      }
    }
    function Fx(i) {
      var l = il();
      return l.memoizedState;
    }
    function sw(i, l, h, v) {
      var S = Yu(), R = v === void 0 ? null : v;
      br.flags |= i, S.memoizedState = iw(ii | l, h, void 0, R);
    }
    function zx(i, l, h, v) {
      var S = il(), R = v === void 0 ? null : v, L = void 0;
      if (ai !== null) {
        var V = ai.memoizedState;
        if (L = V.destroy, R !== null) {
          var Z = V.deps;
          if (oR(R, Z)) {
            S.memoizedState = iw(l, h, L, R);
            return;
          }
        }
      }
      br.flags |= i, S.memoizedState = iw(ii | l, h, L, R);
    }
    function Bx(i, l) {
      return (br.mode & er) !== Jt ? sw(Ga | Zi | $m, Fi, i, l) : sw(Zi | $m, Fi, i, l);
    }
    function aw(i, l) {
      return zx(Zi, Fi, i, l);
    }
    function pR(i, l) {
      return sw(Hn, Ku, i, l);
    }
    function Hx(i, l) {
      return zx(Hn, Ku, i, l);
    }
    function hR(i, l) {
      var h = Hn;
      return h |= $l, (br.mode & er) !== Jt && (h |= Pu), sw(h, si, i, l);
    }
    function Vx(i, l) {
      return zx(Hn, si, i, l);
    }
    function CN(i, l) {
      if (typeof l == "function") {
        var h = l, v = i();
        return h(v), function() {
          h(null);
        };
      } else if (l != null) {
        var S = l;
        S.hasOwnProperty("current") || a("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(S).join(", ") + "}");
        var R = i();
        return S.current = R, function() {
          S.current = null;
        };
      }
    }
    function mR(i, l, h) {
      typeof l != "function" && a("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", l !== null ? typeof l : "null");
      var v = h != null ? h.concat([i]) : null, S = Hn;
      return S |= $l, (br.mode & er) !== Jt && (S |= Pu), sw(S, si, CN.bind(null, l, i), v);
    }
    function Ux(i, l, h) {
      typeof l != "function" && a("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", l !== null ? typeof l : "null");
      var v = h != null ? h.concat([i]) : null;
      return zx(Hn, si, CN.bind(null, l, i), v);
    }
    function T6(i, l) {
    }
    var Wx = T6;
    function gR(i, l) {
      var h = Yu(), v = l === void 0 ? null : l;
      return h.memoizedState = [i, v], i;
    }
    function Gx(i, l) {
      var h = il(), v = l === void 0 ? null : l, S = h.memoizedState;
      if (S !== null && v !== null) {
        var R = S[1];
        if (oR(v, R))
          return S[0];
      }
      return h.memoizedState = [i, v], i;
    }
    function vR(i, l) {
      var h = Yu(), v = l === void 0 ? null : l, S = i();
      return h.memoizedState = [S, v], S;
    }
    function qx(i, l) {
      var h = il(), v = l === void 0 ? null : l, S = h.memoizedState;
      if (S !== null && v !== null) {
        var R = S[1];
        if (oR(v, R))
          return S[0];
      }
      var L = i();
      return h.memoizedState = [L, v], L;
    }
    function yR(i) {
      var l = Yu();
      return l.memoizedState = i, i;
    }
    function xN(i) {
      var l = il(), h = ai, v = h.memoizedState;
      return TN(l, v, i);
    }
    function EN(i) {
      var l = il();
      if (ai === null)
        return l.memoizedState = i, i;
      var h = ai.memoizedState;
      return TN(l, h, i);
    }
    function TN(i, l, h) {
      var v = !ub(wh);
      if (v) {
        if (!lt(h, l)) {
          var S = fb();
          br.lanes = En(br.lanes, S), Tw(S), i.baseState = !0;
        }
        return l;
      } else
        return i.baseState && (i.baseState = !1, pw()), i.memoizedState = h, h;
    }
    function _6(i, l, h) {
      var v = Ws();
      wo(E0(v, Xa)), i(!0);
      var S = nw.transition;
      nw.transition = {};
      var R = nw.transition;
      nw.transition._updatedFibers = /* @__PURE__ */ new Set();
      try {
        i(!1), l();
      } finally {
        if (wo(v), nw.transition = S, S === null && R._updatedFibers) {
          var L = R._updatedFibers.size;
          L > 10 && s("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), R._updatedFibers.clear();
        }
      }
    }
    function bR() {
      var i = jx(!1), l = i[0], h = i[1], v = _6.bind(null, h), S = Yu();
      return S.memoizedState = v, [l, v];
    }
    function _N() {
      var i = cR(), l = i[0], h = il(), v = h.memoizedState;
      return [l, v];
    }
    function ON() {
      var i = dR(), l = i[0], h = il(), v = h.memoizedState;
      return [l, v];
    }
    var RN = !1;
    function O6() {
      return RN;
    }
    function wR() {
      var i = Yu(), l = hE(), h = l.identifierPrefix, v;
      if (ji()) {
        var S = U3();
        v = ":" + h + "R" + S;
        var R = ow++;
        R > 0 && (v += "H" + R.toString(32)), v += ":";
      } else {
        var L = C6++;
        v = ":" + h + "r" + L.toString(32) + ":";
      }
      return i.memoizedState = v, v;
    }
    function Kx() {
      var i = il(), l = i.memoizedState;
      return l;
    }
    function R6(i, l, h) {
      typeof arguments[3] == "function" && a("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var v = Tf(i), S = {
        lane: v,
        action: h,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (kN(i))
        PN(l, S);
      else {
        var R = oN(i, l, S, v);
        if (R !== null) {
          var L = Os();
          fi(R, i, v, L), MN(R, l, v);
        }
      }
      IN(i, v);
    }
    function k6(i, l, h) {
      typeof arguments[3] == "function" && a("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var v = Tf(i), S = {
        lane: v,
        action: h,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (kN(i))
        PN(l, S);
      else {
        var R = i.alternate;
        if (i.lanes === it && (R === null || R.lanes === it)) {
          var L = l.lastRenderedReducer;
          if (L !== null) {
            var V;
            V = It.current, It.current = Xl;
            try {
              var Z = l.lastRenderedState, ae = L(Z, h);
              if (S.hasEagerState = !0, S.eagerState = ae, lt(ae, Z)) {
                p6(i, l, S, v);
                return;
              }
            } catch {
            } finally {
              It.current = V;
            }
          }
        }
        var le = oN(i, l, S, v);
        if (le !== null) {
          var Te = Os();
          fi(le, i, v, Te), MN(le, l, v);
        }
      }
      IN(i, v);
    }
    function kN(i) {
      var l = i.alternate;
      return i === br || l !== null && l === br;
    }
    function PN(i, l) {
      rw = Lx = !0;
      var h = i.pending;
      h === null ? l.next = l : (l.next = h.next, h.next = l), i.pending = l;
    }
    function MN(i, l, h) {
      if (db(h)) {
        var v = l.lanes;
        v = pb(v, i.pendingLanes);
        var S = En(v, h);
        l.lanes = S, fg(i, S);
      }
    }
    function IN(i, l, h) {
      Lp(i, l);
    }
    var Yx = {
      readContext: Wo,
      useCallback: ds,
      useContext: ds,
      useEffect: ds,
      useImperativeHandle: ds,
      useInsertionEffect: ds,
      useLayoutEffect: ds,
      useMemo: ds,
      useReducer: ds,
      useRef: ds,
      useState: ds,
      useDebugValue: ds,
      useDeferredValue: ds,
      useTransition: ds,
      useMutableSource: ds,
      useSyncExternalStore: ds,
      useId: ds,
      unstable_isNewReconciler: te
    }, DN = null, AN = null, NN = null, LN = null, Xu = null, Xl = null, Xx = null;
    {
      var SR = function() {
        a("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, bn = function() {
        a("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      DN = {
        readContext: function(i) {
          return Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", lr(), Wg(l), gR(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", lr(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", lr(), Wg(l), Bx(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", lr(), Wg(h), mR(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", lr(), Wg(l), pR(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", lr(), Wg(l), hR(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", lr(), Wg(l);
          var h = It.current;
          It.current = Xu;
          try {
            return vR(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", lr();
          var v = It.current;
          It.current = Xu;
          try {
            return sR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", lr(), fR(i);
        },
        useState: function(i) {
          Qe = "useState", lr();
          var l = It.current;
          It.current = Xu;
          try {
            return jx(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", lr(), void 0;
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", lr(), yR(i);
        },
        useTransition: function() {
          return Qe = "useTransition", lr(), bR();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", lr(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", lr(), uR(i, l, h);
        },
        useId: function() {
          return Qe = "useId", lr(), wR();
        },
        unstable_isNewReconciler: te
      }, AN = {
        readContext: function(i) {
          return Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", xt(), gR(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", xt(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", xt(), Bx(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", xt(), mR(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", xt(), pR(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", xt(), hR(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", xt();
          var h = It.current;
          It.current = Xu;
          try {
            return vR(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", xt();
          var v = It.current;
          It.current = Xu;
          try {
            return sR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", xt(), fR(i);
        },
        useState: function(i) {
          Qe = "useState", xt();
          var l = It.current;
          It.current = Xu;
          try {
            return jx(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", xt(), void 0;
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", xt(), yR(i);
        },
        useTransition: function() {
          return Qe = "useTransition", xt(), bR();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", xt(), uR(i, l, h);
        },
        useId: function() {
          return Qe = "useId", xt(), wR();
        },
        unstable_isNewReconciler: te
      }, NN = {
        readContext: function(i) {
          return Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", xt(), Gx(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", xt(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", xt(), aw(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", xt(), Ux(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", xt(), Hx(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", xt(), Vx(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", xt();
          var h = It.current;
          It.current = Xl;
          try {
            return qx(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", xt();
          var v = It.current;
          It.current = Xl;
          try {
            return aR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", xt(), Fx();
        },
        useState: function(i) {
          Qe = "useState", xt();
          var l = It.current;
          It.current = Xl;
          try {
            return cR(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", xt(), Wx();
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", xt(), xN(i);
        },
        useTransition: function() {
          return Qe = "useTransition", xt(), _N();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", xt(), $x(i, l);
        },
        useId: function() {
          return Qe = "useId", xt(), Kx();
        },
        unstable_isNewReconciler: te
      }, LN = {
        readContext: function(i) {
          return Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", xt(), Gx(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", xt(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", xt(), aw(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", xt(), Ux(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", xt(), Hx(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", xt(), Vx(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", xt();
          var h = It.current;
          It.current = Xx;
          try {
            return qx(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", xt();
          var v = It.current;
          It.current = Xx;
          try {
            return lR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", xt(), Fx();
        },
        useState: function(i) {
          Qe = "useState", xt();
          var l = It.current;
          It.current = Xx;
          try {
            return dR(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", xt(), Wx();
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", xt(), EN(i);
        },
        useTransition: function() {
          return Qe = "useTransition", xt(), ON();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", xt(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", xt(), $x(i, l);
        },
        useId: function() {
          return Qe = "useId", xt(), Kx();
        },
        unstable_isNewReconciler: te
      }, Xu = {
        readContext: function(i) {
          return SR(), Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", bn(), lr(), gR(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", bn(), lr(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", bn(), lr(), Bx(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", bn(), lr(), mR(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", bn(), lr(), pR(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", bn(), lr(), hR(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", bn(), lr();
          var h = It.current;
          It.current = Xu;
          try {
            return vR(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", bn(), lr();
          var v = It.current;
          It.current = Xu;
          try {
            return sR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", bn(), lr(), fR(i);
        },
        useState: function(i) {
          Qe = "useState", bn(), lr();
          var l = It.current;
          It.current = Xu;
          try {
            return jx(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", bn(), lr(), void 0;
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", bn(), lr(), yR(i);
        },
        useTransition: function() {
          return Qe = "useTransition", bn(), lr(), bR();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", bn(), lr(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", bn(), lr(), uR(i, l, h);
        },
        useId: function() {
          return Qe = "useId", bn(), lr(), wR();
        },
        unstable_isNewReconciler: te
      }, Xl = {
        readContext: function(i) {
          return SR(), Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", bn(), xt(), Gx(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", bn(), xt(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", bn(), xt(), aw(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", bn(), xt(), Ux(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", bn(), xt(), Hx(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", bn(), xt(), Vx(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", bn(), xt();
          var h = It.current;
          It.current = Xl;
          try {
            return qx(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", bn(), xt();
          var v = It.current;
          It.current = Xl;
          try {
            return aR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", bn(), xt(), Fx();
        },
        useState: function(i) {
          Qe = "useState", bn(), xt();
          var l = It.current;
          It.current = Xl;
          try {
            return cR(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", bn(), xt(), Wx();
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", bn(), xt(), xN(i);
        },
        useTransition: function() {
          return Qe = "useTransition", bn(), xt(), _N();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", bn(), xt(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", bn(), xt(), $x(i, l);
        },
        useId: function() {
          return Qe = "useId", bn(), xt(), Kx();
        },
        unstable_isNewReconciler: te
      }, Xx = {
        readContext: function(i) {
          return SR(), Wo(i);
        },
        useCallback: function(i, l) {
          return Qe = "useCallback", bn(), xt(), Gx(i, l);
        },
        useContext: function(i) {
          return Qe = "useContext", bn(), xt(), Wo(i);
        },
        useEffect: function(i, l) {
          return Qe = "useEffect", bn(), xt(), aw(i, l);
        },
        useImperativeHandle: function(i, l, h) {
          return Qe = "useImperativeHandle", bn(), xt(), Ux(i, l, h);
        },
        useInsertionEffect: function(i, l) {
          return Qe = "useInsertionEffect", bn(), xt(), Hx(i, l);
        },
        useLayoutEffect: function(i, l) {
          return Qe = "useLayoutEffect", bn(), xt(), Vx(i, l);
        },
        useMemo: function(i, l) {
          Qe = "useMemo", bn(), xt();
          var h = It.current;
          It.current = Xl;
          try {
            return qx(i, l);
          } finally {
            It.current = h;
          }
        },
        useReducer: function(i, l, h) {
          Qe = "useReducer", bn(), xt();
          var v = It.current;
          It.current = Xl;
          try {
            return lR(i, l, h);
          } finally {
            It.current = v;
          }
        },
        useRef: function(i) {
          return Qe = "useRef", bn(), xt(), Fx();
        },
        useState: function(i) {
          Qe = "useState", bn(), xt();
          var l = It.current;
          It.current = Xl;
          try {
            return dR(i);
          } finally {
            It.current = l;
          }
        },
        useDebugValue: function(i, l) {
          return Qe = "useDebugValue", bn(), xt(), Wx();
        },
        useDeferredValue: function(i) {
          return Qe = "useDeferredValue", bn(), xt(), EN(i);
        },
        useTransition: function() {
          return Qe = "useTransition", bn(), xt(), ON();
        },
        useMutableSource: function(i, l, h) {
          return Qe = "useMutableSource", bn(), xt(), void 0;
        },
        useSyncExternalStore: function(i, l, h) {
          return Qe = "useSyncExternalStore", bn(), xt(), $x(i, l);
        },
        useId: function() {
          return Qe = "useId", bn(), xt(), Kx();
        },
        unstable_isNewReconciler: te
      };
    }
    var Sf = t.unstable_now, $N = 0, Qx = -1, lw = -1, Jx = -1, CR = !1, Zx = !1;
    function jN() {
      return CR;
    }
    function P6() {
      Zx = !0;
    }
    function M6() {
      CR = !1, Zx = !1;
    }
    function I6() {
      CR = Zx, Zx = !1;
    }
    function FN() {
      return $N;
    }
    function zN() {
      $N = Sf();
    }
    function xR(i) {
      lw = Sf(), i.actualStartTime < 0 && (i.actualStartTime = Sf());
    }
    function BN(i) {
      lw = -1;
    }
    function eE(i, l) {
      if (lw >= 0) {
        var h = Sf() - lw;
        i.actualDuration += h, l && (i.selfBaseDuration = h), lw = -1;
      }
    }
    function Qu(i) {
      if (Qx >= 0) {
        var l = Sf() - Qx;
        Qx = -1;
        for (var h = i.return; h !== null; ) {
          switch (h.tag) {
            case y:
              var v = h.stateNode;
              v.effectDuration += l;
              return;
            case N:
              var S = h.stateNode;
              S.effectDuration += l;
              return;
          }
          h = h.return;
        }
      }
    }
    function ER(i) {
      if (Jx >= 0) {
        var l = Sf() - Jx;
        Jx = -1;
        for (var h = i.return; h !== null; ) {
          switch (h.tag) {
            case y:
              var v = h.stateNode;
              v !== null && (v.passiveEffectDuration += l);
              return;
            case N:
              var S = h.stateNode;
              S !== null && (S.passiveEffectDuration += l);
              return;
          }
          h = h.return;
        }
      }
    }
    function Ju() {
      Qx = Sf();
    }
    function TR() {
      Jx = Sf();
    }
    function _R(i) {
      for (var l = i.child; l; )
        i.actualDuration += l.actualDuration, l = l.sibling;
    }
    function Ql(i, l) {
      if (i && i.defaultProps) {
        var h = Sn({}, l), v = i.defaultProps;
        for (var S in v)
          h[S] === void 0 && (h[S] = v[S]);
        return h;
      }
      return l;
    }
    var OR = {}, RR, kR, PR, MR, IR, HN, tE, DR, AR, NR, uw;
    {
      RR = /* @__PURE__ */ new Set(), kR = /* @__PURE__ */ new Set(), PR = /* @__PURE__ */ new Set(), MR = /* @__PURE__ */ new Set(), DR = /* @__PURE__ */ new Set(), IR = /* @__PURE__ */ new Set(), AR = /* @__PURE__ */ new Set(), NR = /* @__PURE__ */ new Set(), uw = /* @__PURE__ */ new Set();
      var VN = /* @__PURE__ */ new Set();
      tE = function(i, l) {
        if (!(i === null || typeof i == "function")) {
          var h = l + "_" + i;
          VN.has(h) || (VN.add(h), a("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", l, i));
        }
      }, HN = function(i, l) {
        if (l === void 0) {
          var h = qn(i) || "Component";
          IR.has(h) || (IR.add(h), a("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", h));
        }
      }, Object.defineProperty(OR, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(OR);
    }
    function LR(i, l, h, v) {
      var S = i.memoizedState, R = h(v, S);
      {
        if (i.mode & yr) {
          Xr(!0);
          try {
            R = h(v, S);
          } finally {
            Xr(!1);
          }
        }
        HN(l, R);
      }
      var L = R == null ? S : Sn({}, S, R);
      if (i.memoizedState = L, i.lanes === it) {
        var V = i.updateQueue;
        V.baseState = L;
      }
    }
    var $R = {
      isMounted: l0,
      enqueueSetState: function(i, l, h) {
        var v = Yd(i), S = Os(), R = Tf(v), L = sd(S, R);
        L.payload = l, h != null && (tE(h, "setState"), L.callback = h);
        var V = vf(v, L, R);
        V !== null && (fi(V, v, R, S), Px(V, v, R)), Lp(v, R);
      },
      enqueueReplaceState: function(i, l, h) {
        var v = Yd(i), S = Os(), R = Tf(v), L = sd(S, R);
        L.tag = sN, L.payload = l, h != null && (tE(h, "replaceState"), L.callback = h);
        var V = vf(v, L, R);
        V !== null && (fi(V, v, R, S), Px(V, v, R)), Lp(v, R);
      },
      enqueueForceUpdate: function(i, l) {
        var h = Yd(i), v = Os(), S = Tf(h), R = sd(v, S);
        R.tag = Ox, l != null && (tE(l, "forceUpdate"), R.callback = l);
        var L = vf(h, R, S);
        L !== null && (fi(L, h, S, v), Px(L, h, S)), Um(h, S);
      }
    };
    function UN(i, l, h, v, S, R, L) {
      var V = i.stateNode;
      if (typeof V.shouldComponentUpdate == "function") {
        var Z = V.shouldComponentUpdate(v, R, L);
        {
          if (i.mode & yr) {
            Xr(!0);
            try {
              Z = V.shouldComponentUpdate(v, R, L);
            } finally {
              Xr(!1);
            }
          }
          Z === void 0 && a("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", qn(l) || "Component");
        }
        return Z;
      }
      return l.prototype && l.prototype.isPureReactComponent ? !Vt(h, v) || !Vt(S, R) : !0;
    }
    function D6(i, l, h) {
      var v = i.stateNode;
      {
        var S = qn(l) || "Component", R = v.render;
        R || (l.prototype && typeof l.prototype.render == "function" ? a("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", S) : a("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", S)), v.getInitialState && !v.getInitialState.isReactClassApproved && !v.state && a("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", S), v.getDefaultProps && !v.getDefaultProps.isReactClassApproved && a("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", S), v.propTypes && a("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", S), v.contextType && a("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", S), l.childContextTypes && !uw.has(l) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (i.mode & yr) === Jt && (uw.add(l), a(`%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead

.Learn more about this warning here: https://reactjs.org/link/legacy-context`, S)), l.contextTypes && !uw.has(l) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (i.mode & yr) === Jt && (uw.add(l), a(`%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.

Learn more about this warning here: https://reactjs.org/link/legacy-context`, S)), v.contextTypes && a("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", S), l.contextType && l.contextTypes && !AR.has(l) && (AR.add(l), a("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", S)), typeof v.componentShouldUpdate == "function" && a("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", S), l.prototype && l.prototype.isPureReactComponent && typeof v.shouldComponentUpdate < "u" && a("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", qn(l) || "A pure component"), typeof v.componentDidUnmount == "function" && a("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", S), typeof v.componentDidReceiveProps == "function" && a("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", S), typeof v.componentWillRecieveProps == "function" && a("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", S), typeof v.UNSAFE_componentWillRecieveProps == "function" && a("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", S);
        var L = v.props !== h;
        v.props !== void 0 && L && a("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", S, S), v.defaultProps && a("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", S, S), typeof v.getSnapshotBeforeUpdate == "function" && typeof v.componentDidUpdate != "function" && !PR.has(l) && (PR.add(l), a("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", qn(l))), typeof v.getDerivedStateFromProps == "function" && a("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", S), typeof v.getDerivedStateFromError == "function" && a("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", S), typeof l.getSnapshotBeforeUpdate == "function" && a("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", S);
        var V = v.state;
        V && (typeof V != "object" || Rn(V)) && a("%s.state: must be set to an object or null", S), typeof v.getChildContext == "function" && typeof l.childContextTypes != "object" && a("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", S);
      }
    }
    function WN(i, l) {
      l.updater = $R, i.stateNode = l, Ac(l, i), l._reactInternalInstance = OR;
    }
    function GN(i, l, h) {
      var v = !1, S = Sa, R = Sa, L = l.contextType;
      if ("contextType" in l) {
        var V = (
          // Allow null for conditional declaration
          L === null || L !== void 0 && L.$$typeof === ye && L._context === void 0
        );
        if (!V && !NR.has(l)) {
          NR.add(l);
          var Z = "";
          L === void 0 ? Z = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof L != "object" ? Z = " However, it is set to a " + typeof L + "." : L.$$typeof === Xi ? Z = " Did you accidentally pass the Context.Provider instead?" : L._context !== void 0 ? Z = " Did you accidentally pass the Context.Consumer instead?" : Z = " However, it is set to an object with keys {" + Object.keys(L).join(", ") + "}.", a("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", qn(l) || "Component", Z);
        }
      }
      if (typeof L == "object" && L !== null)
        R = Wo(L);
      else {
        S = Dg(i, l, !0);
        var ae = l.contextTypes;
        v = ae != null, R = v ? Ag(i, S) : Sa;
      }
      var le = new l(h, R);
      if (i.mode & yr) {
        Xr(!0);
        try {
          le = new l(h, R);
        } finally {
          Xr(!1);
        }
      }
      var Te = i.memoizedState = le.state !== null && le.state !== void 0 ? le.state : null;
      WN(i, le);
      {
        if (typeof l.getDerivedStateFromProps == "function" && Te === null) {
          var xe = qn(l) || "Component";
          kR.has(xe) || (kR.add(xe), a("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", xe, le.state === null ? "null" : "undefined", xe));
        }
        if (typeof l.getDerivedStateFromProps == "function" || typeof le.getSnapshotBeforeUpdate == "function") {
          var Le = null, ze = null, Ge = null;
          if (typeof le.componentWillMount == "function" && le.componentWillMount.__suppressDeprecationWarning !== !0 ? Le = "componentWillMount" : typeof le.UNSAFE_componentWillMount == "function" && (Le = "UNSAFE_componentWillMount"), typeof le.componentWillReceiveProps == "function" && le.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? ze = "componentWillReceiveProps" : typeof le.UNSAFE_componentWillReceiveProps == "function" && (ze = "UNSAFE_componentWillReceiveProps"), typeof le.componentWillUpdate == "function" && le.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Ge = "componentWillUpdate" : typeof le.UNSAFE_componentWillUpdate == "function" && (Ge = "UNSAFE_componentWillUpdate"), Le !== null || ze !== null || Ge !== null) {
            var kt = qn(l) || "Component", nn = typeof l.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            MR.has(kt) || (MR.add(kt), a(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, kt, nn, Le !== null ? `
  ` + Le : "", ze !== null ? `
  ` + ze : "", Ge !== null ? `
  ` + Ge : ""));
          }
        }
      }
      return v && NA(i, S, R), le;
    }
    function A6(i, l) {
      var h = l.state;
      typeof l.componentWillMount == "function" && l.componentWillMount(), typeof l.UNSAFE_componentWillMount == "function" && l.UNSAFE_componentWillMount(), h !== l.state && (a("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", gn(i) || "Component"), $R.enqueueReplaceState(l, l.state, null));
    }
    function qN(i, l, h, v) {
      var S = l.state;
      if (typeof l.componentWillReceiveProps == "function" && l.componentWillReceiveProps(h, v), typeof l.UNSAFE_componentWillReceiveProps == "function" && l.UNSAFE_componentWillReceiveProps(h, v), l.state !== S) {
        {
          var R = gn(i) || "Component";
          RR.has(R) || (RR.add(R), a("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", R));
        }
        $R.enqueueReplaceState(l, l.state, null);
      }
    }
    function jR(i, l, h, v) {
      D6(i, l, h);
      var S = i.stateNode;
      S.props = h, S.state = i.memoizedState, S.refs = {}, q1(i);
      var R = l.contextType;
      if (typeof R == "object" && R !== null)
        S.context = Wo(R);
      else {
        var L = Dg(i, l, !0);
        S.context = Ag(i, L);
      }
      {
        if (S.state === h) {
          var V = qn(l) || "Component";
          DR.has(V) || (DR.add(V), a("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", V));
        }
        i.mode & yr && Kl.recordLegacyContextWarning(i, S), Kl.recordUnsafeLifecycleWarnings(i, S);
      }
      S.state = i.memoizedState;
      var Z = l.getDerivedStateFromProps;
      if (typeof Z == "function" && (LR(i, l, Z, h), S.state = i.memoizedState), typeof l.getDerivedStateFromProps != "function" && typeof S.getSnapshotBeforeUpdate != "function" && (typeof S.UNSAFE_componentWillMount == "function" || typeof S.componentWillMount == "function") && (A6(i, S), Mx(i, h, S, v), S.state = i.memoizedState), typeof S.componentDidMount == "function") {
        var ae = Hn;
        ae |= $l, (i.mode & er) !== Jt && (ae |= Pu), i.flags |= ae;
      }
    }
    function N6(i, l, h, v) {
      var S = i.stateNode, R = i.memoizedProps;
      S.props = R;
      var L = S.context, V = l.contextType, Z = Sa;
      if (typeof V == "object" && V !== null)
        Z = Wo(V);
      else {
        var ae = Dg(i, l, !0);
        Z = Ag(i, ae);
      }
      var le = l.getDerivedStateFromProps, Te = typeof le == "function" || typeof S.getSnapshotBeforeUpdate == "function";
      !Te && (typeof S.UNSAFE_componentWillReceiveProps == "function" || typeof S.componentWillReceiveProps == "function") && (R !== h || L !== Z) && qN(i, S, h, Z), lN();
      var xe = i.memoizedState, Le = S.state = xe;
      if (Mx(i, h, S, v), Le = i.memoizedState, R === h && xe === Le && !fx() && !Ix()) {
        if (typeof S.componentDidMount == "function") {
          var ze = Hn;
          ze |= $l, (i.mode & er) !== Jt && (ze |= Pu), i.flags |= ze;
        }
        return !1;
      }
      typeof le == "function" && (LR(i, l, le, h), Le = i.memoizedState);
      var Ge = Ix() || UN(i, l, R, h, xe, Le, Z);
      if (Ge) {
        if (!Te && (typeof S.UNSAFE_componentWillMount == "function" || typeof S.componentWillMount == "function") && (typeof S.componentWillMount == "function" && S.componentWillMount(), typeof S.UNSAFE_componentWillMount == "function" && S.UNSAFE_componentWillMount()), typeof S.componentDidMount == "function") {
          var kt = Hn;
          kt |= $l, (i.mode & er) !== Jt && (kt |= Pu), i.flags |= kt;
        }
      } else {
        if (typeof S.componentDidMount == "function") {
          var nn = Hn;
          nn |= $l, (i.mode & er) !== Jt && (nn |= Pu), i.flags |= nn;
        }
        i.memoizedProps = h, i.memoizedState = Le;
      }
      return S.props = h, S.state = Le, S.context = Z, Ge;
    }
    function L6(i, l, h, v, S) {
      var R = l.stateNode;
      aN(i, l);
      var L = l.memoizedProps, V = l.type === l.elementType ? L : Ql(l.type, L);
      R.props = V;
      var Z = l.pendingProps, ae = R.context, le = h.contextType, Te = Sa;
      if (typeof le == "object" && le !== null)
        Te = Wo(le);
      else {
        var xe = Dg(l, h, !0);
        Te = Ag(l, xe);
      }
      var Le = h.getDerivedStateFromProps, ze = typeof Le == "function" || typeof R.getSnapshotBeforeUpdate == "function";
      !ze && (typeof R.UNSAFE_componentWillReceiveProps == "function" || typeof R.componentWillReceiveProps == "function") && (L !== Z || ae !== Te) && qN(l, R, v, Te), lN();
      var Ge = l.memoizedState, kt = R.state = Ge;
      if (Mx(l, v, R, S), kt = l.memoizedState, L === Z && Ge === kt && !fx() && !Ix() && !re)
        return typeof R.componentDidUpdate == "function" && (L !== i.memoizedProps || Ge !== i.memoizedState) && (l.flags |= Hn), typeof R.getSnapshotBeforeUpdate == "function" && (L !== i.memoizedProps || Ge !== i.memoizedState) && (l.flags |= Do), !1;
      typeof Le == "function" && (LR(l, h, Le, v), kt = l.memoizedState);
      var nn = Ix() || UN(l, h, V, v, Ge, kt, Te) || // TODO: In some cases, we'll end up checking if context has changed twice,
      // both before and after `shouldComponentUpdate` has been called. Not ideal,
      // but I'm loath to refactor this function. This only happens for memoized
      // components so it's not that common.
      re;
      return nn ? (!ze && (typeof R.UNSAFE_componentWillUpdate == "function" || typeof R.componentWillUpdate == "function") && (typeof R.componentWillUpdate == "function" && R.componentWillUpdate(v, kt, Te), typeof R.UNSAFE_componentWillUpdate == "function" && R.UNSAFE_componentWillUpdate(v, kt, Te)), typeof R.componentDidUpdate == "function" && (l.flags |= Hn), typeof R.getSnapshotBeforeUpdate == "function" && (l.flags |= Do)) : (typeof R.componentDidUpdate == "function" && (L !== i.memoizedProps || Ge !== i.memoizedState) && (l.flags |= Hn), typeof R.getSnapshotBeforeUpdate == "function" && (L !== i.memoizedProps || Ge !== i.memoizedState) && (l.flags |= Do), l.memoizedProps = v, l.memoizedState = kt), R.props = v, R.state = kt, R.context = Te, nn;
    }
    function Sh(i, l) {
      return {
        value: i,
        source: l,
        stack: Ml(l),
        digest: null
      };
    }
    function FR(i, l, h) {
      return {
        value: i,
        source: null,
        stack: h ?? null,
        digest: l ?? null
      };
    }
    function $6(i, l) {
      return !0;
    }
    function zR(i, l) {
      try {
        var h = $6(i, l);
        if (h === !1)
          return;
        var v = l.value, S = l.source, R = l.stack, L = R !== null ? R : "";
        if (v != null && v._suppressLogging) {
          if (i.tag === m)
            return;
          console.error(v);
        }
        var V = S ? gn(S) : null, Z = V ? "The above error occurred in the <" + V + "> component:" : "The above error occurred in one of your React components:", ae;
        if (i.tag === y)
          ae = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        else {
          var le = gn(i) || "Anonymous";
          ae = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + le + ".");
        }
        var Te = Z + `
` + L + `

` + ("" + ae);
        console.error(Te);
      } catch (xe) {
        setTimeout(function() {
          throw xe;
        });
      }
    }
    var j6 = typeof WeakMap == "function" ? WeakMap : Map;
    function KN(i, l, h) {
      var v = sd(Rr, h);
      v.tag = W1, v.payload = {
        element: null
      };
      var S = l.value;
      return v.callback = function() {
        P8(S), zR(i, l);
      }, v;
    }
    function BR(i, l, h) {
      var v = sd(Rr, h);
      v.tag = W1;
      var S = i.type.getDerivedStateFromError;
      if (typeof S == "function") {
        var R = l.value;
        v.payload = function() {
          return S(R);
        }, v.callback = function() {
          i$(i), zR(i, l);
        };
      }
      var L = i.stateNode;
      return L !== null && typeof L.componentDidCatch == "function" && (v.callback = function() {
        i$(i), zR(i, l), typeof S != "function" && R8(this);
        var Z = l.value, ae = l.stack;
        this.componentDidCatch(Z, {
          componentStack: ae !== null ? ae : ""
        }), typeof S != "function" && (is(i.lanes, ln) || a("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", gn(i) || "Unknown"));
      }), v;
    }
    function YN(i, l, h) {
      var v = i.pingCache, S;
      if (v === null ? (v = i.pingCache = new j6(), S = /* @__PURE__ */ new Set(), v.set(l, S)) : (S = v.get(l), S === void 0 && (S = /* @__PURE__ */ new Set(), v.set(l, S))), !S.has(h)) {
        S.add(h);
        var R = M8.bind(null, i, l, h);
        rs && _w(i, h), l.then(R, R);
      }
    }
    function F6(i, l, h, v) {
      var S = i.updateQueue;
      if (S === null) {
        var R = /* @__PURE__ */ new Set();
        R.add(h), i.updateQueue = R;
      } else
        S.add(h);
    }
    function z6(i, l) {
      var h = i.tag;
      if ((i.mode & kn) === Jt && (h === f || h === M || h === H)) {
        var v = i.alternate;
        v ? (i.updateQueue = v.updateQueue, i.memoizedState = v.memoizedState, i.lanes = v.lanes) : (i.updateQueue = null, i.memoizedState = null);
      }
    }
    function XN(i) {
      var l = i;
      do {
        if (l.tag === P && w6(l))
          return l;
        l = l.return;
      } while (l !== null);
      return null;
    }
    function QN(i, l, h, v, S) {
      if ((i.mode & kn) === Jt) {
        if (i === l)
          i.flags |= Bo;
        else {
          if (i.flags |= Xt, h.flags |= Lm, h.flags &= -52805, h.tag === m) {
            var R = h.alternate;
            if (R === null)
              h.tag = z;
            else {
              var L = sd(Rr, ln);
              L.tag = Ox, vf(h, L, ln);
            }
          }
          h.lanes = En(h.lanes, ln);
        }
        return i;
      }
      return i.flags |= Bo, i.lanes = S, i;
    }
    function B6(i, l, h, v, S) {
      if (h.flags |= Pp, rs && _w(i, S), v !== null && typeof v == "object" && typeof v.then == "function") {
        var R = v;
        z6(h), ji() && h.mode & kn && HA();
        var L = XN(l);
        if (L !== null) {
          L.flags &= ~wi, QN(L, l, h, i, S), L.mode & kn && YN(i, R, S), F6(L, i, R);
          return;
        } else {
          if (!g0(S)) {
            YN(i, R, S), wk();
            return;
          }
          var V = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          v = V;
        }
      } else if (ji() && h.mode & kn) {
        HA();
        var Z = XN(l);
        if (Z !== null) {
          (Z.flags & Bo) === Qt && (Z.flags |= wi), QN(Z, l, h, i, S), D1(Sh(v, h));
          return;
        }
      }
      v = Sh(v, h), w8(v);
      var ae = l;
      do {
        switch (ae.tag) {
          case y: {
            var le = v;
            ae.flags |= Bo;
            var Te = Wp(S);
            ae.lanes = En(ae.lanes, Te);
            var xe = KN(ae, le, Te);
            K1(ae, xe);
            return;
          }
          case m:
            var Le = v, ze = ae.type, Ge = ae.stateNode;
            if ((ae.flags & Xt) === Qt && (typeof ze.getDerivedStateFromError == "function" || Ge !== null && typeof Ge.componentDidCatch == "function" && !XL(Ge))) {
              ae.flags |= Bo;
              var kt = Wp(S);
              ae.lanes = En(ae.lanes, kt);
              var nn = BR(ae, Le, kt);
              K1(ae, nn);
              return;
            }
            break;
        }
        ae = ae.return;
      } while (ae !== null);
    }
    function H6() {
      return null;
    }
    var cw = n.ReactCurrentOwner, Jl = !1, HR, dw, VR, UR, WR, Ch, GR, nE, fw;
    HR = {}, dw = {}, VR = {}, UR = {}, WR = {}, Ch = !1, GR = {}, nE = {}, fw = {};
    function Ts(i, l, h, v) {
      i === null ? l.child = eN(l, null, h, v) : l.child = jg(l, i.child, h, v);
    }
    function V6(i, l, h, v) {
      l.child = jg(l, i.child, null, v), l.child = jg(l, null, h, v);
    }
    function JN(i, l, h, v, S) {
      if (l.type !== l.elementType) {
        var R = h.propTypes;
        R && Gl(
          R,
          v,
          // Resolved props
          "prop",
          qn(h)
        );
      }
      var L = h.render, V = l.ref, Z, ae;
      zg(l, S), Ss(l);
      {
        if (cw.current = l, Io(!0), Z = Gg(i, l, L, v, V, S), ae = qg(), l.mode & yr) {
          Xr(!0);
          try {
            Z = Gg(i, l, L, v, V, S), ae = qg();
          } finally {
            Xr(!1);
          }
        }
        Io(!1);
      }
      return Cs(), i !== null && !Jl ? (hN(i, l, S), ad(i, l, S)) : (ji() && ae && O1(l), l.flags |= ga, Ts(i, l, Z, S), l.child);
    }
    function ZN(i, l, h, v, S) {
      if (i === null) {
        var R = h.type;
        if (K8(R) && h.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        h.defaultProps === void 0) {
          var L = R;
          return L = tv(R), l.tag = H, l.type = L, YR(l, R), eL(i, l, L, v, S);
        }
        {
          var V = R.propTypes;
          if (V && Gl(
            V,
            v,
            // Resolved props
            "prop",
            qn(R)
          ), h.defaultProps !== void 0) {
            var Z = qn(R) || "Unknown";
            fw[Z] || (a("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", Z), fw[Z] = !0);
          }
        }
        var ae = Mk(h.type, null, v, l, l.mode, S);
        return ae.ref = l.ref, ae.return = l, l.child = ae, ae;
      }
      {
        var le = h.type, Te = le.propTypes;
        Te && Gl(
          Te,
          v,
          // Resolved props
          "prop",
          qn(le)
        );
      }
      var xe = i.child, Le = tk(i, S);
      if (!Le) {
        var ze = xe.memoizedProps, Ge = h.compare;
        if (Ge = Ge !== null ? Ge : Vt, Ge(ze, v) && i.ref === l.ref)
          return ad(i, l, S);
      }
      l.flags |= ga;
      var kt = Oh(xe, v);
      return kt.ref = l.ref, kt.return = l, l.child = kt, kt;
    }
    function eL(i, l, h, v, S) {
      if (l.type !== l.elementType) {
        var R = l.elementType;
        if (R.$$typeof === De) {
          var L = R, V = L._payload, Z = L._init;
          try {
            R = Z(V);
          } catch {
            R = null;
          }
          var ae = R && R.propTypes;
          ae && Gl(
            ae,
            v,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            qn(R)
          );
        }
      }
      if (i !== null) {
        var le = i.memoizedProps;
        if (Vt(le, v) && i.ref === l.ref && // Prevent bailout if the implementation changed due to hot reload.
        l.type === i.type)
          if (Jl = !1, l.pendingProps = v = le, tk(i, S))
            (i.flags & Lm) !== Qt && (Jl = !0);
          else return l.lanes = i.lanes, ad(i, l, S);
      }
      return qR(i, l, h, v, S);
    }
    function tL(i, l, h) {
      var v = l.pendingProps, S = v.children, R = i !== null ? i.memoizedState : null;
      if (v.mode === "hidden" || Q)
        if ((l.mode & kn) === Jt) {
          var L = {
            baseLanes: it,
            cachePool: null,
            transitions: null
          };
          l.memoizedState = L, mE(l, h);
        } else if (is(h, os)) {
          var Te = {
            baseLanes: it,
            cachePool: null,
            transitions: null
          };
          l.memoizedState = Te;
          var xe = R !== null ? R.baseLanes : h;
          mE(l, xe);
        } else {
          var V = null, Z;
          if (R !== null) {
            var ae = R.baseLanes;
            Z = En(ae, h);
          } else
            Z = h;
          l.lanes = l.childLanes = os;
          var le = {
            baseLanes: Z,
            cachePool: V,
            transitions: null
          };
          return l.memoizedState = le, l.updateQueue = null, mE(l, Z), null;
        }
      else {
        var Le;
        R !== null ? (Le = En(R.baseLanes, h), l.memoizedState = null) : Le = h, mE(l, Le);
      }
      return Ts(i, l, S, h), l.child;
    }
    function U6(i, l, h) {
      var v = l.pendingProps;
      return Ts(i, l, v, h), l.child;
    }
    function W6(i, l, h) {
      var v = l.pendingProps.children;
      return Ts(i, l, v, h), l.child;
    }
    function G6(i, l, h) {
      {
        l.flags |= Hn;
        {
          var v = l.stateNode;
          v.effectDuration = 0, v.passiveEffectDuration = 0;
        }
      }
      var S = l.pendingProps, R = S.children;
      return Ts(i, l, R, h), l.child;
    }
    function nL(i, l) {
      var h = l.ref;
      (i === null && h !== null || i !== null && i.ref !== h) && (l.flags |= no, l.flags |= Qd);
    }
    function qR(i, l, h, v, S) {
      if (l.type !== l.elementType) {
        var R = h.propTypes;
        R && Gl(
          R,
          v,
          // Resolved props
          "prop",
          qn(h)
        );
      }
      var L;
      {
        var V = Dg(l, h, !0);
        L = Ag(l, V);
      }
      var Z, ae;
      zg(l, S), Ss(l);
      {
        if (cw.current = l, Io(!0), Z = Gg(i, l, h, v, L, S), ae = qg(), l.mode & yr) {
          Xr(!0);
          try {
            Z = Gg(i, l, h, v, L, S), ae = qg();
          } finally {
            Xr(!1);
          }
        }
        Io(!1);
      }
      return Cs(), i !== null && !Jl ? (hN(i, l, S), ad(i, l, S)) : (ji() && ae && O1(l), l.flags |= ga, Ts(i, l, Z, S), l.child);
    }
    function rL(i, l, h, v, S) {
      {
        switch (u9(l)) {
          case !1: {
            var R = l.stateNode, L = l.type, V = new L(l.memoizedProps, R.context), Z = V.state;
            R.updater.enqueueSetState(R, Z, null);
            break;
          }
          case !0: {
            l.flags |= Xt, l.flags |= Bo;
            var ae = new Error("Simulated error coming from DevTools"), le = Wp(S);
            l.lanes = En(l.lanes, le);
            var Te = BR(l, Sh(ae, l), le);
            K1(l, Te);
            break;
          }
        }
        if (l.type !== l.elementType) {
          var xe = h.propTypes;
          xe && Gl(
            xe,
            v,
            // Resolved props
            "prop",
            qn(h)
          );
        }
      }
      var Le;
      qu(h) ? (Le = !0, hx(l)) : Le = !1, zg(l, S);
      var ze = l.stateNode, Ge;
      ze === null ? (oE(i, l), GN(l, h, v), jR(l, h, v, S), Ge = !0) : i === null ? Ge = N6(l, h, v, S) : Ge = L6(i, l, h, v, S);
      var kt = KR(i, l, h, Ge, Le, S);
      {
        var nn = l.stateNode;
        Ge && nn.props !== v && (Ch || a("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", gn(l) || "a component"), Ch = !0);
      }
      return kt;
    }
    function KR(i, l, h, v, S, R) {
      nL(i, l);
      var L = (l.flags & Xt) !== Qt;
      if (!v && !L)
        return S && jA(l, h, !1), ad(i, l, R);
      var V = l.stateNode;
      cw.current = l;
      var Z;
      if (L && typeof h.getDerivedStateFromError != "function")
        Z = null, BN();
      else {
        Ss(l);
        {
          if (Io(!0), Z = V.render(), l.mode & yr) {
            Xr(!0);
            try {
              V.render();
            } finally {
              Xr(!1);
            }
          }
          Io(!1);
        }
        Cs();
      }
      return l.flags |= ga, i !== null && L ? V6(i, l, Z, R) : Ts(i, l, Z, R), l.memoizedState = V.state, S && jA(l, h, !0), l.child;
    }
    function oL(i) {
      var l = i.stateNode;
      l.pendingContext ? LA(i, l.pendingContext, l.pendingContext !== l.context) : l.context && LA(i, l.context, !1), Y1(i, l.containerInfo);
    }
    function q6(i, l, h) {
      if (oL(l), i === null)
        throw new Error("Should have a current fiber. This is a bug in React.");
      var v = l.pendingProps, S = l.memoizedState, R = S.element;
      aN(i, l), Mx(l, v, null, h);
      var L = l.memoizedState;
      l.stateNode;
      var V = L.element;
      if (S.isDehydrated) {
        var Z = {
          element: V,
          isDehydrated: !1,
          cache: L.cache,
          pendingSuspenseBoundaries: L.pendingSuspenseBoundaries,
          transitions: L.transitions
        }, ae = l.updateQueue;
        if (ae.baseState = Z, l.memoizedState = Z, l.flags & wi) {
          var le = Sh(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), l);
          return iL(i, l, V, h, le);
        } else if (V !== R) {
          var Te = Sh(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), l);
          return iL(i, l, V, h, Te);
        } else {
          X3(l);
          var xe = eN(l, null, V, h);
          l.child = xe;
          for (var Le = xe; Le; )
            Le.flags = Le.flags & ~Yr | es, Le = Le.sibling;
        }
      } else {
        if ($g(), V === R)
          return ad(i, l, h);
        Ts(i, l, V, h);
      }
      return l.child;
    }
    function iL(i, l, h, v, S) {
      return $g(), D1(S), l.flags |= wi, Ts(i, l, h, v), l.child;
    }
    function K6(i, l, h) {
      dN(l), i === null && I1(l);
      var v = l.type, S = l.pendingProps, R = i !== null ? i.memoizedProps : null, L = S.children, V = p1(v, S);
      return V ? L = null : R !== null && p1(v, R) && (l.flags |= Fs), nL(i, l), Ts(i, l, L, h), l.child;
    }
    function Y6(i, l) {
      return i === null && I1(l), null;
    }
    function X6(i, l, h, v) {
      oE(i, l);
      var S = l.pendingProps, R = h, L = R._payload, V = R._init, Z = V(L);
      l.type = Z;
      var ae = l.tag = Y8(Z), le = Ql(Z, S), Te;
      switch (ae) {
        case f:
          return YR(l, Z), l.type = Z = tv(Z), Te = qR(null, l, Z, le, v), Te;
        case m:
          return l.type = Z = Tk(Z), Te = rL(null, l, Z, le, v), Te;
        case M:
          return l.type = Z = _k(Z), Te = JN(null, l, Z, le, v), Te;
        case F: {
          if (l.type !== l.elementType) {
            var xe = Z.propTypes;
            xe && Gl(
              xe,
              le,
              // Resolved for outer only
              "prop",
              qn(Z)
            );
          }
          return Te = ZN(
            null,
            l,
            Z,
            Ql(Z.type, le),
            // The inner type can have defaults too
            v
          ), Te;
        }
      }
      var Le = "";
      throw Z !== null && typeof Z == "object" && Z.$$typeof === De && (Le = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + Z + ". " + ("Lazy element type must resolve to a class or function." + Le));
    }
    function Q6(i, l, h, v, S) {
      oE(i, l), l.tag = m;
      var R;
      return qu(h) ? (R = !0, hx(l)) : R = !1, zg(l, S), GN(l, h, v), jR(l, h, v, S), KR(null, l, h, !0, R, S);
    }
    function J6(i, l, h, v) {
      oE(i, l);
      var S = l.pendingProps, R;
      {
        var L = Dg(l, h, !1);
        R = Ag(l, L);
      }
      zg(l, v);
      var V, Z;
      Ss(l);
      {
        if (h.prototype && typeof h.prototype.render == "function") {
          var ae = qn(h) || "Unknown";
          HR[ae] || (a("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", ae, ae), HR[ae] = !0);
        }
        l.mode & yr && Kl.recordLegacyContextWarning(l, null), Io(!0), cw.current = l, V = Gg(null, l, h, S, R, v), Z = qg(), Io(!1);
      }
      if (Cs(), l.flags |= ga, typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0) {
        var le = qn(h) || "Unknown";
        dw[le] || (a("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", le, le, le), dw[le] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof V == "object" && V !== null && typeof V.render == "function" && V.$$typeof === void 0
      ) {
        {
          var Te = qn(h) || "Unknown";
          dw[Te] || (a("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", Te, Te, Te), dw[Te] = !0);
        }
        l.tag = m, l.memoizedState = null, l.updateQueue = null;
        var xe = !1;
        return qu(h) ? (xe = !0, hx(l)) : xe = !1, l.memoizedState = V.state !== null && V.state !== void 0 ? V.state : null, q1(l), WN(l, V), jR(l, h, S, v), KR(null, l, h, !0, xe, v);
      } else {
        if (l.tag = f, l.mode & yr) {
          Xr(!0);
          try {
            V = Gg(null, l, h, S, R, v), Z = qg();
          } finally {
            Xr(!1);
          }
        }
        return ji() && Z && O1(l), Ts(null, l, V, v), YR(l, h), l.child;
      }
    }
    function YR(i, l) {
      {
        if (l && l.childContextTypes && a("%s(...): childContextTypes cannot be defined on a function component.", l.displayName || l.name || "Component"), i.ref !== null) {
          var h = "", v = Mi();
          v && (h += `

Check the render method of \`` + v + "`.");
          var S = v || "", R = i._debugSource;
          R && (S = R.fileName + ":" + R.lineNumber), WR[S] || (WR[S] = !0, a("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", h));
        }
        if (l.defaultProps !== void 0) {
          var L = qn(l) || "Unknown";
          fw[L] || (a("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", L), fw[L] = !0);
        }
        if (typeof l.getDerivedStateFromProps == "function") {
          var V = qn(l) || "Unknown";
          UR[V] || (a("%s: Function components do not support getDerivedStateFromProps.", V), UR[V] = !0);
        }
        if (typeof l.contextType == "object" && l.contextType !== null) {
          var Z = qn(l) || "Unknown";
          VR[Z] || (a("%s: Function components do not support contextType.", Z), VR[Z] = !0);
        }
      }
    }
    var XR = {
      dehydrated: null,
      treeContext: null,
      retryLane: Xn
    };
    function QR(i) {
      return {
        baseLanes: i,
        cachePool: H6(),
        transitions: null
      };
    }
    function Z6(i, l) {
      var h = null;
      return {
        baseLanes: En(i.baseLanes, l),
        cachePool: h,
        transitions: i.transitions
      };
    }
    function eq(i, l, h, v) {
      if (l !== null) {
        var S = l.memoizedState;
        if (S === null)
          return !1;
      }
      return J1(i, tw);
    }
    function tq(i, l) {
      return Gp(i.childLanes, l);
    }
    function sL(i, l, h) {
      var v = l.pendingProps;
      c9(l) && (l.flags |= Xt);
      var S = Yl.current, R = !1, L = (l.flags & Xt) !== Qt;
      if (L || eq(S, i) ? (R = !0, l.flags &= ~Xt) : (i === null || i.memoizedState !== null) && (S = b6(S, pN)), S = Hg(S), bf(l, S), i === null) {
        I1(l);
        var V = l.memoizedState;
        if (V !== null) {
          var Z = V.dehydrated;
          if (Z !== null)
            return sq(l, Z);
        }
        var ae = v.children, le = v.fallback;
        if (R) {
          var Te = nq(l, ae, le, h), xe = l.child;
          return xe.memoizedState = QR(h), l.memoizedState = XR, Te;
        } else
          return JR(l, ae);
      } else {
        var Le = i.memoizedState;
        if (Le !== null) {
          var ze = Le.dehydrated;
          if (ze !== null)
            return aq(i, l, L, v, ze, Le, h);
        }
        if (R) {
          var Ge = v.fallback, kt = v.children, nn = oq(i, l, kt, Ge, h), Yt = l.child, Wn = i.child.memoizedState;
          return Yt.memoizedState = Wn === null ? QR(h) : Z6(Wn, h), Yt.childLanes = tq(i, h), l.memoizedState = XR, nn;
        } else {
          var Fn = v.children, Pe = rq(i, l, Fn, h);
          return l.memoizedState = null, Pe;
        }
      }
    }
    function JR(i, l, h) {
      var v = i.mode, S = {
        mode: "visible",
        children: l
      }, R = ZR(S, v);
      return R.return = i, i.child = R, R;
    }
    function nq(i, l, h, v) {
      var S = i.mode, R = i.child, L = {
        mode: "hidden",
        children: l
      }, V, Z;
      return (S & kn) === Jt && R !== null ? (V = R, V.childLanes = it, V.pendingProps = L, i.mode & Zn && (V.actualDuration = 0, V.actualStartTime = -1, V.selfBaseDuration = 0, V.treeBaseDuration = 0), Z = Of(h, S, v, null)) : (V = ZR(L, S), Z = Of(h, S, v, null)), V.return = i, Z.return = i, V.sibling = Z, i.child = V, Z;
    }
    function ZR(i, l, h) {
      return a$(i, l, it, null);
    }
    function aL(i, l) {
      return Oh(i, l);
    }
    function rq(i, l, h, v) {
      var S = i.child, R = S.sibling, L = aL(S, {
        mode: "visible",
        children: h
      });
      if ((l.mode & kn) === Jt && (L.lanes = v), L.return = l, L.sibling = null, R !== null) {
        var V = l.deletions;
        V === null ? (l.deletions = [R], l.flags |= js) : V.push(R);
      }
      return l.child = L, L;
    }
    function oq(i, l, h, v, S) {
      var R = l.mode, L = i.child, V = L.sibling, Z = {
        mode: "hidden",
        children: h
      }, ae;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (R & kn) === Jt && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        l.child !== L
      ) {
        var le = l.child;
        ae = le, ae.childLanes = it, ae.pendingProps = Z, l.mode & Zn && (ae.actualDuration = 0, ae.actualStartTime = -1, ae.selfBaseDuration = L.selfBaseDuration, ae.treeBaseDuration = L.treeBaseDuration), l.deletions = null;
      } else
        ae = aL(L, Z), ae.subtreeFlags = L.subtreeFlags & vo;
      var Te;
      return V !== null ? Te = Oh(V, v) : (Te = Of(v, R, S, null), Te.flags |= Yr), Te.return = l, ae.return = l, ae.sibling = Te, l.child = ae, Te;
    }
    function rE(i, l, h, v) {
      v !== null && D1(v), jg(l, i.child, null, h);
      var S = l.pendingProps, R = S.children, L = JR(l, R);
      return L.flags |= Yr, l.memoizedState = null, L;
    }
    function iq(i, l, h, v, S) {
      var R = l.mode, L = {
        mode: "visible",
        children: h
      }, V = ZR(L, R), Z = Of(v, R, S, null);
      return Z.flags |= Yr, V.return = l, Z.return = l, V.sibling = Z, l.child = V, (l.mode & kn) !== Jt && jg(l, i.child, null, S), Z;
    }
    function sq(i, l, h) {
      return (i.mode & kn) === Jt ? (a("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), i.lanes = ln) : v1(l) ? i.lanes = Si : i.lanes = os, null;
    }
    function aq(i, l, h, v, S, R, L) {
      if (h)
        if (l.flags & wi) {
          l.flags &= ~wi;
          var Pe = FR(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
          return rE(i, l, L, Pe);
        } else {
          if (l.memoizedState !== null)
            return l.child = i.child, l.flags |= Xt, null;
          var qe = v.children, Me = v.fallback, dt = iq(i, l, qe, Me, L), Dt = l.child;
          return Dt.memoizedState = QR(L), l.memoizedState = XR, dt;
        }
      else {
        if (K3(), (l.mode & kn) === Jt)
          return rE(
            i,
            l,
            L,
            // TODO: When we delete legacy mode, we should make this error argument
            // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null
          );
        if (v1(S)) {
          var V, Z, ae;
          {
            var le = d3(S);
            V = le.digest, Z = le.message, ae = le.stack;
          }
          var Te;
          Z ? Te = new Error(Z) : Te = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
          var xe = FR(Te, V, ae);
          return rE(i, l, L, xe);
        }
        var Le = is(L, i.childLanes);
        if (Jl || Le) {
          var ze = hE();
          if (ze !== null) {
            var Ge = mb(ze, L);
            if (Ge !== Xn && Ge !== R.retryLane) {
              R.retryLane = Ge;
              var kt = Rr;
              Ks(i, Ge), fi(ze, i, Ge, kt);
            }
          }
          wk();
          var nn = FR(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
          return rE(i, l, L, nn);
        } else if (PA(S)) {
          l.flags |= Xt, l.child = i.child;
          var Yt = I8.bind(null, i);
          return f3(S, Yt), null;
        } else {
          Q3(l, S, R.treeContext);
          var Wn = v.children, Fn = JR(l, Wn);
          return Fn.flags |= es, Fn;
        }
      }
    }
    function lL(i, l, h) {
      i.lanes = En(i.lanes, l);
      var v = i.alternate;
      v !== null && (v.lanes = En(v.lanes, l)), V1(i.return, l, h);
    }
    function lq(i, l, h) {
      for (var v = l; v !== null; ) {
        if (v.tag === P) {
          var S = v.memoizedState;
          S !== null && lL(v, h, i);
        } else if (v.tag === q)
          lL(v, h, i);
        else if (v.child !== null) {
          v.child.return = v, v = v.child;
          continue;
        }
        if (v === i)
          return;
        for (; v.sibling === null; ) {
          if (v.return === null || v.return === i)
            return;
          v = v.return;
        }
        v.sibling.return = v.return, v = v.sibling;
      }
    }
    function uq(i) {
      for (var l = i, h = null; l !== null; ) {
        var v = l.alternate;
        v !== null && Nx(v) === null && (h = l), l = l.sibling;
      }
      return h;
    }
    function cq(i) {
      if (i !== void 0 && i !== "forwards" && i !== "backwards" && i !== "together" && !GR[i])
        if (GR[i] = !0, typeof i == "string")
          switch (i.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              a('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', i, i.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              a('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', i, i.toLowerCase());
              break;
            }
            default:
              a('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', i);
              break;
          }
        else
          a('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', i);
    }
    function dq(i, l) {
      i !== void 0 && !nE[i] && (i !== "collapsed" && i !== "hidden" ? (nE[i] = !0, a('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', i)) : l !== "forwards" && l !== "backwards" && (nE[i] = !0, a('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', i)));
    }
    function uL(i, l) {
      {
        var h = Rn(i), v = !h && typeof yn(i) == "function";
        if (h || v) {
          var S = h ? "array" : "iterable";
          return a("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", S, l, S), !1;
        }
      }
      return !0;
    }
    function fq(i, l) {
      if ((l === "forwards" || l === "backwards") && i !== void 0 && i !== null && i !== !1)
        if (Rn(i)) {
          for (var h = 0; h < i.length; h++)
            if (!uL(i[h], h))
              return;
        } else {
          var v = yn(i);
          if (typeof v == "function") {
            var S = v.call(i);
            if (S)
              for (var R = S.next(), L = 0; !R.done; R = S.next()) {
                if (!uL(R.value, L))
                  return;
                L++;
              }
          } else
            a('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', l);
        }
    }
    function ek(i, l, h, v, S) {
      var R = i.memoizedState;
      R === null ? i.memoizedState = {
        isBackwards: l,
        rendering: null,
        renderingStartTime: 0,
        last: v,
        tail: h,
        tailMode: S
      } : (R.isBackwards = l, R.rendering = null, R.renderingStartTime = 0, R.last = v, R.tail = h, R.tailMode = S);
    }
    function cL(i, l, h) {
      var v = l.pendingProps, S = v.revealOrder, R = v.tail, L = v.children;
      cq(S), dq(R, S), fq(L, S), Ts(i, l, L, h);
      var V = Yl.current, Z = J1(V, tw);
      if (Z)
        V = Z1(V, tw), l.flags |= Xt;
      else {
        var ae = i !== null && (i.flags & Xt) !== Qt;
        ae && lq(l, l.child, h), V = Hg(V);
      }
      if (bf(l, V), (l.mode & kn) === Jt)
        l.memoizedState = null;
      else
        switch (S) {
          case "forwards": {
            var le = uq(l.child), Te;
            le === null ? (Te = l.child, l.child = null) : (Te = le.sibling, le.sibling = null), ek(
              l,
              !1,
              // isBackwards
              Te,
              le,
              R
            );
            break;
          }
          case "backwards": {
            var xe = null, Le = l.child;
            for (l.child = null; Le !== null; ) {
              var ze = Le.alternate;
              if (ze !== null && Nx(ze) === null) {
                l.child = Le;
                break;
              }
              var Ge = Le.sibling;
              Le.sibling = xe, xe = Le, Le = Ge;
            }
            ek(
              l,
              !0,
              // isBackwards
              xe,
              null,
              // last
              R
            );
            break;
          }
          case "together": {
            ek(
              l,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0
            );
            break;
          }
          default:
            l.memoizedState = null;
        }
      return l.child;
    }
    function pq(i, l, h) {
      Y1(l, l.stateNode.containerInfo);
      var v = l.pendingProps;
      return i === null ? l.child = jg(l, null, v, h) : Ts(i, l, v, h), l.child;
    }
    var dL = !1;
    function hq(i, l, h) {
      var v = l.type, S = v._context, R = l.pendingProps, L = l.memoizedProps, V = R.value;
      {
        "value" in R || dL || (dL = !0, a("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var Z = l.type.propTypes;
        Z && Gl(Z, R, "prop", "Context.Provider");
      }
      if (rN(l, S, V), L !== null) {
        var ae = L.value;
        if (lt(ae, V)) {
          if (L.children === R.children && !fx())
            return ad(i, l, h);
        } else
          c6(l, S, h);
      }
      var le = R.children;
      return Ts(i, l, le, h), l.child;
    }
    var fL = !1;
    function mq(i, l, h) {
      var v = l.type;
      v._context === void 0 ? v !== v.Consumer && (fL || (fL = !0, a("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : v = v._context;
      var S = l.pendingProps, R = S.children;
      typeof R != "function" && a("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), zg(l, h);
      var L = Wo(v);
      Ss(l);
      var V;
      return cw.current = l, Io(!0), V = R(L), Io(!1), Cs(), l.flags |= ga, Ts(i, l, V, h), l.child;
    }
    function pw() {
      Jl = !0;
    }
    function oE(i, l) {
      (l.mode & kn) === Jt && i !== null && (i.alternate = null, l.alternate = null, l.flags |= Yr);
    }
    function ad(i, l, h) {
      return i !== null && (l.dependencies = i.dependencies), BN(), Tw(l.lanes), is(h, l.childLanes) ? (l6(i, l), l.child) : null;
    }
    function gq(i, l, h) {
      {
        var v = l.return;
        if (v === null)
          throw new Error("Cannot swap the root fiber.");
        if (i.alternate = null, l.alternate = null, h.index = l.index, h.sibling = l.sibling, h.return = l.return, h.ref = l.ref, l === v.child)
          v.child = h;
        else {
          var S = v.child;
          if (S === null)
            throw new Error("Expected parent to have a child.");
          for (; S.sibling !== l; )
            if (S = S.sibling, S === null)
              throw new Error("Expected to find the previous sibling.");
          S.sibling = h;
        }
        var R = v.deletions;
        return R === null ? (v.deletions = [i], v.flags |= js) : R.push(i), h.flags |= Yr, h;
      }
    }
    function tk(i, l) {
      var h = i.lanes;
      return !!is(h, l);
    }
    function vq(i, l, h) {
      switch (l.tag) {
        case y:
          oL(l), l.stateNode, $g();
          break;
        case C:
          dN(l);
          break;
        case m: {
          var v = l.type;
          qu(v) && hx(l);
          break;
        }
        case w:
          Y1(l, l.stateNode.containerInfo);
          break;
        case I: {
          var S = l.memoizedProps.value, R = l.type._context;
          rN(l, R, S);
          break;
        }
        case N:
          {
            var L = is(h, l.childLanes);
            L && (l.flags |= Hn);
            {
              var V = l.stateNode;
              V.effectDuration = 0, V.passiveEffectDuration = 0;
            }
          }
          break;
        case P: {
          var Z = l.memoizedState;
          if (Z !== null) {
            if (Z.dehydrated !== null)
              return bf(l, Hg(Yl.current)), l.flags |= Xt, null;
            var ae = l.child, le = ae.childLanes;
            if (is(h, le))
              return sL(i, l, h);
            bf(l, Hg(Yl.current));
            var Te = ad(i, l, h);
            return Te !== null ? Te.sibling : null;
          } else
            bf(l, Hg(Yl.current));
          break;
        }
        case q: {
          var xe = (i.flags & Xt) !== Qt, Le = is(h, l.childLanes);
          if (xe) {
            if (Le)
              return cL(i, l, h);
            l.flags |= Xt;
          }
          var ze = l.memoizedState;
          if (ze !== null && (ze.rendering = null, ze.tail = null, ze.lastEffect = null), bf(l, Yl.current), Le)
            break;
          return null;
        }
        case Y:
        case ee:
          return l.lanes = it, tL(i, l, h);
      }
      return ad(i, l, h);
    }
    function pL(i, l, h) {
      if (l._debugNeedsRemount && i !== null)
        return gq(i, l, Mk(l.type, l.key, l.pendingProps, l._debugOwner || null, l.mode, l.lanes));
      if (i !== null) {
        var v = i.memoizedProps, S = l.pendingProps;
        if (v !== S || fx() || // Force a re-render if the implementation changed due to hot reload:
        l.type !== i.type)
          Jl = !0;
        else {
          var R = tk(i, h);
          if (!R && // If this is the second pass of an error or suspense boundary, there
          // may not be work scheduled on `current`, so we check for this flag.
          (l.flags & Xt) === Qt)
            return Jl = !1, vq(i, l, h);
          (i.flags & Lm) !== Qt ? Jl = !0 : Jl = !1;
        }
      } else if (Jl = !1, ji() && H3(l)) {
        var L = l.index, V = V3();
        BA(l, V, L);
      }
      switch (l.lanes = it, l.tag) {
        case g:
          return J6(i, l, l.type, h);
        case U: {
          var Z = l.elementType;
          return X6(i, l, Z, h);
        }
        case f: {
          var ae = l.type, le = l.pendingProps, Te = l.elementType === ae ? le : Ql(ae, le);
          return qR(i, l, ae, Te, h);
        }
        case m: {
          var xe = l.type, Le = l.pendingProps, ze = l.elementType === xe ? Le : Ql(xe, Le);
          return rL(i, l, xe, ze, h);
        }
        case y:
          return q6(i, l, h);
        case C:
          return K6(i, l, h);
        case T:
          return Y6(i, l);
        case P:
          return sL(i, l, h);
        case w:
          return pq(i, l, h);
        case M: {
          var Ge = l.type, kt = l.pendingProps, nn = l.elementType === Ge ? kt : Ql(Ge, kt);
          return JN(i, l, Ge, nn, h);
        }
        case E:
          return U6(i, l, h);
        case O:
          return W6(i, l, h);
        case N:
          return G6(i, l, h);
        case I:
          return hq(i, l, h);
        case k:
          return mq(i, l, h);
        case F: {
          var Yt = l.type, Wn = l.pendingProps, Fn = Ql(Yt, Wn);
          if (l.type !== l.elementType) {
            var Pe = Yt.propTypes;
            Pe && Gl(
              Pe,
              Fn,
              // Resolved for outer only
              "prop",
              qn(Yt)
            );
          }
          return Fn = Ql(Yt.type, Fn), ZN(i, l, Yt, Fn, h);
        }
        case H:
          return eL(i, l, l.type, l.pendingProps, h);
        case z: {
          var qe = l.type, Me = l.pendingProps, dt = l.elementType === qe ? Me : Ql(qe, Me);
          return Q6(i, l, qe, dt, h);
        }
        case q:
          return cL(i, l, h);
        case W:
          break;
        case Y:
          return tL(i, l, h);
      }
      throw new Error("Unknown unit of work tag (" + l.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Kg(i) {
      i.flags |= Hn;
    }
    function hL(i) {
      i.flags |= no, i.flags |= Qd;
    }
    var mL, nk, gL, vL;
    mL = function(i, l, h, v) {
      for (var S = l.child; S !== null; ) {
        if (S.tag === C || S.tag === T)
          FG(i, S.stateNode);
        else if (S.tag !== w) {
          if (S.child !== null) {
            S.child.return = S, S = S.child;
            continue;
          }
        }
        if (S === l)
          return;
        for (; S.sibling === null; ) {
          if (S.return === null || S.return === l)
            return;
          S = S.return;
        }
        S.sibling.return = S.return, S = S.sibling;
      }
    }, nk = function(i, l) {
    }, gL = function(i, l, h, v, S) {
      var R = i.memoizedProps;
      if (R !== v) {
        var L = l.stateNode, V = X1(), Z = BG(L, h, R, v, S, V);
        l.updateQueue = Z, Z && Kg(l);
      }
    }, vL = function(i, l, h, v) {
      h !== v && Kg(l);
    };
    function hw(i, l) {
      if (!ji())
        switch (i.tailMode) {
          case "hidden": {
            for (var h = i.tail, v = null; h !== null; )
              h.alternate !== null && (v = h), h = h.sibling;
            v === null ? i.tail = null : v.sibling = null;
            break;
          }
          case "collapsed": {
            for (var S = i.tail, R = null; S !== null; )
              S.alternate !== null && (R = S), S = S.sibling;
            R === null ? !l && i.tail !== null ? i.tail.sibling = null : i.tail = null : R.sibling = null;
            break;
          }
        }
    }
    function zi(i) {
      var l = i.alternate !== null && i.alternate.child === i.child, h = it, v = Qt;
      if (l) {
        if ((i.mode & Zn) !== Jt) {
          for (var Z = i.selfBaseDuration, ae = i.child; ae !== null; )
            h = En(h, En(ae.lanes, ae.childLanes)), v |= ae.subtreeFlags & vo, v |= ae.flags & vo, Z += ae.treeBaseDuration, ae = ae.sibling;
          i.treeBaseDuration = Z;
        } else
          for (var le = i.child; le !== null; )
            h = En(h, En(le.lanes, le.childLanes)), v |= le.subtreeFlags & vo, v |= le.flags & vo, le.return = i, le = le.sibling;
        i.subtreeFlags |= v;
      } else {
        if ((i.mode & Zn) !== Jt) {
          for (var S = i.actualDuration, R = i.selfBaseDuration, L = i.child; L !== null; )
            h = En(h, En(L.lanes, L.childLanes)), v |= L.subtreeFlags, v |= L.flags, S += L.actualDuration, R += L.treeBaseDuration, L = L.sibling;
          i.actualDuration = S, i.treeBaseDuration = R;
        } else
          for (var V = i.child; V !== null; )
            h = En(h, En(V.lanes, V.childLanes)), v |= V.subtreeFlags, v |= V.flags, V.return = i, V = V.sibling;
        i.subtreeFlags |= v;
      }
      return i.childLanes = h, l;
    }
    function yq(i, l, h) {
      if (n6() && (l.mode & kn) !== Jt && (l.flags & Xt) === Qt)
        return KA(l), $g(), l.flags |= wi | Pp | Bo, !1;
      var v = bx(l);
      if (h !== null && h.dehydrated !== null)
        if (i === null) {
          if (!v)
            throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
          if (e6(l), zi(l), (l.mode & Zn) !== Jt) {
            var S = h !== null;
            if (S) {
              var R = l.child;
              R !== null && (l.treeBaseDuration -= R.treeBaseDuration);
            }
          }
          return !1;
        } else {
          if ($g(), (l.flags & Xt) === Qt && (l.memoizedState = null), l.flags |= Hn, zi(l), (l.mode & Zn) !== Jt) {
            var L = h !== null;
            if (L) {
              var V = l.child;
              V !== null && (l.treeBaseDuration -= V.treeBaseDuration);
            }
          }
          return !1;
        }
      else
        return YA(), !0;
    }
    function yL(i, l, h) {
      var v = l.pendingProps;
      switch (R1(l), l.tag) {
        case g:
        case U:
        case H:
        case f:
        case M:
        case E:
        case O:
        case N:
        case k:
        case F:
          return zi(l), null;
        case m: {
          var S = l.type;
          return qu(S) && px(l), zi(l), null;
        }
        case y: {
          var R = l.stateNode;
          if (Bg(l), E1(l), tR(), R.pendingContext && (R.context = R.pendingContext, R.pendingContext = null), i === null || i.child === null) {
            var L = bx(l);
            if (L)
              Kg(l);
            else if (i !== null) {
              var V = i.memoizedState;
              // Check if this is a client root
              (!V.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (l.flags & wi) !== Qt) && (l.flags |= Do, YA());
            }
          }
          return nk(i, l), zi(l), null;
        }
        case C: {
          Q1(l);
          var Z = cN(), ae = l.type;
          if (i !== null && l.stateNode != null)
            gL(i, l, ae, v, Z), i.ref !== l.ref && hL(l);
          else {
            if (!v) {
              if (l.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return zi(l), null;
            }
            var le = X1(), Te = bx(l);
            if (Te)
              J3(l, Z, le) && Kg(l);
            else {
              var xe = jG(ae, v, Z, le, l);
              mL(xe, l, !1, !1), l.stateNode = xe, zG(xe, ae, v, Z) && Kg(l);
            }
            l.ref !== null && hL(l);
          }
          return zi(l), null;
        }
        case T: {
          var Le = v;
          if (i && l.stateNode != null) {
            var ze = i.memoizedProps;
            vL(i, l, ze, Le);
          } else {
            if (typeof Le != "string" && l.stateNode === null)
              throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Ge = cN(), kt = X1(), nn = bx(l);
            nn ? Z3(l) && Kg(l) : l.stateNode = HG(Le, Ge, kt, l);
          }
          return zi(l), null;
        }
        case P: {
          Vg(l);
          var Yt = l.memoizedState;
          if (i === null || i.memoizedState !== null && i.memoizedState.dehydrated !== null) {
            var Wn = yq(i, l, Yt);
            if (!Wn)
              return l.flags & Bo ? l : null;
          }
          if ((l.flags & Xt) !== Qt)
            return l.lanes = h, (l.mode & Zn) !== Jt && _R(l), l;
          var Fn = Yt !== null, Pe = i !== null && i.memoizedState !== null;
          if (Fn !== Pe && Fn) {
            var qe = l.child;
            if (qe.flags |= go, (l.mode & kn) !== Jt) {
              var Me = i === null && (l.memoizedProps.unstable_avoidThisFallback !== !0 || !0);
              Me || J1(Yl.current, pN) ? b8() : wk();
            }
          }
          var dt = l.updateQueue;
          if (dt !== null && (l.flags |= Hn), zi(l), (l.mode & Zn) !== Jt && Fn) {
            var Dt = l.child;
            Dt !== null && (l.treeBaseDuration -= Dt.treeBaseDuration);
          }
          return null;
        }
        case w:
          return Bg(l), nk(i, l), i === null && N3(l.stateNode.containerInfo), zi(l), null;
        case I:
          var Pt = l.type._context;
          return H1(Pt, l), zi(l), null;
        case z: {
          var fn = l.type;
          return qu(fn) && px(l), zi(l), null;
        }
        case q: {
          Vg(l);
          var Cn = l.memoizedState;
          if (Cn === null)
            return zi(l), null;
          var wr = (l.flags & Xt) !== Qt, nr = Cn.rendering;
          if (nr === null)
            if (wr)
              hw(Cn, !1);
            else {
              var Lo = S8() && (i === null || (i.flags & Xt) === Qt);
              if (!Lo)
                for (var rr = l.child; rr !== null; ) {
                  var xo = Nx(rr);
                  if (xo !== null) {
                    wr = !0, l.flags |= Xt, hw(Cn, !1);
                    var fs = xo.updateQueue;
                    return fs !== null && (l.updateQueue = fs, l.flags |= Hn), l.subtreeFlags = Qt, u6(l, h), bf(l, Z1(Yl.current, tw)), l.child;
                  }
                  rr = rr.sibling;
                }
              Cn.tail !== null && Ao() > FL() && (l.flags |= Xt, wr = !0, hw(Cn, !1), l.lanes = sb);
            }
          else {
            if (!wr) {
              var Wi = Nx(nr);
              if (Wi !== null) {
                l.flags |= Xt, wr = !0;
                var xa = Wi.updateQueue;
                if (xa !== null && (l.updateQueue = xa, l.flags |= Hn), hw(Cn, !0), Cn.tail === null && Cn.tailMode === "hidden" && !nr.alternate && !ji())
                  return zi(l), null;
              } else // The time it took to render last row is greater than the remaining
              // time we have to render. So rendering one more row would likely
              // exceed it.
              Ao() * 2 - Cn.renderingStartTime > FL() && h !== os && (l.flags |= Xt, wr = !0, hw(Cn, !1), l.lanes = sb);
            }
            if (Cn.isBackwards)
              nr.sibling = l.child, l.child = nr;
            else {
              var Rs = Cn.last;
              Rs !== null ? Rs.sibling = nr : l.child = nr, Cn.last = nr;
            }
          }
          if (Cn.tail !== null) {
            var ks = Cn.tail;
            Cn.rendering = ks, Cn.tail = ks.sibling, Cn.renderingStartTime = Ao(), ks.sibling = null;
            var ps = Yl.current;
            return wr ? ps = Z1(ps, tw) : ps = Hg(ps), bf(l, ps), ks;
          }
          return zi(l), null;
        }
        case W:
          break;
        case Y:
        case ee: {
          bk(l);
          var fd = l.memoizedState, nv = fd !== null;
          if (i !== null) {
            var Pw = i.memoizedState, tc = Pw !== null;
            tc !== nv && // LegacyHidden doesn't do any hiding — it only pre-renders.
            !Q && (l.flags |= go);
          }
          return !nv || (l.mode & kn) === Jt ? zi(l) : is(ec, os) && (zi(l), l.subtreeFlags & (Yr | Hn) && (l.flags |= go)), null;
        }
        case G:
          return null;
        case K:
          return null;
      }
      throw new Error("Unknown unit of work tag (" + l.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function bq(i, l, h) {
      switch (R1(l), l.tag) {
        case m: {
          var v = l.type;
          qu(v) && px(l);
          var S = l.flags;
          return S & Bo ? (l.flags = S & ~Bo | Xt, (l.mode & Zn) !== Jt && _R(l), l) : null;
        }
        case y: {
          l.stateNode, Bg(l), E1(l), tR();
          var R = l.flags;
          return (R & Bo) !== Qt && (R & Xt) === Qt ? (l.flags = R & ~Bo | Xt, l) : null;
        }
        case C:
          return Q1(l), null;
        case P: {
          Vg(l);
          var L = l.memoizedState;
          if (L !== null && L.dehydrated !== null) {
            if (l.alternate === null)
              throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
            $g();
          }
          var V = l.flags;
          return V & Bo ? (l.flags = V & ~Bo | Xt, (l.mode & Zn) !== Jt && _R(l), l) : null;
        }
        case q:
          return Vg(l), null;
        case w:
          return Bg(l), null;
        case I:
          var Z = l.type._context;
          return H1(Z, l), null;
        case Y:
        case ee:
          return bk(l), null;
        case G:
          return null;
        default:
          return null;
      }
    }
    function bL(i, l, h) {
      switch (R1(l), l.tag) {
        case m: {
          var v = l.type.childContextTypes;
          v != null && px(l);
          break;
        }
        case y: {
          l.stateNode, Bg(l), E1(l), tR();
          break;
        }
        case C: {
          Q1(l);
          break;
        }
        case w:
          Bg(l);
          break;
        case P:
          Vg(l);
          break;
        case q:
          Vg(l);
          break;
        case I:
          var S = l.type._context;
          H1(S, l);
          break;
        case Y:
        case ee:
          bk(l);
          break;
      }
    }
    var wL = null;
    wL = /* @__PURE__ */ new Set();
    var iE = !1, Bi = !1, wq = typeof WeakSet == "function" ? WeakSet : Set, Ut = null, Yg = null, Xg = null;
    function Sq(i) {
      ku(null, function() {
        throw i;
      }), kp();
    }
    var Cq = function(i, l) {
      if (l.props = i.memoizedProps, l.state = i.memoizedState, i.mode & Zn)
        try {
          Ju(), l.componentWillUnmount();
        } finally {
          Qu(i);
        }
      else
        l.componentWillUnmount();
    };
    function SL(i, l) {
      try {
        Cf(si, i);
      } catch (h) {
        Fr(i, l, h);
      }
    }
    function rk(i, l, h) {
      try {
        Cq(i, h);
      } catch (v) {
        Fr(i, l, v);
      }
    }
    function xq(i, l, h) {
      try {
        h.componentDidMount();
      } catch (v) {
        Fr(i, l, v);
      }
    }
    function CL(i, l) {
      try {
        EL(i);
      } catch (h) {
        Fr(i, l, h);
      }
    }
    function Qg(i, l) {
      var h = i.ref;
      if (h !== null)
        if (typeof h == "function") {
          var v;
          try {
            if (ue && he && i.mode & Zn)
              try {
                Ju(), v = h(null);
              } finally {
                Qu(i);
              }
            else
              v = h(null);
          } catch (S) {
            Fr(i, l, S);
          }
          typeof v == "function" && a("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", gn(i));
        } else
          h.current = null;
    }
    function sE(i, l, h) {
      try {
        h();
      } catch (v) {
        Fr(i, l, v);
      }
    }
    var xL = !1;
    function Eq(i, l) {
      LG(i.containerInfo), Ut = l, Tq();
      var h = xL;
      return xL = !1, h;
    }
    function Tq() {
      for (; Ut !== null; ) {
        var i = Ut, l = i.child;
        (i.subtreeFlags & Mu) !== Qt && l !== null ? (l.return = i, Ut = l) : _q();
      }
    }
    function _q() {
      for (; Ut !== null; ) {
        var i = Ut;
        mr(i);
        try {
          Oq(i);
        } catch (h) {
          Fr(i, i.return, h);
        }
        jr();
        var l = i.sibling;
        if (l !== null) {
          l.return = i.return, Ut = l;
          return;
        }
        Ut = i.return;
      }
    }
    function Oq(i) {
      var l = i.alternate, h = i.flags;
      if ((h & Do) !== Qt) {
        switch (mr(i), i.tag) {
          case f:
          case M:
          case H:
            break;
          case m: {
            if (l !== null) {
              var v = l.memoizedProps, S = l.memoizedState, R = i.stateNode;
              i.type === i.elementType && !Ch && (R.props !== i.memoizedProps && a("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", gn(i) || "instance"), R.state !== i.memoizedState && a("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", gn(i) || "instance"));
              var L = R.getSnapshotBeforeUpdate(i.elementType === i.type ? v : Ql(i.type, v), S);
              {
                var V = wL;
                L === void 0 && !V.has(i.type) && (V.add(i.type), a("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", gn(i)));
              }
              R.__reactInternalSnapshotBeforeUpdate = L;
            }
            break;
          }
          case y: {
            {
              var Z = i.stateNode;
              a3(Z.containerInfo);
            }
            break;
          }
          case C:
          case T:
          case w:
          case z:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        jr();
      }
    }
    function Zl(i, l, h) {
      var v = l.updateQueue, S = v !== null ? v.lastEffect : null;
      if (S !== null) {
        var R = S.next, L = R;
        do {
          if ((L.tag & i) === i) {
            var V = L.destroy;
            L.destroy = void 0, V !== void 0 && ((i & Fi) !== Ys ? zl(l) : (i & si) !== Ys && Ip(l), (i & Ku) !== Ys && Ow(!0), sE(l, h, V), (i & Ku) !== Ys && Ow(!1), (i & Fi) !== Ys ? Nu() : (i & si) !== Ys && ob());
          }
          L = L.next;
        } while (L !== R);
      }
    }
    function Cf(i, l) {
      var h = l.updateQueue, v = h !== null ? h.lastEffect : null;
      if (v !== null) {
        var S = v.next, R = S;
        do {
          if ((R.tag & i) === i) {
            (i & Fi) !== Ys ? rb(l) : (i & si) !== Ys && Hm(l);
            var L = R.create;
            (i & Ku) !== Ys && Ow(!0), R.destroy = L(), (i & Ku) !== Ys && Ow(!1), (i & Fi) !== Ys ? d0() : (i & si) !== Ys && f0();
            {
              var V = R.destroy;
              if (V !== void 0 && typeof V != "function") {
                var Z = void 0;
                (R.tag & si) !== Qt ? Z = "useLayoutEffect" : (R.tag & Ku) !== Qt ? Z = "useInsertionEffect" : Z = "useEffect";
                var ae = void 0;
                V === null ? ae = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof V.then == "function" ? ae = `

It looks like you wrote ` + Z + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + Z + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : ae = " You returned: " + V, a("%s must not return anything besides a function, which is used for clean-up.%s", Z, ae);
              }
            }
          }
          R = R.next;
        } while (R !== S);
      }
    }
    function Rq(i, l) {
      if ((l.flags & Hn) !== Qt)
        switch (l.tag) {
          case N: {
            var h = l.stateNode.passiveEffectDuration, v = l.memoizedProps, S = v.id, R = v.onPostCommit, L = FN(), V = l.alternate === null ? "mount" : "update";
            jN() && (V = "nested-update"), typeof R == "function" && R(S, V, h, L);
            var Z = l.return;
            e: for (; Z !== null; ) {
              switch (Z.tag) {
                case y:
                  var ae = Z.stateNode;
                  ae.passiveEffectDuration += h;
                  break e;
                case N:
                  var le = Z.stateNode;
                  le.passiveEffectDuration += h;
                  break e;
              }
              Z = Z.return;
            }
            break;
          }
        }
    }
    function kq(i, l, h, v) {
      if ((h.flags & Du) !== Qt)
        switch (h.tag) {
          case f:
          case M:
          case H: {
            if (!Bi)
              if (h.mode & Zn)
                try {
                  Ju(), Cf(si | ii, h);
                } finally {
                  Qu(h);
                }
              else
                Cf(si | ii, h);
            break;
          }
          case m: {
            var S = h.stateNode;
            if (h.flags & Hn && !Bi)
              if (l === null)
                if (h.type === h.elementType && !Ch && (S.props !== h.memoizedProps && a("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", gn(h) || "instance"), S.state !== h.memoizedState && a("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", gn(h) || "instance")), h.mode & Zn)
                  try {
                    Ju(), S.componentDidMount();
                  } finally {
                    Qu(h);
                  }
                else
                  S.componentDidMount();
              else {
                var R = h.elementType === h.type ? l.memoizedProps : Ql(h.type, l.memoizedProps), L = l.memoizedState;
                if (h.type === h.elementType && !Ch && (S.props !== h.memoizedProps && a("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", gn(h) || "instance"), S.state !== h.memoizedState && a("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", gn(h) || "instance")), h.mode & Zn)
                  try {
                    Ju(), S.componentDidUpdate(R, L, S.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    Qu(h);
                  }
                else
                  S.componentDidUpdate(R, L, S.__reactInternalSnapshotBeforeUpdate);
              }
            var V = h.updateQueue;
            V !== null && (h.type === h.elementType && !Ch && (S.props !== h.memoizedProps && a("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", gn(h) || "instance"), S.state !== h.memoizedState && a("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", gn(h) || "instance")), uN(h, V, S));
            break;
          }
          case y: {
            var Z = h.updateQueue;
            if (Z !== null) {
              var ae = null;
              if (h.child !== null)
                switch (h.child.tag) {
                  case C:
                    ae = h.child.stateNode;
                    break;
                  case m:
                    ae = h.child.stateNode;
                    break;
                }
              uN(h, Z, ae);
            }
            break;
          }
          case C: {
            var le = h.stateNode;
            if (l === null && h.flags & Hn) {
              var Te = h.type, xe = h.memoizedProps;
              qG(le, Te, xe);
            }
            break;
          }
          case T:
            break;
          case w:
            break;
          case N: {
            {
              var Le = h.memoizedProps, ze = Le.onCommit, Ge = Le.onRender, kt = h.stateNode.effectDuration, nn = FN(), Yt = l === null ? "mount" : "update";
              jN() && (Yt = "nested-update"), typeof Ge == "function" && Ge(h.memoizedProps.id, Yt, h.actualDuration, h.treeBaseDuration, h.actualStartTime, nn);
              {
                typeof ze == "function" && ze(h.memoizedProps.id, Yt, kt, nn), _8(h);
                var Wn = h.return;
                e: for (; Wn !== null; ) {
                  switch (Wn.tag) {
                    case y:
                      var Fn = Wn.stateNode;
                      Fn.effectDuration += kt;
                      break e;
                    case N:
                      var Pe = Wn.stateNode;
                      Pe.effectDuration += kt;
                      break e;
                  }
                  Wn = Wn.return;
                }
              }
            }
            break;
          }
          case P: {
            $q(i, h);
            break;
          }
          case q:
          case z:
          case W:
          case Y:
          case ee:
          case K:
            break;
          default:
            throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      Bi || h.flags & no && EL(h);
    }
    function Pq(i) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          if (i.mode & Zn)
            try {
              Ju(), SL(i, i.return);
            } finally {
              Qu(i);
            }
          else
            SL(i, i.return);
          break;
        }
        case m: {
          var l = i.stateNode;
          typeof l.componentDidMount == "function" && xq(i, i.return, l), CL(i, i.return);
          break;
        }
        case C: {
          CL(i, i.return);
          break;
        }
      }
    }
    function Mq(i, l) {
      for (var h = null, v = i; ; ) {
        if (v.tag === C) {
          if (h === null) {
            h = v;
            try {
              var S = v.stateNode;
              l ? r3(S) : i3(v.stateNode, v.memoizedProps);
            } catch (L) {
              Fr(i, i.return, L);
            }
          }
        } else if (v.tag === T) {
          if (h === null)
            try {
              var R = v.stateNode;
              l ? o3(R) : s3(R, v.memoizedProps);
            } catch (L) {
              Fr(i, i.return, L);
            }
        } else if (!((v.tag === Y || v.tag === ee) && v.memoizedState !== null && v !== i)) {
          if (v.child !== null) {
            v.child.return = v, v = v.child;
            continue;
          }
        }
        if (v === i)
          return;
        for (; v.sibling === null; ) {
          if (v.return === null || v.return === i)
            return;
          h === v && (h = null), v = v.return;
        }
        h === v && (h = null), v.sibling.return = v.return, v = v.sibling;
      }
    }
    function EL(i) {
      var l = i.ref;
      if (l !== null) {
        var h = i.stateNode, v;
        switch (i.tag) {
          case C:
            v = h;
            break;
          default:
            v = h;
        }
        if (typeof l == "function") {
          var S;
          if (i.mode & Zn)
            try {
              Ju(), S = l(v);
            } finally {
              Qu(i);
            }
          else
            S = l(v);
          typeof S == "function" && a("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", gn(i));
        } else
          l.hasOwnProperty("current") || a("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", gn(i)), l.current = v;
      }
    }
    function Iq(i) {
      var l = i.alternate;
      l !== null && (l.return = null), i.return = null;
    }
    function TL(i) {
      var l = i.alternate;
      l !== null && (i.alternate = null, TL(l));
      {
        if (i.child = null, i.deletions = null, i.sibling = null, i.tag === C) {
          var h = i.stateNode;
          h !== null && j3(h);
        }
        i.stateNode = null, i._debugOwner = null, i.return = null, i.dependencies = null, i.memoizedProps = null, i.memoizedState = null, i.pendingProps = null, i.stateNode = null, i.updateQueue = null;
      }
    }
    function Dq(i) {
      for (var l = i.return; l !== null; ) {
        if (_L(l))
          return l;
        l = l.return;
      }
      throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function _L(i) {
      return i.tag === C || i.tag === y || i.tag === w;
    }
    function OL(i) {
      var l = i;
      e: for (; ; ) {
        for (; l.sibling === null; ) {
          if (l.return === null || _L(l.return))
            return null;
          l = l.return;
        }
        for (l.sibling.return = l.return, l = l.sibling; l.tag !== C && l.tag !== T && l.tag !== A; ) {
          if (l.flags & Yr || l.child === null || l.tag === w)
            continue e;
          l.child.return = l, l = l.child;
        }
        if (!(l.flags & Yr))
          return l.stateNode;
      }
    }
    function Aq(i) {
      var l = Dq(i);
      switch (l.tag) {
        case C: {
          var h = l.stateNode;
          l.flags & Fs && (kA(h), l.flags &= ~Fs);
          var v = OL(i);
          ik(i, v, h);
          break;
        }
        case y:
        case w: {
          var S = l.stateNode.containerInfo, R = OL(i);
          ok(i, R, S);
          break;
        }
        default:
          throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    function ok(i, l, h) {
      var v = i.tag, S = v === C || v === T;
      if (S) {
        var R = i.stateNode;
        l ? ZG(h, R, l) : QG(h, R);
      } else if (v !== w) {
        var L = i.child;
        if (L !== null) {
          ok(L, l, h);
          for (var V = L.sibling; V !== null; )
            ok(V, l, h), V = V.sibling;
        }
      }
    }
    function ik(i, l, h) {
      var v = i.tag, S = v === C || v === T;
      if (S) {
        var R = i.stateNode;
        l ? JG(h, R, l) : XG(h, R);
      } else if (v !== w) {
        var L = i.child;
        if (L !== null) {
          ik(L, l, h);
          for (var V = L.sibling; V !== null; )
            ik(V, l, h), V = V.sibling;
        }
      }
    }
    var Hi = null, eu = !1;
    function Nq(i, l, h) {
      {
        var v = l;
        e: for (; v !== null; ) {
          switch (v.tag) {
            case C: {
              Hi = v.stateNode, eu = !1;
              break e;
            }
            case y: {
              Hi = v.stateNode.containerInfo, eu = !0;
              break e;
            }
            case w: {
              Hi = v.stateNode.containerInfo, eu = !0;
              break e;
            }
          }
          v = v.return;
        }
        if (Hi === null)
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        RL(i, l, h), Hi = null, eu = !1;
      }
      Iq(h);
    }
    function xf(i, l, h) {
      for (var v = h.child; v !== null; )
        RL(i, l, v), v = v.sibling;
    }
    function RL(i, l, h) {
      switch (eb(h), h.tag) {
        case C:
          Bi || Qg(h, l);
        case T: {
          {
            var v = Hi, S = eu;
            Hi = null, xf(i, l, h), Hi = v, eu = S, Hi !== null && (eu ? t3(Hi, h.stateNode) : e3(Hi, h.stateNode));
          }
          return;
        }
        case A: {
          Hi !== null && (eu ? n3(Hi, h.stateNode) : g1(Hi, h.stateNode));
          return;
        }
        case w: {
          {
            var R = Hi, L = eu;
            Hi = h.stateNode.containerInfo, eu = !0, xf(i, l, h), Hi = R, eu = L;
          }
          return;
        }
        case f:
        case M:
        case F:
        case H: {
          if (!Bi) {
            var V = h.updateQueue;
            if (V !== null) {
              var Z = V.lastEffect;
              if (Z !== null) {
                var ae = Z.next, le = ae;
                do {
                  var Te = le, xe = Te.destroy, Le = Te.tag;
                  xe !== void 0 && ((Le & Ku) !== Ys ? sE(h, l, xe) : (Le & si) !== Ys && (Ip(h), h.mode & Zn ? (Ju(), sE(h, l, xe), Qu(h)) : sE(h, l, xe), ob())), le = le.next;
                } while (le !== ae);
              }
            }
          }
          xf(i, l, h);
          return;
        }
        case m: {
          if (!Bi) {
            Qg(h, l);
            var ze = h.stateNode;
            typeof ze.componentWillUnmount == "function" && rk(h, l, ze);
          }
          xf(i, l, h);
          return;
        }
        case W: {
          xf(i, l, h);
          return;
        }
        case Y: {
          if (
            // TODO: Remove this dead flag
            h.mode & kn
          ) {
            var Ge = Bi;
            Bi = Ge || h.memoizedState !== null, xf(i, l, h), Bi = Ge;
          } else
            xf(i, l, h);
          break;
        }
        default: {
          xf(i, l, h);
          return;
        }
      }
    }
    function Lq(i) {
      i.memoizedState;
    }
    function $q(i, l) {
      var h = l.memoizedState;
      if (h === null) {
        var v = l.alternate;
        if (v !== null) {
          var S = v.memoizedState;
          if (S !== null) {
            var R = S.dehydrated;
            R !== null && S3(R);
          }
        }
      }
    }
    function kL(i) {
      var l = i.updateQueue;
      if (l !== null) {
        i.updateQueue = null;
        var h = i.stateNode;
        h === null && (h = i.stateNode = new wq()), l.forEach(function(v) {
          var S = D8.bind(null, i, v);
          if (!h.has(v)) {
            if (h.add(v), rs)
              if (Yg !== null && Xg !== null)
                _w(Xg, Yg);
              else
                throw Error("Expected finished root and lanes to be set. This is a bug in React.");
            v.then(S, S);
          }
        });
      }
    }
    function jq(i, l, h) {
      Yg = h, Xg = i, mr(l), PL(l, i), mr(l), Yg = null, Xg = null;
    }
    function tu(i, l, h) {
      var v = l.deletions;
      if (v !== null)
        for (var S = 0; S < v.length; S++) {
          var R = v[S];
          try {
            Nq(i, l, R);
          } catch (Z) {
            Fr(R, l, Z);
          }
        }
      var L = Cu();
      if (l.subtreeFlags & Iu)
        for (var V = l.child; V !== null; )
          mr(V), PL(V, i), V = V.sibling;
      mr(L);
    }
    function PL(i, l, h) {
      var v = i.alternate, S = i.flags;
      switch (i.tag) {
        case f:
        case M:
        case F:
        case H: {
          if (tu(l, i), Zu(i), S & Hn) {
            try {
              Zl(Ku | ii, i, i.return), Cf(Ku | ii, i);
            } catch (fn) {
              Fr(i, i.return, fn);
            }
            if (i.mode & Zn) {
              try {
                Ju(), Zl(si | ii, i, i.return);
              } catch (fn) {
                Fr(i, i.return, fn);
              }
              Qu(i);
            } else
              try {
                Zl(si | ii, i, i.return);
              } catch (fn) {
                Fr(i, i.return, fn);
              }
          }
          return;
        }
        case m: {
          tu(l, i), Zu(i), S & no && v !== null && Qg(v, v.return);
          return;
        }
        case C: {
          tu(l, i), Zu(i), S & no && v !== null && Qg(v, v.return);
          {
            if (i.flags & Fs) {
              var R = i.stateNode;
              try {
                kA(R);
              } catch (fn) {
                Fr(i, i.return, fn);
              }
            }
            if (S & Hn) {
              var L = i.stateNode;
              if (L != null) {
                var V = i.memoizedProps, Z = v !== null ? v.memoizedProps : V, ae = i.type, le = i.updateQueue;
                if (i.updateQueue = null, le !== null)
                  try {
                    KG(L, le, ae, Z, V, i);
                  } catch (fn) {
                    Fr(i, i.return, fn);
                  }
              }
            }
          }
          return;
        }
        case T: {
          if (tu(l, i), Zu(i), S & Hn) {
            if (i.stateNode === null)
              throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
            var Te = i.stateNode, xe = i.memoizedProps, Le = v !== null ? v.memoizedProps : xe;
            try {
              YG(Te, Le, xe);
            } catch (fn) {
              Fr(i, i.return, fn);
            }
          }
          return;
        }
        case y: {
          if (tu(l, i), Zu(i), S & Hn && v !== null) {
            var ze = v.memoizedState;
            if (ze.isDehydrated)
              try {
                w3(l.containerInfo);
              } catch (fn) {
                Fr(i, i.return, fn);
              }
          }
          return;
        }
        case w: {
          tu(l, i), Zu(i);
          return;
        }
        case P: {
          tu(l, i), Zu(i);
          var Ge = i.child;
          if (Ge.flags & go) {
            var kt = Ge.stateNode, nn = Ge.memoizedState, Yt = nn !== null;
            if (kt.isHidden = Yt, Yt) {
              var Wn = Ge.alternate !== null && Ge.alternate.memoizedState !== null;
              Wn || y8();
            }
          }
          if (S & Hn) {
            try {
              Lq(i);
            } catch (fn) {
              Fr(i, i.return, fn);
            }
            kL(i);
          }
          return;
        }
        case Y: {
          var Fn = v !== null && v.memoizedState !== null;
          if (
            // TODO: Remove this dead flag
            i.mode & kn
          ) {
            var Pe = Bi;
            Bi = Pe || Fn, tu(l, i), Bi = Pe;
          } else
            tu(l, i);
          if (Zu(i), S & go) {
            var qe = i.stateNode, Me = i.memoizedState, dt = Me !== null, Dt = i;
            if (qe.isHidden = dt, dt && !Fn && (Dt.mode & kn) !== Jt) {
              Ut = Dt;
              for (var Pt = Dt.child; Pt !== null; )
                Ut = Pt, zq(Pt), Pt = Pt.sibling;
            }
            Mq(Dt, dt);
          }
          return;
        }
        case q: {
          tu(l, i), Zu(i), S & Hn && kL(i);
          return;
        }
        case W:
          return;
        default: {
          tu(l, i), Zu(i);
          return;
        }
      }
    }
    function Zu(i) {
      var l = i.flags;
      if (l & Yr) {
        try {
          Aq(i);
        } catch (h) {
          Fr(i, i.return, h);
        }
        i.flags &= ~Yr;
      }
      l & es && (i.flags &= ~es);
    }
    function Fq(i, l, h) {
      Yg = h, Xg = l, Ut = i, ML(i, l, h), Yg = null, Xg = null;
    }
    function ML(i, l, h) {
      for (var v = (i.mode & kn) !== Jt; Ut !== null; ) {
        var S = Ut, R = S.child;
        if (S.tag === Y && v) {
          var L = S.memoizedState !== null, V = L || iE;
          if (V) {
            sk(i, l, h);
            continue;
          } else {
            var Z = S.alternate, ae = Z !== null && Z.memoizedState !== null, le = ae || Bi, Te = iE, xe = Bi;
            iE = V, Bi = le, Bi && !xe && (Ut = S, Bq(S));
            for (var Le = R; Le !== null; )
              Ut = Le, ML(
                Le,
                // New root; bubble back up to here and stop.
                l,
                h
              ), Le = Le.sibling;
            Ut = S, iE = Te, Bi = xe, sk(i, l, h);
            continue;
          }
        }
        (S.subtreeFlags & Du) !== Qt && R !== null ? (R.return = S, Ut = R) : sk(i, l, h);
      }
    }
    function sk(i, l, h) {
      for (; Ut !== null; ) {
        var v = Ut;
        if ((v.flags & Du) !== Qt) {
          var S = v.alternate;
          mr(v);
          try {
            kq(l, S, v, h);
          } catch (L) {
            Fr(v, v.return, L);
          }
          jr();
        }
        if (v === i) {
          Ut = null;
          return;
        }
        var R = v.sibling;
        if (R !== null) {
          R.return = v.return, Ut = R;
          return;
        }
        Ut = v.return;
      }
    }
    function zq(i) {
      for (; Ut !== null; ) {
        var l = Ut, h = l.child;
        switch (l.tag) {
          case f:
          case M:
          case F:
          case H: {
            if (l.mode & Zn)
              try {
                Ju(), Zl(si, l, l.return);
              } finally {
                Qu(l);
              }
            else
              Zl(si, l, l.return);
            break;
          }
          case m: {
            Qg(l, l.return);
            var v = l.stateNode;
            typeof v.componentWillUnmount == "function" && rk(l, l.return, v);
            break;
          }
          case C: {
            Qg(l, l.return);
            break;
          }
          case Y: {
            var S = l.memoizedState !== null;
            if (S) {
              IL(i);
              continue;
            }
            break;
          }
        }
        h !== null ? (h.return = l, Ut = h) : IL(i);
      }
    }
    function IL(i) {
      for (; Ut !== null; ) {
        var l = Ut;
        if (l === i) {
          Ut = null;
          return;
        }
        var h = l.sibling;
        if (h !== null) {
          h.return = l.return, Ut = h;
          return;
        }
        Ut = l.return;
      }
    }
    function Bq(i) {
      for (; Ut !== null; ) {
        var l = Ut, h = l.child;
        if (l.tag === Y) {
          var v = l.memoizedState !== null;
          if (v) {
            DL(i);
            continue;
          }
        }
        h !== null ? (h.return = l, Ut = h) : DL(i);
      }
    }
    function DL(i) {
      for (; Ut !== null; ) {
        var l = Ut;
        mr(l);
        try {
          Pq(l);
        } catch (v) {
          Fr(l, l.return, v);
        }
        if (jr(), l === i) {
          Ut = null;
          return;
        }
        var h = l.sibling;
        if (h !== null) {
          h.return = l.return, Ut = h;
          return;
        }
        Ut = l.return;
      }
    }
    function Hq(i, l, h, v) {
      Ut = l, Vq(l, i, h, v);
    }
    function Vq(i, l, h, v) {
      for (; Ut !== null; ) {
        var S = Ut, R = S.child;
        (S.subtreeFlags & jl) !== Qt && R !== null ? (R.return = S, Ut = R) : Uq(i, l, h, v);
      }
    }
    function Uq(i, l, h, v) {
      for (; Ut !== null; ) {
        var S = Ut;
        if ((S.flags & Zi) !== Qt) {
          mr(S);
          try {
            Wq(l, S, h, v);
          } catch (L) {
            Fr(S, S.return, L);
          }
          jr();
        }
        if (S === i) {
          Ut = null;
          return;
        }
        var R = S.sibling;
        if (R !== null) {
          R.return = S.return, Ut = R;
          return;
        }
        Ut = S.return;
      }
    }
    function Wq(i, l, h, v) {
      switch (l.tag) {
        case f:
        case M:
        case H: {
          if (l.mode & Zn) {
            TR();
            try {
              Cf(Fi | ii, l);
            } finally {
              ER(l);
            }
          } else
            Cf(Fi | ii, l);
          break;
        }
      }
    }
    function Gq(i) {
      Ut = i, qq();
    }
    function qq() {
      for (; Ut !== null; ) {
        var i = Ut, l = i.child;
        if ((Ut.flags & js) !== Qt) {
          var h = i.deletions;
          if (h !== null) {
            for (var v = 0; v < h.length; v++) {
              var S = h[v];
              Ut = S, Xq(S, i);
            }
            {
              var R = i.alternate;
              if (R !== null) {
                var L = R.child;
                if (L !== null) {
                  R.child = null;
                  do {
                    var V = L.sibling;
                    L.sibling = null, L = V;
                  } while (L !== null);
                }
              }
            }
            Ut = i;
          }
        }
        (i.subtreeFlags & jl) !== Qt && l !== null ? (l.return = i, Ut = l) : Kq();
      }
    }
    function Kq() {
      for (; Ut !== null; ) {
        var i = Ut;
        (i.flags & Zi) !== Qt && (mr(i), Yq(i), jr());
        var l = i.sibling;
        if (l !== null) {
          l.return = i.return, Ut = l;
          return;
        }
        Ut = i.return;
      }
    }
    function Yq(i) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          i.mode & Zn ? (TR(), Zl(Fi | ii, i, i.return), ER(i)) : Zl(Fi | ii, i, i.return);
          break;
        }
      }
    }
    function Xq(i, l) {
      for (; Ut !== null; ) {
        var h = Ut;
        mr(h), Jq(h, l), jr();
        var v = h.child;
        v !== null ? (v.return = h, Ut = v) : Qq(i);
      }
    }
    function Qq(i) {
      for (; Ut !== null; ) {
        var l = Ut, h = l.sibling, v = l.return;
        if (TL(l), l === i) {
          Ut = null;
          return;
        }
        if (h !== null) {
          h.return = v, Ut = h;
          return;
        }
        Ut = v;
      }
    }
    function Jq(i, l) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          i.mode & Zn ? (TR(), Zl(Fi, i, l), ER(i)) : Zl(Fi, i, l);
          break;
        }
      }
    }
    function Zq(i) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          try {
            Cf(si | ii, i);
          } catch (h) {
            Fr(i, i.return, h);
          }
          break;
        }
        case m: {
          var l = i.stateNode;
          try {
            l.componentDidMount();
          } catch (h) {
            Fr(i, i.return, h);
          }
          break;
        }
      }
    }
    function e8(i) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          try {
            Cf(Fi | ii, i);
          } catch (l) {
            Fr(i, i.return, l);
          }
          break;
        }
      }
    }
    function t8(i) {
      switch (i.tag) {
        case f:
        case M:
        case H: {
          try {
            Zl(si | ii, i, i.return);
          } catch (h) {
            Fr(i, i.return, h);
          }
          break;
        }
        case m: {
          var l = i.stateNode;
          typeof l.componentWillUnmount == "function" && rk(i, i.return, l);
          break;
        }
      }
    }
    function n8(i) {
      switch (i.tag) {
        case f:
        case M:
        case H:
          try {
            Zl(Fi | ii, i, i.return);
          } catch (l) {
            Fr(i, i.return, l);
          }
      }
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var mw = Symbol.for;
      mw("selector.component"), mw("selector.has_pseudo_class"), mw("selector.role"), mw("selector.test_id"), mw("selector.text");
    }
    var r8 = [];
    function o8() {
      r8.forEach(function(i) {
        return i();
      });
    }
    var i8 = n.ReactCurrentActQueue;
    function s8(i) {
      {
        var l = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        ), h = typeof jest < "u";
        return h && l !== !1;
      }
    }
    function AL() {
      {
        var i = (
          // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
          typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
        );
        return !i && i8.current !== null && a("The current testing environment is not configured to support act(...)"), i;
      }
    }
    var a8 = Math.ceil, ak = n.ReactCurrentDispatcher, lk = n.ReactCurrentOwner, Vi = n.ReactCurrentBatchConfig, nu = n.ReactCurrentActQueue, ui = (
      /*             */
      0
    ), NL = (
      /*               */
      1
    ), Ui = (
      /*                */
      2
    ), sl = (
      /*                */
      4
    ), ld = 0, gw = 1, xh = 2, aE = 3, vw = 4, LL = 5, uk = 6, Un = ui, _s = null, co = null, ci = it, ec = it, ck = pf(it), di = ld, yw = null, lE = it, bw = it, uE = it, ww = null, Xs = null, dk = 0, $L = 500, jL = 1 / 0, l8 = 500, ud = null;
    function Sw() {
      jL = Ao() + l8;
    }
    function FL() {
      return jL;
    }
    var cE = !1, fk = null, Jg = null, Eh = !1, Ef = null, Cw = it, pk = [], hk = null, u8 = 50, xw = 0, mk = null, gk = !1, dE = !1, c8 = 50, Zg = 0, fE = null, Ew = Rr, pE = it, zL = !1;
    function hE() {
      return _s;
    }
    function Os() {
      return (Un & (Ui | sl)) !== ui ? Ao() : (Ew !== Rr || (Ew = Ao()), Ew);
    }
    function Tf(i) {
      var l = i.mode;
      if ((l & kn) === Jt)
        return ln;
      if ((Un & Ui) !== ui && ci !== it)
        return Wp(ci);
      var h = i6() !== o6;
      if (h) {
        if (Vi.transition !== null) {
          var v = Vi.transition;
          v._updatedFibers || (v._updatedFibers = /* @__PURE__ */ new Set()), v._updatedFibers.add(i);
        }
        return pE === Xn && (pE = fb()), pE;
      }
      var S = Ws();
      if (S !== Xn)
        return S;
      var R = VG();
      return R;
    }
    function d8(i) {
      var l = i.mode;
      return (l & kn) === Jt ? ln : y0();
    }
    function fi(i, l, h, v) {
      N8(), zL && a("useInsertionEffect must not schedule updates."), gk && (dE = !0), tf(i, h, v), (Un & Ui) !== it && i === _s ? j8(l) : (rs && Kp(i, l, h), F8(l), i === _s && ((Un & Ui) === ui && (bw = En(bw, h)), di === vw && _f(i, ci)), Qs(i, v), h === ln && Un === ui && (l.mode & kn) === Jt && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
      !nu.isBatchingLegacy && (Sw(), zA()));
    }
    function f8(i, l, h) {
      var v = i.current;
      v.lanes = l, tf(i, l, h), Qs(i, h);
    }
    function p8(i) {
      return (
        // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
        // decided not to enable it.
        (Un & Ui) !== ui
      );
    }
    function Qs(i, l) {
      var h = i.callbackNode;
      lg(i, l);
      var v = ag(i, i === _s ? ci : it);
      if (v === it) {
        h !== null && n$(h), i.callbackNode = null, i.callbackPriority = Xn;
        return;
      }
      var S = ju(v), R = i.callbackPriority;
      if (R === S && // Special case related to `act`. If the currently scheduled task is a
      // Scheduler task, rather than an `act` task, cancel it and re-scheduled
      // on the `act` queue.
      !(nu.current !== null && h !== xk)) {
        h == null && R !== ln && a("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
        return;
      }
      h != null && n$(h);
      var L;
      if (S === ln)
        i.tag === hf ? (nu.isBatchingLegacy !== null && (nu.didScheduleLegacyUpdate = !0), B3(VL.bind(null, i))) : FA(VL.bind(null, i)), nu.current !== null ? nu.current.push(mf) : WG(function() {
          (Un & (Ui | sl)) === ui && mf();
        }), L = null;
      else {
        var V;
        switch (T0(v)) {
          case Di:
            V = Mp;
            break;
          case Xa:
            V = Au;
            break;
          case Vs:
            V = Fl;
            break;
          case Us:
            V = Lc;
            break;
          default:
            V = Fl;
            break;
        }
        L = Ek(V, BL.bind(null, i));
      }
      i.callbackPriority = S, i.callbackNode = L;
    }
    function BL(i, l) {
      if (M6(), Ew = Rr, pE = it, (Un & (Ui | sl)) !== ui)
        throw new Error("Should not already be working.");
      var h = i.callbackNode, v = dd();
      if (v && i.callbackNode !== h)
        return null;
      var S = ag(i, i === _s ? ci : it);
      if (S === it)
        return null;
      var R = !cg(i, S) && !v0(i, S) && !l, L = R ? x8(i, S) : gE(i, S);
      if (L !== ld) {
        if (L === xh) {
          var V = ug(i);
          V !== it && (S = V, L = vk(i, V));
        }
        if (L === gw) {
          var Z = yw;
          throw Th(i, it), _f(i, S), Qs(i, Ao()), Z;
        }
        if (L === uk)
          _f(i, S);
        else {
          var ae = !cg(i, S), le = i.current.alternate;
          if (ae && !m8(le)) {
            if (L = gE(i, S), L === xh) {
              var Te = ug(i);
              Te !== it && (S = Te, L = vk(i, Te));
            }
            if (L === gw) {
              var xe = yw;
              throw Th(i, it), _f(i, S), Qs(i, Ao()), xe;
            }
          }
          i.finishedWork = le, i.finishedLanes = S, h8(i, L, S);
        }
      }
      return Qs(i, Ao()), i.callbackNode === h ? BL.bind(null, i) : null;
    }
    function vk(i, l) {
      var h = ww;
      if (pg(i)) {
        var v = Th(i, l);
        v.flags |= wi, A3(i.containerInfo);
      }
      var S = gE(i, l);
      if (S !== xh) {
        var R = Xs;
        Xs = h, R !== null && HL(R);
      }
      return S;
    }
    function HL(i) {
      Xs === null ? Xs = i : Xs.push.apply(Xs, i);
    }
    function h8(i, l, h) {
      switch (l) {
        case ld:
        case gw:
          throw new Error("Root did not complete. This is a bug in React.");
        case xh: {
          _h(i, Xs, ud);
          break;
        }
        case aE: {
          if (_f(i, h), qc(h) && // do not delay if we're inside an act() scope
          !r$()) {
            var v = dk + $L - Ao();
            if (v > 10) {
              var S = ag(i, it);
              if (S !== it)
                break;
              var R = i.suspendedLanes;
              if (!Kc(R, h)) {
                Os(), dg(i, R);
                break;
              }
              i.timeoutHandle = h1(_h.bind(null, i, Xs, ud), v);
              break;
            }
          }
          _h(i, Xs, ud);
          break;
        }
        case vw: {
          if (_f(i, h), cb(h))
            break;
          if (!r$()) {
            var L = ya(i, h), V = L, Z = Ao() - V, ae = A8(Z) - Z;
            if (ae > 10) {
              i.timeoutHandle = h1(_h.bind(null, i, Xs, ud), ae);
              break;
            }
          }
          _h(i, Xs, ud);
          break;
        }
        case LL: {
          _h(i, Xs, ud);
          break;
        }
        default:
          throw new Error("Unknown root exit status.");
      }
    }
    function m8(i) {
      for (var l = i; ; ) {
        if (l.flags & Xd) {
          var h = l.updateQueue;
          if (h !== null) {
            var v = h.stores;
            if (v !== null)
              for (var S = 0; S < v.length; S++) {
                var R = v[S], L = R.getSnapshot, V = R.value;
                try {
                  if (!lt(L(), V))
                    return !1;
                } catch {
                  return !1;
                }
              }
          }
        }
        var Z = l.child;
        if (l.subtreeFlags & Xd && Z !== null) {
          Z.return = l, l = Z;
          continue;
        }
        if (l === i)
          return !0;
        for (; l.sibling === null; ) {
          if (l.return === null || l.return === i)
            return !0;
          l = l.return;
        }
        l.sibling.return = l.return, l = l.sibling;
      }
      return !0;
    }
    function _f(i, l) {
      l = Gp(l, uE), l = Gp(l, bw), S0(i, l);
    }
    function VL(i) {
      if (I6(), (Un & (Ui | sl)) !== ui)
        throw new Error("Should not already be working.");
      dd();
      var l = ag(i, it);
      if (!is(l, ln))
        return Qs(i, Ao()), null;
      var h = gE(i, l);
      if (i.tag !== hf && h === xh) {
        var v = ug(i);
        v !== it && (l = v, h = vk(i, v));
      }
      if (h === gw) {
        var S = yw;
        throw Th(i, it), _f(i, l), Qs(i, Ao()), S;
      }
      if (h === uk)
        throw new Error("Root did not complete. This is a bug in React.");
      var R = i.current.alternate;
      return i.finishedWork = R, i.finishedLanes = l, _h(i, Xs, ud), Qs(i, Ao()), null;
    }
    function g8(i, l) {
      l !== it && (fg(i, En(l, ln)), Qs(i, Ao()), (Un & (Ui | sl)) === ui && (Sw(), mf()));
    }
    function yk(i, l) {
      var h = Un;
      Un |= NL;
      try {
        return i(l);
      } finally {
        Un = h, Un === ui && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !nu.isBatchingLegacy && (Sw(), zA());
      }
    }
    function v8(i, l, h, v, S) {
      var R = Ws(), L = Vi.transition;
      try {
        return Vi.transition = null, wo(Di), i(l, h, v, S);
      } finally {
        wo(R), Vi.transition = L, Un === ui && Sw();
      }
    }
    function cd(i) {
      Ef !== null && Ef.tag === hf && (Un & (Ui | sl)) === ui && dd();
      var l = Un;
      Un |= NL;
      var h = Vi.transition, v = Ws();
      try {
        return Vi.transition = null, wo(Di), i ? i() : void 0;
      } finally {
        wo(v), Vi.transition = h, Un = l, (Un & (Ui | sl)) === ui && mf();
      }
    }
    function UL() {
      return (Un & (Ui | sl)) !== ui;
    }
    function mE(i, l) {
      cs(ck, ec, i), ec = En(ec, l);
    }
    function bk(i) {
      ec = ck.current, us(ck, i);
    }
    function Th(i, l) {
      i.finishedWork = null, i.finishedLanes = it;
      var h = i.timeoutHandle;
      if (h !== m1 && (i.timeoutHandle = m1, UG(h)), co !== null)
        for (var v = co.return; v !== null; ) {
          var S = v.alternate;
          bL(S, v), v = v.return;
        }
      _s = i;
      var R = Oh(i.current, null);
      return co = R, ci = ec = l, di = ld, yw = null, lE = it, bw = it, uE = it, ww = null, Xs = null, f6(), Kl.discardPendingWarnings(), R;
    }
    function WL(i, l) {
      do {
        var h = co;
        try {
          if (Tx(), mN(), jr(), lk.current = null, h === null || h.return === null) {
            di = gw, yw = l, co = null;
            return;
          }
          if (ue && h.mode & Zn && eE(h, !0), de)
            if (Cs(), l !== null && typeof l == "object" && typeof l.then == "function") {
              var v = l;
              Ya(h, v, ci);
            } else
              Dp(h, l, ci);
          B6(i, h.return, h, l, ci), YL(h);
        } catch (S) {
          l = S, co === h && h !== null ? (h = h.return, co = h) : h = co;
          continue;
        }
        return;
      } while (!0);
    }
    function GL() {
      var i = ak.current;
      return ak.current = Yx, i === null ? Yx : i;
    }
    function qL(i) {
      ak.current = i;
    }
    function y8() {
      dk = Ao();
    }
    function Tw(i) {
      lE = En(i, lE);
    }
    function b8() {
      di === ld && (di = aE);
    }
    function wk() {
      (di === ld || di === aE || di === xh) && (di = vw), _s !== null && (Up(lE) || Up(bw)) && _f(_s, ci);
    }
    function w8(i) {
      di !== vw && (di = xh), ww === null ? ww = [i] : ww.push(i);
    }
    function S8() {
      return di === ld;
    }
    function gE(i, l) {
      var h = Un;
      Un |= Ui;
      var v = GL();
      if (_s !== i || ci !== l) {
        if (rs) {
          var S = i.memoizedUpdaters;
          S.size > 0 && (_w(i, ci), S.clear()), C0(i, l);
        }
        ud = gb(), Th(i, l);
      }
      zc(l);
      do
        try {
          C8();
          break;
        } catch (R) {
          WL(i, R);
        }
      while (!0);
      if (Tx(), Un = h, qL(v), co !== null)
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return Vm(), _s = null, ci = it, di;
    }
    function C8() {
      for (; co !== null; )
        KL(co);
    }
    function x8(i, l) {
      var h = Un;
      Un |= Ui;
      var v = GL();
      if (_s !== i || ci !== l) {
        if (rs) {
          var S = i.memoizedUpdaters;
          S.size > 0 && (_w(i, ci), S.clear()), C0(i, l);
        }
        ud = gb(), Sw(), Th(i, l);
      }
      zc(l);
      do
        try {
          E8();
          break;
        } catch (R) {
          WL(i, R);
        }
      while (!0);
      return Tx(), qL(v), Un = h, co !== null ? (p0(), ld) : (Vm(), _s = null, ci = it, di);
    }
    function E8() {
      for (; co !== null && !Yy(); )
        KL(co);
    }
    function KL(i) {
      var l = i.alternate;
      mr(i);
      var h;
      (i.mode & Zn) !== Jt ? (xR(i), h = Sk(l, i, ec), eE(i, !0)) : h = Sk(l, i, ec), jr(), i.memoizedProps = i.pendingProps, h === null ? YL(i) : co = h, lk.current = null;
    }
    function YL(i) {
      var l = i;
      do {
        var h = l.alternate, v = l.return;
        if ((l.flags & Pp) === Qt) {
          mr(l);
          var S = void 0;
          if ((l.mode & Zn) === Jt ? S = yL(h, l, ec) : (xR(l), S = yL(h, l, ec), eE(l, !1)), jr(), S !== null) {
            co = S;
            return;
          }
        } else {
          var R = bq(h, l);
          if (R !== null) {
            R.flags &= a0, co = R;
            return;
          }
          if ((l.mode & Zn) !== Jt) {
            eE(l, !1);
            for (var L = l.actualDuration, V = l.child; V !== null; )
              L += V.actualDuration, V = V.sibling;
            l.actualDuration = L;
          }
          if (v !== null)
            v.flags |= Pp, v.subtreeFlags = Qt, v.deletions = null;
          else {
            di = uk, co = null;
            return;
          }
        }
        var Z = l.sibling;
        if (Z !== null) {
          co = Z;
          return;
        }
        l = v, co = l;
      } while (l !== null);
      di === ld && (di = LL);
    }
    function _h(i, l, h) {
      var v = Ws(), S = Vi.transition;
      try {
        Vi.transition = null, wo(Di), T8(i, l, h, v);
      } finally {
        Vi.transition = S, wo(v);
      }
      return null;
    }
    function T8(i, l, h, v) {
      do
        dd();
      while (Ef !== null);
      if (L8(), (Un & (Ui | sl)) !== ui)
        throw new Error("Should not already be working.");
      var S = i.finishedWork, R = i.finishedLanes;
      if (tb(R), S === null)
        return nb(), null;
      if (R === it && a("root.finishedLanes should not be empty during a commit. This is a bug in React."), i.finishedWork = null, i.finishedLanes = it, S === i.current)
        throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      i.callbackNode = null, i.callbackPriority = Xn;
      var L = En(S.lanes, S.childLanes);
      hb(i, L), i === _s && (_s = null, co = null, ci = it), ((S.subtreeFlags & jl) !== Qt || (S.flags & jl) !== Qt) && (Eh || (Eh = !0, hk = h, Ek(Fl, function() {
        return dd(), null;
      })));
      var V = (S.subtreeFlags & (Mu | Iu | Du | jl)) !== Qt, Z = (S.flags & (Mu | Iu | Du | jl)) !== Qt;
      if (V || Z) {
        var ae = Vi.transition;
        Vi.transition = null;
        var le = Ws();
        wo(Di);
        var Te = Un;
        Un |= sl, lk.current = null, Eq(i, S), zN(), jq(i, S, R), $G(i.containerInfo), i.current = S, Ap(R), Fq(S, i, R), Np(), Xy(), Un = Te, wo(le), Vi.transition = ae;
      } else
        i.current = S, zN();
      var xe = Eh;
      if (Eh ? (Eh = !1, Ef = i, Cw = R) : (Zg = 0, fE = null), L = i.pendingLanes, L === it && (Jg = null), xe || ZL(i.current, !1), Jy(S.stateNode, v), rs && i.memoizedUpdaters.clear(), o8(), Qs(i, Ao()), l !== null)
        for (var Le = i.onRecoverableError, ze = 0; ze < l.length; ze++) {
          var Ge = l[ze], kt = Ge.stack, nn = Ge.digest;
          Le(Ge.value, {
            componentStack: kt,
            digest: nn
          });
        }
      if (cE) {
        cE = !1;
        var Yt = fk;
        throw fk = null, Yt;
      }
      return is(Cw, ln) && i.tag !== hf && dd(), L = i.pendingLanes, is(L, ln) ? (P6(), i === mk ? xw++ : (xw = 0, mk = i)) : xw = 0, mf(), nb(), null;
    }
    function dd() {
      if (Ef !== null) {
        var i = T0(Cw), l = Xp(Vs, i), h = Vi.transition, v = Ws();
        try {
          return Vi.transition = null, wo(l), O8();
        } finally {
          wo(v), Vi.transition = h;
        }
      }
      return !1;
    }
    function _8(i) {
      pk.push(i), Eh || (Eh = !0, Ek(Fl, function() {
        return dd(), null;
      }));
    }
    function O8() {
      if (Ef === null)
        return !1;
      var i = hk;
      hk = null;
      var l = Ef, h = Cw;
      if (Ef = null, Cw = it, (Un & (Ui | sl)) !== ui)
        throw new Error("Cannot flush passive effects while already rendering.");
      gk = !0, dE = !1, Fc(h);
      var v = Un;
      Un |= sl, Gq(l.current), Hq(l, l.current, h, i);
      {
        var S = pk;
        pk = [];
        for (var R = 0; R < S.length; R++) {
          var L = S[R];
          Rq(l, L);
        }
      }
      ib(), ZL(l.current, !0), Un = v, mf(), dE ? l === fE ? Zg++ : (Zg = 0, fE = l) : Zg = 0, gk = !1, dE = !1, Zy(l);
      {
        var V = l.current.stateNode;
        V.effectDuration = 0, V.passiveEffectDuration = 0;
      }
      return !0;
    }
    function XL(i) {
      return Jg !== null && Jg.has(i);
    }
    function R8(i) {
      Jg === null ? Jg = /* @__PURE__ */ new Set([i]) : Jg.add(i);
    }
    function k8(i) {
      cE || (cE = !0, fk = i);
    }
    var P8 = k8;
    function QL(i, l, h) {
      var v = Sh(h, l), S = KN(i, v, ln), R = vf(i, S, ln), L = Os();
      R !== null && (tf(R, ln, L), Qs(R, L));
    }
    function Fr(i, l, h) {
      if (Sq(h), Ow(!1), i.tag === y) {
        QL(i, i, h);
        return;
      }
      var v = null;
      for (v = l; v !== null; ) {
        if (v.tag === y) {
          QL(v, i, h);
          return;
        } else if (v.tag === m) {
          var S = v.type, R = v.stateNode;
          if (typeof S.getDerivedStateFromError == "function" || typeof R.componentDidCatch == "function" && !XL(R)) {
            var L = Sh(h, i), V = BR(v, L, ln), Z = vf(v, V, ln), ae = Os();
            Z !== null && (tf(Z, ln, ae), Qs(Z, ae));
            return;
          }
        }
        v = v.return;
      }
      a(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, h);
    }
    function M8(i, l, h) {
      var v = i.pingCache;
      v !== null && v.delete(l);
      var S = Os();
      dg(i, h), z8(i), _s === i && Kc(ci, h) && (di === vw || di === aE && qc(ci) && Ao() - dk < $L ? Th(i, it) : uE = En(uE, h)), Qs(i, S);
    }
    function JL(i, l) {
      l === Xn && (l = d8(i));
      var h = Os(), v = Ks(i, l);
      v !== null && (tf(v, l, h), Qs(v, h));
    }
    function I8(i) {
      var l = i.memoizedState, h = Xn;
      l !== null && (h = l.retryLane), JL(i, h);
    }
    function D8(i, l) {
      var h = Xn, v;
      switch (i.tag) {
        case P:
          v = i.stateNode;
          var S = i.memoizedState;
          S !== null && (h = S.retryLane);
          break;
        case q:
          v = i.stateNode;
          break;
        default:
          throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
      }
      v !== null && v.delete(l), JL(i, h);
    }
    function A8(i) {
      return i < 120 ? 120 : i < 480 ? 480 : i < 1080 ? 1080 : i < 1920 ? 1920 : i < 3e3 ? 3e3 : i < 4320 ? 4320 : a8(i / 1960) * 1960;
    }
    function N8() {
      if (xw > u8)
        throw xw = 0, mk = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      Zg > c8 && (Zg = 0, fE = null, a("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function L8() {
      Kl.flushLegacyContextWarning(), Kl.flushPendingUnsafeLifecycleWarnings();
    }
    function ZL(i, l) {
      mr(i), vE(i, Pu, t8), l && vE(i, Ga, n8), vE(i, Pu, Zq), l && vE(i, Ga, e8), jr();
    }
    function vE(i, l, h) {
      for (var v = i, S = null; v !== null; ) {
        var R = v.subtreeFlags & l;
        v !== S && v.child !== null && R !== Qt ? v = v.child : ((v.flags & l) !== Qt && h(v), v.sibling !== null ? v = v.sibling : v = S = v.return);
      }
    }
    var yE = null;
    function e$(i) {
      {
        if ((Un & Ui) !== ui || !(i.mode & kn))
          return;
        var l = i.tag;
        if (l !== g && l !== y && l !== m && l !== f && l !== M && l !== F && l !== H)
          return;
        var h = gn(i) || "ReactComponent";
        if (yE !== null) {
          if (yE.has(h))
            return;
          yE.add(h);
        } else
          yE = /* @__PURE__ */ new Set([h]);
        var v = ei;
        try {
          mr(i), a("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          v ? mr(i) : jr();
        }
      }
    }
    var Sk;
    {
      var $8 = null;
      Sk = function(i, l, h) {
        var v = l$($8, l);
        try {
          return pL(i, l, h);
        } catch (R) {
          if (Y3() || R !== null && typeof R == "object" && typeof R.then == "function")
            throw R;
          if (Tx(), mN(), bL(i, l), l$(l, v), l.mode & Zn && xR(l), ku(null, pL, null, i, l, h), Ll()) {
            var S = kp();
            typeof S == "object" && S !== null && S._suppressLogging && typeof R == "object" && R !== null && !R._suppressLogging && (R._suppressLogging = !0);
          }
          throw R;
        }
      };
    }
    var t$ = !1, Ck;
    Ck = /* @__PURE__ */ new Set();
    function j8(i) {
      if (Fa && !O6())
        switch (i.tag) {
          case f:
          case M:
          case H: {
            var l = co && gn(co) || "Unknown", h = l;
            if (!Ck.has(h)) {
              Ck.add(h);
              var v = gn(i) || "Unknown";
              a("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", v, l, l);
            }
            break;
          }
          case m: {
            t$ || (a("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), t$ = !0);
            break;
          }
        }
    }
    function _w(i, l) {
      if (rs) {
        var h = i.memoizedUpdaters;
        h.forEach(function(v) {
          Kp(i, v, l);
        });
      }
    }
    var xk = {};
    function Ek(i, l) {
      {
        var h = nu.current;
        return h !== null ? (h.push(l), xk) : Ky(i, l);
      }
    }
    function n$(i) {
      if (i !== xk)
        return u0(i);
    }
    function r$() {
      return nu.current !== null;
    }
    function F8(i) {
      {
        if (i.mode & kn) {
          if (!AL())
            return;
        } else if (!s8() || Un !== ui || i.tag !== f && i.tag !== M && i.tag !== H)
          return;
        if (nu.current === null) {
          var l = ei;
          try {
            mr(i), a(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, gn(i));
          } finally {
            l ? mr(i) : jr();
          }
        }
      }
    }
    function z8(i) {
      i.tag !== hf && AL() && nu.current === null && a(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
    }
    function Ow(i) {
      zL = i;
    }
    var al = null, ev = null, B8 = function(i) {
      al = i;
    };
    function tv(i) {
      {
        if (al === null)
          return i;
        var l = al(i);
        return l === void 0 ? i : l.current;
      }
    }
    function Tk(i) {
      return tv(i);
    }
    function _k(i) {
      {
        if (al === null)
          return i;
        var l = al(i);
        if (l === void 0) {
          if (i != null && typeof i.render == "function") {
            var h = tv(i.render);
            if (i.render !== h) {
              var v = {
                $$typeof: Ye,
                render: h
              };
              return i.displayName !== void 0 && (v.displayName = i.displayName), v;
            }
          }
          return i;
        }
        return l.current;
      }
    }
    function o$(i, l) {
      {
        if (al === null)
          return !1;
        var h = i.elementType, v = l.type, S = !1, R = typeof v == "object" && v !== null ? v.$$typeof : null;
        switch (i.tag) {
          case m: {
            typeof v == "function" && (S = !0);
            break;
          }
          case f: {
            (typeof v == "function" || R === De) && (S = !0);
            break;
          }
          case M: {
            (R === Ye || R === De) && (S = !0);
            break;
          }
          case F:
          case H: {
            (R === dn || R === De) && (S = !0);
            break;
          }
          default:
            return !1;
        }
        if (S) {
          var L = al(h);
          if (L !== void 0 && L === al(v))
            return !0;
        }
        return !1;
      }
    }
    function i$(i) {
      {
        if (al === null || typeof WeakSet != "function")
          return;
        ev === null && (ev = /* @__PURE__ */ new WeakSet()), ev.add(i);
      }
    }
    var H8 = function(i, l) {
      {
        if (al === null)
          return;
        var h = l.staleFamilies, v = l.updatedFamilies;
        dd(), cd(function() {
          Ok(i.current, v, h);
        });
      }
    }, V8 = function(i, l) {
      {
        if (i.context !== Sa)
          return;
        dd(), cd(function() {
          Rw(l, i, null, null);
        });
      }
    };
    function Ok(i, l, h) {
      {
        var v = i.alternate, S = i.child, R = i.sibling, L = i.tag, V = i.type, Z = null;
        switch (L) {
          case f:
          case H:
          case m:
            Z = V;
            break;
          case M:
            Z = V.render;
            break;
        }
        if (al === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var ae = !1, le = !1;
        if (Z !== null) {
          var Te = al(Z);
          Te !== void 0 && (h.has(Te) ? le = !0 : l.has(Te) && (L === m ? le = !0 : ae = !0));
        }
        if (ev !== null && (ev.has(i) || v !== null && ev.has(v)) && (le = !0), le && (i._debugNeedsRemount = !0), le || ae) {
          var xe = Ks(i, ln);
          xe !== null && fi(xe, i, ln, Rr);
        }
        S !== null && !le && Ok(S, l, h), R !== null && Ok(R, l, h);
      }
    }
    var U8 = function(i, l) {
      {
        var h = /* @__PURE__ */ new Set(), v = new Set(l.map(function(S) {
          return S.current;
        }));
        return Rk(i.current, v, h), h;
      }
    };
    function Rk(i, l, h) {
      {
        var v = i.child, S = i.sibling, R = i.tag, L = i.type, V = null;
        switch (R) {
          case f:
          case H:
          case m:
            V = L;
            break;
          case M:
            V = L.render;
            break;
        }
        var Z = !1;
        V !== null && l.has(V) && (Z = !0), Z ? W8(i, h) : v !== null && Rk(v, l, h), S !== null && Rk(S, l, h);
      }
    }
    function W8(i, l) {
      {
        var h = G8(i, l);
        if (h)
          return;
        for (var v = i; ; ) {
          switch (v.tag) {
            case C:
              l.add(v.stateNode);
              return;
            case w:
              l.add(v.stateNode.containerInfo);
              return;
            case y:
              l.add(v.stateNode.containerInfo);
              return;
          }
          if (v.return === null)
            throw new Error("Expected to reach root first.");
          v = v.return;
        }
      }
    }
    function G8(i, l) {
      for (var h = i, v = !1; ; ) {
        if (h.tag === C)
          v = !0, l.add(h.stateNode);
        else if (h.child !== null) {
          h.child.return = h, h = h.child;
          continue;
        }
        if (h === i)
          return v;
        for (; h.sibling === null; ) {
          if (h.return === null || h.return === i)
            return v;
          h = h.return;
        }
        h.sibling.return = h.return, h = h.sibling;
      }
      return !1;
    }
    var kk;
    {
      kk = !1;
      try {
        var s$ = Object.preventExtensions({});
      } catch {
        kk = !0;
      }
    }
    function q8(i, l, h, v) {
      this.tag = i, this.key = h, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = l, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = v, this.flags = Qt, this.subtreeFlags = Qt, this.deletions = null, this.lanes = it, this.childLanes = it, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !kk && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var Ca = function(i, l, h, v) {
      return new q8(i, l, h, v);
    };
    function Pk(i) {
      var l = i.prototype;
      return !!(l && l.isReactComponent);
    }
    function K8(i) {
      return typeof i == "function" && !Pk(i) && i.defaultProps === void 0;
    }
    function Y8(i) {
      if (typeof i == "function")
        return Pk(i) ? m : f;
      if (i != null) {
        var l = i.$$typeof;
        if (l === Ye)
          return M;
        if (l === dn)
          return F;
      }
      return g;
    }
    function Oh(i, l) {
      var h = i.alternate;
      h === null ? (h = Ca(i.tag, l, i.key, i.mode), h.elementType = i.elementType, h.type = i.type, h.stateNode = i.stateNode, h._debugSource = i._debugSource, h._debugOwner = i._debugOwner, h._debugHookTypes = i._debugHookTypes, h.alternate = i, i.alternate = h) : (h.pendingProps = l, h.type = i.type, h.flags = Qt, h.subtreeFlags = Qt, h.deletions = null, h.actualDuration = 0, h.actualStartTime = -1), h.flags = i.flags & vo, h.childLanes = i.childLanes, h.lanes = i.lanes, h.child = i.child, h.memoizedProps = i.memoizedProps, h.memoizedState = i.memoizedState, h.updateQueue = i.updateQueue;
      var v = i.dependencies;
      switch (h.dependencies = v === null ? null : {
        lanes: v.lanes,
        firstContext: v.firstContext
      }, h.sibling = i.sibling, h.index = i.index, h.ref = i.ref, h.selfBaseDuration = i.selfBaseDuration, h.treeBaseDuration = i.treeBaseDuration, h._debugNeedsRemount = i._debugNeedsRemount, h.tag) {
        case g:
        case f:
        case H:
          h.type = tv(i.type);
          break;
        case m:
          h.type = Tk(i.type);
          break;
        case M:
          h.type = _k(i.type);
          break;
      }
      return h;
    }
    function X8(i, l) {
      i.flags &= vo | Yr;
      var h = i.alternate;
      if (h === null)
        i.childLanes = it, i.lanes = l, i.child = null, i.subtreeFlags = Qt, i.memoizedProps = null, i.memoizedState = null, i.updateQueue = null, i.dependencies = null, i.stateNode = null, i.selfBaseDuration = 0, i.treeBaseDuration = 0;
      else {
        i.childLanes = h.childLanes, i.lanes = h.lanes, i.child = h.child, i.subtreeFlags = Qt, i.deletions = null, i.memoizedProps = h.memoizedProps, i.memoizedState = h.memoizedState, i.updateQueue = h.updateQueue, i.type = h.type;
        var v = h.dependencies;
        i.dependencies = v === null ? null : {
          lanes: v.lanes,
          firstContext: v.firstContext
        }, i.selfBaseDuration = h.selfBaseDuration, i.treeBaseDuration = h.treeBaseDuration;
      }
      return i;
    }
    function Q8(i, l, h) {
      var v;
      return i === mx ? (v = kn, l === !0 && (v |= yr, v |= er)) : v = Jt, rs && (v |= Zn), Ca(y, null, null, v);
    }
    function Mk(i, l, h, v, S, R) {
      var L = g, V = i;
      if (typeof i == "function")
        Pk(i) ? (L = m, V = Tk(V)) : V = tv(V);
      else if (typeof i == "string")
        L = C;
      else
        e: switch (i) {
          case Ki:
            return Of(h.children, S, R, l);
          case Ri:
            L = O, S |= yr, (S & kn) !== Jt && (S |= er);
            break;
          case Yi:
            return J8(h, S, R, l);
          case ft:
            return Z8(h, S, R, l);
          case Ct:
            return e9(h, S, R, l);
          case Bt:
            return a$(h, S, R, l);
          case jt:
          case Re:
          case Kt:
          case Ln:
          case Je:
          default: {
            if (typeof i == "object" && i !== null)
              switch (i.$$typeof) {
                case Xi:
                  L = I;
                  break e;
                case ye:
                  L = k;
                  break e;
                case Ye:
                  L = M, V = _k(V);
                  break e;
                case dn:
                  L = F;
                  break e;
                case De:
                  L = U, V = null;
                  break e;
              }
            var Z = "";
            {
              (i === void 0 || typeof i == "object" && i !== null && Object.keys(i).length === 0) && (Z += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
              var ae = v ? gn(v) : null;
              ae && (Z += `

Check the render method of \`` + ae + "`.");
            }
            throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (i == null ? i : typeof i) + "." + Z));
          }
        }
      var le = Ca(L, h, l, S);
      return le.elementType = i, le.type = V, le.lanes = R, le._debugOwner = v, le;
    }
    function Ik(i, l, h) {
      var v = null;
      v = i._owner;
      var S = i.type, R = i.key, L = i.props, V = Mk(S, R, L, v, l, h);
      return V._debugSource = i._source, V._debugOwner = i._owner, V;
    }
    function Of(i, l, h, v) {
      var S = Ca(E, i, v, l);
      return S.lanes = h, S;
    }
    function J8(i, l, h, v) {
      typeof i.id != "string" && a('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof i.id);
      var S = Ca(N, i, v, l | Zn);
      return S.elementType = Yi, S.lanes = h, S.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, S;
    }
    function Z8(i, l, h, v) {
      var S = Ca(P, i, v, l);
      return S.elementType = ft, S.lanes = h, S;
    }
    function e9(i, l, h, v) {
      var S = Ca(q, i, v, l);
      return S.elementType = Ct, S.lanes = h, S;
    }
    function a$(i, l, h, v) {
      var S = Ca(Y, i, v, l);
      S.elementType = Bt, S.lanes = h;
      var R = {
        isHidden: !1
      };
      return S.stateNode = R, S;
    }
    function Dk(i, l, h) {
      var v = Ca(T, i, null, l);
      return v.lanes = h, v;
    }
    function t9() {
      var i = Ca(C, null, null, Jt);
      return i.elementType = "DELETED", i;
    }
    function n9(i) {
      var l = Ca(A, null, null, Jt);
      return l.stateNode = i, l;
    }
    function Ak(i, l, h) {
      var v = i.children !== null ? i.children : [], S = Ca(w, v, i.key, l);
      return S.lanes = h, S.stateNode = {
        containerInfo: i.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: i.implementation
      }, S;
    }
    function l$(i, l) {
      return i === null && (i = Ca(g, null, null, Jt)), i.tag = l.tag, i.key = l.key, i.elementType = l.elementType, i.type = l.type, i.stateNode = l.stateNode, i.return = l.return, i.child = l.child, i.sibling = l.sibling, i.index = l.index, i.ref = l.ref, i.pendingProps = l.pendingProps, i.memoizedProps = l.memoizedProps, i.updateQueue = l.updateQueue, i.memoizedState = l.memoizedState, i.dependencies = l.dependencies, i.mode = l.mode, i.flags = l.flags, i.subtreeFlags = l.subtreeFlags, i.deletions = l.deletions, i.lanes = l.lanes, i.childLanes = l.childLanes, i.alternate = l.alternate, i.actualDuration = l.actualDuration, i.actualStartTime = l.actualStartTime, i.selfBaseDuration = l.selfBaseDuration, i.treeBaseDuration = l.treeBaseDuration, i._debugSource = l._debugSource, i._debugOwner = l._debugOwner, i._debugNeedsRemount = l._debugNeedsRemount, i._debugHookTypes = l._debugHookTypes, i;
    }
    function r9(i, l, h, v, S) {
      this.tag = l, this.containerInfo = i, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = m1, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = Xn, this.eventTimes = qp(it), this.expirationTimes = qp(Rr), this.pendingLanes = it, this.suspendedLanes = it, this.pingedLanes = it, this.expiredLanes = it, this.mutableReadLanes = it, this.finishedLanes = it, this.entangledLanes = it, this.entanglements = qp(it), this.identifierPrefix = v, this.onRecoverableError = S, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
      {
        this.memoizedUpdaters = /* @__PURE__ */ new Set();
        for (var R = this.pendingUpdatersLaneMap = [], L = 0; L < Bc; L++)
          R.push(/* @__PURE__ */ new Set());
      }
      switch (l) {
        case mx:
          this._debugRootType = h ? "hydrateRoot()" : "createRoot()";
          break;
        case hf:
          this._debugRootType = h ? "hydrate()" : "render()";
          break;
      }
    }
    function u$(i, l, h, v, S, R, L, V, Z, ae) {
      var le = new r9(i, l, h, V, Z), Te = Q8(l, R);
      le.current = Te, Te.stateNode = le;
      {
        var xe = {
          element: v,
          isDehydrated: h,
          cache: null,
          // not enabled yet
          transitions: null,
          pendingSuspenseBoundaries: null
        };
        Te.memoizedState = xe;
      }
      return q1(Te), le;
    }
    var Nk = "18.3.1";
    function o9(i, l, h) {
      var v = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return $e(v), {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: qr,
        key: v == null ? null : "" + v,
        children: i,
        containerInfo: l,
        implementation: h
      };
    }
    var Lk, $k;
    Lk = !1, $k = {};
    function c$(i) {
      if (!i)
        return Sa;
      var l = Yd(i), h = z3(l);
      if (l.tag === m) {
        var v = l.type;
        if (qu(v))
          return $A(l, v, h);
      }
      return h;
    }
    function i9(i, l) {
      {
        var h = Yd(i);
        if (h === void 0) {
          if (typeof i.render == "function")
            throw new Error("Unable to find node on an unmounted component.");
          var v = Object.keys(i).join(",");
          throw new Error("Argument appears to not be a ReactComponent. Keys: " + v);
        }
        var S = ts(h);
        if (S === null)
          return null;
        if (S.mode & yr) {
          var R = gn(h) || "Component";
          if (!$k[R]) {
            $k[R] = !0;
            var L = ei;
            try {
              mr(S), h.mode & yr ? a("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", l, l, R) : a("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", l, l, R);
            } finally {
              L ? mr(L) : jr();
            }
          }
        }
        return S.stateNode;
      }
    }
    function d$(i, l, h, v, S, R, L, V) {
      var Z = !1, ae = null;
      return u$(i, l, Z, ae, h, v, S, R, L);
    }
    function f$(i, l, h, v, S, R, L, V, Z, ae) {
      var le = !0, Te = u$(h, v, le, i, S, R, L, V, Z);
      Te.context = c$(null);
      var xe = Te.current, Le = Os(), ze = Tf(xe), Ge = sd(Le, ze);
      return Ge.callback = l ?? null, vf(xe, Ge, ze), f8(Te, ze, Le), Te;
    }
    function Rw(i, l, h, v) {
      Qy(l, i);
      var S = l.current, R = Os(), L = Tf(S);
      Qr(L);
      var V = c$(h);
      l.context === null ? l.context = V : l.pendingContext = V, Fa && ei !== null && !Lk && (Lk = !0, a(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, gn(ei) || "Unknown"));
      var Z = sd(R, L);
      Z.payload = {
        element: i
      }, v = v === void 0 ? null : v, v !== null && (typeof v != "function" && a("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", v), Z.callback = v);
      var ae = vf(S, Z, L);
      return ae !== null && (fi(ae, S, L, R), Px(ae, S, L)), L;
    }
    function bE(i) {
      var l = i.current;
      if (!l.child)
        return null;
      switch (l.child.tag) {
        case C:
          return l.child.stateNode;
        default:
          return l.child.stateNode;
      }
    }
    function s9(i) {
      switch (i.tag) {
        case y: {
          var l = i.stateNode;
          if (pg(l)) {
            var h = m0(l);
            g8(l, h);
          }
          break;
        }
        case P: {
          cd(function() {
            var S = Ks(i, ln);
            if (S !== null) {
              var R = Os();
              fi(S, i, ln, R);
            }
          });
          var v = ln;
          jk(i, v);
          break;
        }
      }
    }
    function p$(i, l) {
      var h = i.memoizedState;
      h !== null && h.dehydrated !== null && (h.retryLane = w0(h.retryLane, l));
    }
    function jk(i, l) {
      p$(i, l);
      var h = i.alternate;
      h && p$(h, l);
    }
    function a9(i) {
      if (i.tag === P) {
        var l = Bp, h = Ks(i, l);
        if (h !== null) {
          var v = Os();
          fi(h, i, l, v);
        }
        jk(i, l);
      }
    }
    function l9(i) {
      if (i.tag === P) {
        var l = Tf(i), h = Ks(i, l);
        if (h !== null) {
          var v = Os();
          fi(h, i, l, v);
        }
        jk(i, l);
      }
    }
    function h$(i) {
      var l = Hr(i);
      return l === null ? null : l.stateNode;
    }
    var m$ = function(i) {
      return null;
    };
    function u9(i) {
      return m$(i);
    }
    var g$ = function(i) {
      return !1;
    };
    function c9(i) {
      return g$(i);
    }
    var v$ = null, y$ = null, b$ = null, w$ = null, S$ = null, C$ = null, x$ = null, E$ = null, T$ = null;
    {
      var _$ = function(i, l, h) {
        var v = l[h], S = Rn(i) ? i.slice() : Sn({}, i);
        return h + 1 === l.length ? (Rn(S) ? S.splice(v, 1) : delete S[v], S) : (S[v] = _$(i[v], l, h + 1), S);
      }, O$ = function(i, l) {
        return _$(i, l, 0);
      }, R$ = function(i, l, h, v) {
        var S = l[v], R = Rn(i) ? i.slice() : Sn({}, i);
        if (v + 1 === l.length) {
          var L = h[v];
          R[L] = R[S], Rn(R) ? R.splice(S, 1) : delete R[S];
        } else
          R[S] = R$(
            // $FlowFixMe number or string is fine here
            i[S],
            l,
            h,
            v + 1
          );
        return R;
      }, k$ = function(i, l, h) {
        if (l.length !== h.length) {
          s("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var v = 0; v < h.length - 1; v++)
            if (l[v] !== h[v]) {
              s("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return R$(i, l, h, 0);
      }, P$ = function(i, l, h, v) {
        if (h >= l.length)
          return v;
        var S = l[h], R = Rn(i) ? i.slice() : Sn({}, i);
        return R[S] = P$(i[S], l, h + 1, v), R;
      }, M$ = function(i, l, h) {
        return P$(i, l, 0, h);
      }, Fk = function(i, l) {
        for (var h = i.memoizedState; h !== null && l > 0; )
          h = h.next, l--;
        return h;
      };
      v$ = function(i, l, h, v) {
        var S = Fk(i, l);
        if (S !== null) {
          var R = M$(S.memoizedState, h, v);
          S.memoizedState = R, S.baseState = R, i.memoizedProps = Sn({}, i.memoizedProps);
          var L = Ks(i, ln);
          L !== null && fi(L, i, ln, Rr);
        }
      }, y$ = function(i, l, h) {
        var v = Fk(i, l);
        if (v !== null) {
          var S = O$(v.memoizedState, h);
          v.memoizedState = S, v.baseState = S, i.memoizedProps = Sn({}, i.memoizedProps);
          var R = Ks(i, ln);
          R !== null && fi(R, i, ln, Rr);
        }
      }, b$ = function(i, l, h, v) {
        var S = Fk(i, l);
        if (S !== null) {
          var R = k$(S.memoizedState, h, v);
          S.memoizedState = R, S.baseState = R, i.memoizedProps = Sn({}, i.memoizedProps);
          var L = Ks(i, ln);
          L !== null && fi(L, i, ln, Rr);
        }
      }, w$ = function(i, l, h) {
        i.pendingProps = M$(i.memoizedProps, l, h), i.alternate && (i.alternate.pendingProps = i.pendingProps);
        var v = Ks(i, ln);
        v !== null && fi(v, i, ln, Rr);
      }, S$ = function(i, l) {
        i.pendingProps = O$(i.memoizedProps, l), i.alternate && (i.alternate.pendingProps = i.pendingProps);
        var h = Ks(i, ln);
        h !== null && fi(h, i, ln, Rr);
      }, C$ = function(i, l, h) {
        i.pendingProps = k$(i.memoizedProps, l, h), i.alternate && (i.alternate.pendingProps = i.pendingProps);
        var v = Ks(i, ln);
        v !== null && fi(v, i, ln, Rr);
      }, x$ = function(i) {
        var l = Ks(i, ln);
        l !== null && fi(l, i, ln, Rr);
      }, E$ = function(i) {
        m$ = i;
      }, T$ = function(i) {
        g$ = i;
      };
    }
    function d9(i) {
      var l = ts(i);
      return l === null ? null : l.stateNode;
    }
    function f9(i) {
      return null;
    }
    function p9() {
      return ei;
    }
    function h9(i) {
      var l = i.findFiberByHostInstance, h = n.ReactCurrentDispatcher;
      return Jd({
        bundleType: i.bundleType,
        version: i.version,
        rendererPackageName: i.rendererPackageName,
        rendererConfig: i.rendererConfig,
        overrideHookState: v$,
        overrideHookStateDeletePath: y$,
        overrideHookStateRenamePath: b$,
        overrideProps: w$,
        overridePropsDeletePath: S$,
        overridePropsRenamePath: C$,
        setErrorHandler: E$,
        setSuspenseHandler: T$,
        scheduleUpdate: x$,
        currentDispatcherRef: h,
        findHostInstanceByFiber: d9,
        findFiberByHostInstance: l || f9,
        // React Refresh
        findHostInstancesForRefresh: U8,
        scheduleRefresh: H8,
        scheduleRoot: V8,
        setRefreshHandler: B8,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: p9,
        // Enables DevTools to detect reconciler version rather than renderer version
        // which may not match for third party renderers.
        reconcilerVersion: Nk
      });
    }
    var I$ = typeof reportError == "function" ? (
      // In modern browsers, reportError will dispatch an error event,
      // emulating an uncaught JavaScript error.
      reportError
    ) : function(i) {
      console.error(i);
    };
    function zk(i) {
      this._internalRoot = i;
    }
    wE.prototype.render = zk.prototype.render = function(i) {
      var l = this._internalRoot;
      if (l === null)
        throw new Error("Cannot update an unmounted root.");
      {
        typeof arguments[1] == "function" ? a("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : SE(arguments[1]) ? a("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && a("You passed a second argument to root.render(...) but it only accepts one argument.");
        var h = l.containerInfo;
        if (h.nodeType !== mo) {
          var v = h$(l.current);
          v && v.parentNode !== h && a("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      Rw(i, l, null, null);
    }, wE.prototype.unmount = zk.prototype.unmount = function() {
      typeof arguments[0] == "function" && a("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var i = this._internalRoot;
      if (i !== null) {
        this._internalRoot = null;
        var l = i.containerInfo;
        UL() && a("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), cd(function() {
          Rw(null, i, null, null);
        }), IA(l);
      }
    };
    function m9(i, l) {
      if (!SE(i))
        throw new Error("createRoot(...): Target container is not a DOM element.");
      D$(i);
      var h = !1, v = !1, S = "", R = I$;
      l != null && (l.hydrate ? s("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof l == "object" && l !== null && l.$$typeof === oo && a(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), l.unstable_strictMode === !0 && (h = !0), l.identifierPrefix !== void 0 && (S = l.identifierPrefix), l.onRecoverableError !== void 0 && (R = l.onRecoverableError), l.transitionCallbacks !== void 0 && l.transitionCallbacks);
      var L = d$(i, mx, null, h, v, S, R);
      lx(L.current, i);
      var V = i.nodeType === mo ? i.parentNode : i;
      return Ab(V), new zk(L);
    }
    function wE(i) {
      this._internalRoot = i;
    }
    function g9(i) {
      i && P0(i);
    }
    wE.prototype.unstable_scheduleHydration = g9;
    function v9(i, l, h) {
      if (!SE(i))
        throw new Error("hydrateRoot(...): Target container is not a DOM element.");
      D$(i), l === void 0 && a("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
      var v = h ?? null, S = h != null && h.hydratedSources || null, R = !1, L = !1, V = "", Z = I$;
      h != null && (h.unstable_strictMode === !0 && (R = !0), h.identifierPrefix !== void 0 && (V = h.identifierPrefix), h.onRecoverableError !== void 0 && (Z = h.onRecoverableError));
      var ae = f$(l, null, i, mx, v, R, L, V, Z);
      if (lx(ae.current, i), Ab(i), S)
        for (var le = 0; le < S.length; le++) {
          var Te = S[le];
          S6(ae, Te);
        }
      return new wE(ae);
    }
    function SE(i) {
      return !!(i && (i.nodeType === Ji || i.nodeType === Nl || i.nodeType === Ly));
    }
    function kw(i) {
      return !!(i && (i.nodeType === Ji || i.nodeType === Nl || i.nodeType === Ly || i.nodeType === mo && i.nodeValue === " react-mount-point-unstable "));
    }
    function D$(i) {
      i.nodeType === Ji && i.tagName && i.tagName.toUpperCase() === "BODY" && a("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), Wb(i) && (i._reactRootContainer ? a("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : a("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    var y9 = n.ReactCurrentOwner, A$;
    A$ = function(i) {
      if (i._reactRootContainer && i.nodeType !== mo) {
        var l = h$(i._reactRootContainer.current);
        l && l.parentNode !== i && a("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var h = !!i._reactRootContainer, v = Bk(i), S = !!(v && ff(v));
      S && !h && a("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), i.nodeType === Ji && i.tagName && i.tagName.toUpperCase() === "BODY" && a("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function Bk(i) {
      return i ? i.nodeType === Nl ? i.documentElement : i.firstChild : null;
    }
    function N$() {
    }
    function b9(i, l, h, v, S) {
      if (S) {
        if (typeof v == "function") {
          var R = v;
          v = function() {
            var xe = bE(L);
            R.call(xe);
          };
        }
        var L = f$(
          l,
          v,
          i,
          hf,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          N$
        );
        i._reactRootContainer = L, lx(L.current, i);
        var V = i.nodeType === mo ? i.parentNode : i;
        return Ab(V), cd(), L;
      } else {
        for (var Z; Z = i.lastChild; )
          i.removeChild(Z);
        if (typeof v == "function") {
          var ae = v;
          v = function() {
            var xe = bE(le);
            ae.call(xe);
          };
        }
        var le = d$(
          i,
          hf,
          null,
          // hydrationCallbacks
          !1,
          // isStrictMode
          !1,
          // concurrentUpdatesByDefaultOverride,
          "",
          // identifierPrefix
          N$
        );
        i._reactRootContainer = le, lx(le.current, i);
        var Te = i.nodeType === mo ? i.parentNode : i;
        return Ab(Te), cd(function() {
          Rw(l, le, h, v);
        }), le;
      }
    }
    function w9(i, l) {
      i !== null && typeof i != "function" && a("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", l, i);
    }
    function CE(i, l, h, v, S) {
      A$(h), w9(S === void 0 ? null : S, "render");
      var R = h._reactRootContainer, L;
      if (!R)
        L = b9(h, l, i, S, v);
      else {
        if (L = R, typeof S == "function") {
          var V = S;
          S = function() {
            var Z = bE(L);
            V.call(Z);
          };
        }
        Rw(l, L, i, S);
      }
      return bE(L);
    }
    var L$ = !1;
    function S9(i) {
      {
        L$ || (L$ = !0, a("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node"));
        var l = y9.current;
        if (l !== null && l.stateNode !== null) {
          var h = l.stateNode._warnedAboutRefsInRender;
          h || a("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", qn(l.type) || "A component"), l.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return i == null ? null : i.nodeType === Ji ? i : i9(i, "findDOMNode");
    }
    function C9(i, l, h) {
      if (a("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !kw(l))
        throw new Error("Target container is not a DOM element.");
      {
        var v = Wb(l) && l._reactRootContainer === void 0;
        v && a("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
      }
      return CE(null, i, l, !0, h);
    }
    function x9(i, l, h) {
      if (a("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !kw(l))
        throw new Error("Target container is not a DOM element.");
      {
        var v = Wb(l) && l._reactRootContainer === void 0;
        v && a("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return CE(null, i, l, !1, h);
    }
    function E9(i, l, h, v) {
      if (a("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !kw(h))
        throw new Error("Target container is not a DOM element.");
      if (i == null || !jO(i))
        throw new Error("parentComponent must be a valid React Component");
      return CE(i, l, h, !1, v);
    }
    var $$ = !1;
    function T9(i) {
      if ($$ || ($$ = !0, a("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot")), !kw(i))
        throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var l = Wb(i) && i._reactRootContainer === void 0;
        l && a("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (i._reactRootContainer) {
        {
          var h = Bk(i), v = h && !ff(h);
          v && a("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return cd(function() {
          CE(null, null, i, !1, function() {
            i._reactRootContainer = null, IA(i);
          });
        }), !0;
      } else {
        {
          var S = Bk(i), R = !!(S && ff(S)), L = i.nodeType === Ji && kw(i.parentNode) && !!i.parentNode._reactRootContainer;
          R && a("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", L ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    Ci(s9), nf(a9), _0(l9), Jp(Ws), vb(x0), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && a("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Pm(OG), $O(yk, v8, cd);
    function _9(i, l) {
      var h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!SE(l))
        throw new Error("Target container is not a DOM element.");
      return o9(i, l, null, h);
    }
    function O9(i, l, h, v) {
      return E9(i, l, h, v);
    }
    var Hk = {
      usingClientEntryPoint: !1,
      // Keep in sync with ReactTestUtils.js.
      // This is an array for better minification.
      Events: [ff, Ig, ux, Wd, Mm, yk]
    };
    function R9(i, l) {
      return Hk.usingClientEntryPoint || a('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), m9(i, l);
    }
    function k9(i, l, h) {
      return Hk.usingClientEntryPoint || a('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), v9(i, l, h);
    }
    function P9(i) {
      return UL() && a("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), cd(i);
    }
    var M9 = h9({
      findFiberByHostInstance: fh,
      bundleType: 1,
      version: Nk,
      rendererPackageName: "react-dom"
    });
    if (!M9 && _e && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var j$ = window.location.protocol;
      /^(https?|file):$/.test(j$) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (j$ === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Zs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Hk, Zs.createPortal = _9, Zs.createRoot = R9, Zs.findDOMNode = S9, Zs.flushSync = P9, Zs.hydrate = C9, Zs.hydrateRoot = k9, Zs.render = x9, Zs.unmountComponentAtNode = T9, Zs.unstable_batchedUpdates = yk, Zs.unstable_renderSubtreeIntoContainer = O9, Zs.version = Nk, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Zs;
}
function UB() {
  if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("^_^");
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(UB);
    } catch (e) {
      console.error(e);
    }
  }
}
process.env.NODE_ENV === "production" ? (UB(), qP.exports = U9()) : qP.exports = W9();
var v_ = qP.exports;
const EE = /* @__PURE__ */ dI(v_);
var Dw = v_;
if (process.env.NODE_ENV === "production")
  Jw.createRoot = Dw.createRoot, Jw.hydrateRoot = Dw.hydrateRoot;
else {
  var TE = Dw.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  Jw.createRoot = function(e, t) {
    TE.usingClientEntryPoint = !0;
    try {
      return Dw.createRoot(e, t);
    } finally {
      TE.usingClientEntryPoint = !1;
    }
  }, Jw.hydrateRoot = function(e, t, n) {
    TE.usingClientEntryPoint = !0;
    try {
      return Dw.hydrateRoot(e, t, n);
    } finally {
      TE.usingClientEntryPoint = !1;
    }
  };
}
/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function OS() {
  return OS = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, OS.apply(this, arguments);
}
var $f;
(function(e) {
  e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE";
})($f || ($f = {}));
const K$ = "popstate";
function G9(e) {
  e === void 0 && (e = {});
  function t(r, o) {
    let {
      pathname: s,
      search: a,
      hash: c
    } = r.location;
    return KP(
      "",
      {
        pathname: s,
        search: a,
        hash: c
      },
      // state defaults to `null` because `window.history.state` does
      o.state && o.state.usr || null,
      o.state && o.state.key || "default"
    );
  }
  function n(r, o) {
    return typeof o == "string" ? o : RS(o);
  }
  return K9(t, n, null, e);
}
function Pn(e, t) {
  if (e === !1 || e === null || typeof e > "u")
    throw new Error(t);
}
function hu(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {
    }
  }
}
function q9() {
  return Math.random().toString(36).substr(2, 8);
}
function Y$(e, t) {
  return {
    usr: e.state,
    key: e.key,
    idx: t
  };
}
function KP(e, t, n, r) {
  return n === void 0 && (n = null), OS({
    pathname: typeof e == "string" ? e : e.pathname,
    search: "",
    hash: ""
  }, typeof t == "string" ? iy(t) : t, {
    state: n,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: t && t.key || r || q9()
  });
}
function RS(e) {
  let {
    pathname: t = "/",
    search: n = "",
    hash: r = ""
  } = e;
  return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), r && r !== "#" && (t += r.charAt(0) === "#" ? r : "#" + r), t;
}
function iy(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
    let r = e.indexOf("?");
    r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)), e && (t.pathname = e);
  }
  return t;
}
function K9(e, t, n, r) {
  r === void 0 && (r = {});
  let {
    window: o = document.defaultView,
    v5Compat: s = !1
  } = r, a = o.history, c = $f.Pop, f = null, m = g();
  m == null && (m = 0, a.replaceState(OS({}, a.state, {
    idx: m
  }), ""));
  function g() {
    return (a.state || {
      idx: null
    }).idx;
  }
  function y() {
    c = $f.Pop;
    let O = g(), k = O == null ? null : O - m;
    m = O, f && f({
      action: c,
      location: E.location,
      delta: k
    });
  }
  function w(O, k) {
    c = $f.Push;
    let I = KP(E.location, O, k);
    m = g() + 1;
    let M = Y$(I, m), N = E.createHref(I);
    try {
      a.pushState(M, "", N);
    } catch (P) {
      if (P instanceof DOMException && P.name === "DataCloneError")
        throw P;
      o.location.assign(N);
    }
    s && f && f({
      action: c,
      location: E.location,
      delta: 1
    });
  }
  function C(O, k) {
    c = $f.Replace;
    let I = KP(E.location, O, k);
    m = g();
    let M = Y$(I, m), N = E.createHref(I);
    a.replaceState(M, "", N), s && f && f({
      action: c,
      location: E.location,
      delta: 0
    });
  }
  function T(O) {
    let k = o.location.origin !== "null" ? o.location.origin : o.location.href, I = typeof O == "string" ? O : RS(O);
    return I = I.replace(/ $/, "%20"), Pn(k, "No window.location.(origin|href) available to create URL for href: " + I), new URL(I, k);
  }
  let E = {
    get action() {
      return c;
    },
    get location() {
      return e(o, a);
    },
    listen(O) {
      if (f)
        throw new Error("A history only accepts one active listener");
      return o.addEventListener(K$, y), f = O, () => {
        o.removeEventListener(K$, y), f = null;
      };
    },
    createHref(O) {
      return t(o, O);
    },
    createURL: T,
    encodeLocation(O) {
      let k = T(O);
      return {
        pathname: k.pathname,
        search: k.search,
        hash: k.hash
      };
    },
    push: w,
    replace: C,
    go(O) {
      return a.go(O);
    }
  };
  return E;
}
var X$;
(function(e) {
  e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error";
})(X$ || (X$ = {}));
function Y9(e, t, n) {
  return n === void 0 && (n = "/"), X9(e, t, n);
}
function X9(e, t, n, r) {
  let o = typeof t == "string" ? iy(t) : t, s = Kf(o.pathname || "/", n);
  if (s == null)
    return null;
  let a = WB(e);
  Q9(a);
  let c = null;
  for (let f = 0; c == null && f < a.length; ++f) {
    let m = lK(s);
    c = sK(a[f], m);
  }
  return c;
}
function WB(e, t, n, r) {
  t === void 0 && (t = []), n === void 0 && (n = []), r === void 0 && (r = "");
  let o = (s, a, c) => {
    let f = {
      relativePath: c === void 0 ? s.path || "" : c,
      caseSensitive: s.caseSensitive === !0,
      childrenIndex: a,
      route: s
    };
    f.relativePath.startsWith("/") && (Pn(f.relativePath.startsWith(r), 'Absolute route path "' + f.relativePath + '" nested under path ' + ('"' + r + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), f.relativePath = f.relativePath.slice(r.length));
    let m = Cd([r, f.relativePath]), g = n.concat(f);
    s.children && s.children.length > 0 && (Pn(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      s.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + m + '".')
    ), WB(s.children, t, g, m)), !(s.path == null && !s.index) && t.push({
      path: m,
      score: oK(m, s.index),
      routesMeta: g
    });
  };
  return e.forEach((s, a) => {
    var c;
    if (s.path === "" || !((c = s.path) != null && c.includes("?")))
      o(s, a);
    else
      for (let f of GB(s.path))
        o(s, a, f);
  }), t;
}
function GB(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...r] = t, o = n.endsWith("?"), s = n.replace(/\?$/, "");
  if (r.length === 0)
    return o ? [s, ""] : [s];
  let a = GB(r.join("/")), c = [];
  return c.push(...a.map((f) => f === "" ? s : [s, f].join("/"))), o && c.push(...a), c.map((f) => e.startsWith("/") && f === "" ? "/" : f);
}
function Q9(e) {
  e.sort((t, n) => t.score !== n.score ? n.score - t.score : iK(t.routesMeta.map((r) => r.childrenIndex), n.routesMeta.map((r) => r.childrenIndex)));
}
const J9 = /^:[\w-]+$/, Z9 = 3, eK = 2, tK = 1, nK = 10, rK = -2, Q$ = (e) => e === "*";
function oK(e, t) {
  let n = e.split("/"), r = n.length;
  return n.some(Q$) && (r += rK), t && (r += eK), n.filter((o) => !Q$(o)).reduce((o, s) => o + (J9.test(s) ? Z9 : s === "" ? tK : nK), r);
}
function iK(e, t) {
  return e.length === t.length && e.slice(0, -1).every((r, o) => r === t[o]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e[e.length - 1] - t[t.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function sK(e, t, n) {
  let {
    routesMeta: r
  } = e, o = {}, s = "/", a = [];
  for (let c = 0; c < r.length; ++c) {
    let f = r[c], m = c === r.length - 1, g = s === "/" ? t : t.slice(s.length) || "/", y = YP({
      path: f.relativePath,
      caseSensitive: f.caseSensitive,
      end: m
    }, g), w = f.route;
    if (!y)
      return null;
    Object.assign(o, y.params), a.push({
      // TODO: Can this as be avoided?
      params: o,
      pathname: Cd([s, y.pathname]),
      pathnameBase: fK(Cd([s, y.pathnameBase])),
      route: w
    }), y.pathnameBase !== "/" && (s = Cd([s, y.pathnameBase]));
  }
  return a;
}
function YP(e, t) {
  typeof e == "string" && (e = {
    path: e,
    caseSensitive: !1,
    end: !0
  });
  let [n, r] = aK(e.path, e.caseSensitive, e.end), o = t.match(n);
  if (!o) return null;
  let s = o[0], a = s.replace(/(.)\/+$/, "$1"), c = o.slice(1);
  return {
    params: r.reduce((m, g, y) => {
      let {
        paramName: w,
        isOptional: C
      } = g;
      if (w === "*") {
        let E = c[y] || "";
        a = s.slice(0, s.length - E.length).replace(/(.)\/+$/, "$1");
      }
      const T = c[y];
      return C && !T ? m[w] = void 0 : m[w] = (T || "").replace(/%2F/g, "/"), m;
    }, {}),
    pathname: s,
    pathnameBase: a,
    pattern: e
  };
}
function aK(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !0), hu(e === "*" || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were ' + ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'));
  let r = [], o = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (a, c, f) => (r.push({
    paramName: c,
    isOptional: f != null
  }), f ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return e.endsWith("*") ? (r.push({
    paramName: "*"
  }), o += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? o += "\\/*$" : e !== "" && e !== "/" && (o += "(?:(?=\\/|$))"), [new RegExp(o, t ? void 0 : "i"), r];
}
function lK(e) {
  try {
    return e.split("/").map((t) => decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
  } catch (t) {
    return hu(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e;
  }
}
function Kf(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase()))
    return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length, r = e.charAt(n);
  return r && r !== "/" ? null : e.slice(n) || "/";
}
function uK(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: r = "",
    hash: o = ""
  } = typeof e == "string" ? iy(e) : e;
  return {
    pathname: n ? n.startsWith("/") ? n : cK(n, t) : t,
    search: pK(r),
    hash: hK(o)
  };
}
function cK(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return e.split("/").forEach((o) => {
    o === ".." ? n.length > 1 && n.pop() : o !== "." && n.push(o);
  }), n.length > 1 ? n.join("/") : "/";
}
function Wk(e, t, n, r) {
  return "Cannot include a '" + e + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(r) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function dK(e) {
  return e.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);
}
function fI(e, t) {
  let n = dK(e);
  return t ? n.map((r, o) => o === n.length - 1 ? r.pathname : r.pathnameBase) : n.map((r) => r.pathnameBase);
}
function pI(e, t, n, r) {
  r === void 0 && (r = !1);
  let o;
  typeof e == "string" ? o = iy(e) : (o = OS({}, e), Pn(!o.pathname || !o.pathname.includes("?"), Wk("?", "pathname", "search", o)), Pn(!o.pathname || !o.pathname.includes("#"), Wk("#", "pathname", "hash", o)), Pn(!o.search || !o.search.includes("#"), Wk("#", "search", "hash", o)));
  let s = e === "" || o.pathname === "", a = s ? "/" : o.pathname, c;
  if (a == null)
    c = n;
  else {
    let y = t.length - 1;
    if (!r && a.startsWith("..")) {
      let w = a.split("/");
      for (; w[0] === ".."; )
        w.shift(), y -= 1;
      o.pathname = w.join("/");
    }
    c = y >= 0 ? t[y] : "/";
  }
  let f = uK(o, c), m = a && a !== "/" && a.endsWith("/"), g = (s || a === ".") && n.endsWith("/");
  return !f.pathname.endsWith("/") && (m || g) && (f.pathname += "/"), f;
}
const Cd = (e) => e.join("/").replace(/\/\/+/g, "/"), fK = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"), pK = (e) => !e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e, hK = (e) => !e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e;
function mK(e) {
  return e != null && typeof e.status == "number" && typeof e.statusText == "string" && typeof e.internal == "boolean" && "data" in e;
}
const qB = ["post", "put", "patch", "delete"];
new Set(qB);
const gK = ["get", ...qB];
new Set(gK);
/**
 * React Router v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function kS() {
  return kS = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, kS.apply(this, arguments);
}
const tC = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (tC.displayName = "DataRouter");
const hI = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (hI.displayName = "DataRouterState");
const vK = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (vK.displayName = "Await");
const Tl = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (Tl.displayName = "Navigation");
const nC = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (nC.displayName = "Location");
const Sc = /* @__PURE__ */ x.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
process.env.NODE_ENV !== "production" && (Sc.displayName = "Route");
const mI = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (mI.displayName = "RouteError");
function yK(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t;
  sy() || (process.env.NODE_ENV !== "production" ? Pn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  ) : Pn(!1));
  let {
    basename: r,
    navigator: o
  } = x.useContext(Tl), {
    hash: s,
    pathname: a,
    search: c
  } = oC(e, {
    relative: n
  }), f = a;
  return r !== "/" && (f = a === "/" ? r : Cd([r, a])), o.createHref({
    pathname: f,
    search: c,
    hash: s
  });
}
function sy() {
  return x.useContext(nC) != null;
}
function tp() {
  return sy() || (process.env.NODE_ENV !== "production" ? Pn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : Pn(!1)), x.useContext(nC).location;
}
const KB = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function YB(e) {
  x.useContext(Tl).static || x.useLayoutEffect(e);
}
function rC() {
  let {
    isDataRoute: e
  } = x.useContext(Sc);
  return e ? IK() : bK();
}
function bK() {
  sy() || (process.env.NODE_ENV !== "production" ? Pn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : Pn(!1));
  let e = x.useContext(tC), {
    basename: t,
    future: n,
    navigator: r
  } = x.useContext(Tl), {
    matches: o
  } = x.useContext(Sc), {
    pathname: s
  } = tp(), a = JSON.stringify(fI(o, n.v7_relativeSplatPath)), c = x.useRef(!1);
  return YB(() => {
    c.current = !0;
  }), x.useCallback(function(m, g) {
    if (g === void 0 && (g = {}), process.env.NODE_ENV !== "production" && hu(c.current, KB), !c.current) return;
    if (typeof m == "number") {
      r.go(m);
      return;
    }
    let y = pI(m, JSON.parse(a), s, g.relative === "path");
    e == null && t !== "/" && (y.pathname = y.pathname === "/" ? t : Cd([t, y.pathname])), (g.replace ? r.replace : r.push)(y, g.state, g);
  }, [t, r, a, s, e]);
}
function oC(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    future: r
  } = x.useContext(Tl), {
    matches: o
  } = x.useContext(Sc), {
    pathname: s
  } = tp(), a = JSON.stringify(fI(o, r.v7_relativeSplatPath));
  return x.useMemo(() => pI(e, JSON.parse(a), s, n === "path"), [e, a, s, n]);
}
function wK(e, t) {
  return SK(e, t);
}
function SK(e, t, n, r) {
  sy() || (process.env.NODE_ENV !== "production" ? Pn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  ) : Pn(!1));
  let {
    navigator: o
  } = x.useContext(Tl), {
    matches: s
  } = x.useContext(Sc), a = s[s.length - 1], c = a ? a.params : {}, f = a ? a.pathname : "/", m = a ? a.pathnameBase : "/", g = a && a.route;
  if (process.env.NODE_ENV !== "production") {
    let I = g && g.path || "";
    QB(f, !g || I.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + f + '" (under <Route path="' + I + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + I + '"> to <Route ') + ('path="' + (I === "/" ? "*" : I + "/*") + '">.'));
  }
  let y = tp(), w;
  if (t) {
    var C;
    let I = typeof t == "string" ? iy(t) : t;
    m === "/" || (C = I.pathname) != null && C.startsWith(m) || (process.env.NODE_ENV !== "production" ? Pn(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + m + '" ') + ('but pathname "' + I.pathname + '" was given in the `location` prop.')) : Pn(!1)), w = I;
  } else
    w = y;
  let T = w.pathname || "/", E = T;
  if (m !== "/") {
    let I = m.replace(/^\//, "").split("/");
    E = "/" + T.replace(/^\//, "").split("/").slice(I.length).join("/");
  }
  let O = Y9(e, {
    pathname: E
  });
  process.env.NODE_ENV !== "production" && (process.env.NODE_ENV !== "production" && hu(g || O != null, 'No routes matched location "' + w.pathname + w.search + w.hash + '" '), process.env.NODE_ENV !== "production" && hu(O == null || O[O.length - 1].route.element !== void 0 || O[O.length - 1].route.Component !== void 0 || O[O.length - 1].route.lazy !== void 0, 'Matched leaf route at location "' + w.pathname + w.search + w.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.'));
  let k = _K(O && O.map((I) => Object.assign({}, I, {
    params: Object.assign({}, c, I.params),
    pathname: Cd([
      m,
      // Re-encode pathnames that were decoded inside matchRoutes
      o.encodeLocation ? o.encodeLocation(I.pathname).pathname : I.pathname
    ]),
    pathnameBase: I.pathnameBase === "/" ? m : Cd([
      m,
      // Re-encode pathnames that were decoded inside matchRoutes
      o.encodeLocation ? o.encodeLocation(I.pathnameBase).pathname : I.pathnameBase
    ])
  })), s, n, r);
  return t && k ? /* @__PURE__ */ x.createElement(nC.Provider, {
    value: {
      location: kS({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, w),
      navigationType: $f.Pop
    }
  }, k) : k;
}
function CK() {
  let e = MK(), t = mK(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e), n = e instanceof Error ? e.stack : null, r = "rgba(200,200,200, 0.5)", o = {
    padding: "0.5rem",
    backgroundColor: r
  }, s = {
    padding: "2px 4px",
    backgroundColor: r
  }, a = null;
  return process.env.NODE_ENV !== "production" && (console.error("Error handled by React Router default ErrorBoundary:", e), a = /* @__PURE__ */ x.createElement(x.Fragment, null, /* @__PURE__ */ x.createElement("p", null, "💿 Hey developer 👋"), /* @__PURE__ */ x.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ x.createElement("code", {
    style: s
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ x.createElement("code", {
    style: s
  }, "errorElement"), " prop on your route."))), /* @__PURE__ */ x.createElement(x.Fragment, null, /* @__PURE__ */ x.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ x.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, t), n ? /* @__PURE__ */ x.createElement("pre", {
    style: o
  }, n) : null, a);
}
const xK = /* @__PURE__ */ x.createElement(CK, null);
class EK extends x.Component {
  constructor(t) {
    super(t), this.state = {
      location: t.location,
      revalidation: t.revalidation,
      error: t.error
    };
  }
  static getDerivedStateFromError(t) {
    return {
      error: t
    };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
      error: t.error,
      location: t.location,
      revalidation: t.revalidation
    } : {
      error: t.error !== void 0 ? t.error : n.error,
      location: n.location,
      revalidation: t.revalidation || n.revalidation
    };
  }
  componentDidCatch(t, n) {
    console.error("React Router caught the following error during render", t, n);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ x.createElement(Sc.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ x.createElement(mI.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function TK(e) {
  let {
    routeContext: t,
    match: n,
    children: r
  } = e, o = x.useContext(tC);
  return o && o.static && o.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (o.staticContext._deepestRenderedBoundaryId = n.route.id), /* @__PURE__ */ x.createElement(Sc.Provider, {
    value: t
  }, r);
}
function _K(e, t, n, r) {
  var o;
  if (t === void 0 && (t = []), n === void 0 && (n = null), r === void 0 && (r = null), e == null) {
    var s;
    if (!n)
      return null;
    if (n.errors)
      e = n.matches;
    else if ((s = r) != null && s.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0)
      e = n.matches;
    else
      return null;
  }
  let a = e, c = (o = n) == null ? void 0 : o.errors;
  if (c != null) {
    let g = a.findIndex((y) => y.route.id && (c == null ? void 0 : c[y.route.id]) !== void 0);
    g >= 0 || (process.env.NODE_ENV !== "production" ? Pn(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(c).join(",")) : Pn(!1)), a = a.slice(0, Math.min(a.length, g + 1));
  }
  let f = !1, m = -1;
  if (n && r && r.v7_partialHydration)
    for (let g = 0; g < a.length; g++) {
      let y = a[g];
      if ((y.route.HydrateFallback || y.route.hydrateFallbackElement) && (m = g), y.route.id) {
        let {
          loaderData: w,
          errors: C
        } = n, T = y.route.loader && w[y.route.id] === void 0 && (!C || C[y.route.id] === void 0);
        if (y.route.lazy || T) {
          f = !0, m >= 0 ? a = a.slice(0, m + 1) : a = [a[0]];
          break;
        }
      }
    }
  return a.reduceRight((g, y, w) => {
    let C, T = !1, E = null, O = null;
    n && (C = c && y.route.id ? c[y.route.id] : void 0, E = y.route.errorElement || xK, f && (m < 0 && w === 0 ? (QB("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"), T = !0, O = null) : m === w && (T = !0, O = y.route.hydrateFallbackElement || null)));
    let k = t.concat(a.slice(0, w + 1)), I = () => {
      let M;
      return C ? M = E : T ? M = O : y.route.Component ? M = /* @__PURE__ */ x.createElement(y.route.Component, null) : y.route.element ? M = y.route.element : M = g, /* @__PURE__ */ x.createElement(TK, {
        match: y,
        routeContext: {
          outlet: g,
          matches: k,
          isDataRoute: n != null
        },
        children: M
      });
    };
    return n && (y.route.ErrorBoundary || y.route.errorElement || w === 0) ? /* @__PURE__ */ x.createElement(EK, {
      location: n.location,
      revalidation: n.revalidation,
      component: E,
      error: C,
      children: I(),
      routeContext: {
        outlet: null,
        matches: k,
        isDataRoute: !0
      }
    }) : I();
  }, null);
}
var XB = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e;
}(XB || {}), PS = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e.UseRouteId = "useRouteId", e;
}(PS || {});
function gI(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function OK(e) {
  let t = x.useContext(tC);
  return t || (process.env.NODE_ENV !== "production" ? Pn(!1, gI(e)) : Pn(!1)), t;
}
function RK(e) {
  let t = x.useContext(hI);
  return t || (process.env.NODE_ENV !== "production" ? Pn(!1, gI(e)) : Pn(!1)), t;
}
function kK(e) {
  let t = x.useContext(Sc);
  return t || (process.env.NODE_ENV !== "production" ? Pn(!1, gI(e)) : Pn(!1)), t;
}
function vI(e) {
  let t = kK(e), n = t.matches[t.matches.length - 1];
  return n.route.id || (process.env.NODE_ENV !== "production" ? Pn(!1, e + ' can only be used on routes that contain a unique "id"') : Pn(!1)), n.route.id;
}
function PK() {
  return vI(PS.UseRouteId);
}
function MK() {
  var e;
  let t = x.useContext(mI), n = RK(PS.UseRouteError), r = vI(PS.UseRouteError);
  return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[r];
}
function IK() {
  let {
    router: e
  } = OK(XB.UseNavigateStable), t = vI(PS.UseNavigateStable), n = x.useRef(!1);
  return YB(() => {
    n.current = !0;
  }), x.useCallback(function(o, s) {
    s === void 0 && (s = {}), process.env.NODE_ENV !== "production" && hu(n.current, KB), n.current && (typeof o == "number" ? e.navigate(o) : e.navigate(o, kS({
      fromRouteId: t
    }, s)));
  }, [e, t]);
}
const J$ = {};
function QB(e, t, n) {
  !t && !J$[e] && (J$[e] = !0, process.env.NODE_ENV !== "production" && hu(!1, n));
}
const Z$ = {};
function DK(e, t) {
  process.env.NODE_ENV !== "production" && !Z$[t] && (Z$[t] = !0, console.warn(t));
}
const ej = (e, t, n) => DK(e, "⚠️ React Router Future Flag Warning: " + t + ". " + ("You can use the `" + e + "` future flag to opt-in early. ") + ("For more information, see " + n + "."));
function AK(e, t) {
  (e == null ? void 0 : e.v7_startTransition) === void 0 && ej("v7_startTransition", "React Router will begin wrapping state updates in `React.startTransition` in v7", "https://reactrouter.com/v6/upgrading/future#v7_starttransition"), (e == null ? void 0 : e.v7_relativeSplatPath) === void 0 && ej("v7_relativeSplatPath", "Relative route resolution within Splat routes is changing in v7", "https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath");
}
function _E(e) {
  let {
    to: t,
    replace: n,
    state: r,
    relative: o
  } = e;
  sy() || (process.env.NODE_ENV !== "production" ? Pn(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    "<Navigate> may be used only in the context of a <Router> component."
  ) : Pn(!1));
  let {
    future: s,
    static: a
  } = x.useContext(Tl);
  process.env.NODE_ENV !== "production" && hu(!a, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
  let {
    matches: c
  } = x.useContext(Sc), {
    pathname: f
  } = tp(), m = rC(), g = pI(t, fI(c, s.v7_relativeSplatPath), f, o === "path"), y = JSON.stringify(g);
  return x.useEffect(() => m(JSON.parse(y), {
    replace: n,
    state: r,
    relative: o
  }), [m, y, o, n, r]), null;
}
function Ah(e) {
  process.env.NODE_ENV !== "production" ? Pn(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : Pn(!1);
}
function NK(e) {
  let {
    basename: t = "/",
    children: n = null,
    location: r,
    navigationType: o = $f.Pop,
    navigator: s,
    static: a = !1,
    future: c
  } = e;
  sy() && (process.env.NODE_ENV !== "production" ? Pn(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : Pn(!1));
  let f = t.replace(/^\/*/, "/"), m = x.useMemo(() => ({
    basename: f,
    navigator: s,
    static: a,
    future: kS({
      v7_relativeSplatPath: !1
    }, c)
  }), [f, c, s, a]);
  typeof r == "string" && (r = iy(r));
  let {
    pathname: g = "/",
    search: y = "",
    hash: w = "",
    state: C = null,
    key: T = "default"
  } = r, E = x.useMemo(() => {
    let O = Kf(g, f);
    return O == null ? null : {
      location: {
        pathname: O,
        search: y,
        hash: w,
        state: C,
        key: T
      },
      navigationType: o
    };
  }, [f, g, y, w, C, T, o]);
  return process.env.NODE_ENV !== "production" && hu(E != null, '<Router basename="' + f + '"> is not able to match the URL ' + ('"' + g + y + w + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), E == null ? null : /* @__PURE__ */ x.createElement(Tl.Provider, {
    value: m
  }, /* @__PURE__ */ x.createElement(nC.Provider, {
    children: n,
    value: E
  }));
}
function LK(e) {
  let {
    children: t,
    location: n
  } = e;
  return wK(XP(t), n);
}
new Promise(() => {
});
function XP(e, t) {
  t === void 0 && (t = []);
  let n = [];
  return x.Children.forEach(e, (r, o) => {
    if (!/* @__PURE__ */ x.isValidElement(r))
      return;
    let s = [...t, o];
    if (r.type === x.Fragment) {
      n.push.apply(n, XP(r.props.children, s));
      return;
    }
    r.type !== Ah && (process.env.NODE_ENV !== "production" ? Pn(!1, "[" + (typeof r.type == "string" ? r.type : r.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : Pn(!1)), !r.props.index || !r.props.children || (process.env.NODE_ENV !== "production" ? Pn(!1, "An index route cannot have child routes.") : Pn(!1));
    let a = {
      id: r.props.id || s.join("-"),
      caseSensitive: r.props.caseSensitive,
      element: r.props.element,
      Component: r.props.Component,
      index: r.props.index,
      path: r.props.path,
      loader: r.props.loader,
      action: r.props.action,
      errorElement: r.props.errorElement,
      ErrorBoundary: r.props.ErrorBoundary,
      hasErrorBoundary: r.props.ErrorBoundary != null || r.props.errorElement != null,
      shouldRevalidate: r.props.shouldRevalidate,
      handle: r.props.handle,
      lazy: r.props.lazy
    };
    r.props.children && (a.children = XP(r.props.children, s)), n.push(a);
  }), n;
}
/**
 * React Router DOM v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Fv() {
  return Fv = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n)
        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, Fv.apply(this, arguments);
}
function yI(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), o, s;
  for (s = 0; s < r.length; s++)
    o = r[s], !(t.indexOf(o) >= 0) && (n[o] = e[o]);
  return n;
}
const iT = "get", sT = "application/x-www-form-urlencoded";
function y_(e) {
  return e != null && typeof e.tagName == "string";
}
function $K(e) {
  return y_(e) && e.tagName.toLowerCase() === "button";
}
function jK(e) {
  return y_(e) && e.tagName.toLowerCase() === "form";
}
function FK(e) {
  return y_(e) && e.tagName.toLowerCase() === "input";
}
function zK(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function BK(e, t) {
  return e.button === 0 && // Ignore everything but left clicks
  (!t || t === "_self") && // Let browser handle "target=_blank" etc.
  !zK(e);
}
let OE = null;
function HK() {
  if (OE === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), OE = !1;
    } catch {
      OE = !0;
    }
  return OE;
}
const VK = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function Gk(e) {
  return e != null && !VK.has(e) ? (process.env.NODE_ENV !== "production" && hu(!1, '"' + e + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + sT + '"')), null) : e;
}
function UK(e, t) {
  let n, r, o, s, a;
  if (jK(e)) {
    let c = e.getAttribute("action");
    r = c ? Kf(c, t) : null, n = e.getAttribute("method") || iT, o = Gk(e.getAttribute("enctype")) || sT, s = new FormData(e);
  } else if ($K(e) || FK(e) && (e.type === "submit" || e.type === "image")) {
    let c = e.form;
    if (c == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let f = e.getAttribute("formaction") || c.getAttribute("action");
    if (r = f ? Kf(f, t) : null, n = e.getAttribute("formmethod") || c.getAttribute("method") || iT, o = Gk(e.getAttribute("formenctype")) || Gk(c.getAttribute("enctype")) || sT, s = new FormData(c, e), !HK()) {
      let {
        name: m,
        type: g,
        value: y
      } = e;
      if (g === "image") {
        let w = m ? m + "." : "";
        s.append(w + "x", "0"), s.append(w + "y", "0");
      } else m && s.append(m, y);
    }
  } else {
    if (y_(e))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    n = iT, r = null, o = sT, a = e;
  }
  return s && o === "text/plain" && (a = s, s = void 0), {
    action: r,
    method: n.toLowerCase(),
    encType: o,
    formData: s,
    body: a
  };
}
const WK = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "viewTransition"], GK = ["aria-current", "caseSensitive", "className", "end", "style", "to", "viewTransition", "children"], qK = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "viewTransition"], KK = "6";
try {
  window.__reactRouterVersion = KK;
} catch {
}
const JB = /* @__PURE__ */ x.createContext({
  isTransitioning: !1
});
process.env.NODE_ENV !== "production" && (JB.displayName = "ViewTransition");
const YK = /* @__PURE__ */ x.createContext(/* @__PURE__ */ new Map());
process.env.NODE_ENV !== "production" && (YK.displayName = "Fetchers");
const XK = "startTransition", tj = xT[XK];
function QK(e) {
  let {
    basename: t,
    children: n,
    future: r,
    window: o
  } = e, s = x.useRef();
  s.current == null && (s.current = G9({
    window: o,
    v5Compat: !0
  }));
  let a = s.current, [c, f] = x.useState({
    action: a.action,
    location: a.location
  }), {
    v7_startTransition: m
  } = r || {}, g = x.useCallback((y) => {
    m && tj ? tj(() => f(y)) : f(y);
  }, [f, m]);
  return x.useLayoutEffect(() => a.listen(g), [a, g]), x.useEffect(() => AK(r), [r]), /* @__PURE__ */ x.createElement(NK, {
    basename: t,
    children: n,
    location: c.location,
    navigationType: c.action,
    navigator: a,
    future: r
  });
}
process.env.NODE_ENV;
const JK = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ZK = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, ZB = /* @__PURE__ */ x.forwardRef(function(t, n) {
  let {
    onClick: r,
    relative: o,
    reloadDocument: s,
    replace: a,
    state: c,
    target: f,
    to: m,
    preventScrollReset: g,
    viewTransition: y
  } = t, w = yI(t, WK), {
    basename: C
  } = x.useContext(Tl), T, E = !1;
  if (typeof m == "string" && ZK.test(m) && (T = m, JK))
    try {
      let M = new URL(window.location.href), N = m.startsWith("//") ? new URL(M.protocol + m) : new URL(m), P = Kf(N.pathname, C);
      N.origin === M.origin && P != null ? m = P + N.search + N.hash : E = !0;
    } catch {
      process.env.NODE_ENV !== "production" && hu(!1, '<Link to="' + m + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let O = yK(m, {
    relative: o
  }), k = r7(m, {
    replace: a,
    state: c,
    target: f,
    preventScrollReset: g,
    relative: o,
    viewTransition: y
  });
  function I(M) {
    r && r(M), M.defaultPrevented || k(M);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ x.createElement("a", Fv({}, w, {
      href: T || O,
      onClick: E || s ? r : I,
      ref: n,
      target: f
    }))
  );
});
process.env.NODE_ENV !== "production" && (ZB.displayName = "Link");
const e7 = /* @__PURE__ */ x.forwardRef(function(t, n) {
  let {
    "aria-current": r = "page",
    caseSensitive: o = !1,
    className: s = "",
    end: a = !1,
    style: c,
    to: f,
    viewTransition: m,
    children: g
  } = t, y = yI(t, GK), w = oC(f, {
    relative: y.relative
  }), C = tp(), T = x.useContext(hI), {
    navigator: E,
    basename: O
  } = x.useContext(Tl), k = T != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  u7(w) && m === !0, I = E.encodeLocation ? E.encodeLocation(w).pathname : w.pathname, M = C.pathname, N = T && T.navigation && T.navigation.location ? T.navigation.location.pathname : null;
  o || (M = M.toLowerCase(), N = N ? N.toLowerCase() : null, I = I.toLowerCase()), N && O && (N = Kf(N, O) || N);
  const P = I !== "/" && I.endsWith("/") ? I.length - 1 : I.length;
  let F = M === I || !a && M.startsWith(I) && M.charAt(P) === "/", H = N != null && (N === I || !a && N.startsWith(I) && N.charAt(I.length) === "/"), U = {
    isActive: F,
    isPending: H,
    isTransitioning: k
  }, z = F ? r : void 0, A;
  typeof s == "function" ? A = s(U) : A = [s, F ? "active" : null, H ? "pending" : null, k ? "transitioning" : null].filter(Boolean).join(" ");
  let q = typeof c == "function" ? c(U) : c;
  return /* @__PURE__ */ x.createElement(ZB, Fv({}, y, {
    "aria-current": z,
    className: A,
    ref: n,
    style: q,
    to: f,
    viewTransition: m
  }), typeof g == "function" ? g(U) : g);
});
process.env.NODE_ENV !== "production" && (e7.displayName = "NavLink");
const t7 = /* @__PURE__ */ x.forwardRef((e, t) => {
  let {
    fetcherKey: n,
    navigate: r,
    reloadDocument: o,
    replace: s,
    state: a,
    method: c = iT,
    action: f,
    onSubmit: m,
    relative: g,
    preventScrollReset: y,
    viewTransition: w
  } = e, C = yI(e, qK), T = a7(), E = l7(f, {
    relative: g
  }), O = c.toLowerCase() === "get" ? "get" : "post", k = (I) => {
    if (m && m(I), I.defaultPrevented) return;
    I.preventDefault();
    let M = I.nativeEvent.submitter, N = (M == null ? void 0 : M.getAttribute("formmethod")) || c;
    T(M || I.currentTarget, {
      fetcherKey: n,
      method: N,
      navigate: r,
      replace: s,
      state: a,
      relative: g,
      preventScrollReset: y,
      viewTransition: w
    });
  };
  return /* @__PURE__ */ x.createElement("form", Fv({
    ref: t,
    method: O,
    action: E,
    onSubmit: o ? m : k
  }, C));
});
process.env.NODE_ENV !== "production" && (t7.displayName = "Form");
process.env.NODE_ENV;
var ET;
(function(e) {
  e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(ET || (ET = {}));
var nj;
(function(e) {
  e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(nj || (nj = {}));
function n7(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.";
}
function eH(e) {
  let t = x.useContext(tC);
  return t || (process.env.NODE_ENV !== "production" ? Pn(!1, n7(e)) : Pn(!1)), t;
}
function r7(e, t) {
  let {
    target: n,
    replace: r,
    state: o,
    preventScrollReset: s,
    relative: a,
    viewTransition: c
  } = t === void 0 ? {} : t, f = rC(), m = tp(), g = oC(e, {
    relative: a
  });
  return x.useCallback((y) => {
    if (BK(y, n)) {
      y.preventDefault();
      let w = r !== void 0 ? r : RS(m) === RS(g);
      f(e, {
        replace: w,
        state: o,
        preventScrollReset: s,
        relative: a,
        viewTransition: c
      });
    }
  }, [m, f, g, r, o, n, e, s, a, c]);
}
function o7() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let i7 = 0, s7 = () => "__" + String(++i7) + "__";
function a7() {
  let {
    router: e
  } = eH(ET.UseSubmit), {
    basename: t
  } = x.useContext(Tl), n = PK();
  return x.useCallback(function(r, o) {
    o === void 0 && (o = {}), o7();
    let {
      action: s,
      method: a,
      encType: c,
      formData: f,
      body: m
    } = UK(r, t);
    if (o.navigate === !1) {
      let g = o.fetcherKey || s7();
      e.fetch(g, n, o.action || s, {
        preventScrollReset: o.preventScrollReset,
        formData: f,
        body: m,
        formMethod: o.method || a,
        formEncType: o.encType || c,
        flushSync: o.flushSync
      });
    } else
      e.navigate(o.action || s, {
        preventScrollReset: o.preventScrollReset,
        formData: f,
        body: m,
        formMethod: o.method || a,
        formEncType: o.encType || c,
        replace: o.replace,
        state: o.state,
        fromRouteId: n,
        flushSync: o.flushSync,
        viewTransition: o.viewTransition
      });
  }, [e, t, n]);
}
function l7(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    basename: r
  } = x.useContext(Tl), o = x.useContext(Sc);
  o || (process.env.NODE_ENV !== "production" ? Pn(!1, "useFormAction must be used inside a RouteContext") : Pn(!1));
  let [s] = o.matches.slice(-1), a = Fv({}, oC(e || ".", {
    relative: n
  })), c = tp();
  if (e == null) {
    a.search = c.search;
    let f = new URLSearchParams(a.search), m = f.getAll("index");
    if (m.some((y) => y === "")) {
      f.delete("index"), m.filter((w) => w).forEach((w) => f.append("index", w));
      let y = f.toString();
      a.search = y ? "?" + y : "";
    }
  }
  return (!e || e === ".") && s.route.index && (a.search = a.search ? a.search.replace(/^\?/, "?index&") : "?index"), r !== "/" && (a.pathname = a.pathname === "/" ? r : Cd([r, a.pathname])), RS(a);
}
function u7(e, t) {
  t === void 0 && (t = {});
  let n = x.useContext(JB);
  n == null && (process.env.NODE_ENV !== "production" ? Pn(!1, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : Pn(!1));
  let {
    basename: r
  } = eH(ET.useViewTransitionState), o = oC(e, {
    relative: t.relative
  });
  if (!n.isTransitioning)
    return !1;
  let s = Kf(n.currentLocation.pathname, r) || n.currentLocation.pathname, a = Kf(n.nextLocation.pathname, r) || n.nextLocation.pathname;
  return YP(o.pathname, a) != null || YP(o.pathname, s) != null;
}
const MS = {
  black: "#000",
  white: "#fff"
}, rv = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, ov = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, iv = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, sv = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, av = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
}, Aw = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, c7 = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
function vc(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const pc = "$$material";
function J() {
  return J = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, J.apply(null, arguments);
}
function d7(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function f7(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var p7 = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var s;
      r.tags.length === 0 ? r.insertionPoint ? s = r.insertionPoint.nextSibling : r.prepend ? s = r.container.firstChild : s = r.before : s = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, s), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(f7(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = d7(o);
      try {
        s.insertRule(r, s.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), hs = "-ms-", TT = "-moz-", ur = "-webkit-", tH = "comm", bI = "rule", wI = "decl", h7 = "@import", nH = "@keyframes", m7 = "@layer", g7 = Math.abs, b_ = String.fromCharCode, v7 = Object.assign;
function y7(e, t) {
  return Gi(e, 0) ^ 45 ? (((t << 2 ^ Gi(e, 0)) << 2 ^ Gi(e, 1)) << 2 ^ Gi(e, 2)) << 2 ^ Gi(e, 3) : 0;
}
function rH(e) {
  return e.trim();
}
function b7(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function dr(e, t, n) {
  return e.replace(t, n);
}
function QP(e, t) {
  return e.indexOf(t);
}
function Gi(e, t) {
  return e.charCodeAt(t) | 0;
}
function IS(e, t, n) {
  return e.slice(t, n);
}
function uc(e) {
  return e.length;
}
function SI(e) {
  return e.length;
}
function RE(e, t) {
  return t.push(e), e;
}
function w7(e, t) {
  return e.map(t).join("");
}
var w_ = 1, zv = 1, oH = 0, ua = 0, Ko = 0, ay = "";
function S_(e, t, n, r, o, s, a) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: w_, column: zv, length: a, return: "" };
}
function Nw(e, t) {
  return v7(S_("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function S7() {
  return Ko;
}
function C7() {
  return Ko = ua > 0 ? Gi(ay, --ua) : 0, zv--, Ko === 10 && (zv = 1, w_--), Ko;
}
function Ia() {
  return Ko = ua < oH ? Gi(ay, ua++) : 0, zv++, Ko === 10 && (zv = 1, w_++), Ko;
}
function hc() {
  return Gi(ay, ua);
}
function aT() {
  return ua;
}
function iC(e, t) {
  return IS(ay, e, t);
}
function DS(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function iH(e) {
  return w_ = zv = 1, oH = uc(ay = e), ua = 0, [];
}
function sH(e) {
  return ay = "", e;
}
function lT(e) {
  return rH(iC(ua - 1, JP(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function x7(e) {
  for (; (Ko = hc()) && Ko < 33; )
    Ia();
  return DS(e) > 2 || DS(Ko) > 3 ? "" : " ";
}
function E7(e, t) {
  for (; --t && Ia() && !(Ko < 48 || Ko > 102 || Ko > 57 && Ko < 65 || Ko > 70 && Ko < 97); )
    ;
  return iC(e, aT() + (t < 6 && hc() == 32 && Ia() == 32));
}
function JP(e) {
  for (; Ia(); )
    switch (Ko) {
      case e:
        return ua;
      case 34:
      case 39:
        e !== 34 && e !== 39 && JP(Ko);
        break;
      case 40:
        e === 41 && JP(e);
        break;
      case 92:
        Ia();
        break;
    }
  return ua;
}
function T7(e, t) {
  for (; Ia() && e + Ko !== 57; )
    if (e + Ko === 84 && hc() === 47)
      break;
  return "/*" + iC(t, ua - 1) + "*" + b_(e === 47 ? e : Ia());
}
function _7(e) {
  for (; !DS(hc()); )
    Ia();
  return iC(e, ua);
}
function O7(e) {
  return sH(uT("", null, null, null, [""], e = iH(e), 0, [0], e));
}
function uT(e, t, n, r, o, s, a, c, f) {
  for (var m = 0, g = 0, y = a, w = 0, C = 0, T = 0, E = 1, O = 1, k = 1, I = 0, M = "", N = o, P = s, F = r, H = M; O; )
    switch (T = I, I = Ia()) {
      case 40:
        if (T != 108 && Gi(H, y - 1) == 58) {
          QP(H += dr(lT(I), "&", "&\f"), "&\f") != -1 && (k = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        H += lT(I);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        H += x7(T);
        break;
      case 92:
        H += E7(aT() - 1, 7);
        continue;
      case 47:
        switch (hc()) {
          case 42:
          case 47:
            RE(R7(T7(Ia(), aT()), t, n), f);
            break;
          default:
            H += "/";
        }
        break;
      case 123 * E:
        c[m++] = uc(H) * k;
      case 125 * E:
      case 59:
      case 0:
        switch (I) {
          case 0:
          case 125:
            O = 0;
          case 59 + g:
            k == -1 && (H = dr(H, /\f/g, "")), C > 0 && uc(H) - y && RE(C > 32 ? oj(H + ";", r, n, y - 1) : oj(dr(H, " ", "") + ";", r, n, y - 2), f);
            break;
          case 59:
            H += ";";
          default:
            if (RE(F = rj(H, t, n, m, g, o, c, M, N = [], P = [], y), s), I === 123)
              if (g === 0)
                uT(H, t, F, F, N, s, y, c, P);
              else
                switch (w === 99 && Gi(H, 3) === 110 ? 100 : w) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    uT(e, F, F, r && RE(rj(e, F, F, 0, 0, o, c, M, o, N = [], y), P), o, P, y, c, r ? N : P);
                    break;
                  default:
                    uT(H, F, F, F, [""], P, 0, c, P);
                }
        }
        m = g = C = 0, E = k = 1, M = H = "", y = a;
        break;
      case 58:
        y = 1 + uc(H), C = T;
      default:
        if (E < 1) {
          if (I == 123)
            --E;
          else if (I == 125 && E++ == 0 && C7() == 125)
            continue;
        }
        switch (H += b_(I), I * E) {
          case 38:
            k = g > 0 ? 1 : (H += "\f", -1);
            break;
          case 44:
            c[m++] = (uc(H) - 1) * k, k = 1;
            break;
          case 64:
            hc() === 45 && (H += lT(Ia())), w = hc(), g = y = uc(M = H += _7(aT())), I++;
            break;
          case 45:
            T === 45 && uc(H) == 2 && (E = 0);
        }
    }
  return s;
}
function rj(e, t, n, r, o, s, a, c, f, m, g) {
  for (var y = o - 1, w = o === 0 ? s : [""], C = SI(w), T = 0, E = 0, O = 0; T < r; ++T)
    for (var k = 0, I = IS(e, y + 1, y = g7(E = a[T])), M = e; k < C; ++k)
      (M = rH(E > 0 ? w[k] + " " + I : dr(I, /&\f/g, w[k]))) && (f[O++] = M);
  return S_(e, t, n, o === 0 ? bI : c, f, m, g);
}
function R7(e, t, n) {
  return S_(e, t, n, tH, b_(S7()), IS(e, 2, -2), 0);
}
function oj(e, t, n, r) {
  return S_(e, t, n, wI, IS(e, 0, r), IS(e, r + 1, -1), r);
}
function Mv(e, t) {
  for (var n = "", r = SI(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function k7(e, t, n, r) {
  switch (e.type) {
    case m7:
      if (e.children.length) break;
    case h7:
    case wI:
      return e.return = e.return || e.value;
    case tH:
      return "";
    case nH:
      return e.return = e.value + "{" + Mv(e.children, r) + "}";
    case bI:
      e.value = e.props.join(",");
  }
  return uc(n = Mv(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function P7(e) {
  var t = SI(e);
  return function(n, r, o, s) {
    for (var a = "", c = 0; c < t; c++)
      a += e[c](n, r, o, s) || "";
    return a;
  };
}
function M7(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function aH(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var I7 = function(t, n, r) {
  for (var o = 0, s = 0; o = s, s = hc(), o === 38 && s === 12 && (n[r] = 1), !DS(s); )
    Ia();
  return iC(t, ua);
}, D7 = function(t, n) {
  var r = -1, o = 44;
  do
    switch (DS(o)) {
      case 0:
        o === 38 && hc() === 12 && (n[r] = 1), t[r] += I7(ua - 1, n, r);
        break;
      case 2:
        t[r] += lT(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = hc() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      default:
        t[r] += b_(o);
    }
  while (o = Ia());
  return t;
}, A7 = function(t, n) {
  return sH(D7(iH(t), n));
}, ij = /* @__PURE__ */ new WeakMap(), N7 = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !ij.get(r)) && !o) {
      ij.set(t, !0);
      for (var s = [], a = A7(n, s), c = r.props, f = 0, m = 0; f < a.length; f++)
        for (var g = 0; g < c.length; g++, m++)
          t.props[m] = s[f] ? a[f].replace(/&\f/g, c[g]) : c[g] + " " + a[f];
    }
  }
}, L7 = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function lH(e, t) {
  switch (y7(e, t)) {
    case 5103:
      return ur + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return ur + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return ur + e + TT + e + hs + e + e;
    case 6828:
    case 4268:
      return ur + e + hs + e + e;
    case 6165:
      return ur + e + hs + "flex-" + e + e;
    case 5187:
      return ur + e + dr(e, /(\w+).+(:[^]+)/, ur + "box-$1$2" + hs + "flex-$1$2") + e;
    case 5443:
      return ur + e + hs + "flex-item-" + dr(e, /flex-|-self/, "") + e;
    case 4675:
      return ur + e + hs + "flex-line-pack" + dr(e, /align-content|flex-|-self/, "") + e;
    case 5548:
      return ur + e + hs + dr(e, "shrink", "negative") + e;
    case 5292:
      return ur + e + hs + dr(e, "basis", "preferred-size") + e;
    case 6060:
      return ur + "box-" + dr(e, "-grow", "") + ur + e + hs + dr(e, "grow", "positive") + e;
    case 4554:
      return ur + dr(e, /([^-])(transform)/g, "$1" + ur + "$2") + e;
    case 6187:
      return dr(dr(dr(e, /(zoom-|grab)/, ur + "$1"), /(image-set)/, ur + "$1"), e, "") + e;
    case 5495:
    case 3959:
      return dr(e, /(image-set\([^]*)/, ur + "$1$`$1");
    case 4968:
      return dr(dr(e, /(.+:)(flex-)?(.*)/, ur + "box-pack:$3" + hs + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + ur + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return dr(e, /(.+)-inline(.+)/, ur + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (uc(e) - 1 - t > 6) switch (Gi(e, t + 1)) {
        case 109:
          if (Gi(e, t + 4) !== 45) break;
        case 102:
          return dr(e, /(.+:)(.+)-([^]+)/, "$1" + ur + "$2-$3$1" + TT + (Gi(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        case 115:
          return ~QP(e, "stretch") ? lH(dr(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    case 4949:
      if (Gi(e, t + 1) !== 115) break;
    case 6444:
      switch (Gi(e, uc(e) - 3 - (~QP(e, "!important") && 10))) {
        case 107:
          return dr(e, ":", ":" + ur) + e;
        case 101:
          return dr(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + ur + (Gi(e, 14) === 45 ? "inline-" : "") + "box$3$1" + ur + "$2$3$1" + hs + "$2box$3") + e;
      }
      break;
    case 5936:
      switch (Gi(e, t + 11)) {
        case 114:
          return ur + e + hs + dr(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return ur + e + hs + dr(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return ur + e + hs + dr(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return ur + e + hs + e + e;
  }
  return e;
}
var $7 = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case wI:
      t.return = lH(t.value, t.length);
      break;
    case nH:
      return Mv([Nw(t, {
        value: dr(t.value, "@", "@" + ur)
      })], o);
    case bI:
      if (t.length) return w7(t.props, function(s) {
        switch (b7(s, /(::plac\w+|:read-\w+)/)) {
          case ":read-only":
          case ":read-write":
            return Mv([Nw(t, {
              props: [dr(s, /:(read-\w+)/, ":" + TT + "$1")]
            })], o);
          case "::placeholder":
            return Mv([Nw(t, {
              props: [dr(s, /:(plac\w+)/, ":" + ur + "input-$1")]
            }), Nw(t, {
              props: [dr(s, /:(plac\w+)/, ":" + TT + "$1")]
            }), Nw(t, {
              props: [dr(s, /:(plac\w+)/, hs + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, j7 = [$7], F7 = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(E) {
      var O = E.getAttribute("data-emotion");
      O.indexOf(" ") !== -1 && (document.head.appendChild(E), E.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || j7, s = {}, a, c = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(E) {
      for (var O = E.getAttribute("data-emotion").split(" "), k = 1; k < O.length; k++)
        s[O[k]] = !0;
      c.push(E);
    }
  );
  var f, m = [N7, L7];
  {
    var g, y = [k7, M7(function(E) {
      g.insert(E);
    })], w = P7(m.concat(o, y)), C = function(O) {
      return Mv(O7(O), w);
    };
    f = function(O, k, I, M) {
      g = I, C(O ? O + "{" + k.styles + "}" : k.styles), M && (T.inserted[k.name] = !0);
    };
  }
  var T = {
    key: n,
    sheet: new p7({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: f
  };
  return T.sheet.hydrate(c), T;
}, ZP = { exports: {} }, Sr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sj;
function z7() {
  if (sj) return Sr;
  sj = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, f = e ? Symbol.for("react.async_mode") : 60111, m = e ? Symbol.for("react.concurrent_mode") : 60111, g = e ? Symbol.for("react.forward_ref") : 60112, y = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, C = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, O = e ? Symbol.for("react.fundamental") : 60117, k = e ? Symbol.for("react.responder") : 60118, I = e ? Symbol.for("react.scope") : 60119;
  function M(P) {
    if (typeof P == "object" && P !== null) {
      var F = P.$$typeof;
      switch (F) {
        case t:
          switch (P = P.type, P) {
            case f:
            case m:
            case r:
            case s:
            case o:
            case y:
              return P;
            default:
              switch (P = P && P.$$typeof, P) {
                case c:
                case g:
                case T:
                case C:
                case a:
                  return P;
                default:
                  return F;
              }
          }
        case n:
          return F;
      }
    }
  }
  function N(P) {
    return M(P) === m;
  }
  return Sr.AsyncMode = f, Sr.ConcurrentMode = m, Sr.ContextConsumer = c, Sr.ContextProvider = a, Sr.Element = t, Sr.ForwardRef = g, Sr.Fragment = r, Sr.Lazy = T, Sr.Memo = C, Sr.Portal = n, Sr.Profiler = s, Sr.StrictMode = o, Sr.Suspense = y, Sr.isAsyncMode = function(P) {
    return N(P) || M(P) === f;
  }, Sr.isConcurrentMode = N, Sr.isContextConsumer = function(P) {
    return M(P) === c;
  }, Sr.isContextProvider = function(P) {
    return M(P) === a;
  }, Sr.isElement = function(P) {
    return typeof P == "object" && P !== null && P.$$typeof === t;
  }, Sr.isForwardRef = function(P) {
    return M(P) === g;
  }, Sr.isFragment = function(P) {
    return M(P) === r;
  }, Sr.isLazy = function(P) {
    return M(P) === T;
  }, Sr.isMemo = function(P) {
    return M(P) === C;
  }, Sr.isPortal = function(P) {
    return M(P) === n;
  }, Sr.isProfiler = function(P) {
    return M(P) === s;
  }, Sr.isStrictMode = function(P) {
    return M(P) === o;
  }, Sr.isSuspense = function(P) {
    return M(P) === y;
  }, Sr.isValidElementType = function(P) {
    return typeof P == "string" || typeof P == "function" || P === r || P === m || P === s || P === o || P === y || P === w || typeof P == "object" && P !== null && (P.$$typeof === T || P.$$typeof === C || P.$$typeof === a || P.$$typeof === c || P.$$typeof === g || P.$$typeof === O || P.$$typeof === k || P.$$typeof === I || P.$$typeof === E);
  }, Sr.typeOf = M, Sr;
}
var Cr = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aj;
function B7() {
  return aj || (aj = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, f = e ? Symbol.for("react.async_mode") : 60111, m = e ? Symbol.for("react.concurrent_mode") : 60111, g = e ? Symbol.for("react.forward_ref") : 60112, y = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, C = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, O = e ? Symbol.for("react.fundamental") : 60117, k = e ? Symbol.for("react.responder") : 60118, I = e ? Symbol.for("react.scope") : 60119;
    function M(ce) {
      return typeof ce == "string" || typeof ce == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ce === r || ce === m || ce === s || ce === o || ce === y || ce === w || typeof ce == "object" && ce !== null && (ce.$$typeof === T || ce.$$typeof === C || ce.$$typeof === a || ce.$$typeof === c || ce.$$typeof === g || ce.$$typeof === O || ce.$$typeof === k || ce.$$typeof === I || ce.$$typeof === E);
    }
    function N(ce) {
      if (typeof ce == "object" && ce !== null) {
        var Ce = ce.$$typeof;
        switch (Ce) {
          case t:
            var Ne = ce.type;
            switch (Ne) {
              case f:
              case m:
              case r:
              case s:
              case o:
              case y:
                return Ne;
              default:
                var Be = Ne && Ne.$$typeof;
                switch (Be) {
                  case c:
                  case g:
                  case T:
                  case C:
                  case a:
                    return Be;
                  default:
                    return Ce;
                }
            }
          case n:
            return Ce;
        }
      }
    }
    var P = f, F = m, H = c, U = a, z = t, A = g, q = r, W = T, Y = C, ee = n, G = s, K = o, X = y, te = !1;
    function re(ce) {
      return te || (te = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Q(ce) || N(ce) === f;
    }
    function Q(ce) {
      return N(ce) === m;
    }
    function B(ce) {
      return N(ce) === c;
    }
    function ie(ce) {
      return N(ce) === a;
    }
    function de(ce) {
      return typeof ce == "object" && ce !== null && ce.$$typeof === t;
    }
    function ue(ce) {
      return N(ce) === g;
    }
    function he(ce) {
      return N(ce) === r;
    }
    function ge(ce) {
      return N(ce) === T;
    }
    function fe(ce) {
      return N(ce) === C;
    }
    function pe(ce) {
      return N(ce) === n;
    }
    function be(ce) {
      return N(ce) === s;
    }
    function we(ce) {
      return N(ce) === o;
    }
    function _e(ce) {
      return N(ce) === y;
    }
    Cr.AsyncMode = P, Cr.ConcurrentMode = F, Cr.ContextConsumer = H, Cr.ContextProvider = U, Cr.Element = z, Cr.ForwardRef = A, Cr.Fragment = q, Cr.Lazy = W, Cr.Memo = Y, Cr.Portal = ee, Cr.Profiler = G, Cr.StrictMode = K, Cr.Suspense = X, Cr.isAsyncMode = re, Cr.isConcurrentMode = Q, Cr.isContextConsumer = B, Cr.isContextProvider = ie, Cr.isElement = de, Cr.isForwardRef = ue, Cr.isFragment = he, Cr.isLazy = ge, Cr.isMemo = fe, Cr.isPortal = pe, Cr.isProfiler = be, Cr.isStrictMode = we, Cr.isSuspense = _e, Cr.isValidElementType = M, Cr.typeOf = N;
  }()), Cr;
}
process.env.NODE_ENV === "production" ? ZP.exports = z7() : ZP.exports = B7();
var H7 = ZP.exports, uH = H7, V7 = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, U7 = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, cH = {};
cH[uH.ForwardRef] = V7;
cH[uH.Memo] = U7;
var W7 = !0;
function dH(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var CI = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  W7 === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, xI = function(t, n, r) {
  CI(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + o : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function G7(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var q7 = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, K7 = /[A-Z]|^ms/g, Y7 = /_EMO_([^_]+?)_([^]*?)_EMO_/g, fH = function(t) {
  return t.charCodeAt(1) === 45;
}, lj = function(t) {
  return t != null && typeof t != "boolean";
}, qk = /* @__PURE__ */ aH(function(e) {
  return fH(e) ? e : e.replace(K7, "-$&").toLowerCase();
}), uj = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(Y7, function(r, o, s) {
          return cc = {
            name: o,
            styles: s,
            next: cc
          }, o;
        });
  }
  return q7[t] !== 1 && !fH(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function AS(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return cc = {
          name: o.name,
          styles: o.styles,
          next: cc
        }, o.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            cc = {
              name: a.name,
              styles: a.styles,
              next: cc
            }, a = a.next;
        var c = s.styles + ";";
        return c;
      }
      return X7(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var f = cc, m = n(e);
        return cc = f, AS(e, t, m);
      }
      break;
    }
  }
  var g = n;
  if (t == null)
    return g;
  var y = t[g];
  return y !== void 0 ? y : g;
}
function X7(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += AS(e, t, n[o]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var c = a;
        t != null && t[c] !== void 0 ? r += s + "{" + t[c] + "}" : lj(c) && (r += qk(s) + ":" + uj(s, c) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var f = 0; f < a.length; f++)
          lj(a[f]) && (r += qk(s) + ":" + uj(s, a[f]) + ";");
      else {
        var m = AS(e, t, a);
        switch (s) {
          case "animation":
          case "animationName": {
            r += qk(s) + ":" + m + ";";
            break;
          }
          default:
            r += s + "{" + m + "}";
        }
      }
    }
  return r;
}
var cj = /label:\s*([^\s;{]+)\s*(;|$)/g, cc;
function ly(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  cc = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    r = !1, o += AS(n, t, s);
  else {
    var a = s;
    o += a[0];
  }
  for (var c = 1; c < e.length; c++)
    if (o += AS(n, t, e[c]), r) {
      var f = s;
      o += f[c];
    }
  cj.lastIndex = 0;
  for (var m = "", g; (g = cj.exec(o)) !== null; )
    m += "-" + g[1];
  var y = G7(o) + m;
  return {
    name: y,
    styles: o,
    next: cc
  };
}
var Q7 = function(t) {
  return t();
}, pH = xT.useInsertionEffect ? xT.useInsertionEffect : !1, hH = pH || Q7, dj = pH || x.useLayoutEffect, mH = /* @__PURE__ */ x.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ F7({
    key: "css"
  }) : null
);
mH.Provider;
var EI = function(t) {
  return /* @__PURE__ */ x.forwardRef(function(n, r) {
    var o = x.useContext(mH);
    return t(n, o, r);
  });
}, sC = /* @__PURE__ */ x.createContext({}), TI = {}.hasOwnProperty, eM = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", J7 = function(t, n) {
  var r = {};
  for (var o in n)
    TI.call(n, o) && (r[o] = n[o]);
  return r[eM] = t, r;
}, Z7 = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return CI(n, r, o), hH(function() {
    return xI(n, r, o);
  }), null;
}, eY = /* @__PURE__ */ EI(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[eM], s = [r], a = "";
  typeof e.className == "string" ? a = dH(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
  var c = ly(s, void 0, x.useContext(sC));
  a += t.key + "-" + c.name;
  var f = {};
  for (var m in e)
    TI.call(e, m) && m !== "css" && m !== eM && (f[m] = e[m]);
  return f.className = a, n && (f.ref = n), /* @__PURE__ */ x.createElement(x.Fragment, null, /* @__PURE__ */ x.createElement(Z7, {
    cache: t,
    serialized: c,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ x.createElement(o, f));
}), tY = eY, fj = function(t, n) {
  var r = arguments;
  if (n == null || !TI.call(n, "css"))
    return x.createElement.apply(void 0, r);
  var o = r.length, s = new Array(o);
  s[0] = tY, s[1] = J7(t, n);
  for (var a = 2; a < o; a++)
    s[a] = r[a];
  return x.createElement.apply(null, s);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(fj || (fj = {}));
var nY = /* @__PURE__ */ EI(function(e, t) {
  var n = e.styles, r = ly([n], void 0, x.useContext(sC)), o = x.useRef();
  return dj(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), c = !1, f = document.querySelector('style[data-emotion="' + s + " " + r.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), f !== null && (c = !0, f.setAttribute("data-emotion", s), a.hydrate([f])), o.current = [a, c], function() {
      a.flush();
    };
  }, [t]), dj(function() {
    var s = o.current, a = s[0], c = s[1];
    if (c) {
      s[1] = !1;
      return;
    }
    if (r.next !== void 0 && xI(t, r.next, !0), a.tags.length) {
      var f = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = f, a.flush();
    }
    t.insert("", r, a, !1);
  }, [t, r.name]), null;
});
function np() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return ly(t);
}
function Cc() {
  var e = np.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var rY = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|popover|popoverTarget|popoverTargetAction|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, oY = /* @__PURE__ */ aH(
  function(e) {
    return rY.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), iY = oY, sY = function(t) {
  return t !== "theme";
}, pj = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? iY : sY;
}, hj = function(t, n, r) {
  var o;
  if (n) {
    var s = n.shouldForwardProp;
    o = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, aY = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return CI(n, r, o), hH(function() {
    return xI(n, r, o);
  }), null;
}, lY = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var c = hj(t, n, r), f = c || pj(o), m = !f("as");
  return function() {
    var g = arguments, y = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && y.push("label:" + s + ";"), g[0] == null || g[0].raw === void 0)
      y.push.apply(y, g);
    else {
      var w = g[0];
      y.push(w[0]);
      for (var C = g.length, T = 1; T < C; T++)
        y.push(g[T], w[T]);
    }
    var E = EI(function(O, k, I) {
      var M = m && O.as || o, N = "", P = [], F = O;
      if (O.theme == null) {
        F = {};
        for (var H in O)
          F[H] = O[H];
        F.theme = x.useContext(sC);
      }
      typeof O.className == "string" ? N = dH(k.registered, P, O.className) : O.className != null && (N = O.className + " ");
      var U = ly(y.concat(P), k.registered, F);
      N += k.key + "-" + U.name, a !== void 0 && (N += " " + a);
      var z = m && c === void 0 ? pj(M) : f, A = {};
      for (var q in O)
        m && q === "as" || z(q) && (A[q] = O[q]);
      return A.className = N, I && (A.ref = I), /* @__PURE__ */ x.createElement(x.Fragment, null, /* @__PURE__ */ x.createElement(aY, {
        cache: k,
        serialized: U,
        isStringTag: typeof M == "string"
      }), /* @__PURE__ */ x.createElement(M, A));
    });
    return E.displayName = s !== void 0 ? s : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", E.defaultProps = t.defaultProps, E.__emotion_real = E, E.__emotion_base = o, E.__emotion_styles = y, E.__emotion_forwardProp = c, Object.defineProperty(E, "toString", {
      value: function() {
        return "." + a;
      }
    }), E.withComponent = function(O, k) {
      var I = e(O, J({}, n, k, {
        shouldForwardProp: hj(E, k, !0)
      }));
      return I.apply(void 0, y);
    }, E;
  };
}, uY = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], _T = lY.bind(null);
uY.forEach(function(e) {
  _T[e] = _T(e);
});
var tM = { exports: {} }, kE = { exports: {} }, xr = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var mj;
function cY() {
  if (mj) return xr;
  mj = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, f = e ? Symbol.for("react.async_mode") : 60111, m = e ? Symbol.for("react.concurrent_mode") : 60111, g = e ? Symbol.for("react.forward_ref") : 60112, y = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, C = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, O = e ? Symbol.for("react.fundamental") : 60117, k = e ? Symbol.for("react.responder") : 60118, I = e ? Symbol.for("react.scope") : 60119;
  function M(P) {
    if (typeof P == "object" && P !== null) {
      var F = P.$$typeof;
      switch (F) {
        case t:
          switch (P = P.type, P) {
            case f:
            case m:
            case r:
            case s:
            case o:
            case y:
              return P;
            default:
              switch (P = P && P.$$typeof, P) {
                case c:
                case g:
                case T:
                case C:
                case a:
                  return P;
                default:
                  return F;
              }
          }
        case n:
          return F;
      }
    }
  }
  function N(P) {
    return M(P) === m;
  }
  return xr.AsyncMode = f, xr.ConcurrentMode = m, xr.ContextConsumer = c, xr.ContextProvider = a, xr.Element = t, xr.ForwardRef = g, xr.Fragment = r, xr.Lazy = T, xr.Memo = C, xr.Portal = n, xr.Profiler = s, xr.StrictMode = o, xr.Suspense = y, xr.isAsyncMode = function(P) {
    return N(P) || M(P) === f;
  }, xr.isConcurrentMode = N, xr.isContextConsumer = function(P) {
    return M(P) === c;
  }, xr.isContextProvider = function(P) {
    return M(P) === a;
  }, xr.isElement = function(P) {
    return typeof P == "object" && P !== null && P.$$typeof === t;
  }, xr.isForwardRef = function(P) {
    return M(P) === g;
  }, xr.isFragment = function(P) {
    return M(P) === r;
  }, xr.isLazy = function(P) {
    return M(P) === T;
  }, xr.isMemo = function(P) {
    return M(P) === C;
  }, xr.isPortal = function(P) {
    return M(P) === n;
  }, xr.isProfiler = function(P) {
    return M(P) === s;
  }, xr.isStrictMode = function(P) {
    return M(P) === o;
  }, xr.isSuspense = function(P) {
    return M(P) === y;
  }, xr.isValidElementType = function(P) {
    return typeof P == "string" || typeof P == "function" || P === r || P === m || P === s || P === o || P === y || P === w || typeof P == "object" && P !== null && (P.$$typeof === T || P.$$typeof === C || P.$$typeof === a || P.$$typeof === c || P.$$typeof === g || P.$$typeof === O || P.$$typeof === k || P.$$typeof === I || P.$$typeof === E);
  }, xr.typeOf = M, xr;
}
var Er = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var gj;
function dY() {
  return gj || (gj = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, c = e ? Symbol.for("react.context") : 60110, f = e ? Symbol.for("react.async_mode") : 60111, m = e ? Symbol.for("react.concurrent_mode") : 60111, g = e ? Symbol.for("react.forward_ref") : 60112, y = e ? Symbol.for("react.suspense") : 60113, w = e ? Symbol.for("react.suspense_list") : 60120, C = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, E = e ? Symbol.for("react.block") : 60121, O = e ? Symbol.for("react.fundamental") : 60117, k = e ? Symbol.for("react.responder") : 60118, I = e ? Symbol.for("react.scope") : 60119;
    function M(ce) {
      return typeof ce == "string" || typeof ce == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ce === r || ce === m || ce === s || ce === o || ce === y || ce === w || typeof ce == "object" && ce !== null && (ce.$$typeof === T || ce.$$typeof === C || ce.$$typeof === a || ce.$$typeof === c || ce.$$typeof === g || ce.$$typeof === O || ce.$$typeof === k || ce.$$typeof === I || ce.$$typeof === E);
    }
    function N(ce) {
      if (typeof ce == "object" && ce !== null) {
        var Ce = ce.$$typeof;
        switch (Ce) {
          case t:
            var Ne = ce.type;
            switch (Ne) {
              case f:
              case m:
              case r:
              case s:
              case o:
              case y:
                return Ne;
              default:
                var Be = Ne && Ne.$$typeof;
                switch (Be) {
                  case c:
                  case g:
                  case T:
                  case C:
                  case a:
                    return Be;
                  default:
                    return Ce;
                }
            }
          case n:
            return Ce;
        }
      }
    }
    var P = f, F = m, H = c, U = a, z = t, A = g, q = r, W = T, Y = C, ee = n, G = s, K = o, X = y, te = !1;
    function re(ce) {
      return te || (te = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Q(ce) || N(ce) === f;
    }
    function Q(ce) {
      return N(ce) === m;
    }
    function B(ce) {
      return N(ce) === c;
    }
    function ie(ce) {
      return N(ce) === a;
    }
    function de(ce) {
      return typeof ce == "object" && ce !== null && ce.$$typeof === t;
    }
    function ue(ce) {
      return N(ce) === g;
    }
    function he(ce) {
      return N(ce) === r;
    }
    function ge(ce) {
      return N(ce) === T;
    }
    function fe(ce) {
      return N(ce) === C;
    }
    function pe(ce) {
      return N(ce) === n;
    }
    function be(ce) {
      return N(ce) === s;
    }
    function we(ce) {
      return N(ce) === o;
    }
    function _e(ce) {
      return N(ce) === y;
    }
    Er.AsyncMode = P, Er.ConcurrentMode = F, Er.ContextConsumer = H, Er.ContextProvider = U, Er.Element = z, Er.ForwardRef = A, Er.Fragment = q, Er.Lazy = W, Er.Memo = Y, Er.Portal = ee, Er.Profiler = G, Er.StrictMode = K, Er.Suspense = X, Er.isAsyncMode = re, Er.isConcurrentMode = Q, Er.isContextConsumer = B, Er.isContextProvider = ie, Er.isElement = de, Er.isForwardRef = ue, Er.isFragment = he, Er.isLazy = ge, Er.isMemo = fe, Er.isPortal = pe, Er.isProfiler = be, Er.isStrictMode = we, Er.isSuspense = _e, Er.isValidElementType = M, Er.typeOf = N;
  }()), Er;
}
var vj;
function gH() {
  return vj || (vj = 1, process.env.NODE_ENV === "production" ? kE.exports = cY() : kE.exports = dY()), kE.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Kk, yj;
function fY() {
  if (yj) return Kk;
  yj = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, c = 0; c < 10; c++)
        a["_" + String.fromCharCode(c)] = c;
      var f = Object.getOwnPropertyNames(a).map(function(g) {
        return a[g];
      });
      if (f.join("") !== "0123456789")
        return !1;
      var m = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(g) {
        m[g] = g;
      }), Object.keys(Object.assign({}, m)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Kk = o() ? Object.assign : function(s, a) {
    for (var c, f = r(s), m, g = 1; g < arguments.length; g++) {
      c = Object(arguments[g]);
      for (var y in c)
        t.call(c, y) && (f[y] = c[y]);
      if (e) {
        m = e(c);
        for (var w = 0; w < m.length; w++)
          n.call(c, m[w]) && (f[m[w]] = c[m[w]]);
      }
    }
    return f;
  }, Kk;
}
var Yk, bj;
function _I() {
  if (bj) return Yk;
  bj = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Yk = e, Yk;
}
var Xk, wj;
function vH() {
  return wj || (wj = 1, Xk = Function.call.bind(Object.prototype.hasOwnProperty)), Xk;
}
var Qk, Sj;
function pY() {
  if (Sj) return Qk;
  Sj = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = _I(), n = {}, r = vH();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function o(s, a, c, f, m) {
    if (process.env.NODE_ENV !== "production") {
      for (var g in s)
        if (r(s, g)) {
          var y;
          try {
            if (typeof s[g] != "function") {
              var w = Error(
                (f || "React class") + ": " + c + " type `" + g + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[g] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw w.name = "Invariant Violation", w;
            }
            y = s[g](a, g, f, c, null, t);
          } catch (T) {
            y = T;
          }
          if (y && !(y instanceof Error) && e(
            (f || "React class") + ": type specification of " + c + " `" + g + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof y + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), y instanceof Error && !(y.message in n)) {
            n[y.message] = !0;
            var C = m ? m() : "";
            e(
              "Failed " + c + " type: " + y.message + (C ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Qk = o, Qk;
}
var Jk, Cj;
function hY() {
  if (Cj) return Jk;
  Cj = 1;
  var e = gH(), t = fY(), n = _I(), r = vH(), o = pY(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(c) {
    var f = "Warning: " + c;
    typeof console < "u" && console.error(f);
    try {
      throw new Error(f);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return Jk = function(c, f) {
    var m = typeof Symbol == "function" && Symbol.iterator, g = "@@iterator";
    function y(Q) {
      var B = Q && (m && Q[m] || Q[g]);
      if (typeof B == "function")
        return B;
    }
    var w = "<<anonymous>>", C = {
      array: k("array"),
      bigint: k("bigint"),
      bool: k("boolean"),
      func: k("function"),
      number: k("number"),
      object: k("object"),
      string: k("string"),
      symbol: k("symbol"),
      any: I(),
      arrayOf: M,
      element: N(),
      elementType: P(),
      instanceOf: F,
      node: A(),
      objectOf: U,
      oneOf: H,
      oneOfType: z,
      shape: W,
      exact: Y
    };
    function T(Q, B) {
      return Q === B ? Q !== 0 || 1 / Q === 1 / B : Q !== Q && B !== B;
    }
    function E(Q, B) {
      this.message = Q, this.data = B && typeof B == "object" ? B : {}, this.stack = "";
    }
    E.prototype = Error.prototype;
    function O(Q) {
      if (process.env.NODE_ENV !== "production")
        var B = {}, ie = 0;
      function de(he, ge, fe, pe, be, we, _e) {
        if (pe = pe || w, we = we || fe, _e !== n) {
          if (f) {
            var ce = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw ce.name = "Invariant Violation", ce;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Ce = pe + ":" + fe;
            !B[Ce] && // Avoid spamming the console because they are often not actionable except for lib authors
            ie < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + we + "` prop on `" + pe + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), B[Ce] = !0, ie++);
          }
        }
        return ge[fe] == null ? he ? ge[fe] === null ? new E("The " + be + " `" + we + "` is marked as required " + ("in `" + pe + "`, but its value is `null`.")) : new E("The " + be + " `" + we + "` is marked as required in " + ("`" + pe + "`, but its value is `undefined`.")) : null : Q(ge, fe, pe, be, we);
      }
      var ue = de.bind(null, !1);
      return ue.isRequired = de.bind(null, !0), ue;
    }
    function k(Q) {
      function B(ie, de, ue, he, ge, fe) {
        var pe = ie[de], be = K(pe);
        if (be !== Q) {
          var we = X(pe);
          return new E(
            "Invalid " + he + " `" + ge + "` of type " + ("`" + we + "` supplied to `" + ue + "`, expected ") + ("`" + Q + "`."),
            { expectedType: Q }
          );
        }
        return null;
      }
      return O(B);
    }
    function I() {
      return O(a);
    }
    function M(Q) {
      function B(ie, de, ue, he, ge) {
        if (typeof Q != "function")
          return new E("Property `" + ge + "` of component `" + ue + "` has invalid PropType notation inside arrayOf.");
        var fe = ie[de];
        if (!Array.isArray(fe)) {
          var pe = K(fe);
          return new E("Invalid " + he + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ue + "`, expected an array."));
        }
        for (var be = 0; be < fe.length; be++) {
          var we = Q(fe, be, ue, he, ge + "[" + be + "]", n);
          if (we instanceof Error)
            return we;
        }
        return null;
      }
      return O(B);
    }
    function N() {
      function Q(B, ie, de, ue, he) {
        var ge = B[ie];
        if (!c(ge)) {
          var fe = K(ge);
          return new E("Invalid " + ue + " `" + he + "` of type " + ("`" + fe + "` supplied to `" + de + "`, expected a single ReactElement."));
        }
        return null;
      }
      return O(Q);
    }
    function P() {
      function Q(B, ie, de, ue, he) {
        var ge = B[ie];
        if (!e.isValidElementType(ge)) {
          var fe = K(ge);
          return new E("Invalid " + ue + " `" + he + "` of type " + ("`" + fe + "` supplied to `" + de + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return O(Q);
    }
    function F(Q) {
      function B(ie, de, ue, he, ge) {
        if (!(ie[de] instanceof Q)) {
          var fe = Q.name || w, pe = re(ie[de]);
          return new E("Invalid " + he + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ue + "`, expected ") + ("instance of `" + fe + "`."));
        }
        return null;
      }
      return O(B);
    }
    function H(Q) {
      if (!Array.isArray(Q))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function B(ie, de, ue, he, ge) {
        for (var fe = ie[de], pe = 0; pe < Q.length; pe++)
          if (T(fe, Q[pe]))
            return null;
        var be = JSON.stringify(Q, function(_e, ce) {
          var Ce = X(ce);
          return Ce === "symbol" ? String(ce) : ce;
        });
        return new E("Invalid " + he + " `" + ge + "` of value `" + String(fe) + "` " + ("supplied to `" + ue + "`, expected one of " + be + "."));
      }
      return O(B);
    }
    function U(Q) {
      function B(ie, de, ue, he, ge) {
        if (typeof Q != "function")
          return new E("Property `" + ge + "` of component `" + ue + "` has invalid PropType notation inside objectOf.");
        var fe = ie[de], pe = K(fe);
        if (pe !== "object")
          return new E("Invalid " + he + " `" + ge + "` of type " + ("`" + pe + "` supplied to `" + ue + "`, expected an object."));
        for (var be in fe)
          if (r(fe, be)) {
            var we = Q(fe, be, ue, he, ge + "." + be, n);
            if (we instanceof Error)
              return we;
          }
        return null;
      }
      return O(B);
    }
    function z(Q) {
      if (!Array.isArray(Q))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var B = 0; B < Q.length; B++) {
        var ie = Q[B];
        if (typeof ie != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + te(ie) + " at index " + B + "."
          ), a;
      }
      function de(ue, he, ge, fe, pe) {
        for (var be = [], we = 0; we < Q.length; we++) {
          var _e = Q[we], ce = _e(ue, he, ge, fe, pe, n);
          if (ce == null)
            return null;
          ce.data && r(ce.data, "expectedType") && be.push(ce.data.expectedType);
        }
        var Ce = be.length > 0 ? ", expected one of type [" + be.join(", ") + "]" : "";
        return new E("Invalid " + fe + " `" + pe + "` supplied to " + ("`" + ge + "`" + Ce + "."));
      }
      return O(de);
    }
    function A() {
      function Q(B, ie, de, ue, he) {
        return ee(B[ie]) ? null : new E("Invalid " + ue + " `" + he + "` supplied to " + ("`" + de + "`, expected a ReactNode."));
      }
      return O(Q);
    }
    function q(Q, B, ie, de, ue) {
      return new E(
        (Q || "React class") + ": " + B + " type `" + ie + "." + de + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + ue + "`."
      );
    }
    function W(Q) {
      function B(ie, de, ue, he, ge) {
        var fe = ie[de], pe = K(fe);
        if (pe !== "object")
          return new E("Invalid " + he + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ue + "`, expected `object`."));
        for (var be in Q) {
          var we = Q[be];
          if (typeof we != "function")
            return q(ue, he, ge, be, X(we));
          var _e = we(fe, be, ue, he, ge + "." + be, n);
          if (_e)
            return _e;
        }
        return null;
      }
      return O(B);
    }
    function Y(Q) {
      function B(ie, de, ue, he, ge) {
        var fe = ie[de], pe = K(fe);
        if (pe !== "object")
          return new E("Invalid " + he + " `" + ge + "` of type `" + pe + "` " + ("supplied to `" + ue + "`, expected `object`."));
        var be = t({}, ie[de], Q);
        for (var we in be) {
          var _e = Q[we];
          if (r(Q, we) && typeof _e != "function")
            return q(ue, he, ge, we, X(_e));
          if (!_e)
            return new E(
              "Invalid " + he + " `" + ge + "` key `" + we + "` supplied to `" + ue + "`.\nBad object: " + JSON.stringify(ie[de], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(Q), null, "  ")
            );
          var ce = _e(fe, we, ue, he, ge + "." + we, n);
          if (ce)
            return ce;
        }
        return null;
      }
      return O(B);
    }
    function ee(Q) {
      switch (typeof Q) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !Q;
        case "object":
          if (Array.isArray(Q))
            return Q.every(ee);
          if (Q === null || c(Q))
            return !0;
          var B = y(Q);
          if (B) {
            var ie = B.call(Q), de;
            if (B !== Q.entries) {
              for (; !(de = ie.next()).done; )
                if (!ee(de.value))
                  return !1;
            } else
              for (; !(de = ie.next()).done; ) {
                var ue = de.value;
                if (ue && !ee(ue[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function G(Q, B) {
      return Q === "symbol" ? !0 : B ? B["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && B instanceof Symbol : !1;
    }
    function K(Q) {
      var B = typeof Q;
      return Array.isArray(Q) ? "array" : Q instanceof RegExp ? "object" : G(B, Q) ? "symbol" : B;
    }
    function X(Q) {
      if (typeof Q > "u" || Q === null)
        return "" + Q;
      var B = K(Q);
      if (B === "object") {
        if (Q instanceof Date)
          return "date";
        if (Q instanceof RegExp)
          return "regexp";
      }
      return B;
    }
    function te(Q) {
      var B = X(Q);
      switch (B) {
        case "array":
        case "object":
          return "an " + B;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + B;
        default:
          return B;
      }
    }
    function re(Q) {
      return !Q.constructor || !Q.constructor.name ? w : Q.constructor.name;
    }
    return C.checkPropTypes = o, C.resetWarningCache = o.resetWarningCache, C.PropTypes = C, C;
  }, Jk;
}
var Zk, xj;
function mY() {
  if (xj) return Zk;
  xj = 1;
  var e = _I();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, Zk = function() {
    function r(a, c, f, m, g, y) {
      if (y !== e) {
        var w = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw w.name = "Invariant Violation", w;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, Zk;
}
if (process.env.NODE_ENV !== "production") {
  var gY = gH(), vY = !0;
  tM.exports = hY()(gY.isElement, vY);
} else
  tM.exports = mY()();
var yY = tM.exports;
const u = /* @__PURE__ */ dI(yY);
function bY(e) {
  return e == null || Object.keys(e).length === 0;
}
function OI(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e, r = typeof t == "function" ? (o) => t(bY(o) ? n : o) : t;
  return /* @__PURE__ */ $.jsx(nY, {
    styles: r
  });
}
process.env.NODE_ENV !== "production" && (OI.propTypes = {
  defaultTheme: u.object,
  styles: u.oneOfType([u.array, u.string, u.object, u.func])
});
/**
 * @mui/styled-engine v6.5.0
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function yH(e, t) {
  const n = _T(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function wY(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Ej = [];
function Vf(e) {
  return Ej[0] = e, ly(Ej);
}
var nM = { exports: {} }, Dr = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Tj;
function SY() {
  if (Tj) return Dr;
  Tj = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), f = Symbol.for("react.suspense"), m = Symbol.for("react.suspense_list"), g = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), w = Symbol.for("react.view_transition"), C = Symbol.for("react.client.reference");
  function T(E) {
    if (typeof E == "object" && E !== null) {
      var O = E.$$typeof;
      switch (O) {
        case e:
          switch (E = E.type, E) {
            case n:
            case o:
            case r:
            case f:
            case m:
            case w:
              return E;
            default:
              switch (E = E && E.$$typeof, E) {
                case a:
                case c:
                case y:
                case g:
                  return E;
                case s:
                  return E;
                default:
                  return O;
              }
          }
        case t:
          return O;
      }
    }
  }
  return Dr.ContextConsumer = s, Dr.ContextProvider = a, Dr.Element = e, Dr.ForwardRef = c, Dr.Fragment = n, Dr.Lazy = y, Dr.Memo = g, Dr.Portal = t, Dr.Profiler = o, Dr.StrictMode = r, Dr.Suspense = f, Dr.SuspenseList = m, Dr.isContextConsumer = function(E) {
    return T(E) === s;
  }, Dr.isContextProvider = function(E) {
    return T(E) === a;
  }, Dr.isElement = function(E) {
    return typeof E == "object" && E !== null && E.$$typeof === e;
  }, Dr.isForwardRef = function(E) {
    return T(E) === c;
  }, Dr.isFragment = function(E) {
    return T(E) === n;
  }, Dr.isLazy = function(E) {
    return T(E) === y;
  }, Dr.isMemo = function(E) {
    return T(E) === g;
  }, Dr.isPortal = function(E) {
    return T(E) === t;
  }, Dr.isProfiler = function(E) {
    return T(E) === o;
  }, Dr.isStrictMode = function(E) {
    return T(E) === r;
  }, Dr.isSuspense = function(E) {
    return T(E) === f;
  }, Dr.isSuspenseList = function(E) {
    return T(E) === m;
  }, Dr.isValidElementType = function(E) {
    return typeof E == "string" || typeof E == "function" || E === n || E === o || E === r || E === f || E === m || typeof E == "object" && E !== null && (E.$$typeof === y || E.$$typeof === g || E.$$typeof === a || E.$$typeof === s || E.$$typeof === c || E.$$typeof === C || E.getModuleId !== void 0);
  }, Dr.typeOf = T, Dr;
}
var Ar = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _j;
function CY() {
  return _j || (_j = 1, process.env.NODE_ENV !== "production" && function() {
    function e(E) {
      if (typeof E == "object" && E !== null) {
        var O = E.$$typeof;
        switch (O) {
          case t:
            switch (E = E.type, E) {
              case r:
              case s:
              case o:
              case m:
              case g:
              case C:
                return E;
              default:
                switch (E = E && E.$$typeof, E) {
                  case c:
                  case f:
                  case w:
                  case y:
                    return E;
                  case a:
                    return E;
                  default:
                    return O;
                }
            }
          case n:
            return O;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), c = Symbol.for("react.context"), f = Symbol.for("react.forward_ref"), m = Symbol.for("react.suspense"), g = Symbol.for("react.suspense_list"), y = Symbol.for("react.memo"), w = Symbol.for("react.lazy"), C = Symbol.for("react.view_transition"), T = Symbol.for("react.client.reference");
    Ar.ContextConsumer = a, Ar.ContextProvider = c, Ar.Element = t, Ar.ForwardRef = f, Ar.Fragment = r, Ar.Lazy = w, Ar.Memo = y, Ar.Portal = n, Ar.Profiler = s, Ar.StrictMode = o, Ar.Suspense = m, Ar.SuspenseList = g, Ar.isContextConsumer = function(E) {
      return e(E) === a;
    }, Ar.isContextProvider = function(E) {
      return e(E) === c;
    }, Ar.isElement = function(E) {
      return typeof E == "object" && E !== null && E.$$typeof === t;
    }, Ar.isForwardRef = function(E) {
      return e(E) === f;
    }, Ar.isFragment = function(E) {
      return e(E) === r;
    }, Ar.isLazy = function(E) {
      return e(E) === w;
    }, Ar.isMemo = function(E) {
      return e(E) === y;
    }, Ar.isPortal = function(E) {
      return e(E) === n;
    }, Ar.isProfiler = function(E) {
      return e(E) === s;
    }, Ar.isStrictMode = function(E) {
      return e(E) === o;
    }, Ar.isSuspense = function(E) {
      return e(E) === m;
    }, Ar.isSuspenseList = function(E) {
      return e(E) === g;
    }, Ar.isValidElementType = function(E) {
      return typeof E == "string" || typeof E == "function" || E === r || E === s || E === o || E === m || E === g || typeof E == "object" && E !== null && (E.$$typeof === w || E.$$typeof === y || E.$$typeof === c || E.$$typeof === a || E.$$typeof === f || E.$$typeof === T || E.getModuleId !== void 0);
    }, Ar.typeOf = e;
  }()), Ar;
}
process.env.NODE_ENV === "production" ? nM.exports = SY() : nM.exports = CY();
var mu = nM.exports;
function dc(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function bH(e) {
  if (/* @__PURE__ */ x.isValidElement(e) || mu.isValidElementType(e) || !dc(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = bH(e[n]);
  }), t;
}
function Oi(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return dc(e) && dc(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ x.isValidElement(t[o]) || mu.isValidElementType(t[o]) ? r[o] = t[o] : dc(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && dc(e[o]) ? r[o] = Oi(e[o], t[o], n) : n.clone ? r[o] = dc(t[o]) ? bH(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const xY = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function EY(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = xY(t), a = Object.keys(s);
  function c(w) {
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n})`;
  }
  function f(w) {
    return `@media (max-width:${(typeof t[w] == "number" ? t[w] : w) - r / 100}${n})`;
  }
  function m(w, C) {
    const T = a.indexOf(C);
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n}) and (max-width:${(T !== -1 && typeof t[a[T]] == "number" ? t[a[T]] : C) - r / 100}${n})`;
  }
  function g(w) {
    return a.indexOf(w) + 1 < a.length ? m(w, a[a.indexOf(w) + 1]) : c(w);
  }
  function y(w) {
    const C = a.indexOf(w);
    return C === 0 ? c(a[1]) : C === a.length - 1 ? f(a[C]) : m(w, a[a.indexOf(w) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: c,
    down: f,
    between: m,
    only: g,
    not: y,
    unit: n,
    ...o
  };
}
function Oj(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, c;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((c = o.match(s)) == null ? void 0 : c[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function TY(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function _Y(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : vc(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function OY(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...c) => t(e.breakpoints.up(...c), a), s.down = (...c) => t(e.breakpoints.down(...c), a), s.between = (...c) => t(e.breakpoints.between(...c), a), s.only = (...c) => t(e.breakpoints.only(...c), a), s.not = (...c) => {
      const f = t(e.breakpoints.not(...c), a);
      return f.includes("not all and") ? f.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : f;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const RY = {
  borderRadius: 4
}, rp = process.env.NODE_ENV !== "production" ? u.oneOfType([u.number, u.string, u.object, u.array]) : {};
function fS(e, t) {
  return t ? Oi(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const C_ = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Rj = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${C_[e]}px)`
}, kY = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : C_[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function gu(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || Rj;
    return t.reduce((a, c, f) => (a[s.up(s.keys[f])] = n(t[f]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || Rj;
    return Object.keys(t).reduce((a, c) => {
      if (TY(s.keys, c)) {
        const f = _Y(r.containerQueries ? r : kY, c);
        f && (a[f] = n(t[c], c));
      } else if (Object.keys(s.values || C_).includes(c)) {
        const f = s.up(c);
        a[f] = n(t[c], c);
      } else {
        const f = c;
        a[f] = t[f];
      }
      return a;
    }, {});
  }
  return n(t);
}
function wH(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function rM(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function PY(e, ...t) {
  const n = wH(e), r = [n, ...t].reduce((o, s) => Oi(o, s), {});
  return rM(Object.keys(n), r);
}
function MY(e, t) {
  if (typeof e != "object")
    return {};
  const n = {}, r = Object.keys(t);
  return Array.isArray(e) ? r.forEach((o, s) => {
    s < e.length && (n[o] = !0);
  }) : r.forEach((o) => {
    e[o] != null && (n[o] = !0);
  }), n;
}
function eP({
  values: e,
  breakpoints: t,
  base: n
}) {
  const r = n || MY(e, t), o = Object.keys(r);
  if (o.length === 0)
    return e;
  let s;
  return o.reduce((a, c, f) => (Array.isArray(e) ? (a[c] = e[f] != null ? e[f] : e[s], s = f) : typeof e == "object" ? (a[c] = e[c] != null ? e[c] : e[s], s = c) : a[c] = e, a), {});
}
function He(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : vc(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function x_(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function OT(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = x_(e, n) || r, t && (o = t(o, r, e)), o;
}
function Fo(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const c = a[t], f = a.theme, m = x_(f, r) || {};
    return gu(a, c, (y) => {
      let w = OT(m, o, y);
      return y === w && typeof y == "string" && (w = OT(m, o, `${t}${y === "default" ? "" : He(y)}`, y)), n === !1 ? w : {
        [n]: w
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: rp
  } : {}, s.filterProps = [t], s;
}
function IY(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const DY = {
  m: "margin",
  p: "padding"
}, AY = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, kj = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, NY = IY((e) => {
  if (e.length > 2)
    if (kj[e])
      e = kj[e];
    else
      return [e];
  const [t, n] = e.split(""), r = DY[t], o = AY[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), E_ = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], T_ = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], LY = [...E_, ...T_];
function aC(e, t, n, r) {
  const o = x_(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const c = o[a];
    return s >= 0 ? c : typeof c == "number" ? -c : `-${c}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function __(e) {
  return aC(e, "spacing", 8, "spacing");
}
function im(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function $Y(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = im(t, n), r), {});
}
function jY(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = NY(n), s = $Y(o, r), a = e[n];
  return gu(e, a, s);
}
function SH(e, t) {
  const n = __(e.theme);
  return Object.keys(e).map((r) => jY(e, t, r, n)).reduce(fS, {});
}
function Eo(e) {
  return SH(e, E_);
}
Eo.propTypes = process.env.NODE_ENV !== "production" ? E_.reduce((e, t) => (e[t] = rp, e), {}) : {};
Eo.filterProps = E_;
function To(e) {
  return SH(e, T_);
}
To.propTypes = process.env.NODE_ENV !== "production" ? T_.reduce((e, t) => (e[t] = rp, e), {}) : {};
To.filterProps = T_;
process.env.NODE_ENV !== "production" && LY.reduce((e, t) => (e[t] = rp, e), {});
function CH(e = 8, t = __({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function O_(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? fS(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function fl(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function _l(e, t) {
  return Fo({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const FY = _l("border", fl), zY = _l("borderTop", fl), BY = _l("borderRight", fl), HY = _l("borderBottom", fl), VY = _l("borderLeft", fl), UY = _l("borderColor"), WY = _l("borderTopColor"), GY = _l("borderRightColor"), qY = _l("borderBottomColor"), KY = _l("borderLeftColor"), YY = _l("outline", fl), XY = _l("outlineColor"), R_ = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = aC(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: im(t, r)
    });
    return gu(e, e.borderRadius, n);
  }
  return null;
};
R_.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: rp
} : {};
R_.filterProps = ["borderRadius"];
O_(FY, zY, BY, HY, VY, UY, WY, GY, qY, KY, R_, YY, XY);
const k_ = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = aC(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: im(t, r)
    });
    return gu(e, e.gap, n);
  }
  return null;
};
k_.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: rp
} : {};
k_.filterProps = ["gap"];
const P_ = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = aC(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: im(t, r)
    });
    return gu(e, e.columnGap, n);
  }
  return null;
};
P_.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: rp
} : {};
P_.filterProps = ["columnGap"];
const M_ = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = aC(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: im(t, r)
    });
    return gu(e, e.rowGap, n);
  }
  return null;
};
M_.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: rp
} : {};
M_.filterProps = ["rowGap"];
const QY = Fo({
  prop: "gridColumn"
}), JY = Fo({
  prop: "gridRow"
}), ZY = Fo({
  prop: "gridAutoFlow"
}), eX = Fo({
  prop: "gridAutoColumns"
}), tX = Fo({
  prop: "gridAutoRows"
}), nX = Fo({
  prop: "gridTemplateColumns"
}), rX = Fo({
  prop: "gridTemplateRows"
}), oX = Fo({
  prop: "gridTemplateAreas"
}), iX = Fo({
  prop: "gridArea"
});
O_(k_, P_, M_, QY, JY, ZY, eX, tX, nX, rX, oX, iX);
function Iv(e, t) {
  return t === "grey" ? t : e;
}
const sX = Fo({
  prop: "color",
  themeKey: "palette",
  transform: Iv
}), aX = Fo({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Iv
}), lX = Fo({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Iv
});
O_(sX, aX, lX);
function ka(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const uX = Fo({
  prop: "width",
  transform: ka
}), RI = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, c, f;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || C_[n];
      return r ? ((f = (c = e.theme) == null ? void 0 : c.breakpoints) == null ? void 0 : f.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: ka(n)
      };
    };
    return gu(e, e.maxWidth, t);
  }
  return null;
};
RI.filterProps = ["maxWidth"];
const cX = Fo({
  prop: "minWidth",
  transform: ka
}), dX = Fo({
  prop: "height",
  transform: ka
}), fX = Fo({
  prop: "maxHeight",
  transform: ka
}), pX = Fo({
  prop: "minHeight",
  transform: ka
});
Fo({
  prop: "size",
  cssProperty: "width",
  transform: ka
});
Fo({
  prop: "size",
  cssProperty: "height",
  transform: ka
});
const hX = Fo({
  prop: "boxSizing"
});
O_(uX, RI, cX, dX, fX, pX, hX);
const lC = {
  // borders
  border: {
    themeKey: "borders",
    transform: fl
  },
  borderTop: {
    themeKey: "borders",
    transform: fl
  },
  borderRight: {
    themeKey: "borders",
    transform: fl
  },
  borderBottom: {
    themeKey: "borders",
    transform: fl
  },
  borderLeft: {
    themeKey: "borders",
    transform: fl
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: fl
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: R_
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Iv
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Iv
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Iv
  },
  // spacing
  p: {
    style: To
  },
  pt: {
    style: To
  },
  pr: {
    style: To
  },
  pb: {
    style: To
  },
  pl: {
    style: To
  },
  px: {
    style: To
  },
  py: {
    style: To
  },
  padding: {
    style: To
  },
  paddingTop: {
    style: To
  },
  paddingRight: {
    style: To
  },
  paddingBottom: {
    style: To
  },
  paddingLeft: {
    style: To
  },
  paddingX: {
    style: To
  },
  paddingY: {
    style: To
  },
  paddingInline: {
    style: To
  },
  paddingInlineStart: {
    style: To
  },
  paddingInlineEnd: {
    style: To
  },
  paddingBlock: {
    style: To
  },
  paddingBlockStart: {
    style: To
  },
  paddingBlockEnd: {
    style: To
  },
  m: {
    style: Eo
  },
  mt: {
    style: Eo
  },
  mr: {
    style: Eo
  },
  mb: {
    style: Eo
  },
  ml: {
    style: Eo
  },
  mx: {
    style: Eo
  },
  my: {
    style: Eo
  },
  margin: {
    style: Eo
  },
  marginTop: {
    style: Eo
  },
  marginRight: {
    style: Eo
  },
  marginBottom: {
    style: Eo
  },
  marginLeft: {
    style: Eo
  },
  marginX: {
    style: Eo
  },
  marginY: {
    style: Eo
  },
  marginInline: {
    style: Eo
  },
  marginInlineStart: {
    style: Eo
  },
  marginInlineEnd: {
    style: Eo
  },
  marginBlock: {
    style: Eo
  },
  marginBlockStart: {
    style: Eo
  },
  marginBlockEnd: {
    style: Eo
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: k_
  },
  rowGap: {
    style: M_
  },
  columnGap: {
    style: P_
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: ka
  },
  maxWidth: {
    style: RI
  },
  minWidth: {
    transform: ka
  },
  height: {
    transform: ka
  },
  maxHeight: {
    transform: ka
  },
  minHeight: {
    transform: ka
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function mX(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function gX(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function vX() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, c = s[n];
    if (!c)
      return {
        [n]: r
      };
    const {
      cssProperty: f = n,
      themeKey: m,
      transform: g,
      style: y
    } = c;
    if (r == null)
      return null;
    if (m === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const w = x_(o, m) || {};
    return y ? y(a) : gu(a, r, (T) => {
      let E = OT(w, g, T);
      return T === E && typeof T == "string" && (E = OT(w, g, `${n}${T === "default" ? "" : He(T)}`, T)), f === !1 ? E : {
        [f]: E
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {},
      nested: s
    } = n || {};
    if (!r)
      return null;
    const a = o.unstable_sxConfig ?? lC;
    function c(f) {
      let m = f;
      if (typeof f == "function")
        m = f(o);
      else if (typeof f != "object")
        return f;
      if (!m)
        return null;
      const g = wH(o.breakpoints), y = Object.keys(g);
      let w = g;
      return Object.keys(m).forEach((C) => {
        const T = gX(m[C], o);
        if (T != null)
          if (typeof T == "object")
            if (a[C])
              w = fS(w, e(C, T, o, a));
            else {
              const E = gu({
                theme: o
              }, T, (O) => ({
                [C]: O
              }));
              mX(E, T) ? w[C] = t({
                sx: T,
                theme: o,
                nested: !0
              }) : w = fS(w, E);
            }
          else
            w = fS(w, e(C, T, o, a));
      }), !s && o.modularCssLayers ? {
        "@layer sx": Oj(o, rM(y, w))
      } : Oj(o, rM(y, w));
    }
    return Array.isArray(r) ? r.map(c) : c(r);
  }
  return t;
}
const Yf = vX();
Yf.filterProps = ["sx"];
function yX(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function uy(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, c = EY(n), f = CH(o);
  let m = Oi({
    breakpoints: c,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: f,
    shape: {
      ...RY,
      ...s
    }
  }, a);
  return m = OY(m), m.applyStyles = yX, m = t.reduce((g, y) => Oi(g, y), m), m.unstable_sxConfig = {
    ...lC,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, m.unstable_sx = function(y) {
    return Yf({
      sx: y,
      theme: this
    });
  }, m;
}
function bX(e) {
  return Object.keys(e).length === 0;
}
function kI(e = null) {
  const t = x.useContext(sC);
  return !t || bX(t) ? e : t;
}
const wX = uy();
function uC(e = wX) {
  return kI(e);
}
function tP(e) {
  const t = Vf(e);
  return e !== t && t.styles ? (t.styles.match(/^@layer\s+[^{]*$/) || (t.styles = `@layer global{${t.styles}}`), t) : e;
}
function PI({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = uC(n), o = t && r[t] || r;
  let s = typeof e == "function" ? e(o) : e;
  return o.modularCssLayers && (Array.isArray(s) ? s = s.map((a) => tP(typeof a == "function" ? a(o) : a)) : s = tP(s)), /* @__PURE__ */ $.jsx(OI, {
    styles: s
  });
}
process.env.NODE_ENV !== "production" && (PI.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: u.object,
  /**
   * @ignore
   */
  styles: u.oneOfType([u.array, u.func, u.number, u.object, u.string, u.bool]),
  /**
   * @ignore
   */
  themeId: u.string
});
const SX = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? lC;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function I_(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = SX(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const c = t(...a);
    return dc(c) ? {
      ...r,
      ...c
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
const Pj = (e) => e, CX = () => {
  let e = Pj;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Pj;
    }
  };
}, xH = CX();
function EH(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = EH(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function et() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = EH(e)) && (r && (r += " "), r += t);
  return r;
}
function xX(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = yH("div", {
    shouldForwardProp: (c) => c !== "theme" && c !== "sx" && c !== "as"
  })(Yf);
  return /* @__PURE__ */ x.forwardRef(function(f, m) {
    const g = uC(n), {
      className: y,
      component: w = "div",
      ...C
    } = I_(f);
    return /* @__PURE__ */ $.jsx(s, {
      as: w,
      ref: m,
      className: et(y, o ? o(r) : r),
      theme: t && g[t] || g,
      ...C
    });
  });
}
const EX = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function an(e, t, n = "Mui") {
  const r = EX[t];
  return r ? `${n}-${r}` : `${xH.generate(e)}-${t}`;
}
function pn(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = an(e, o, n);
  }), r;
}
function TH(e, t = "") {
  return e.displayName || e.name || t;
}
function Mj(e, t, n) {
  const r = TH(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function TX(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return TH(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case mu.ForwardRef:
          return Mj(e, e.render, "ForwardRef");
        case mu.Memo:
          return Mj(e, e.type, "memo");
        default:
          return;
      }
  }
}
function _H(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Vf(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Vf(o.style));
  }), r;
}
const _X = uy();
function nP(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Gh(e, t) {
  return t && e && typeof e == "object" && e.styles && !e.styles.startsWith("@layer") && (e.styles = `@layer ${t}{${String(e.styles)}}`), e;
}
function OX(e) {
  return e ? (t, n) => n[e] : null;
}
function RX(e, t, n) {
  e.theme = MX(e.theme) ? n : e.theme[t] || e.theme;
}
function cT(e, t, n) {
  const r = typeof t == "function" ? t(e) : t;
  if (Array.isArray(r))
    return r.flatMap((o) => cT(e, o, n));
  if (Array.isArray(r == null ? void 0 : r.variants)) {
    let o;
    if (r.isProcessed)
      o = n ? Gh(r.style, n) : r.style;
    else {
      const {
        variants: s,
        ...a
      } = r;
      o = n ? Gh(Vf(a), n) : a;
    }
    return OH(e, r.variants, [o], n);
  }
  return r != null && r.isProcessed ? n ? Gh(Vf(r.style), n) : r.style : n ? Gh(Vf(r), n) : r;
}
function OH(e, t, n = [], r = void 0) {
  var s;
  let o;
  e: for (let a = 0; a < t.length; a += 1) {
    const c = t[a];
    if (typeof c.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !c.props(o))
        continue;
    } else
      for (const f in c.props)
        if (e[f] !== c.props[f] && ((s = e.ownerState) == null ? void 0 : s[f]) !== c.props[f])
          continue e;
    typeof c.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(r ? Gh(Vf(c.style(o)), r) : c.style(o))) : n.push(r ? Gh(Vf(c.style), r) : c.style);
  }
  return n;
}
function RH(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = _X,
    rootShouldForwardProp: r = nP,
    slotShouldForwardProp: o = nP
  } = e;
  function s(c) {
    RX(c, t, n);
  }
  return (c, f = {}) => {
    wY(c, (F) => F.filter((H) => H !== Yf));
    const {
      name: m,
      slot: g,
      skipVariantsResolver: y,
      skipSx: w,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: C = OX(kH(g)),
      ...T
    } = f, E = m && m.startsWith("Mui") || g ? "components" : "custom", O = y !== void 0 ? y : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      g && g !== "Root" && g !== "root" || !1
    ), k = w || !1;
    let I = nP;
    g === "Root" || g === "root" ? I = r : g ? I = o : IX(c) && (I = void 0);
    const M = yH(c, {
      shouldForwardProp: I,
      label: PX(m, g),
      ...T
    }), N = (F) => {
      if (F.__emotion_real === F)
        return F;
      if (typeof F == "function")
        return function(U) {
          return cT(U, F, U.theme.modularCssLayers ? E : void 0);
        };
      if (dc(F)) {
        const H = _H(F);
        return function(z) {
          return H.variants ? cT(z, H, z.theme.modularCssLayers ? E : void 0) : z.theme.modularCssLayers ? Gh(H.style, E) : H.style;
        };
      }
      return F;
    }, P = (...F) => {
      const H = [], U = F.map(N), z = [];
      if (H.push(s), m && C && z.push(function(Y) {
        var X, te;
        const G = (te = (X = Y.theme.components) == null ? void 0 : X[m]) == null ? void 0 : te.styleOverrides;
        if (!G)
          return null;
        const K = {};
        for (const re in G)
          K[re] = cT(Y, G[re], Y.theme.modularCssLayers ? "theme" : void 0);
        return C(Y, K);
      }), m && !O && z.push(function(Y) {
        var K, X;
        const ee = Y.theme, G = (X = (K = ee == null ? void 0 : ee.components) == null ? void 0 : K[m]) == null ? void 0 : X.variants;
        return G ? OH(Y, G, [], Y.theme.modularCssLayers ? "theme" : void 0) : null;
      }), k || z.push(Yf), Array.isArray(U[0])) {
        const W = U.shift(), Y = new Array(H.length).fill(""), ee = new Array(z.length).fill("");
        let G;
        G = [...Y, ...W, ...ee], G.raw = [...Y, ...W.raw, ...ee], H.unshift(G);
      }
      const A = [...H, ...U, ...z], q = M(...A);
      return c.muiName && (q.muiName = c.muiName), process.env.NODE_ENV !== "production" && (q.displayName = kX(m, g, c)), q;
    };
    return M.withConfig && (P.withConfig = M.withConfig), P;
  };
}
function kX(e, t, n) {
  return e ? `${e}${He(t || "")}` : `Styled(${TX(n)})`;
}
function PX(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${kH(t || "Root")}`), n;
}
function MX(e) {
  for (const t in e)
    return !1;
  return !0;
}
function IX(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function kH(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const MI = RH();
function Bv(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const c in s)
            if (Object.prototype.hasOwnProperty.call(s, c)) {
              const f = c;
              n[o][f] = Bv(s[f], a[f]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function DX(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : Bv(t.components[n].defaultProps, r);
}
function II({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = uC(n);
  return r && (o = o[r] || o), DX({
    theme: o,
    name: t,
    props: e
  });
}
const Nr = typeof window < "u" ? x.useLayoutEffect : x.useEffect;
function AX(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function DI(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), AX(e, t, n);
}
function NX(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function yc(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return yc(NX(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : vc(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : vc(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const LX = (e) => {
  const t = yc(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Zw = (e, t) => {
  try {
    return LX(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function cC(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function PH(e) {
  e = yc(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (m, g = (m + n / 30) % 12) => o - s * Math.max(Math.min(g - 3, 9 - g, 1), -1);
  let c = "rgb";
  const f = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (c += "a", f.push(t[3])), cC({
    type: c,
    values: f
  });
}
function oM(e) {
  e = yc(e);
  let t = e.type === "hsl" || e.type === "hsla" ? yc(PH(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Ij(e, t) {
  const n = oM(e), r = oM(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function An(e, t) {
  return e = yc(e), t = DI(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, cC(e);
}
function PE(e, t, n) {
  try {
    return An(e, t);
  } catch {
    return e;
  }
}
function Xf(e, t) {
  if (e = yc(e), t = DI(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return cC(e);
}
function zr(e, t, n) {
  try {
    return Xf(e, t);
  } catch {
    return e;
  }
}
function Qf(e, t) {
  if (e = yc(e), t = DI(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return cC(e);
}
function Br(e, t, n) {
  try {
    return Qf(e, t);
  } catch {
    return e;
  }
}
function $X(e, t = 0.15) {
  return oM(e) > 0.5 ? Xf(e, t) : Qf(e, t);
}
function ME(e, t, n) {
  try {
    return $X(e, t);
  } catch {
    return e;
  }
}
function Na(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function jX(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function MH(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let c;
  const f = s.type;
  return typeof f == "function" && !jX(f) && (c = "Did you accidentally use a plain function component for an element instead?"), c !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${c} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const op = Na(u.element, MH);
op.isRequired = Na(u.element.isRequired, MH);
function FX(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function zX(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let c;
  return typeof s == "function" && !FX(s) && (c = "Did you accidentally provide a plain function component instead?"), c !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${c} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const AI = Na(u.elementType, zX), BX = "exact-prop: ​";
function dC(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [BX]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Sl(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const ca = u.oneOfType([u.func, u.object]);
function Dj(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function NI(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function dT(e, t) {
  var n, r, o;
  return /* @__PURE__ */ x.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
function ho(e) {
  return e && e.ownerDocument || document;
}
function Cl(e) {
  return ho(e).defaultView || window;
}
function HX(e, t) {
  if (process.env.NODE_ENV === "production")
    return () => null;
  const n = t ? {
    ...t.propTypes
  } : null;
  return (o) => (s, a, c, f, m, ...g) => {
    const y = m || a, w = n == null ? void 0 : n[y];
    if (w) {
      const C = w(s, a, c, f, m, ...g);
      if (C)
        return C;
    }
    return typeof s[a] < "u" && !s[o] ? new Error(`The prop \`${y}\` of \`${e}\` can only be used together with the \`${o}\` prop.`) : null;
  };
}
function iM(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Aj = 0;
function VX(e) {
  const [t, n] = x.useState(e), r = e || t;
  return x.useEffect(() => {
    t == null && (Aj += 1, n(`mui-${Aj}`));
  }, [t]), r;
}
const UX = {
  ...xT
}, Nj = UX.useId;
function pr(e) {
  if (Nj !== void 0) {
    const t = Nj();
    return e ?? t;
  }
  return VX(e);
}
function WX(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = o || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${s}\` is not supported. Please remove it.`) : null;
}
function Qh({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = x.useRef(e !== void 0), [s, a] = x.useState(t), c = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    x.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: m
    } = x.useRef(t);
    x.useEffect(() => {
      !o && !Object.is(m, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const f = x.useCallback((m) => {
    o || a(m);
  }, []);
  return [c, f];
}
function jn(e) {
  const t = x.useRef(e);
  return Nr(() => {
    t.current = e;
  }), x.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Pr(...e) {
  const t = x.useRef(void 0), n = x.useCallback((r) => {
    const o = e.map((s) => {
      if (s == null)
        return null;
      if (typeof s == "function") {
        const a = s, c = a(r);
        return typeof c == "function" ? c : () => {
          a(null);
        };
      }
      return s.current = r, () => {
        s.current = null;
      };
    });
    return () => {
      o.forEach((s) => s == null ? void 0 : s());
    };
  }, e);
  return x.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const Lj = {};
function Ol(e, t) {
  const n = x.useRef(Lj);
  return n.current === Lj && (n.current = e(t)), n;
}
const GX = [];
function LI(e) {
  x.useEffect(e, GX);
}
class D_ {
  constructor() {
    Dn(this, "currentId", null);
    Dn(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    Dn(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new D_();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function Ma() {
  const e = Ol(D_.create).current;
  return LI(e.disposeEffect), e;
}
function RT(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function IH(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
const $I = (e) => {
  const t = x.useRef({});
  return x.useEffect(() => {
    t.current = e;
  }), t.current;
};
function qX(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function DH(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = qX(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function AH(e, t, ...n) {
  return e[t] === void 0 ? null : DH(e, t, ...n);
}
function sM() {
  return null;
}
AH.isRequired = DH;
sM.isRequired = sM;
const Jh = process.env.NODE_ENV === "production" ? sM : AH;
function mt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", c = !0;
    for (let f = 0; f < s.length; f += 1) {
      const m = s[f];
      m && (a += (c === !0 ? "" : " ") + t(m), c = !1, n && n[m] && (a += " " + n[m]));
    }
    r[o] = a;
  }
  return r;
}
function KX(e) {
  return typeof e == "string";
}
function NH(e, t, n) {
  return e === void 0 || KX(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function LH(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function $j(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function $H(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const C = et(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), T = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, E = {
      ...n,
      ...o,
      ...r
    };
    return C.length > 0 && (E.className = C), Object.keys(T).length > 0 && (E.style = T), {
      props: E,
      internalRef: void 0
    };
  }
  const a = LH({
    ...o,
    ...r
  }), c = $j(r), f = $j(o), m = t(a), g = et(m == null ? void 0 : m.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
    ...m == null ? void 0 : m.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, w = {
    ...m,
    ...n,
    ...f,
    ...c
  };
  return g.length > 0 && (w.className = g), Object.keys(y).length > 0 && (w.style = y), {
    props: w,
    internalRef: m.ref
  };
}
function jH(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function FH(e) {
  var y;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : jH(n, r), {
    props: c,
    internalRef: f
  } = $H({
    ...s,
    externalSlotProps: a
  }), m = Pr(f, a == null ? void 0 : a.ref, (y = e.additionalProps) == null ? void 0 : y.ref);
  return NH(t, {
    ...c,
    ref: m
  }, r);
}
function ip(e) {
  var t;
  return parseInt(x.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const jI = /* @__PURE__ */ x.createContext(null);
process.env.NODE_ENV !== "production" && (jI.displayName = "ThemeContext");
function FI() {
  const e = x.useContext(jI);
  return process.env.NODE_ENV !== "production" && x.useDebugValue(e), e;
}
const YX = typeof Symbol == "function" && Symbol.for, XX = YX ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function QX(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function kT(e) {
  const {
    children: t,
    theme: n
  } = e, r = FI();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = x.useMemo(() => {
    const s = r === null ? {
      ...n
    } : QX(r, n);
    return s != null && (s[XX] = r !== null), s;
  }, [n, r]);
  return /* @__PURE__ */ $.jsx(jI.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (kT.propTypes = {
  /**
   * Your component tree.
   */
  children: u.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: u.oneOfType([u.object, u.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (kT.propTypes = dC(kT.propTypes));
const zH = /* @__PURE__ */ x.createContext();
function BH({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ $.jsx(zH.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (BH.propTypes = {
  children: u.node,
  value: u.bool
});
const cy = () => x.useContext(zH) ?? !1, HH = /* @__PURE__ */ x.createContext(void 0);
function VH({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ $.jsx(HH.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (VH.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: u.node,
  /**
   * @ignore
   */
  value: u.object
});
function JX(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Bv(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Bv(o, r) : r;
}
function ZX({
  props: e,
  name: t
}) {
  const n = x.useContext(HH);
  return JX({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
function eQ(e) {
  const t = kI(), n = pr() || "", {
    modularCssLayers: r
  } = e;
  let o = "mui.global, mui.components, mui.theme, mui.custom, mui.sx";
  return !r || t !== null ? o = "" : typeof r == "string" ? o = r.replace(/mui(?!\.)/g, o) : o = `@layer ${o};`, Nr(() => {
    var c, f;
    const s = document.querySelector("head");
    if (!s)
      return;
    const a = s.firstChild;
    if (o) {
      if (a && ((c = a.hasAttribute) != null && c.call(a, "data-mui-layer-order")) && a.getAttribute("data-mui-layer-order") === n)
        return;
      const m = document.createElement("style");
      m.setAttribute("data-mui-layer-order", n), m.textContent = o, s.prepend(m);
    } else
      (f = s.querySelector(`style[data-mui-layer-order="${n}"]`)) == null || f.remove();
  }, [o, n]), o ? /* @__PURE__ */ $.jsx(PI, {
    styles: o
  }) : null;
}
const jj = {};
function Fj(e, t, n, r = !1) {
  return x.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(o), a = e ? {
        ...t,
        [e]: s
      } : s;
      return r ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function NS(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = kI(jj), s = FI() || jj;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Fj(r, o, n), c = Fj(r, s, n, !0), f = (r ? a[r] : a).direction === "rtl", m = eQ(a);
  return /* @__PURE__ */ $.jsx(kT, {
    theme: c,
    children: /* @__PURE__ */ $.jsx(sC.Provider, {
      value: a,
      children: /* @__PURE__ */ $.jsx(BH, {
        value: f,
        children: /* @__PURE__ */ $.jsxs(VH, {
          value: r ? a[r].components : a.components,
          children: [m, t]
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (NS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: u.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: u.oneOfType([u.func, u.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: u.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (NS.propTypes = dC(NS.propTypes));
const zj = {
  theme: void 0
};
function tQ(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (zj.theme = o.theme, s = _H(e(zj)), t = s, n = o.theme), s;
  };
}
const zI = "mode", BI = "color-scheme", nQ = "data-color-scheme";
function rQ(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = zI,
    colorSchemeStorageKey: s = BI,
    attribute: a = nQ,
    colorSchemeNode: c = "document.documentElement",
    nonce: f
  } = e || {};
  let m = "", g = a;
  if (a === "class" && (g = ".%s"), a === "data" && (g = "[data-%s]"), g.startsWith(".")) {
    const w = g.substring(1);
    m += `${c}.classList.remove('${w}'.replace('%s', light), '${w}'.replace('%s', dark));
      ${c}.classList.add('${w}'.replace('%s', colorScheme));`;
  }
  const y = g.match(/\[([^\]]+)\]/);
  if (y) {
    const [w, C] = y[1].split("=");
    C || (m += `${c}.removeAttribute('${w}'.replace('%s', light));
      ${c}.removeAttribute('${w}'.replace('%s', dark));`), m += `
      ${c}.setAttribute('${w}'.replace('%s', colorScheme), ${C ? `${C}.replace('%s', colorScheme)` : '""'});`;
  } else
    m += `${c}.setAttribute('${g}', colorScheme);`;
  return /* @__PURE__ */ $.jsx("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? f : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${s}-dark') || '${r}';
  const light = localStorage.getItem('${s}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${m}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function oQ() {
}
const iQ = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return oQ;
    const r = (o) => {
      const s = o.newValue;
      o.key === e && n(s);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function rP() {
}
function Bj(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function UH(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function sQ(e) {
  return UH(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function aQ(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: s = zI,
    colorSchemeStorageKey: a = BI,
    storageWindow: c = typeof window > "u" ? void 0 : window,
    storageManager: f = iQ,
    noSsr: m = !1
  } = e, g = o.join(","), y = o.length > 1, w = x.useMemo(() => f == null ? void 0 : f({
    key: s,
    storageWindow: c
  }), [f, s, c]), C = x.useMemo(() => f == null ? void 0 : f({
    key: `${a}-light`,
    storageWindow: c
  }), [f, a, c]), T = x.useMemo(() => f == null ? void 0 : f({
    key: `${a}-dark`,
    storageWindow: c
  }), [f, a, c]), [E, O] = x.useState(() => {
    const U = (w == null ? void 0 : w.get(t)) || t, z = (C == null ? void 0 : C.get(n)) || n, A = (T == null ? void 0 : T.get(r)) || r;
    return {
      mode: U,
      systemMode: Bj(U),
      lightColorScheme: z,
      darkColorScheme: A
    };
  }), [k, I] = x.useState(m || !y);
  x.useEffect(() => {
    I(!0);
  }, []);
  const M = sQ(E), N = x.useCallback((U) => {
    O((z) => {
      if (U === z.mode)
        return z;
      const A = U ?? t;
      return w == null || w.set(A), {
        ...z,
        mode: A,
        systemMode: Bj(A)
      };
    });
  }, [w, t]), P = x.useCallback((U) => {
    U ? typeof U == "string" ? U && !g.includes(U) ? console.error(`\`${U}\` does not exist in \`theme.colorSchemes\`.`) : O((z) => {
      const A = {
        ...z
      };
      return UH(z, (q) => {
        q === "light" && (C == null || C.set(U), A.lightColorScheme = U), q === "dark" && (T == null || T.set(U), A.darkColorScheme = U);
      }), A;
    }) : O((z) => {
      const A = {
        ...z
      }, q = U.light === null ? n : U.light, W = U.dark === null ? r : U.dark;
      return q && (g.includes(q) ? (A.lightColorScheme = q, C == null || C.set(q)) : console.error(`\`${q}\` does not exist in \`theme.colorSchemes\`.`)), W && (g.includes(W) ? (A.darkColorScheme = W, T == null || T.set(W)) : console.error(`\`${W}\` does not exist in \`theme.colorSchemes\`.`)), A;
    }) : O((z) => (C == null || C.set(n), T == null || T.set(r), {
      ...z,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [g, C, T, n, r]), F = x.useCallback((U) => {
    E.mode === "system" && O((z) => {
      const A = U != null && U.matches ? "dark" : "light";
      return z.systemMode === A ? z : {
        ...z,
        systemMode: A
      };
    });
  }, [E.mode]), H = x.useRef(F);
  return H.current = F, x.useEffect(() => {
    if (typeof window.matchMedia != "function" || !y)
      return;
    const U = (...A) => H.current(...A), z = window.matchMedia("(prefers-color-scheme: dark)");
    return z.addListener(U), U(z), () => {
      z.removeListener(U);
    };
  }, [y]), x.useEffect(() => {
    if (y) {
      const U = (w == null ? void 0 : w.subscribe((q) => {
        (!q || ["light", "dark", "system"].includes(q)) && N(q || t);
      })) || rP, z = (C == null ? void 0 : C.subscribe((q) => {
        (!q || g.match(q)) && P({
          light: q
        });
      })) || rP, A = (T == null ? void 0 : T.subscribe((q) => {
        (!q || g.match(q)) && P({
          dark: q
        });
      })) || rP;
      return () => {
        U(), z(), A();
      };
    }
  }, [P, N, g, t, c, y, w, C, T]), {
    ...E,
    mode: k ? E.mode : void 0,
    systemMode: k ? E.systemMode : void 0,
    colorScheme: k ? M : void 0,
    setMode: N,
    setColorScheme: P
  };
}
const lQ = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function uQ(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = zI,
    colorSchemeStorageKey: o = BI,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: c
  } = e, f = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, m = /* @__PURE__ */ x.createContext(void 0);
  process.env.NODE_ENV !== "production" && (m.displayName = "ColorSchemeContext");
  const g = () => x.useContext(m) || f, y = {}, w = {};
  function C(k) {
    var ut, Et, Tt, At;
    const {
      children: I,
      theme: M,
      modeStorageKey: N = r,
      colorSchemeStorageKey: P = o,
      disableTransitionOnChange: F = s,
      storageManager: H,
      storageWindow: U = typeof window > "u" ? void 0 : window,
      documentNode: z = typeof document > "u" ? void 0 : document,
      colorSchemeNode: A = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: q = !1,
      disableStyleSheetGeneration: W = !1,
      defaultMode: Y = "system",
      noSsr: ee
    } = k, G = x.useRef(!1), K = FI(), X = x.useContext(m), te = !!X && !q, re = x.useMemo(() => M || (typeof n == "function" ? n() : n), [M]), Q = re[t], B = Q || re, {
      colorSchemes: ie = y,
      components: de = w,
      cssVarPrefix: ue
    } = B, he = Object.keys(ie).filter((vt) => !!ie[vt]).join(","), ge = x.useMemo(() => he.split(","), [he]), fe = typeof a == "string" ? a : a.light, pe = typeof a == "string" ? a : a.dark, be = ie[fe] && ie[pe] ? Y : ((Et = (ut = ie[B.defaultColorScheme]) == null ? void 0 : ut.palette) == null ? void 0 : Et.mode) || ((Tt = B.palette) == null ? void 0 : Tt.mode), {
      mode: we,
      setMode: _e,
      systemMode: ce,
      lightColorScheme: Ce,
      darkColorScheme: Ne,
      colorScheme: Be,
      setColorScheme: tt
    } = aQ({
      supportedColorSchemes: ge,
      defaultLightColorScheme: fe,
      defaultDarkColorScheme: pe,
      modeStorageKey: N,
      colorSchemeStorageKey: P,
      defaultMode: be,
      storageManager: H,
      storageWindow: U,
      noSsr: ee
    });
    let $e = we, rt = Be;
    te && ($e = X.mode, rt = X.colorScheme);
    const ot = x.useMemo(() => {
      var Ie;
      const vt = rt || B.defaultColorScheme, Xe = ((Ie = B.generateThemeVars) == null ? void 0 : Ie.call(B)) || B.vars, Oe = {
        ...B,
        components: de,
        colorSchemes: ie,
        cssVarPrefix: ue,
        vars: Xe
      };
      if (typeof Oe.generateSpacing == "function" && (Oe.spacing = Oe.generateSpacing()), vt) {
        const pt = ie[vt];
        pt && typeof pt == "object" && Object.keys(pt).forEach((yt) => {
          pt[yt] && typeof pt[yt] == "object" ? Oe[yt] = {
            ...Oe[yt],
            ...pt[yt]
          } : Oe[yt] = pt[yt];
        });
      }
      return c ? c(Oe) : Oe;
    }, [B, rt, de, ie, ue]), wt = B.colorSchemeSelector;
    Nr(() => {
      if (rt && A && wt && wt !== "media") {
        const vt = wt;
        let Xe = wt;
        if (vt === "class" && (Xe = ".%s"), vt === "data" && (Xe = "[data-%s]"), vt != null && vt.startsWith("data-") && !vt.includes("%s") && (Xe = `[${vt}="%s"]`), Xe.startsWith("."))
          A.classList.remove(...ge.map((Oe) => Xe.substring(1).replace("%s", Oe))), A.classList.add(Xe.substring(1).replace("%s", rt));
        else {
          const Oe = Xe.replace("%s", rt).match(/\[([^\]]+)\]/);
          if (Oe) {
            const [Ie, pt] = Oe[1].split("=");
            pt || ge.forEach((yt) => {
              A.removeAttribute(Ie.replace(rt, yt));
            }), A.setAttribute(Ie, pt ? pt.replace(/"|'/g, "") : "");
          } else
            A.setAttribute(Xe, rt);
        }
      }
    }, [rt, wt, A, ge]), x.useEffect(() => {
      let vt;
      if (F && G.current && z) {
        const Xe = z.createElement("style");
        Xe.appendChild(z.createTextNode(lQ)), z.head.appendChild(Xe), window.getComputedStyle(z.body), vt = setTimeout(() => {
          z.head.removeChild(Xe);
        }, 1);
      }
      return () => {
        clearTimeout(vt);
      };
    }, [rt, F, z]), x.useEffect(() => (G.current = !0, () => {
      G.current = !1;
    }), []);
    const gt = x.useMemo(() => ({
      allColorSchemes: ge,
      colorScheme: rt,
      darkColorScheme: Ne,
      lightColorScheme: Ce,
      mode: $e,
      setColorScheme: tt,
      setMode: process.env.NODE_ENV === "production" ? _e : (vt) => {
        ot.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), _e(vt);
      },
      systemMode: ce
    }), [ge, rt, Ne, Ce, $e, tt, _e, ce, ot.colorSchemeSelector]);
    let nt = !0;
    (W || B.cssVariables === !1 || te && (K == null ? void 0 : K.cssVarPrefix) === ue) && (nt = !1);
    const Ft = /* @__PURE__ */ $.jsxs(x.Fragment, {
      children: [/* @__PURE__ */ $.jsx(NS, {
        themeId: Q ? t : void 0,
        theme: ot,
        children: I
      }), nt && /* @__PURE__ */ $.jsx(OI, {
        styles: ((At = ot.generateStyleSheets) == null ? void 0 : At.call(ot)) || []
      })]
    });
    return te ? Ft : /* @__PURE__ */ $.jsx(m.Provider, {
      value: gt,
      children: Ft
    });
  }
  process.env.NODE_ENV !== "production" && (C.propTypes = {
    /**
     * The component tree.
     */
    children: u.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: u.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: u.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: u.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: u.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: u.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: u.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: u.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: u.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: u.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: u.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: u.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: u.object
  });
  const T = typeof a == "string" ? a : a.light, E = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: C,
    useColorScheme: g,
    getInitColorSchemeScript: (k) => rQ({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: T,
      defaultDarkColorScheme: E,
      modeStorageKey: r,
      ...k
    })
  };
}
function cQ(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Hj = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, dQ = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([c, f]) => {
      (!n || n && !n([...s, c])) && f != null && (typeof f == "object" && Object.keys(f).length > 0 ? r(f, [...s, c], Array.isArray(f) ? [...a, c] : a) : t([...s, c], f, a));
    });
  }
  r(e);
}, fQ = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function oP(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return dQ(
    e,
    (c, f, m) => {
      if ((typeof f == "string" || typeof f == "number") && (!r || !r(c, f))) {
        const g = `--${n ? `${n}-` : ""}${c.join("-")}`, y = fQ(c, f);
        Object.assign(o, {
          [g]: y
        }), Hj(s, c, `var(${g})`, m), Hj(a, c, `var(${g}, ${y})`, m);
      }
    },
    (c) => c[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function pQ(e, t = {}) {
  const {
    getSelector: n = O,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: c = "light",
    ...f
  } = e, {
    vars: m,
    css: g,
    varsWithDefaults: y
  } = oP(f, t);
  let w = y;
  const C = {}, {
    [c]: T,
    ...E
  } = s;
  if (Object.entries(E || {}).forEach(([M, N]) => {
    const {
      vars: P,
      css: F,
      varsWithDefaults: H
    } = oP(N, t);
    w = Oi(w, H), C[M] = {
      css: F,
      vars: P
    };
  }), T) {
    const {
      css: M,
      vars: N,
      varsWithDefaults: P
    } = oP(T, t);
    w = Oi(w, P), C[c] = {
      css: M,
      vars: N
    };
  }
  function O(M, N) {
    var F, H;
    let P = o;
    if (o === "class" && (P = ".%s"), o === "data" && (P = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (P = `[${o}="%s"]`), M) {
      if (P === "media")
        return e.defaultColorScheme === M ? ":root" : {
          [`@media (prefers-color-scheme: ${((H = (F = s[M]) == null ? void 0 : F.palette) == null ? void 0 : H.mode) || M})`]: {
            ":root": N
          }
        };
      if (P)
        return e.defaultColorScheme === M ? `:root, ${P.replace("%s", String(M))}` : P.replace("%s", String(M));
    }
    return ":root";
  }
  return {
    vars: w,
    generateThemeVars: () => {
      let M = {
        ...m
      };
      return Object.entries(C).forEach(([, {
        vars: N
      }]) => {
        M = Oi(M, N);
      }), M;
    },
    generateStyleSheets: () => {
      var U, z;
      const M = [], N = e.defaultColorScheme || "light";
      function P(A, q) {
        Object.keys(q).length && M.push(typeof A == "string" ? {
          [A]: {
            ...q
          }
        } : A);
      }
      P(n(void 0, {
        ...g
      }), g);
      const {
        [N]: F,
        ...H
      } = C;
      if (F) {
        const {
          css: A
        } = F, q = (z = (U = s[N]) == null ? void 0 : U.palette) == null ? void 0 : z.mode, W = !r && q ? {
          colorScheme: q,
          ...A
        } : {
          ...A
        };
        P(n(N, {
          ...W
        }), W);
      }
      return Object.entries(H).forEach(([A, {
        css: q
      }]) => {
        var ee, G;
        const W = (G = (ee = s[A]) == null ? void 0 : ee.palette) == null ? void 0 : G.mode, Y = !r && W ? {
          colorScheme: W,
          ...q
        } : {
          ...q
        };
        P(n(A, {
          ...Y
        }), Y);
      }), M;
    }
  };
}
function hQ(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const mQ = uy(), gQ = MI("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${He(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), vQ = (e) => II({
  props: e,
  name: "MuiContainer",
  defaultTheme: mQ
}), yQ = (e, t) => {
  const n = (f) => an(t, f), {
    classes: r,
    fixed: o,
    disableGutters: s,
    maxWidth: a
  } = e, c = {
    root: ["root", a && `maxWidth${He(String(a))}`, o && "fixed", s && "disableGutters"]
  };
  return mt(c, n, r);
};
function bQ(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = gQ,
    useThemeProps: n = vQ,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: a,
    ownerState: c
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!c.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: c
  }) => c.fixed && Object.keys(a.breakpoints.values).reduce((f, m) => {
    const g = m, y = a.breakpoints.values[g];
    return y !== 0 && (f[a.breakpoints.up(g)] = {
      maxWidth: `${y}${a.breakpoints.unit}`
    }), f;
  }, {}), ({
    theme: a,
    ownerState: c
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...c.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...c.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    c.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(c.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[c.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), s = /* @__PURE__ */ x.forwardRef(function(c, f) {
    const m = n(c), {
      className: g,
      component: y = "div",
      disableGutters: w = !1,
      fixed: C = !1,
      maxWidth: T = "lg",
      classes: E,
      ...O
    } = m, k = {
      ...m,
      component: y,
      disableGutters: w,
      fixed: C,
      maxWidth: T
    }, I = yQ(k, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ $.jsx(o, {
        as: y,
        ownerState: k,
        className: et(I.root, g),
        ref: f,
        ...O
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (s.propTypes = {
    children: u.node,
    classes: u.object,
    className: u.string,
    component: u.elementType,
    disableGutters: u.bool,
    fixed: u.bool,
    maxWidth: u.oneOfType([u.oneOf(["xs", "sm", "md", "lg", "xl", !1]), u.string]),
    sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
  }), s;
}
const wQ = (e, t) => e.filter((n) => t.includes(n)), dy = (e, t, n) => {
  const r = e.keys[0];
  Array.isArray(t) ? t.forEach((o, s) => {
    n((a, c) => {
      s <= e.keys.length - 1 && (s === 0 ? Object.assign(a, c) : a[e.up(e.keys[s])] = c);
    }, o);
  }) : t && typeof t == "object" ? (Object.keys(t).length > e.keys.length ? e.keys : wQ(e.keys, Object.keys(t))).forEach((s) => {
    if (e.keys.includes(s)) {
      const a = t[s];
      a !== void 0 && n((c, f) => {
        r === s ? Object.assign(c, f) : c[e.up(s)] = f;
      }, a);
    }
  }) : (typeof t == "number" || typeof t == "string") && n((o, s) => {
    Object.assign(o, s);
  }, t);
};
function PT(e) {
  return `--Grid-${e}Spacing`;
}
function A_(e) {
  return `--Grid-parent-${e}Spacing`;
}
const Vj = "--Grid-columns", Dv = "--Grid-parent-columns", SQ = ({
  theme: e,
  ownerState: t
}) => {
  const n = {};
  return dy(e.breakpoints, t.size, (r, o) => {
    let s = {};
    o === "grow" && (s = {
      flexBasis: 0,
      flexGrow: 1,
      maxWidth: "100%"
    }), o === "auto" && (s = {
      flexBasis: "auto",
      flexGrow: 0,
      flexShrink: 0,
      maxWidth: "none",
      width: "auto"
    }), typeof o == "number" && (s = {
      flexGrow: 0,
      flexBasis: "auto",
      width: `calc(100% * ${o} / var(${Dv}) - (var(${Dv}) - ${o}) * (var(${A_("column")}) / var(${Dv})))`
    }), r(n, s);
  }), n;
}, CQ = ({
  theme: e,
  ownerState: t
}) => {
  const n = {};
  return dy(e.breakpoints, t.offset, (r, o) => {
    let s = {};
    o === "auto" && (s = {
      marginLeft: "auto"
    }), typeof o == "number" && (s = {
      marginLeft: o === 0 ? "0px" : `calc(100% * ${o} / var(${Dv}) + var(${A_("column")}) * ${o} / var(${Dv}))`
    }), r(n, s);
  }), n;
}, xQ = ({
  theme: e,
  ownerState: t
}) => {
  if (!t.container)
    return {};
  const n = {
    [Vj]: 12
  };
  return dy(e.breakpoints, t.columns, (r, o) => {
    const s = o ?? 12;
    r(n, {
      [Vj]: s,
      "> *": {
        [Dv]: s
      }
    });
  }), n;
}, EQ = ({
  theme: e,
  ownerState: t
}) => {
  if (!t.container)
    return {};
  const n = {};
  return dy(e.breakpoints, t.rowSpacing, (r, o) => {
    var a;
    const s = typeof o == "string" ? o : (a = e.spacing) == null ? void 0 : a.call(e, o);
    r(n, {
      [PT("row")]: s,
      "> *": {
        [A_("row")]: s
      }
    });
  }), n;
}, TQ = ({
  theme: e,
  ownerState: t
}) => {
  if (!t.container)
    return {};
  const n = {};
  return dy(e.breakpoints, t.columnSpacing, (r, o) => {
    var a;
    const s = typeof o == "string" ? o : (a = e.spacing) == null ? void 0 : a.call(e, o);
    r(n, {
      [PT("column")]: s,
      "> *": {
        [A_("column")]: s
      }
    });
  }), n;
}, _Q = ({
  theme: e,
  ownerState: t
}) => {
  if (!t.container)
    return {};
  const n = {};
  return dy(e.breakpoints, t.direction, (r, o) => {
    r(n, {
      flexDirection: o
    });
  }), n;
}, OQ = ({
  ownerState: e
}) => ({
  minWidth: 0,
  boxSizing: "border-box",
  ...e.container && {
    display: "flex",
    flexWrap: "wrap",
    ...e.wrap && e.wrap !== "wrap" && {
      flexWrap: e.wrap
    },
    gap: `var(${PT("row")}) var(${PT("column")})`
  }
}), RQ = (e) => {
  const t = [];
  return Object.entries(e).forEach(([n, r]) => {
    r !== !1 && r !== void 0 && t.push(`grid-${n}-${String(r)}`);
  }), t;
}, kQ = (e, t = "xs") => {
  function n(r) {
    return r === void 0 ? !1 : typeof r == "string" && !Number.isNaN(Number(r)) || typeof r == "number" && r > 0;
  }
  if (n(e))
    return [`spacing-${t}-${String(e)}`];
  if (typeof e == "object" && !Array.isArray(e)) {
    const r = [];
    return Object.entries(e).forEach(([o, s]) => {
      n(s) && r.push(`spacing-${o}-${String(s)}`);
    }), r;
  }
  return [];
}, PQ = (e) => e === void 0 ? [] : typeof e == "object" ? Object.entries(e).map(([t, n]) => `direction-${t}-${n}`) : [`direction-xs-${String(e)}`], MQ = (e) => ["item", "zeroMinWidth"].includes(e) ? `The \`${e}\` prop has been removed and is no longer necessary. You can safely remove it.` : `The \`${e}\` prop has been removed. See https://v6.mui.com/material-ui/migration/upgrade-to-grid-v2/ for migration instructions.`, Uj = [];
function IQ(e, t) {
  const n = [];
  e.item !== void 0 && (delete e.item, n.push("item")), e.zeroMinWidth !== void 0 && (delete e.zeroMinWidth, n.push("zeroMinWidth")), t.keys.forEach((r) => {
    e[r] !== void 0 && (n.push(r), delete e[r]);
  }), process.env.NODE_ENV !== "production" && n.forEach((r) => {
    Uj.includes(r) || (Uj.push(r), console.warn(`MUI Grid2: ${MQ(r)}
`));
  });
}
const DQ = uy(), AQ = MI("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, t) => t.root
});
function NQ(e) {
  return II({
    props: e,
    name: "MuiGrid",
    defaultTheme: DQ
  });
}
function LQ(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = AQ,
    useThemeProps: n = NQ,
    useTheme: r = uC,
    componentName: o = "MuiGrid"
  } = e, s = (m, g) => {
    const {
      container: y,
      direction: w,
      spacing: C,
      wrap: T,
      size: E
    } = m, O = {
      root: ["root", y && "container", T !== "wrap" && `wrap-xs-${String(T)}`, ...PQ(w), ...RQ(E), ...y ? kQ(C, g.breakpoints.keys[0]) : []]
    };
    return mt(O, (k) => an(o, k), {});
  };
  function a(m, g, y = () => !0) {
    const w = {};
    return m === null || (Array.isArray(m) ? m.forEach((C, T) => {
      C !== null && y(C) && g.keys[T] && (w[g.keys[T]] = C);
    }) : typeof m == "object" ? Object.keys(m).forEach((C) => {
      const T = m[C];
      T != null && y(T) && (w[C] = T);
    }) : w[g.keys[0]] = m), w;
  }
  const c = t(xQ, TQ, EQ, SQ, _Q, OQ, CQ), f = /* @__PURE__ */ x.forwardRef(function(g, y) {
    const w = r(), C = n(g), T = I_(C);
    IQ(T, w.breakpoints);
    const {
      className: E,
      children: O,
      columns: k = 12,
      container: I = !1,
      component: M = "div",
      direction: N = "row",
      wrap: P = "wrap",
      size: F = {},
      offset: H = {},
      spacing: U = 0,
      rowSpacing: z = U,
      columnSpacing: A = U,
      unstable_level: q = 0,
      ...W
    } = T, Y = a(F, w.breakpoints, (B) => B !== !1), ee = a(H, w.breakpoints), G = g.columns ?? (q ? void 0 : k), K = g.spacing ?? (q ? void 0 : U), X = g.rowSpacing ?? g.spacing ?? (q ? void 0 : z), te = g.columnSpacing ?? g.spacing ?? (q ? void 0 : A), re = {
      ...T,
      level: q,
      columns: G,
      container: I,
      direction: N,
      wrap: P,
      spacing: K,
      rowSpacing: X,
      columnSpacing: te,
      size: Y,
      offset: ee
    }, Q = s(re, w);
    return /* @__PURE__ */ $.jsx(c, {
      ref: y,
      as: M,
      ownerState: re,
      className: et(Q.root, E),
      ...W,
      children: x.Children.map(O, (B) => {
        var ie;
        return /* @__PURE__ */ x.isValidElement(B) && dT(B, ["Grid"]) && I && B.props.container ? /* @__PURE__ */ x.cloneElement(B, {
          unstable_level: ((ie = B.props) == null ? void 0 : ie.unstable_level) ?? q + 1
        }) : B;
      })
    });
  });
  return process.env.NODE_ENV !== "production" && (f.propTypes = {
    children: u.node,
    className: u.string,
    columns: u.oneOfType([u.arrayOf(u.number), u.number, u.object]),
    columnSpacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
    component: u.elementType,
    container: u.bool,
    direction: u.oneOfType([u.oneOf(["column-reverse", "column", "row-reverse", "row"]), u.arrayOf(u.oneOf(["column-reverse", "column", "row-reverse", "row"])), u.object]),
    offset: u.oneOfType([u.string, u.number, u.arrayOf(u.oneOfType([u.string, u.number])), u.object]),
    rowSpacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
    size: u.oneOfType([u.string, u.bool, u.number, u.arrayOf(u.oneOfType([u.string, u.bool, u.number])), u.object]),
    spacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
    sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
    wrap: u.oneOf(["nowrap", "wrap-reverse", "wrap"])
  }), f.muiName = "Grid", f;
}
const $Q = uy(), jQ = MI("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, t) => t.root
});
function FQ(e) {
  return II({
    props: e,
    name: "MuiStack",
    defaultTheme: $Q
  });
}
function zQ(e, t) {
  const n = x.Children.toArray(e).filter(Boolean);
  return n.reduce((r, o, s) => (r.push(o), s < n.length - 1 && r.push(/* @__PURE__ */ x.cloneElement(t, {
    key: `separator-${s}`
  })), r), []);
}
const BQ = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], HQ = ({
  ownerState: e,
  theme: t
}) => {
  let n = {
    display: "flex",
    flexDirection: "column",
    ...gu({
      theme: t
    }, eP({
      values: e.direction,
      breakpoints: t.breakpoints.values
    }), (r) => ({
      flexDirection: r
    }))
  };
  if (e.spacing) {
    const r = __(t), o = Object.keys(t.breakpoints.values).reduce((f, m) => ((typeof e.spacing == "object" && e.spacing[m] != null || typeof e.direction == "object" && e.direction[m] != null) && (f[m] = !0), f), {}), s = eP({
      values: e.direction,
      base: o
    }), a = eP({
      values: e.spacing,
      base: o
    });
    typeof s == "object" && Object.keys(s).forEach((f, m, g) => {
      if (!s[f]) {
        const w = m > 0 ? s[g[m - 1]] : "column";
        s[f] = w;
      }
    }), n = Oi(n, gu({
      theme: t
    }, a, (f, m) => e.useFlexGap ? {
      gap: im(r, f)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${BQ(m ? s[m] : e.direction)}`]: im(r, f)
      }
    }));
  }
  return n = PY(t.breakpoints, n), n;
};
function VQ(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = jQ,
    useThemeProps: n = FQ,
    componentName: r = "MuiStack"
  } = e, o = () => mt({
    root: ["root"]
  }, (f) => an(r, f), {}), s = t(HQ), a = /* @__PURE__ */ x.forwardRef(function(f, m) {
    const g = n(f), y = I_(g), {
      component: w = "div",
      direction: C = "column",
      spacing: T = 0,
      divider: E,
      children: O,
      className: k,
      useFlexGap: I = !1,
      ...M
    } = y, N = {
      direction: C,
      spacing: T,
      useFlexGap: I
    }, P = o();
    return /* @__PURE__ */ $.jsx(s, {
      as: w,
      ownerState: N,
      ref: m,
      className: et(P.root, k),
      ...M,
      children: E ? zQ(O, E) : O
    });
  });
  return process.env.NODE_ENV !== "production" && (a.propTypes = {
    children: u.node,
    direction: u.oneOfType([u.oneOf(["column-reverse", "column", "row-reverse", "row"]), u.arrayOf(u.oneOf(["column-reverse", "column", "row-reverse", "row"])), u.object]),
    divider: u.node,
    spacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
    sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
  }), a;
}
function WH() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: MS.white,
      default: MS.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const UQ = WH();
function GH() {
  return {
    text: {
      primary: MS.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: MS.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Wj = GH();
function Gj(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Qf(e.main, o) : t === "dark" && (e.dark = Xf(e.main, s)));
}
function WQ(e = "light") {
  return e === "dark" ? {
    main: iv[200],
    light: iv[50],
    dark: iv[400]
  } : {
    main: iv[700],
    light: iv[400],
    dark: iv[800]
  };
}
function GQ(e = "light") {
  return e === "dark" ? {
    main: ov[200],
    light: ov[50],
    dark: ov[400]
  } : {
    main: ov[500],
    light: ov[300],
    dark: ov[700]
  };
}
function qQ(e = "light") {
  return e === "dark" ? {
    main: rv[500],
    light: rv[300],
    dark: rv[700]
  } : {
    main: rv[700],
    light: rv[400],
    dark: rv[800]
  };
}
function KQ(e = "light") {
  return e === "dark" ? {
    main: sv[400],
    light: sv[300],
    dark: sv[700]
  } : {
    main: sv[700],
    light: sv[500],
    dark: sv[900]
  };
}
function YQ(e = "light") {
  return e === "dark" ? {
    main: av[400],
    light: av[300],
    dark: av[700]
  } : {
    main: av[800],
    light: av[500],
    dark: av[900]
  };
}
function XQ(e = "light") {
  return e === "dark" ? {
    main: Aw[400],
    light: Aw[300],
    dark: Aw[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Aw[500],
    dark: Aw[900]
  };
}
function HI(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || WQ(t), a = e.secondary || GQ(t), c = e.error || qQ(t), f = e.info || KQ(t), m = e.success || YQ(t), g = e.warning || XQ(t);
  function y(E) {
    const O = Ij(E, Wj.text.primary) >= n ? Wj.text.primary : UQ.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const k = Ij(E, O);
      k < 3 && console.error([`MUI: The contrast ratio of ${k}:1 for ${O} on ${E}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return O;
  }
  const w = ({
    color: E,
    name: O,
    mainShade: k = 500,
    lightShade: I = 300,
    darkShade: M = 700
  }) => {
    if (E = {
      ...E
    }, !E.main && E[k] && (E.main = E[k]), !E.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${O ? ` (${O})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${k}\` property.` : vc(11, O ? ` (${O})` : "", k));
    if (typeof E.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${O ? ` (${O})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(E.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : vc(12, O ? ` (${O})` : "", JSON.stringify(E.main)));
    return Gj(E, "light", I, r), Gj(E, "dark", M, r), E.contrastText || (E.contrastText = y(E.main)), E;
  };
  let C;
  return t === "light" ? C = WH() : t === "dark" && (C = GH()), process.env.NODE_ENV !== "production" && (C || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), Oi({
    // A collection of common colors.
    common: {
      ...MS
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: w({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: w({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: w({
      color: c,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: w({
      color: g,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: w({
      color: f,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: w({
      color: m,
      name: "success"
    }),
    // The grey colors.
    grey: c7,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: y,
    // Generate a rich color object.
    augmentColor: w,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...C
  }, o);
}
function QQ(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function JQ(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function ZQ(e) {
  return Math.round(e * 1e5) / 1e5;
}
const qj = {
  textTransform: "uppercase"
}, Kj = '"Roboto", "Helvetica", "Arial", sans-serif';
function qH(e, t) {
  const {
    fontFamily: n = Kj,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: c = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: f = 16,
    // Apply the CSS properties to all the variants.
    allVariants: m,
    pxToRem: g,
    ...y
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof f != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const w = r / 14, C = g || ((O) => `${O / f * w}rem`), T = (O, k, I, M, N) => ({
    fontFamily: n,
    fontWeight: O,
    fontSize: C(k),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: I,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Kj ? {
      letterSpacing: `${ZQ(M / k)}em`
    } : {},
    ...N,
    ...m
  }), E = {
    h1: T(o, 96, 1.167, -1.5),
    h2: T(o, 60, 1.2, -0.5),
    h3: T(s, 48, 1.167, 0),
    h4: T(s, 34, 1.235, 0.25),
    h5: T(s, 24, 1.334, 0),
    h6: T(a, 20, 1.6, 0.15),
    subtitle1: T(s, 16, 1.75, 0.15),
    subtitle2: T(a, 14, 1.57, 0.1),
    body1: T(s, 16, 1.5, 0.15),
    body2: T(s, 14, 1.43, 0.15),
    button: T(a, 14, 1.75, 0.4, qj),
    caption: T(s, 12, 1.66, 0.4),
    overline: T(s, 12, 2.66, 1, qj),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Oi({
    htmlFontSize: f,
    pxToRem: C,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: c,
    ...E
  }, y, {
    clone: !1
    // No need to clone deep
  });
}
const eJ = 0.2, tJ = 0.14, nJ = 0.12;
function ro(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${eJ})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${tJ})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${nJ})`].join(",");
}
const rJ = ["none", ro(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), ro(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), ro(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), ro(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), ro(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), ro(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), ro(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), ro(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), ro(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), ro(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), ro(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), ro(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), ro(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), ro(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), ro(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), ro(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), ro(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), ro(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), ro(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), ro(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), ro(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), ro(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), ro(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), ro(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], oJ = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, iJ = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Yj(e) {
  return `${Math.round(e)}ms`;
}
function sJ(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function aJ(e) {
  const t = {
    ...oJ,
    ...e.easing
  }, n = {
    ...iJ,
    ...e.duration
  };
  return {
    getAutoHeightDuration: sJ,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: c = t.easeInOut,
        delay: f = 0,
        ...m
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const g = (w) => typeof w == "string", y = (w) => !Number.isNaN(parseFloat(w));
        !g(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !y(a) && !g(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), g(c) || console.error('MUI: Argument "easing" must be a string.'), !y(f) && !g(f) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(m).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(m).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((g) => `${g} ${typeof a == "string" ? a : Yj(a)} ${c} ${typeof f == "string" ? f : Yj(f)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const lJ = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function uJ(e) {
  return dc(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function KH(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, c] = o[s];
      !uJ(c) || a.startsWith("unstable_") ? delete r[a] : dc(c) && (r[a] = {
        ...c
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function aM(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: c = {},
    shape: f,
    ...m
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : vc(20));
  const g = HI(s), y = uy(e);
  let w = Oi(y, {
    mixins: JQ(y.breakpoints, r),
    palette: g,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: rJ.slice(),
    typography: qH(g, c),
    transitions: aJ(a),
    zIndex: {
      ...lJ
    }
  });
  if (w = Oi(w, m), w = t.reduce((C, T) => Oi(C, T), w), process.env.NODE_ENV !== "production") {
    const C = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], T = (E, O) => {
      let k;
      for (k in E) {
        const I = E[k];
        if (C.includes(k) && Object.keys(I).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const M = an("", k);
            console.error([`MUI: The \`${O}\` component increases the CSS specificity of the \`${k}\` internal state.`, "You can not override it like this: ", JSON.stringify(E, null, 2), "", `Instead, you need to use the '&.${M}' syntax:`, JSON.stringify({
              root: {
                [`&.${M}`]: I
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          E[k] = {};
        }
      }
    };
    Object.keys(w.components).forEach((E) => {
      const O = w.components[E].styleOverrides;
      O && E.startsWith("Mui") && T(O, E);
    });
  }
  return w.unstable_sxConfig = {
    ...lC,
    ...m == null ? void 0 : m.unstable_sxConfig
  }, w.unstable_sx = function(T) {
    return Yf({
      sx: T,
      theme: this
    });
  }, w.toRuntimeSource = KH, w;
}
function lM(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const cJ = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = lM(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function YH(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function XH(e) {
  return e === "dark" ? cJ : [];
}
function dJ(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = HI(t);
  return {
    palette: s,
    opacity: {
      ...YH(s.mode),
      ...n
    },
    overlays: r || XH(s.mode),
    ...o
  };
}
function fJ(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|modularCssLayers|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const pJ = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], hJ = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return pJ(e.cssVarPrefix).forEach((c) => {
        a[c] = n[c], delete n[c];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function mJ(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function Ke(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function eS(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : PH(e);
}
function pd(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Zw(eS(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function gJ(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const nc = (e) => {
  try {
    return e();
  } catch {
  }
}, vJ = (e = "mui") => cQ(e);
function iP(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = dJ({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = aM({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...YH(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || XH(o)
  }, a;
}
function yJ(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = fJ,
    colorSchemeSelector: c = n.light && n.dark ? "media" : void 0,
    rootSelector: f = ":root",
    ...m
  } = e, g = Object.keys(n)[0], y = r || (n.light && g !== "light" ? "light" : g), w = vJ(s), {
    [y]: C,
    light: T,
    dark: E,
    ...O
  } = n, k = {
    ...O
  };
  let I = C;
  if ((y === "dark" && !("dark" in n) || y === "light" && !("light" in n)) && (I = !0), !I)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${y}\` option is either missing or invalid.` : vc(21, y));
  const M = iP(k, I, m, y);
  T && !k.light && iP(k, T, void 0, "light"), E && !k.dark && iP(k, E, void 0, "dark");
  let N = {
    defaultColorScheme: y,
    ...M,
    cssVarPrefix: s,
    colorSchemeSelector: c,
    rootSelector: f,
    getCssVar: w,
    colorSchemes: k,
    font: {
      ...QQ(M.typography),
      ...M.font
    },
    spacing: gJ(m.spacing)
  };
  Object.keys(N.colorSchemes).forEach((z) => {
    const A = N.colorSchemes[z].palette, q = (W) => {
      const Y = W.split("-"), ee = Y[1], G = Y[2];
      return w(W, A[ee][G]);
    };
    if (A.mode === "light" && (Ke(A.common, "background", "#fff"), Ke(A.common, "onBackground", "#000")), A.mode === "dark" && (Ke(A.common, "background", "#000"), Ke(A.common, "onBackground", "#fff")), mJ(A, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), A.mode === "light") {
      Ke(A.Alert, "errorColor", zr(A.error.light, 0.6)), Ke(A.Alert, "infoColor", zr(A.info.light, 0.6)), Ke(A.Alert, "successColor", zr(A.success.light, 0.6)), Ke(A.Alert, "warningColor", zr(A.warning.light, 0.6)), Ke(A.Alert, "errorFilledBg", q("palette-error-main")), Ke(A.Alert, "infoFilledBg", q("palette-info-main")), Ke(A.Alert, "successFilledBg", q("palette-success-main")), Ke(A.Alert, "warningFilledBg", q("palette-warning-main")), Ke(A.Alert, "errorFilledColor", nc(() => A.getContrastText(A.error.main))), Ke(A.Alert, "infoFilledColor", nc(() => A.getContrastText(A.info.main))), Ke(A.Alert, "successFilledColor", nc(() => A.getContrastText(A.success.main))), Ke(A.Alert, "warningFilledColor", nc(() => A.getContrastText(A.warning.main))), Ke(A.Alert, "errorStandardBg", Br(A.error.light, 0.9)), Ke(A.Alert, "infoStandardBg", Br(A.info.light, 0.9)), Ke(A.Alert, "successStandardBg", Br(A.success.light, 0.9)), Ke(A.Alert, "warningStandardBg", Br(A.warning.light, 0.9)), Ke(A.Alert, "errorIconColor", q("palette-error-main")), Ke(A.Alert, "infoIconColor", q("palette-info-main")), Ke(A.Alert, "successIconColor", q("palette-success-main")), Ke(A.Alert, "warningIconColor", q("palette-warning-main")), Ke(A.AppBar, "defaultBg", q("palette-grey-100")), Ke(A.Avatar, "defaultBg", q("palette-grey-400")), Ke(A.Button, "inheritContainedBg", q("palette-grey-300")), Ke(A.Button, "inheritContainedHoverBg", q("palette-grey-A100")), Ke(A.Chip, "defaultBorder", q("palette-grey-400")), Ke(A.Chip, "defaultAvatarColor", q("palette-grey-700")), Ke(A.Chip, "defaultIconColor", q("palette-grey-700")), Ke(A.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Ke(A.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Ke(A.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Ke(A.LinearProgress, "primaryBg", Br(A.primary.main, 0.62)), Ke(A.LinearProgress, "secondaryBg", Br(A.secondary.main, 0.62)), Ke(A.LinearProgress, "errorBg", Br(A.error.main, 0.62)), Ke(A.LinearProgress, "infoBg", Br(A.info.main, 0.62)), Ke(A.LinearProgress, "successBg", Br(A.success.main, 0.62)), Ke(A.LinearProgress, "warningBg", Br(A.warning.main, 0.62)), Ke(A.Skeleton, "bg", `rgba(${q("palette-text-primaryChannel")} / 0.11)`), Ke(A.Slider, "primaryTrack", Br(A.primary.main, 0.62)), Ke(A.Slider, "secondaryTrack", Br(A.secondary.main, 0.62)), Ke(A.Slider, "errorTrack", Br(A.error.main, 0.62)), Ke(A.Slider, "infoTrack", Br(A.info.main, 0.62)), Ke(A.Slider, "successTrack", Br(A.success.main, 0.62)), Ke(A.Slider, "warningTrack", Br(A.warning.main, 0.62));
      const W = ME(A.background.default, 0.8);
      Ke(A.SnackbarContent, "bg", W), Ke(A.SnackbarContent, "color", nc(() => A.getContrastText(W))), Ke(A.SpeedDialAction, "fabHoverBg", ME(A.background.paper, 0.15)), Ke(A.StepConnector, "border", q("palette-grey-400")), Ke(A.StepContent, "border", q("palette-grey-400")), Ke(A.Switch, "defaultColor", q("palette-common-white")), Ke(A.Switch, "defaultDisabledColor", q("palette-grey-100")), Ke(A.Switch, "primaryDisabledColor", Br(A.primary.main, 0.62)), Ke(A.Switch, "secondaryDisabledColor", Br(A.secondary.main, 0.62)), Ke(A.Switch, "errorDisabledColor", Br(A.error.main, 0.62)), Ke(A.Switch, "infoDisabledColor", Br(A.info.main, 0.62)), Ke(A.Switch, "successDisabledColor", Br(A.success.main, 0.62)), Ke(A.Switch, "warningDisabledColor", Br(A.warning.main, 0.62)), Ke(A.TableCell, "border", Br(PE(A.divider, 1), 0.88)), Ke(A.Tooltip, "bg", PE(A.grey[700], 0.92));
    }
    if (A.mode === "dark") {
      Ke(A.Alert, "errorColor", Br(A.error.light, 0.6)), Ke(A.Alert, "infoColor", Br(A.info.light, 0.6)), Ke(A.Alert, "successColor", Br(A.success.light, 0.6)), Ke(A.Alert, "warningColor", Br(A.warning.light, 0.6)), Ke(A.Alert, "errorFilledBg", q("palette-error-dark")), Ke(A.Alert, "infoFilledBg", q("palette-info-dark")), Ke(A.Alert, "successFilledBg", q("palette-success-dark")), Ke(A.Alert, "warningFilledBg", q("palette-warning-dark")), Ke(A.Alert, "errorFilledColor", nc(() => A.getContrastText(A.error.dark))), Ke(A.Alert, "infoFilledColor", nc(() => A.getContrastText(A.info.dark))), Ke(A.Alert, "successFilledColor", nc(() => A.getContrastText(A.success.dark))), Ke(A.Alert, "warningFilledColor", nc(() => A.getContrastText(A.warning.dark))), Ke(A.Alert, "errorStandardBg", zr(A.error.light, 0.9)), Ke(A.Alert, "infoStandardBg", zr(A.info.light, 0.9)), Ke(A.Alert, "successStandardBg", zr(A.success.light, 0.9)), Ke(A.Alert, "warningStandardBg", zr(A.warning.light, 0.9)), Ke(A.Alert, "errorIconColor", q("palette-error-main")), Ke(A.Alert, "infoIconColor", q("palette-info-main")), Ke(A.Alert, "successIconColor", q("palette-success-main")), Ke(A.Alert, "warningIconColor", q("palette-warning-main")), Ke(A.AppBar, "defaultBg", q("palette-grey-900")), Ke(A.AppBar, "darkBg", q("palette-background-paper")), Ke(A.AppBar, "darkColor", q("palette-text-primary")), Ke(A.Avatar, "defaultBg", q("palette-grey-600")), Ke(A.Button, "inheritContainedBg", q("palette-grey-800")), Ke(A.Button, "inheritContainedHoverBg", q("palette-grey-700")), Ke(A.Chip, "defaultBorder", q("palette-grey-700")), Ke(A.Chip, "defaultAvatarColor", q("palette-grey-300")), Ke(A.Chip, "defaultIconColor", q("palette-grey-300")), Ke(A.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Ke(A.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Ke(A.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Ke(A.LinearProgress, "primaryBg", zr(A.primary.main, 0.5)), Ke(A.LinearProgress, "secondaryBg", zr(A.secondary.main, 0.5)), Ke(A.LinearProgress, "errorBg", zr(A.error.main, 0.5)), Ke(A.LinearProgress, "infoBg", zr(A.info.main, 0.5)), Ke(A.LinearProgress, "successBg", zr(A.success.main, 0.5)), Ke(A.LinearProgress, "warningBg", zr(A.warning.main, 0.5)), Ke(A.Skeleton, "bg", `rgba(${q("palette-text-primaryChannel")} / 0.13)`), Ke(A.Slider, "primaryTrack", zr(A.primary.main, 0.5)), Ke(A.Slider, "secondaryTrack", zr(A.secondary.main, 0.5)), Ke(A.Slider, "errorTrack", zr(A.error.main, 0.5)), Ke(A.Slider, "infoTrack", zr(A.info.main, 0.5)), Ke(A.Slider, "successTrack", zr(A.success.main, 0.5)), Ke(A.Slider, "warningTrack", zr(A.warning.main, 0.5));
      const W = ME(A.background.default, 0.98);
      Ke(A.SnackbarContent, "bg", W), Ke(A.SnackbarContent, "color", nc(() => A.getContrastText(W))), Ke(A.SpeedDialAction, "fabHoverBg", ME(A.background.paper, 0.15)), Ke(A.StepConnector, "border", q("palette-grey-600")), Ke(A.StepContent, "border", q("palette-grey-600")), Ke(A.Switch, "defaultColor", q("palette-grey-300")), Ke(A.Switch, "defaultDisabledColor", q("palette-grey-600")), Ke(A.Switch, "primaryDisabledColor", zr(A.primary.main, 0.55)), Ke(A.Switch, "secondaryDisabledColor", zr(A.secondary.main, 0.55)), Ke(A.Switch, "errorDisabledColor", zr(A.error.main, 0.55)), Ke(A.Switch, "infoDisabledColor", zr(A.info.main, 0.55)), Ke(A.Switch, "successDisabledColor", zr(A.success.main, 0.55)), Ke(A.Switch, "warningDisabledColor", zr(A.warning.main, 0.55)), Ke(A.TableCell, "border", zr(PE(A.divider, 1), 0.68)), Ke(A.Tooltip, "bg", PE(A.grey[700], 0.92));
    }
    pd(A.background, "default"), pd(A.background, "paper"), pd(A.common, "background"), pd(A.common, "onBackground"), pd(A, "divider"), Object.keys(A).forEach((W) => {
      const Y = A[W];
      W !== "tonalOffset" && Y && typeof Y == "object" && (Y.main && Ke(A[W], "mainChannel", Zw(eS(Y.main))), Y.light && Ke(A[W], "lightChannel", Zw(eS(Y.light))), Y.dark && Ke(A[W], "darkChannel", Zw(eS(Y.dark))), Y.contrastText && Ke(A[W], "contrastTextChannel", Zw(eS(Y.contrastText))), W === "text" && (pd(A[W], "primary"), pd(A[W], "secondary")), W === "action" && (Y.active && pd(A[W], "active"), Y.selected && pd(A[W], "selected")));
    });
  }), N = t.reduce((z, A) => Oi(z, A), N);
  const P = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: hJ(N)
  }, {
    vars: F,
    generateThemeVars: H,
    generateStyleSheets: U
  } = pQ(N, P);
  return N.vars = F, Object.entries(N.colorSchemes[N.defaultColorScheme]).forEach(([z, A]) => {
    N[z] = A;
  }), N.generateThemeVars = H, N.generateStyleSheets = U, N.generateSpacing = function() {
    return CH(m.spacing, __(this));
  }, N.getColorSchemeSelector = hQ(c), N.spacing = N.generateSpacing(), N.shouldSkipGeneratingVar = a, N.unstable_sxConfig = {
    ...lC,
    ...m == null ? void 0 : m.unstable_sxConfig
  }, N.unstable_sx = function(A) {
    return Yf({
      sx: A,
      theme: this
    });
  }, N.toRuntimeSource = KH, N;
}
function Xj(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: HI({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function N_(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, c = s || "light", f = o == null ? void 0 : o[c], m = {
    ...o,
    ...n ? {
      [c]: {
        ...typeof f != "boolean" && f,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return aM(e, ...t);
    let g = n;
    "palette" in e || m[c] && (m[c] !== !0 ? g = m[c].palette : c === "dark" && (g = {
      mode: "dark"
    }));
    const y = aM({
      ...e,
      palette: g
    }, ...t);
    return y.defaultColorScheme = c, y.colorSchemes = m, y.palette.mode === "light" && (y.colorSchemes.light = {
      ...m.light !== !0 && m.light,
      palette: y.palette
    }, Xj(y, "dark", m.dark)), y.palette.mode === "dark" && (y.colorSchemes.dark = {
      ...m.dark !== !0 && m.dark,
      palette: y.palette
    }, Xj(y, "light", m.light)), y;
  }
  return !n && !("light" in m) && c === "light" && (m.light = !0), yJ({
    ...a,
    colorSchemes: m,
    defaultColorScheme: c,
    ...typeof r != "boolean" && r
  }, ...t);
}
function bJ(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function wJ(e) {
  return parseFloat(e);
}
const VI = N_();
function sp() {
  const e = uC(VI);
  return process.env.NODE_ENV !== "production" && x.useDebugValue(e), e[pc] || e;
}
function QH(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Is = (e) => QH(e) && e !== "classes", Ue = RH({
  themeId: pc,
  defaultTheme: VI,
  rootShouldForwardProp: Is
});
function SJ({
  theme: e,
  ...t
}) {
  const n = pc in e ? e[pc] : void 0;
  return /* @__PURE__ */ $.jsx(NS, {
    ...t,
    themeId: n ? pc : void 0,
    theme: n || e
  });
}
const IE = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: CJ
} = uQ({
  themeId: pc,
  // @ts-ignore ignore module augmentation tests
  theme: () => N_({
    cssVariables: !0
  }),
  colorSchemeStorageKey: IE.colorSchemeStorageKey,
  modeStorageKey: IE.modeStorageKey,
  defaultColorScheme: {
    light: IE.defaultLightColorScheme,
    dark: IE.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: qH(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return Yf({
        sx: r,
        theme: this
      });
    }, t;
  }
}), xJ = CJ;
function EJ({
  theme: e,
  ...t
}) {
  const n = x.useMemo(() => {
    if (typeof e == "function")
      return e;
    const r = pc in e ? e[pc] : e;
    return "colorSchemes" in r ? null : "vars" in r ? e : {
      ...e,
      vars: null
    };
  }, [e]);
  return n ? /* @__PURE__ */ $.jsx(SJ, {
    theme: n,
    ...t
  }) : /* @__PURE__ */ $.jsx(xJ, {
    theme: e,
    ...t
  });
}
function JH(e) {
  return /* @__PURE__ */ $.jsx(PI, {
    ...e,
    defaultTheme: VI,
    themeId: pc
  });
}
process.env.NODE_ENV !== "production" && (JH.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: u.oneOfType([u.array, u.func, u.number, u.object, u.string, u.bool])
});
function UI(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ $.jsx(JH, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function TJ() {
  return I_;
}
const Zt = tQ;
process.env.NODE_ENV !== "production" && (u.node, u.object.isRequired);
function mn(e) {
  return ZX(e);
}
function _J(e) {
  return an("MuiSvgIcon", e);
}
pn("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const OJ = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${He(t)}`, `fontSize${He(n)}`]
  };
  return mt(o, _J, r);
}, RJ = Ue("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${He(n.color)}`], t[`fontSize${He(n.fontSize)}`]];
  }
})(Zt(({
  theme: e
}) => {
  var t, n, r, o, s, a, c, f, m, g, y, w, C, T;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (E) => !E.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((f = (c = e.typography) == null ? void 0 : c.pxToRem) == null ? void 0 : f.call(c, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((g = (m = e.typography) == null ? void 0 : m.pxToRem) == null ? void 0 : g.call(m, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, E]) => E && E.main).map(([E]) => {
        var O, k;
        return {
          props: {
            color: E
          },
          style: {
            color: (k = (O = (e.vars ?? e).palette) == null ? void 0 : O[E]) == null ? void 0 : k.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (w = (y = (e.vars ?? e).palette) == null ? void 0 : y.action) == null ? void 0 : w.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (T = (C = (e.vars ?? e).palette) == null ? void 0 : C.action) == null ? void 0 : T.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), MT = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: c = "svg",
    fontSize: f = "medium",
    htmlColor: m,
    inheritViewBox: g = !1,
    titleAccess: y,
    viewBox: w = "0 0 24 24",
    ...C
  } = r, T = /* @__PURE__ */ x.isValidElement(o) && o.type === "svg", E = {
    ...r,
    color: a,
    component: c,
    fontSize: f,
    instanceFontSize: t.fontSize,
    inheritViewBox: g,
    viewBox: w,
    hasSvgAsChild: T
  }, O = {};
  g || (O.viewBox = w);
  const k = OJ(E);
  return /* @__PURE__ */ $.jsxs(RJ, {
    as: c,
    className: et(k.root, s),
    focusable: "false",
    color: m,
    "aria-hidden": y ? void 0 : !0,
    role: y ? "img" : void 0,
    ref: n,
    ...O,
    ...C,
    ...T && o.props,
    ownerState: E,
    children: [T ? o.props.children : o, y ? /* @__PURE__ */ $.jsx("title", {
      children: y
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (MT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: u.oneOfType([u.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: u.oneOfType([u.oneOf(["inherit", "large", "medium", "small"]), u.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: u.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: u.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: u.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: u.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: u.string
});
MT.muiName = "SvgIcon";
function xn(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ $.jsx(MT, {
      "data-testid": `${t}Icon`,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = MT.muiName, /* @__PURE__ */ x.memo(/* @__PURE__ */ x.forwardRef(n));
}
function WI(e, t) {
  if (!e)
    return t;
  if (typeof e == "function" || typeof t == "function")
    return (o) => {
      const s = typeof t == "function" ? t(o) : t, a = typeof e == "function" ? e({
        ...o,
        ...s
      }) : e, c = et(o == null ? void 0 : o.className, s == null ? void 0 : s.className, a == null ? void 0 : a.className);
      return {
        ...s,
        ...a,
        ...!!c && {
          className: c
        },
        ...(s == null ? void 0 : s.style) && (a == null ? void 0 : a.style) && {
          style: {
            ...s.style,
            ...a.style
          }
        },
        ...(s == null ? void 0 : s.sx) && (a == null ? void 0 : a.sx) && {
          sx: [...Array.isArray(s.sx) ? s.sx : [s.sx], ...Array.isArray(a.sx) ? a.sx : [a.sx]]
        }
      };
    };
  const n = t, r = et(n == null ? void 0 : n.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...!!r && {
      className: r
    },
    ...(n == null ? void 0 : n.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...n.style,
        ...e.style
      }
    },
    ...(n == null ? void 0 : n.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(n.sx) ? n.sx : [n.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
function qt(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function uM(e, t) {
  return uM = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, uM(e, t);
}
function ZH(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, uM(e, t);
}
const Qj = {
  disabled: !1
};
var kJ = process.env.NODE_ENV !== "production" ? u.oneOfType([u.number, u.shape({
  enter: u.number,
  exit: u.number,
  appear: u.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && u.oneOfType([u.string, u.shape({
  enter: u.string,
  exit: u.string,
  active: u.string
}), u.shape({
  enter: u.string,
  enterDone: u.string,
  enterActive: u.string,
  exit: u.string,
  exitDone: u.string,
  exitActive: u.string
})]);
const IT = uu.createContext(null);
var PJ = function(t) {
  return t.scrollTop;
}, tS = "unmounted", Nh = "exited", Lh = "entering", wv = "entered", cM = "exiting", yu = /* @__PURE__ */ function(e) {
  ZH(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = o, c = a && !a.isMounting ? r.enter : r.appear, f;
    return s.appearStatus = null, r.in ? c ? (f = Nh, s.appearStatus = Lh) : f = wv : r.unmountOnExit || r.mountOnEnter ? f = tS : f = Nh, s.state = {
      status: f
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(o, s) {
    var a = o.in;
    return a && s.status === tS ? {
      status: Nh
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var s = null;
    if (o !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== Lh && a !== wv && (s = Lh) : (a === Lh || a === wv) && (s = cM);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, s, a, c;
    return s = a = c = o, o != null && typeof o != "number" && (s = o.exit, a = o.enter, c = o.appear !== void 0 ? o.appear : a), {
      exit: s,
      enter: a,
      appear: c
    };
  }, n.updateStatus = function(o, s) {
    if (o === void 0 && (o = !1), s !== null)
      if (this.cancelNextCallback(), s === Lh) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : EE.findDOMNode(this);
          a && PJ(a);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Nh && this.setState({
      status: tS
    });
  }, n.performEnter = function(o) {
    var s = this, a = this.props.enter, c = this.context ? this.context.isMounting : o, f = this.props.nodeRef ? [c] : [EE.findDOMNode(this), c], m = f[0], g = f[1], y = this.getTimeouts(), w = c ? y.appear : y.enter;
    if (!o && !a || Qj.disabled) {
      this.safeSetState({
        status: wv
      }, function() {
        s.props.onEntered(m);
      });
      return;
    }
    this.props.onEnter(m, g), this.safeSetState({
      status: Lh
    }, function() {
      s.props.onEntering(m, g), s.onTransitionEnd(w, function() {
        s.safeSetState({
          status: wv
        }, function() {
          s.props.onEntered(m, g);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, s = this.props.exit, a = this.getTimeouts(), c = this.props.nodeRef ? void 0 : EE.findDOMNode(this);
    if (!s || Qj.disabled) {
      this.safeSetState({
        status: Nh
      }, function() {
        o.props.onExited(c);
      });
      return;
    }
    this.props.onExit(c), this.safeSetState({
      status: cM
    }, function() {
      o.props.onExiting(c), o.onTransitionEnd(a.exit, function() {
        o.safeSetState({
          status: Nh
        }, function() {
          o.props.onExited(c);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, s) {
    s = this.setNextCallback(s), this.setState(o, s);
  }, n.setNextCallback = function(o) {
    var s = this, a = !0;
    return this.nextCallback = function(c) {
      a && (a = !1, s.nextCallback = null, o(c));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : EE.findDOMNode(this), c = o == null && !this.props.addEndListener;
    if (!a || c) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var f = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], m = f[0], g = f[1];
      this.props.addEndListener(m, g);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === tS)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var c = qt(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ uu.createElement(IT.Provider, {
        value: null
      }, typeof a == "function" ? a(o, c) : uu.cloneElement(uu.Children.only(a), c))
    );
  }, t;
}(uu.Component);
yu.contextType = IT;
yu.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: u.shape({
    current: typeof Element > "u" ? u.any : function(e, t, n, r, o, s) {
      var a = e[t];
      return u.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: u.oneOfType([u.func.isRequired, u.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: u.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: u.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: u.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: u.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: u.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: u.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = kJ;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
      o[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: u.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: u.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: u.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: u.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: u.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: u.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: u.func
} : {};
function lv() {
}
yu.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: lv,
  onEntering: lv,
  onEntered: lv,
  onExit: lv,
  onExiting: lv,
  onExited: lv
};
yu.UNMOUNTED = tS;
yu.EXITED = Nh;
yu.ENTERING = Lh;
yu.ENTERED = wv;
yu.EXITING = cM;
function MJ(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function GI(e, t) {
  var n = function(s) {
    return t && x.isValidElement(s) ? t(s) : s;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && x.Children.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function IJ(e, t) {
  e = e || {}, t = t || {};
  function n(g) {
    return g in t ? t[g] : e[g];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var s in e)
    s in t ? o.length && (r[s] = o, o = []) : o.push(s);
  var a, c = {};
  for (var f in t) {
    if (r[f])
      for (a = 0; a < r[f].length; a++) {
        var m = r[f][a];
        c[r[f][a]] = n(m);
      }
    c[f] = n(f);
  }
  for (a = 0; a < o.length; a++)
    c[o[a]] = n(o[a]);
  return c;
}
function qh(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function DJ(e, t) {
  return GI(e.children, function(n) {
    return x.cloneElement(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: qh(n, "appear", e),
      enter: qh(n, "enter", e),
      exit: qh(n, "exit", e)
    });
  });
}
function AJ(e, t, n) {
  var r = GI(e.children), o = IJ(t, r);
  return Object.keys(o).forEach(function(s) {
    var a = o[s];
    if (x.isValidElement(a)) {
      var c = s in t, f = s in r, m = t[s], g = x.isValidElement(m) && !m.props.in;
      f && (!c || g) ? o[s] = x.cloneElement(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: qh(a, "exit", e),
        enter: qh(a, "enter", e)
      }) : !f && c && !g ? o[s] = x.cloneElement(a, {
        in: !1
      }) : f && c && x.isValidElement(m) && (o[s] = x.cloneElement(a, {
        onExited: n.bind(null, a),
        in: m.props.in,
        exit: qh(a, "exit", e),
        enter: qh(a, "enter", e)
      }));
    }
  }), o;
}
var NJ = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, LJ = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, qI = /* @__PURE__ */ function(e) {
  ZH(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = s.handleExited.bind(MJ(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, s) {
    var a = s.children, c = s.handleExited, f = s.firstRender;
    return {
      children: f ? DJ(o, c) : AJ(o, a, c),
      firstRender: !1
    };
  }, n.handleExited = function(o, s) {
    var a = GI(this.props.children);
    o.key in a || (o.props.onExited && o.props.onExited(s), this.mounted && this.setState(function(c) {
      var f = J({}, c.children);
      return delete f[o.key], {
        children: f
      };
    }));
  }, n.render = function() {
    var o = this.props, s = o.component, a = o.childFactory, c = qt(o, ["component", "childFactory"]), f = this.state.contextValue, m = NJ(this.state.children).map(a);
    return delete c.appear, delete c.enter, delete c.exit, s === null ? /* @__PURE__ */ uu.createElement(IT.Provider, {
      value: f
    }, m) : /* @__PURE__ */ uu.createElement(IT.Provider, {
      value: f
    }, /* @__PURE__ */ uu.createElement(s, c, m));
  }, t;
}(uu.Component);
qI.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: u.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: u.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: u.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: u.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: u.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: u.func
} : {};
qI.defaultProps = LJ;
const KI = (e) => e.scrollTop;
function Hv(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function $J(e) {
  return an("MuiPaper", e);
}
pn("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const jJ = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return mt(s, $J, o);
}, FJ = Ue("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Zt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), bu = /* @__PURE__ */ x.forwardRef(function(t, n) {
  var C;
  const r = mn({
    props: t,
    name: "MuiPaper"
  }), o = sp(), {
    className: s,
    component: a = "div",
    elevation: c = 1,
    square: f = !1,
    variant: m = "elevation",
    ...g
  } = r, y = {
    ...r,
    component: a,
    elevation: c,
    square: f,
    variant: m
  }, w = jJ(y);
  return process.env.NODE_ENV !== "production" && o.shadows[c] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${c}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${c}]\` is defined.`].join(`
`)), /* @__PURE__ */ $.jsx(FJ, {
    as: a,
    ownerState: y,
    className: et(w.root, s),
    ref: n,
    ...g,
    style: {
      ...m === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[c],
        ...o.vars && {
          "--Paper-overlay": (C = o.vars.overlays) == null ? void 0 : C[c]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${An("#fff", lM(c))}, ${An("#fff", lM(c))})`
        }
      },
      ...g.style
    }
  });
});
process.env.NODE_ENV !== "production" && (bu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Na(Jh, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: u.bool,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: u.oneOfType([u.oneOf(["elevation", "outlined"]), u.string])
});
function vn(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: c = !1,
    ...f
  } = t, {
    component: m,
    slots: g = {
      [e]: void 0
    },
    slotProps: y = {
      [e]: void 0
    },
    ...w
  } = s, C = g[e] || r, T = jH(y[e], o), {
    props: {
      component: E,
      ...O
    },
    internalRef: k
  } = $H({
    className: n,
    ...f,
    externalForwardedProps: e === "root" ? w : void 0,
    externalSlotProps: T
  }), I = Pr(k, T == null ? void 0 : T.ref, t.ref), M = e === "root" ? E || m : E, N = NH(C, {
    ...e === "root" && !m && !g[e] && a,
    ...e !== "root" && !g[e] && a,
    ...O,
    ...M && !c && {
      as: M
    },
    ...M && c && {
      component: M
    },
    ref: I
  }, o);
  return [C, N];
}
class DT {
  constructor() {
    Dn(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new DT();
  }
  static use() {
    const t = Ol(DT.create).current, [n, r] = x.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, x.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = BJ(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function zJ() {
  return DT.use();
}
function BJ() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function eV(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: s,
    rippleSize: a,
    in: c,
    onExited: f,
    timeout: m
  } = e, [g, y] = x.useState(!1), w = et(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), C = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + o
  }, T = et(n.child, g && n.childLeaving, r && n.childPulsate);
  return !c && !g && y(!0), x.useEffect(() => {
    if (!c && f != null) {
      const E = setTimeout(f, m);
      return () => {
        clearTimeout(E);
      };
    }
  }, [f, c, m]), /* @__PURE__ */ $.jsx("span", {
    className: w,
    style: C,
    children: /* @__PURE__ */ $.jsx("span", {
      className: T
    })
  });
}
process.env.NODE_ENV !== "production" && (eV.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object.isRequired,
  className: u.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: u.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: u.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: u.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: u.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: u.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: u.number,
  /**
   * exit delay
   */
  timeout: u.number.isRequired
});
const dl = pn("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), dM = 550, HJ = 80, VJ = Cc`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, UJ = Cc`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, WJ = Cc`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, GJ = Ue("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), qJ = Ue(eV, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${dl.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${VJ};
    animation-duration: ${dM}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${dl.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${dl.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${dl.childLeaving} {
    opacity: 0;
    animation-name: ${UJ};
    animation-duration: ${dM}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${dl.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${WJ};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, tV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: s = {},
    className: a,
    ...c
  } = r, [f, m] = x.useState([]), g = x.useRef(0), y = x.useRef(null);
  x.useEffect(() => {
    y.current && (y.current(), y.current = null);
  }, [f]);
  const w = x.useRef(!1), C = Ma(), T = x.useRef(null), E = x.useRef(null), O = x.useCallback((N) => {
    const {
      pulsate: P,
      rippleX: F,
      rippleY: H,
      rippleSize: U,
      cb: z
    } = N;
    m((A) => [...A, /* @__PURE__ */ $.jsx(qJ, {
      classes: {
        ripple: et(s.ripple, dl.ripple),
        rippleVisible: et(s.rippleVisible, dl.rippleVisible),
        ripplePulsate: et(s.ripplePulsate, dl.ripplePulsate),
        child: et(s.child, dl.child),
        childLeaving: et(s.childLeaving, dl.childLeaving),
        childPulsate: et(s.childPulsate, dl.childPulsate)
      },
      timeout: dM,
      pulsate: P,
      rippleX: F,
      rippleY: H,
      rippleSize: U
    }, g.current)]), g.current += 1, y.current = z;
  }, [s]), k = x.useCallback((N = {}, P = {}, F = () => {
  }) => {
    const {
      pulsate: H = !1,
      center: U = o || P.pulsate,
      fakeElement: z = !1
      // For test purposes
    } = P;
    if ((N == null ? void 0 : N.type) === "mousedown" && w.current) {
      w.current = !1;
      return;
    }
    (N == null ? void 0 : N.type) === "touchstart" && (w.current = !0);
    const A = z ? null : E.current, q = A ? A.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let W, Y, ee;
    if (U || N === void 0 || N.clientX === 0 && N.clientY === 0 || !N.clientX && !N.touches)
      W = Math.round(q.width / 2), Y = Math.round(q.height / 2);
    else {
      const {
        clientX: G,
        clientY: K
      } = N.touches && N.touches.length > 0 ? N.touches[0] : N;
      W = Math.round(G - q.left), Y = Math.round(K - q.top);
    }
    if (U)
      ee = Math.sqrt((2 * q.width ** 2 + q.height ** 2) / 3), ee % 2 === 0 && (ee += 1);
    else {
      const G = Math.max(Math.abs((A ? A.clientWidth : 0) - W), W) * 2 + 2, K = Math.max(Math.abs((A ? A.clientHeight : 0) - Y), Y) * 2 + 2;
      ee = Math.sqrt(G ** 2 + K ** 2);
    }
    N != null && N.touches ? T.current === null && (T.current = () => {
      O({
        pulsate: H,
        rippleX: W,
        rippleY: Y,
        rippleSize: ee,
        cb: F
      });
    }, C.start(HJ, () => {
      T.current && (T.current(), T.current = null);
    })) : O({
      pulsate: H,
      rippleX: W,
      rippleY: Y,
      rippleSize: ee,
      cb: F
    });
  }, [o, O, C]), I = x.useCallback(() => {
    k({}, {
      pulsate: !0
    });
  }, [k]), M = x.useCallback((N, P) => {
    if (C.clear(), (N == null ? void 0 : N.type) === "touchend" && T.current) {
      T.current(), T.current = null, C.start(0, () => {
        M(N, P);
      });
      return;
    }
    T.current = null, m((F) => F.length > 0 ? F.slice(1) : F), y.current = P;
  }, [C]);
  return x.useImperativeHandle(n, () => ({
    pulsate: I,
    start: k,
    stop: M
  }), [I, k, M]), /* @__PURE__ */ $.jsx(GJ, {
    className: et(dl.root, s.root, a),
    ref: E,
    ...c,
    children: /* @__PURE__ */ $.jsx(qI, {
      component: null,
      exit: !0,
      children: f
    })
  });
});
process.env.NODE_ENV !== "production" && (tV.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string
});
function KJ(e) {
  return an("MuiButtonBase", e);
}
const YJ = pn("MuiButtonBase", ["root", "disabled", "focusVisible"]), XJ = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, a = mt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, KJ, o);
  return n && r && (a.root += ` ${r}`), a;
}, QJ = Ue("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${YJ.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), sm = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: s = !1,
    children: a,
    className: c,
    component: f = "button",
    disabled: m = !1,
    disableRipple: g = !1,
    disableTouchRipple: y = !1,
    focusRipple: w = !1,
    focusVisibleClassName: C,
    LinkComponent: T = "a",
    onBlur: E,
    onClick: O,
    onContextMenu: k,
    onDragLeave: I,
    onFocus: M,
    onFocusVisible: N,
    onKeyDown: P,
    onKeyUp: F,
    onMouseDown: H,
    onMouseLeave: U,
    onMouseUp: z,
    onTouchEnd: A,
    onTouchMove: q,
    onTouchStart: W,
    tabIndex: Y = 0,
    TouchRippleProps: ee,
    touchRippleRef: G,
    type: K,
    ...X
  } = r, te = x.useRef(null), re = zJ(), Q = Pr(re.ref, G), [B, ie] = x.useState(!1);
  m && B && ie(!1), x.useImperativeHandle(o, () => ({
    focusVisible: () => {
      ie(!0), te.current.focus();
    }
  }), []);
  const de = re.shouldMount && !g && !m;
  x.useEffect(() => {
    B && w && !g && re.pulsate();
  }, [g, w, B, re]);
  const ue = hd(re, "start", H, y), he = hd(re, "stop", k, y), ge = hd(re, "stop", I, y), fe = hd(re, "stop", z, y), pe = hd(re, "stop", (nt) => {
    B && nt.preventDefault(), U && U(nt);
  }, y), be = hd(re, "start", W, y), we = hd(re, "stop", A, y), _e = hd(re, "stop", q, y), ce = hd(re, "stop", (nt) => {
    RT(nt.target) || ie(!1), E && E(nt);
  }, !1), Ce = jn((nt) => {
    te.current || (te.current = nt.currentTarget), RT(nt.target) && (ie(!0), N && N(nt)), M && M(nt);
  }), Ne = () => {
    const nt = te.current;
    return f && f !== "button" && !(nt.tagName === "A" && nt.href);
  }, Be = jn((nt) => {
    w && !nt.repeat && B && nt.key === " " && re.stop(nt, () => {
      re.start(nt);
    }), nt.target === nt.currentTarget && Ne() && nt.key === " " && nt.preventDefault(), P && P(nt), nt.target === nt.currentTarget && Ne() && nt.key === "Enter" && !m && (nt.preventDefault(), O && O(nt));
  }), tt = jn((nt) => {
    w && nt.key === " " && B && !nt.defaultPrevented && re.stop(nt, () => {
      re.pulsate(nt);
    }), F && F(nt), O && nt.target === nt.currentTarget && Ne() && nt.key === " " && !nt.defaultPrevented && O(nt);
  });
  let $e = f;
  $e === "button" && (X.href || X.to) && ($e = T);
  const rt = {};
  $e === "button" ? (rt.type = K === void 0 ? "button" : K, rt.disabled = m) : (!X.href && !X.to && (rt.role = "button"), m && (rt["aria-disabled"] = m));
  const ot = Pr(n, te), wt = {
    ...r,
    centerRipple: s,
    component: f,
    disabled: m,
    disableRipple: g,
    disableTouchRipple: y,
    focusRipple: w,
    tabIndex: Y,
    focusVisible: B
  }, gt = XJ(wt);
  return /* @__PURE__ */ $.jsxs(QJ, {
    as: $e,
    className: et(gt.root, c),
    ownerState: wt,
    onBlur: ce,
    onClick: O,
    onContextMenu: he,
    onFocus: Ce,
    onKeyDown: Be,
    onKeyUp: tt,
    onMouseDown: ue,
    onMouseLeave: pe,
    onMouseUp: fe,
    onDragLeave: ge,
    onTouchEnd: we,
    onTouchMove: _e,
    onTouchStart: be,
    ref: ot,
    tabIndex: m ? -1 : Y,
    type: K,
    ...rt,
    ...X,
    children: [a, de ? /* @__PURE__ */ $.jsx(tV, {
      ref: Q,
      center: s,
      ...ee
    }) : null]
  });
});
function hd(e, t, n, r = !1) {
  return jn((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (sm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: ca,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: u.bool,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: AI,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: u.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: u.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: u.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: u.string,
  /**
   * @ignore
   */
  href: u.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: u.elementType,
  /**
   * @ignore
   */
  onBlur: u.func,
  /**
   * @ignore
   */
  onClick: u.func,
  /**
   * @ignore
   */
  onContextMenu: u.func,
  /**
   * @ignore
   */
  onDragLeave: u.func,
  /**
   * @ignore
   */
  onFocus: u.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: u.func,
  /**
   * @ignore
   */
  onKeyDown: u.func,
  /**
   * @ignore
   */
  onKeyUp: u.func,
  /**
   * @ignore
   */
  onMouseDown: u.func,
  /**
   * @ignore
   */
  onMouseLeave: u.func,
  /**
   * @ignore
   */
  onMouseUp: u.func,
  /**
   * @ignore
   */
  onTouchEnd: u.func,
  /**
   * @ignore
   */
  onTouchMove: u.func,
  /**
   * @ignore
   */
  onTouchStart: u.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * @default 0
   */
  tabIndex: u.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: u.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: u.oneOfType([u.func, u.shape({
    current: u.shape({
      pulsate: u.func.isRequired,
      start: u.func.isRequired,
      stop: u.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: u.oneOfType([u.oneOf(["button", "reset", "submit"]), u.string])
});
function JJ(e) {
  return typeof e.main == "string";
}
function ZJ(e, t = []) {
  if (!JJ(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function eo(e = []) {
  return ([, t]) => t && ZJ(t, e);
}
function eZ(e) {
  return an("MuiAlert", e);
}
const Jj = pn("MuiAlert", ["root", "action", "icon", "message", "filled", "colorSuccess", "colorInfo", "colorWarning", "colorError", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
function tZ(e) {
  return an("MuiCircularProgress", e);
}
pn("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Rf = 44, fM = Cc`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, pM = Cc`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, nZ = typeof fM != "string" ? np`
        animation: ${fM} 1.4s linear infinite;
      ` : null, rZ = typeof pM != "string" ? np`
        animation: ${pM} 1.4s ease-in-out infinite;
      ` : null, oZ = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, s = {
    root: ["root", n, `color${He(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${He(n)}`, o && "circleDisableShrink"]
  };
  return mt(s, tZ, t);
}, iZ = Ue("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${He(n.color)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: nZ || {
      animation: `${fM} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), sZ = Ue("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), aZ = Ue("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${He(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(Zt(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: rZ || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${pM} 1.4s ease-in-out infinite`
    }
  }]
}))), fC = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: s = "primary",
    disableShrink: a = !1,
    size: c = 40,
    style: f,
    thickness: m = 3.6,
    value: g = 0,
    variant: y = "indeterminate",
    ...w
  } = r, C = {
    ...r,
    color: s,
    disableShrink: a,
    size: c,
    thickness: m,
    value: g,
    variant: y
  }, T = oZ(C), E = {}, O = {}, k = {};
  if (y === "determinate") {
    const I = 2 * Math.PI * ((Rf - m) / 2);
    E.strokeDasharray = I.toFixed(3), k["aria-valuenow"] = Math.round(g), E.strokeDashoffset = `${((100 - g) / 100 * I).toFixed(3)}px`, O.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ $.jsx(iZ, {
    className: et(T.root, o),
    style: {
      width: c,
      height: c,
      ...O,
      ...f
    },
    ownerState: C,
    ref: n,
    role: "progressbar",
    ...k,
    ...w,
    children: /* @__PURE__ */ $.jsx(sZ, {
      className: T.svg,
      ownerState: C,
      viewBox: `${Rf / 2} ${Rf / 2} ${Rf} ${Rf}`,
      children: /* @__PURE__ */ $.jsx(aZ, {
        className: T.circle,
        style: E,
        ownerState: C,
        cx: Rf,
        cy: Rf,
        r: (Rf - m) / 2,
        fill: "none",
        strokeWidth: m
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (fC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Na(u.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: u.oneOfType([u.number, u.string]),
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: u.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: u.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: u.oneOf(["determinate", "indeterminate"])
});
function lZ(e) {
  return an("MuiIconButton", e);
}
const Zj = pn("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge", "loading", "loadingIndicator", "loadingWrapper"]), uZ = (e) => {
  const {
    classes: t,
    disabled: n,
    color: r,
    edge: o,
    size: s,
    loading: a
  } = e, c = {
    root: ["root", a && "loading", n && "disabled", r !== "default" && `color${He(r)}`, o && `edge${He(o)}`, `size${He(s)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  };
  return mt(c, lZ, t);
}, cZ = Ue(sm, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.loading && t.loading, n.color !== "default" && t[`color${He(n.color)}`], n.edge && t[`edge${He(n.edge)}`], t[`size${He(n.size)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: (t) => !t.disableRipple,
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette.action.active, e.palette.action.hoverOpacity),
      "&:hover": {
        backgroundColor: "var(--IconButton-hoverBg)",
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), Zt(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--IconButton-hoverBg": e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : An((e.vars || e).palette[t].main, e.palette.action.hoverOpacity)
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${Zj.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  },
  [`&.${Zj.loading}`]: {
    color: "transparent"
  }
}))), dZ = Ue("span", {
  name: "MuiIconButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  color: (e.vars || e).palette.action.disabled,
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }]
})), cu = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: o = !1,
    children: s,
    className: a,
    color: c = "default",
    disabled: f = !1,
    disableFocusRipple: m = !1,
    size: g = "medium",
    id: y,
    loading: w = null,
    loadingIndicator: C,
    ...T
  } = r, E = pr(y), O = C ?? /* @__PURE__ */ $.jsx(fC, {
    "aria-labelledby": E,
    color: "inherit",
    size: 16
  }), k = {
    ...r,
    edge: o,
    color: c,
    disabled: f,
    disableFocusRipple: m,
    loading: w,
    loadingIndicator: O,
    size: g
  }, I = uZ(k);
  return /* @__PURE__ */ $.jsxs(cZ, {
    id: w ? E : y,
    className: et(I.root, a),
    centerRipple: !0,
    focusRipple: !m,
    disabled: f || w,
    ref: n,
    ...T,
    ownerState: k,
    children: [typeof w == "boolean" && // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ $.jsx("span", {
      className: I.loadingWrapper,
      style: {
        display: "contents"
      },
      children: /* @__PURE__ */ $.jsx(dZ, {
        className: I.loadingIndicator,
        ownerState: k,
        children: w && O
      })
    }), s]
  });
});
process.env.NODE_ENV !== "production" && (cu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: Na(u.node, (e) => x.Children.toArray(e.children).some((n) => /* @__PURE__ */ x.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: u.oneOfType([u.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: u.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: u.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: u.oneOf(["end", "start", !1]),
  /**
   * @ignore
   */
  id: u.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: u.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: u.node,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["small", "medium", "large"]), u.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const fZ = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), pZ = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), hZ = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), mZ = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), nV = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), gZ = (e) => {
  const {
    variant: t,
    color: n,
    severity: r,
    classes: o
  } = e, s = {
    root: ["root", `color${He(n || r)}`, `${t}${He(n || r)}`, `${t}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return mt(s, eZ, o);
}, vZ = Ue(bu, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${He(n.color || n.severity)}`]];
  }
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? Xf : Qf, n = e.palette.mode === "light" ? Qf : Xf;
  return {
    ...e.typography.body2,
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px",
    variants: [...Object.entries(e.palette).filter(eo(["light"])).map(([r]) => ({
      props: {
        colorSeverity: r,
        variant: "standard"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${r}Color`] : t(e.palette[r].light, 0.6),
        backgroundColor: e.vars ? e.vars.palette.Alert[`${r}StandardBg`] : n(e.palette[r].light, 0.9),
        [`& .${Jj.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${r}IconColor`]
        } : {
          color: e.palette[r].main
        }
      }
    })), ...Object.entries(e.palette).filter(eo(["light"])).map(([r]) => ({
      props: {
        colorSeverity: r,
        variant: "outlined"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${r}Color`] : t(e.palette[r].light, 0.6),
        border: `1px solid ${(e.vars || e).palette[r].light}`,
        [`& .${Jj.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${r}IconColor`]
        } : {
          color: e.palette[r].main
        }
      }
    })), ...Object.entries(e.palette).filter(eo(["dark"])).map(([r]) => ({
      props: {
        colorSeverity: r,
        variant: "filled"
      },
      style: {
        fontWeight: e.typography.fontWeightMedium,
        ...e.vars ? {
          color: e.vars.palette.Alert[`${r}FilledColor`],
          backgroundColor: e.vars.palette.Alert[`${r}FilledBg`]
        } : {
          backgroundColor: e.palette.mode === "dark" ? e.palette[r].dark : e.palette[r].main,
          color: e.palette.getContrastText(e.palette[r].main)
        }
      }
    }))]
  };
})), yZ = Ue("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, t) => t.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), bZ = Ue("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, t) => t.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), wZ = Ue("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, t) => t.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), eF = {
  success: /* @__PURE__ */ $.jsx(fZ, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ $.jsx(pZ, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ $.jsx(hZ, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ $.jsx(mZ, {
    fontSize: "inherit"
  })
}, LS = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiAlert"
  }), {
    action: o,
    children: s,
    className: a,
    closeText: c = "Close",
    color: f,
    components: m = {},
    componentsProps: g = {},
    icon: y,
    iconMapping: w = eF,
    onClose: C,
    role: T = "alert",
    severity: E = "success",
    slotProps: O = {},
    slots: k = {},
    variant: I = "standard",
    ...M
  } = r, N = {
    ...r,
    color: f,
    severity: E,
    variant: I,
    colorSeverity: f || E
  }, P = gZ(N), F = {
    slots: {
      closeButton: m.CloseButton,
      closeIcon: m.CloseIcon,
      ...k
    },
    slotProps: {
      ...g,
      ...O
    }
  }, [H, U] = vn("root", {
    ref: n,
    shouldForwardComponentProp: !0,
    className: et(P.root, a),
    elementType: vZ,
    externalForwardedProps: {
      ...F,
      ...M
    },
    ownerState: N,
    additionalProps: {
      role: T,
      elevation: 0
    }
  }), [z, A] = vn("icon", {
    className: P.icon,
    elementType: yZ,
    externalForwardedProps: F,
    ownerState: N
  }), [q, W] = vn("message", {
    className: P.message,
    elementType: bZ,
    externalForwardedProps: F,
    ownerState: N
  }), [Y, ee] = vn("action", {
    className: P.action,
    elementType: wZ,
    externalForwardedProps: F,
    ownerState: N
  }), [G, K] = vn("closeButton", {
    elementType: cu,
    externalForwardedProps: F,
    ownerState: N
  }), [X, te] = vn("closeIcon", {
    elementType: nV,
    externalForwardedProps: F,
    ownerState: N
  });
  return /* @__PURE__ */ $.jsxs(H, {
    ...U,
    children: [y !== !1 ? /* @__PURE__ */ $.jsx(z, {
      ...A,
      children: y || w[E] || eF[E]
    }) : null, /* @__PURE__ */ $.jsx(q, {
      ...W,
      children: s
    }), o != null ? /* @__PURE__ */ $.jsx(Y, {
      ...ee,
      children: o
    }) : null, o == null && C ? /* @__PURE__ */ $.jsx(Y, {
      ...ee,
      children: /* @__PURE__ */ $.jsx(G, {
        size: "small",
        "aria-label": c,
        title: c,
        color: "inherit",
        onClick: C,
        ...K,
        children: /* @__PURE__ */ $.jsx(X, {
          fontSize: "small",
          ...te
        })
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (LS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: u.node,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: u.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: u.oneOfType([u.oneOf(["error", "info", "success", "warning"]), u.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    CloseButton: u.elementType,
    CloseIcon: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    closeButton: u.object,
    closeIcon: u.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: u.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: u.shape({
    error: u.node,
    info: u.node,
    success: u.node,
    warning: u.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: u.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: u.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: u.oneOfType([u.oneOf(["error", "info", "success", "warning"]), u.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    action: u.oneOfType([u.func, u.object]),
    closeButton: u.oneOfType([u.func, u.object]),
    closeIcon: u.oneOfType([u.func, u.object]),
    icon: u.oneOfType([u.func, u.object]),
    message: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    action: u.elementType,
    closeButton: u.elementType,
    closeIcon: u.elementType,
    icon: u.elementType,
    message: u.elementType,
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: u.oneOfType([u.oneOf(["filled", "outlined", "standard"]), u.string])
});
function SZ(e) {
  return an("MuiTypography", e);
}
const tF = pn("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]), CZ = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, xZ = TJ(), EZ = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: s,
    classes: a
  } = e, c = {
    root: ["root", s, e.align !== "inherit" && `align${He(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return mt(c, SZ, a);
}, TZ = Ue("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${He(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(Zt(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(eo()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${He(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), nF = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, Po = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = mn({
    props: t,
    name: "MuiTypography"
  }), s = !CZ[r], a = xZ({
    ...o,
    ...s && {
      color: r
    }
  }), {
    align: c = "inherit",
    className: f,
    component: m,
    gutterBottom: g = !1,
    noWrap: y = !1,
    paragraph: w = !1,
    variant: C = "body1",
    variantMapping: T = nF,
    ...E
  } = a, O = {
    ...a,
    align: c,
    color: r,
    className: f,
    component: m,
    gutterBottom: g,
    noWrap: y,
    paragraph: w,
    variant: C,
    variantMapping: T
  }, k = m || (w ? "p" : T[C] || nF[C]) || "span", I = EZ(O);
  return /* @__PURE__ */ $.jsx(TZ, {
    as: k,
    ref: n,
    className: et(I.root, f),
    ...E,
    ownerState: O,
    style: {
      ...c !== "inherit" && {
        "--Typography-textAlign": c
      },
      ...E.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Po.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: u.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: u.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: u.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: u.bool,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: u.oneOfType([u.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), u.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: u.object
});
function _Z(e) {
  return an("MuiAppBar", e);
}
pn("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]);
const OZ = (e) => {
  const {
    color: t,
    position: n,
    classes: r
  } = e, o = {
    root: ["root", `color${He(t)}`, `position${He(n)}`]
  };
  return mt(o, _Z, r);
}, rF = (e, t) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${t})` : t, RZ = Ue(bu, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`position${He(n.position)}`], t[`color${He(n.color)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "column",
  width: "100%",
  boxSizing: "border-box",
  // Prevent padding issue with the Modal and fixed positioned AppBar.
  flexShrink: 0,
  variants: [{
    props: {
      position: "fixed"
    },
    style: {
      position: "fixed",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        // Prevent the app bar to be visible on each printed page.
        position: "absolute"
      }
    }
  }, {
    props: {
      position: "absolute"
    },
    style: {
      position: "absolute",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "sticky"
    },
    style: {
      position: "sticky",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "static"
    },
    style: {
      position: "static"
    }
  }, {
    props: {
      position: "relative"
    },
    style: {
      position: "relative"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      "--AppBar-color": "inherit"
    }
  }, {
    props: {
      color: "default"
    },
    style: {
      "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[100],
      "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[100]),
      ...e.applyStyles("dark", {
        "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[900],
        "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[900])
      })
    }
  }, ...Object.entries(e.palette).filter(eo(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--AppBar-background": (e.vars ?? e).palette[t].main,
      "--AppBar-color": (e.vars ?? e).palette[t].contrastText
    }
  })), {
    props: (t) => t.enableColorOnDark === !0 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)"
    }
  }, {
    props: (t) => t.enableColorOnDark === !1 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundColor: e.vars ? rF(e.vars.palette.AppBar.darkBg, "var(--AppBar-background)") : null,
        color: e.vars ? rF(e.vars.palette.AppBar.darkColor, "var(--AppBar-color)") : null
      })
    }
  }, {
    props: {
      color: "transparent"
    },
    style: {
      "--AppBar-background": "transparent",
      "--AppBar-color": "inherit",
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundImage: "none"
      })
    }
  }]
}))), rV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiAppBar"
  }), {
    className: o,
    color: s = "primary",
    enableColorOnDark: a = !1,
    position: c = "fixed",
    ...f
  } = r, m = {
    ...r,
    color: s,
    position: c,
    enableColorOnDark: a
  }, g = OZ(m);
  return /* @__PURE__ */ $.jsx(RZ, {
    square: !0,
    component: "header",
    ownerState: m,
    elevation: 4,
    className: et(g.root, o, c === "fixed" && "mui-fixed"),
    ref: n,
    ...f
  });
});
process.env.NODE_ENV !== "production" && (rV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), u.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: u.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Web/CSS/position).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: u.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function oF(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function oV(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: r,
    matchFrom: o = "any",
    stringify: s,
    trim: a = !1
  } = e;
  return (c, {
    inputValue: f,
    getOptionLabel: m
  }) => {
    let g = a ? f.trim() : f;
    n && (g = g.toLowerCase()), t && (g = oF(g));
    const y = g ? c.filter((w) => {
      let C = (s || m)(w);
      return n && (C = C.toLowerCase()), t && (C = oF(C)), o === "start" ? C.startsWith(g) : C.includes(g);
    }) : c;
    return typeof r == "number" ? y.slice(0, r) : y;
  };
}
const kZ = oV(), iF = 5, PZ = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, MZ = [];
function sF(e, t, n) {
  if (t || e == null)
    return "";
  const r = n(e);
  return typeof r == "string" ? r : "";
}
function IZ(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = PZ,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: r = !1,
    autoHighlight: o = !1,
    autoSelect: s = !1,
    blurOnSelect: a = !1,
    clearOnBlur: c = !e.freeSolo,
    clearOnEscape: f = !1,
    componentName: m = "useAutocomplete",
    defaultValue: g = e.multiple ? MZ : null,
    disableClearable: y = !1,
    disableCloseOnSelect: w = !1,
    disabled: C,
    disabledItemsFocusable: T = !1,
    disableListWrap: E = !1,
    filterOptions: O = kZ,
    filterSelectedOptions: k = !1,
    freeSolo: I = !1,
    getOptionDisabled: M,
    getOptionKey: N,
    getOptionLabel: P = (De) => De.label ?? De,
    groupBy: F,
    handleHomeEndKeys: H = !e.freeSolo,
    id: U,
    includeInputInList: z = !1,
    inputValue: A,
    isOptionEqualToValue: q = (De, Re) => De === Re,
    multiple: W = !1,
    onChange: Y,
    onClose: ee,
    onHighlightChange: G,
    onInputChange: K,
    onOpen: X,
    open: te,
    openOnFocus: re = !1,
    options: Q,
    readOnly: B = !1,
    selectOnFocus: ie = !e.freeSolo,
    value: de
  } = e, ue = pr(U);
  let he = P;
  he = (De) => {
    const Re = P(De);
    if (typeof Re != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Je = Re === void 0 ? "undefined" : `${typeof Re} (${Re})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${m} returned ${Je} instead of a string for ${JSON.stringify(De)}.`);
      }
      return String(Re);
    }
    return Re;
  };
  const ge = x.useRef(!1), fe = x.useRef(!0), pe = x.useRef(null), be = x.useRef(null), [we, _e] = x.useState(null), [ce, Ce] = x.useState(-1), Ne = o ? 0 : -1, Be = x.useRef(Ne), tt = x.useRef(sF(g ?? de, W, he)).current, [$e, rt] = Qh({
    controlled: de,
    default: g,
    name: m
  }), [ot, wt] = Qh({
    controlled: A,
    default: tt,
    name: m,
    state: "inputValue"
  }), [gt, nt] = x.useState(!1), Ft = x.useCallback((De, Re, Je) => {
    if (!(W ? $e.length < Re.length : Re !== null) && !c)
      return;
    const jt = sF(Re, W, he);
    ot !== jt && (wt(jt), K && K(De, jt, Je));
  }, [he, ot, W, K, wt, c, $e]), [ut, Et] = Qh({
    controlled: te,
    default: !1,
    name: m,
    state: "open"
  }), [Tt, At] = x.useState(!0), vt = !W && $e != null && ot === he($e), Xe = ut && !B, Oe = Xe ? O(
    Q.filter((De) => !(k && (W ? $e : [$e]).some((Re) => Re !== null && q(De, Re)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: vt && Tt ? "" : ot,
      getOptionLabel: he
    }
  ) : [], Ie = $I({
    filteredOptions: Oe,
    value: $e,
    inputValue: ot
  });
  x.useEffect(() => {
    const De = $e !== Ie.value;
    gt && !De || I && !De || Ft(null, $e, "reset");
  }, [$e, Ft, gt, Ie.value, I]);
  const pt = ut && Oe.length > 0 && !B, yt = jn((De) => {
    De === -1 ? pe.current.focus() : we.querySelector(`[data-tag-index="${De}"]`).focus();
  });
  x.useEffect(() => {
    W && ce > $e.length - 1 && (Ce(-1), yt(-1));
  }, [$e, W, ce, yt]);
  function zt(De, Re) {
    if (!be.current || De < 0 || De >= Oe.length)
      return -1;
    let Je = De;
    for (; ; ) {
      const Bt = be.current.querySelector(`[data-option-index="${Je}"]`), jt = T ? !1 : !Bt || Bt.disabled || Bt.getAttribute("aria-disabled") === "true";
      if (Bt && Bt.hasAttribute("tabindex") && !jt)
        return Je;
      if (Re === "next" ? Je = (Je + 1) % Oe.length : Je = (Je - 1 + Oe.length) % Oe.length, Je === De)
        return -1;
    }
  }
  const bt = jn(({
    event: De,
    index: Re,
    reason: Je
  }) => {
    if (Be.current = Re, Re === -1 ? pe.current.removeAttribute("aria-activedescendant") : pe.current.setAttribute("aria-activedescendant", `${ue}-option-${Re}`), G && ["mouse", "keyboard", "touch"].includes(Je) && G(De, Re === -1 ? null : Oe[Re], Je), !be.current)
      return;
    const Bt = be.current.querySelector(`[role="option"].${n}-focused`);
    Bt && (Bt.classList.remove(`${n}-focused`), Bt.classList.remove(`${n}-focusVisible`));
    let jt = be.current;
    if (be.current.getAttribute("role") !== "listbox" && (jt = be.current.parentElement.querySelector('[role="listbox"]')), !jt)
      return;
    if (Re === -1) {
      jt.scrollTop = 0;
      return;
    }
    const Kt = be.current.querySelector(`[data-option-index="${Re}"]`);
    if (Kt && (Kt.classList.add(`${n}-focused`), Je === "keyboard" && Kt.classList.add(`${n}-focusVisible`), jt.scrollHeight > jt.clientHeight && Je !== "mouse" && Je !== "touch")) {
      const Ln = Kt, Or = jt.clientHeight + jt.scrollTop, Zo = Ln.offsetTop + Ln.offsetHeight;
      Zo > Or ? jt.scrollTop = Zo - jt.clientHeight : Ln.offsetTop - Ln.offsetHeight * (F ? 1.3 : 0) < jt.scrollTop && (jt.scrollTop = Ln.offsetTop - Ln.offsetHeight * (F ? 1.3 : 0));
    }
  }), We = jn(({
    event: De,
    diff: Re,
    direction: Je = "next",
    reason: Bt
  }) => {
    if (!Xe)
      return;
    const Kt = zt((() => {
      const Ln = Oe.length - 1;
      if (Re === "reset")
        return Ne;
      if (Re === "start")
        return 0;
      if (Re === "end")
        return Ln;
      const Or = Be.current + Re;
      return Or < 0 ? Or === -1 && z ? -1 : E && Be.current !== -1 || Math.abs(Re) > 1 ? 0 : Ln : Or > Ln ? Or === Ln + 1 && z ? -1 : E || Math.abs(Re) > 1 ? Ln : 0 : Or;
    })(), Je);
    if (bt({
      index: Kt,
      reason: Bt,
      event: De
    }), r && Re !== "reset")
      if (Kt === -1)
        pe.current.value = ot;
      else {
        const Ln = he(Oe[Kt]);
        pe.current.value = Ln, Ln.toLowerCase().indexOf(ot.toLowerCase()) === 0 && ot.length > 0 && pe.current.setSelectionRange(ot.length, Ln.length);
      }
  }), St = () => {
    const De = (Re, Je) => {
      const Bt = Re ? he(Re) : "", jt = Je ? he(Je) : "";
      return Bt === jt;
    };
    if (Be.current !== -1 && Ie.filteredOptions && Ie.filteredOptions.length !== Oe.length && Ie.inputValue === ot && (W ? $e.length === Ie.value.length && Ie.value.every((Re, Je) => he($e[Je]) === he(Re)) : De(Ie.value, $e))) {
      const Re = Ie.filteredOptions[Be.current];
      if (Re)
        return Oe.findIndex((Je) => he(Je) === he(Re));
    }
    return -1;
  }, $t = x.useCallback(() => {
    if (!Xe)
      return;
    const De = St();
    if (De !== -1) {
      Be.current = De;
      return;
    }
    const Re = W ? $e[0] : $e;
    if (Oe.length === 0 || Re == null) {
      We({
        diff: "reset"
      });
      return;
    }
    if (be.current) {
      if (Re != null) {
        const Je = Oe[Be.current];
        if (W && Je && $e.findIndex((jt) => q(Je, jt)) !== -1)
          return;
        const Bt = Oe.findIndex((jt) => q(jt, Re));
        Bt === -1 ? We({
          diff: "reset"
        }) : bt({
          index: Bt
        });
        return;
      }
      if (Be.current >= Oe.length - 1) {
        bt({
          index: Oe.length - 1
        });
        return;
      }
      bt({
        index: Be.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Oe.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    W ? !1 : $e,
    k,
    We,
    bt,
    Xe,
    ot,
    W
  ]), wn = jn((De) => {
    iM(be, De), De && $t();
  });
  process.env.NODE_ENV !== "production" && x.useEffect(() => {
    (!pe.current || pe.current.nodeName !== "INPUT") && (pe.current && pe.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${m} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${pe.current} while an HTMLInputElement was expected.`, `Instead, ${m} expects an input element.`, "", m === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [m]), x.useEffect(() => {
    $t();
  }, [$t]);
  const cn = (De) => {
    ut || (Et(!0), At(!0), X && X(De));
  }, Tr = (De, Re) => {
    ut && (Et(!1), ee && ee(De, Re));
  }, sr = (De, Re, Je, Bt) => {
    if (W) {
      if ($e.length === Re.length && $e.every((jt, Kt) => jt === Re[Kt]))
        return;
    } else if ($e === Re)
      return;
    Y && Y(De, Re, Je, Bt), rt(Re);
  }, $r = x.useRef(!1), _r = (De, Re, Je = "selectOption", Bt = "options") => {
    let jt = Je, Kt = Re;
    if (W) {
      if (Kt = Array.isArray($e) ? $e.slice() : [], process.env.NODE_ENV !== "production") {
        const Or = Kt.filter((Zo) => q(Re, Zo));
        Or.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${m} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${Or.length} matches.`].join(`
`));
      }
      const Ln = Kt.findIndex((Or) => q(Re, Or));
      Ln === -1 ? Kt.push(Re) : Bt !== "freeSolo" && (Kt.splice(Ln, 1), jt = "removeOption");
    }
    Ft(De, Kt, jt), sr(De, Kt, jt, {
      option: Re
    }), !w && (!De || !De.ctrlKey && !De.metaKey) && Tr(De, jt), (a === !0 || a === "touch" && $r.current || a === "mouse" && !$r.current) && pe.current.blur();
  };
  function Xo(De, Re) {
    if (De === -1)
      return -1;
    let Je = De;
    for (; ; ) {
      if (Re === "next" && Je === $e.length || Re === "previous" && Je === -1)
        return -1;
      const Bt = we.querySelector(`[data-tag-index="${Je}"]`);
      if (!Bt || !Bt.hasAttribute("tabindex") || Bt.disabled || Bt.getAttribute("aria-disabled") === "true")
        Je += Re === "next" ? 1 : -1;
      else
        return Je;
    }
  }
  const Qo = (De, Re) => {
    if (!W)
      return;
    ot === "" && Tr(De, "toggleInput");
    let Je = ce;
    ce === -1 ? ot === "" && Re === "previous" && (Je = $e.length - 1) : (Je += Re === "next" ? 1 : -1, Je < 0 && (Je = 0), Je === $e.length && (Je = -1)), Je = Xo(Je, Re), Ce(Je), yt(Je);
  }, Wt = (De) => {
    ge.current = !0, wt(""), K && K(De, "", "clear"), sr(De, W ? [] : null, "clear");
  }, hr = (De) => (Re) => {
    if (De.onKeyDown && De.onKeyDown(Re), !Re.defaultMuiPrevented && (ce !== -1 && !["ArrowLeft", "ArrowRight"].includes(Re.key) && (Ce(-1), yt(-1)), Re.which !== 229))
      switch (Re.key) {
        case "Home":
          Xe && H && (Re.preventDefault(), We({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: Re
          }));
          break;
        case "End":
          Xe && H && (Re.preventDefault(), We({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: Re
          }));
          break;
        case "PageUp":
          Re.preventDefault(), We({
            diff: -iF,
            direction: "previous",
            reason: "keyboard",
            event: Re
          }), cn(Re);
          break;
        case "PageDown":
          Re.preventDefault(), We({
            diff: iF,
            direction: "next",
            reason: "keyboard",
            event: Re
          }), cn(Re);
          break;
        case "ArrowDown":
          Re.preventDefault(), We({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: Re
          }), cn(Re);
          break;
        case "ArrowUp":
          Re.preventDefault(), We({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: Re
          }), cn(Re);
          break;
        case "ArrowLeft":
          Qo(Re, "previous");
          break;
        case "ArrowRight":
          Qo(Re, "next");
          break;
        case "Enter":
          if (Be.current !== -1 && Xe) {
            const Je = Oe[Be.current], Bt = M ? M(Je) : !1;
            if (Re.preventDefault(), Bt)
              return;
            _r(Re, Je, "selectOption"), r && pe.current.setSelectionRange(pe.current.value.length, pe.current.value.length);
          } else I && ot !== "" && vt === !1 && (W && Re.preventDefault(), _r(Re, ot, "createOption", "freeSolo"));
          break;
        case "Escape":
          Xe ? (Re.preventDefault(), Re.stopPropagation(), Tr(Re, "escape")) : f && (ot !== "" || W && $e.length > 0) && (Re.preventDefault(), Re.stopPropagation(), Wt(Re));
          break;
        case "Backspace":
          if (W && !B && ot === "" && $e.length > 0) {
            const Je = ce === -1 ? $e.length - 1 : ce, Bt = $e.slice();
            Bt.splice(Je, 1), sr(Re, Bt, "removeOption", {
              option: $e[Je]
            });
          }
          break;
        case "Delete":
          if (W && !B && ot === "" && $e.length > 0 && ce !== -1) {
            const Je = ce, Bt = $e.slice();
            Bt.splice(Je, 1), sr(Re, Bt, "removeOption", {
              option: $e[Je]
            });
          }
          break;
      }
  }, Jo = (De) => {
    nt(!0), re && !ge.current && cn(De);
  }, Gr = (De) => {
    if (t(be)) {
      pe.current.focus();
      return;
    }
    nt(!1), fe.current = !0, ge.current = !1, s && Be.current !== -1 && Xe ? _r(De, Oe[Be.current], "blur") : s && I && ot !== "" ? _r(De, ot, "blur", "freeSolo") : c && Ft(De, $e, "blur"), Tr(De, "blur");
  }, oo = (De) => {
    const Re = De.target.value;
    ot !== Re && (wt(Re), At(!1), K && K(De, Re, "input")), Re === "" ? !y && !W && sr(De, null, "clear") : cn(De);
  }, qr = (De) => {
    const Re = Number(De.currentTarget.getAttribute("data-option-index"));
    Be.current !== Re && bt({
      event: De,
      index: Re,
      reason: "mouse"
    });
  }, Ki = (De) => {
    bt({
      event: De,
      index: Number(De.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), $r.current = !0;
  }, Ri = (De) => {
    const Re = Number(De.currentTarget.getAttribute("data-option-index"));
    _r(De, Oe[Re], "selectOption"), $r.current = !1;
  }, Yi = (De) => (Re) => {
    const Je = $e.slice();
    Je.splice(De, 1), sr(Re, Je, "removeOption", {
      option: $e[De]
    });
  }, Xi = (De) => {
    ut ? Tr(De, "toggleInput") : cn(De);
  }, ye = (De) => {
    De.currentTarget.contains(De.target) && De.target.getAttribute("id") !== ue && De.preventDefault();
  }, Ye = (De) => {
    De.currentTarget.contains(De.target) && (pe.current.focus(), ie && fe.current && pe.current.selectionEnd - pe.current.selectionStart === 0 && pe.current.select(), fe.current = !1);
  }, ft = (De) => {
    !C && (ot === "" || !ut) && Xi(De);
  };
  let Ct = I && ot.length > 0;
  Ct = Ct || (W ? $e.length > 0 : $e !== null);
  let dn = Oe;
  if (F) {
    const De = /* @__PURE__ */ new Map();
    let Re = !1;
    dn = Oe.reduce((Je, Bt, jt) => {
      const Kt = F(Bt);
      return Je.length > 0 && Je[Je.length - 1].group === Kt ? Je[Je.length - 1].options.push(Bt) : (process.env.NODE_ENV !== "production" && (De.get(Kt) && !Re && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${m} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), Re = !0), De.set(Kt, !0)), Je.push({
        key: jt,
        index: jt,
        group: Kt,
        options: [Bt]
      })), Je;
    }, []);
  }
  return C && gt && Gr(), {
    getRootProps: (De = {}) => ({
      ...De,
      onKeyDown: hr(De),
      onMouseDown: ye,
      onClick: Ye
    }),
    getInputLabelProps: () => ({
      id: `${ue}-label`,
      htmlFor: ue
    }),
    getInputProps: () => ({
      id: ue,
      value: ot,
      onBlur: Gr,
      onFocus: Jo,
      onChange: oo,
      onMouseDown: ft,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Xe ? "" : null,
      "aria-autocomplete": r ? "both" : "list",
      "aria-controls": pt ? `${ue}-listbox` : void 0,
      "aria-expanded": pt,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: pe,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: C
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Wt
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Xi
    }),
    getTagProps: ({
      index: De
    }) => ({
      key: De,
      "data-tag-index": De,
      tabIndex: -1,
      ...!B && {
        onDelete: Yi(De)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${ue}-listbox`,
      "aria-labelledby": `${ue}-label`,
      ref: wn,
      onMouseDown: (De) => {
        De.preventDefault();
      }
    }),
    getOptionProps: ({
      index: De,
      option: Re
    }) => {
      const Je = (W ? $e : [$e]).some((jt) => jt != null && q(Re, jt)), Bt = M ? M(Re) : !1;
      return {
        key: (N == null ? void 0 : N(Re)) ?? he(Re),
        tabIndex: -1,
        role: "option",
        id: `${ue}-option-${De}`,
        onMouseMove: qr,
        onClick: Ri,
        onTouchStart: Ki,
        "data-option-index": De,
        "aria-disabled": Bt,
        "aria-selected": Je
      };
    },
    id: ue,
    inputValue: ot,
    value: $e,
    dirty: Ct,
    expanded: Xe && we,
    popupOpen: Xe,
    focused: gt || ce !== -1,
    anchorEl: we,
    setAnchorEl: _e,
    focusedTag: ce,
    groupedOptions: dn
  };
}
var aa = "top", xl = "bottom", El = "right", la = "left", YI = "auto", pC = [aa, xl, El, la], Vv = "start", $S = "end", DZ = "clippingParents", iV = "viewport", Lw = "popper", AZ = "reference", aF = /* @__PURE__ */ pC.reduce(function(e, t) {
  return e.concat([t + "-" + Vv, t + "-" + $S]);
}, []), sV = /* @__PURE__ */ [].concat(pC, [YI]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Vv, t + "-" + $S]);
}, []), NZ = "beforeRead", LZ = "read", $Z = "afterRead", jZ = "beforeMain", FZ = "main", zZ = "afterMain", BZ = "beforeWrite", HZ = "write", VZ = "afterWrite", UZ = [NZ, LZ, $Z, jZ, FZ, zZ, BZ, HZ, VZ];
function bc(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function La(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function am(e) {
  var t = La(e).Element;
  return e instanceof t || e instanceof Element;
}
function gl(e) {
  var t = La(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function XI(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = La(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function WZ(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, s = t.elements[n];
    !gl(s) || !bc(s) || (Object.assign(s.style, r), Object.keys(o).forEach(function(a) {
      var c = o[a];
      c === !1 ? s.removeAttribute(a) : s.setAttribute(a, c === !0 ? "" : c);
    }));
  });
}
function GZ(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], s = t.attributes[r] || {}, a = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), c = a.reduce(function(f, m) {
        return f[m] = "", f;
      }, {});
      !gl(o) || !bc(o) || (Object.assign(o.style, c), Object.keys(s).forEach(function(f) {
        o.removeAttribute(f);
      }));
    });
  };
}
const qZ = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: WZ,
  effect: GZ,
  requires: ["computeStyles"]
};
function mc(e) {
  return e.split("-")[0];
}
var Zh = Math.max, AT = Math.min, Uv = Math.round;
function hM() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function aV() {
  return !/^((?!chrome|android).)*safari/i.test(hM());
}
function Wv(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, s = 1;
  t && gl(e) && (o = e.offsetWidth > 0 && Uv(r.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && Uv(r.height) / e.offsetHeight || 1);
  var a = am(e) ? La(e) : window, c = a.visualViewport, f = !aV() && n, m = (r.left + (f && c ? c.offsetLeft : 0)) / o, g = (r.top + (f && c ? c.offsetTop : 0)) / s, y = r.width / o, w = r.height / s;
  return {
    width: y,
    height: w,
    top: g,
    right: m + y,
    bottom: g + w,
    left: m,
    x: m,
    y: g
  };
}
function QI(e) {
  var t = Wv(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function lV(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && XI(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Td(e) {
  return La(e).getComputedStyle(e);
}
function KZ(e) {
  return ["table", "td", "th"].indexOf(bc(e)) >= 0;
}
function ap(e) {
  return ((am(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function L_(e) {
  return bc(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (XI(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    ap(e)
  );
}
function lF(e) {
  return !gl(e) || // https://github.com/popperjs/popper-core/issues/837
  Td(e).position === "fixed" ? null : e.offsetParent;
}
function YZ(e) {
  var t = /firefox/i.test(hM()), n = /Trident/i.test(hM());
  if (n && gl(e)) {
    var r = Td(e);
    if (r.position === "fixed")
      return null;
  }
  var o = L_(e);
  for (XI(o) && (o = o.host); gl(o) && ["html", "body"].indexOf(bc(o)) < 0; ) {
    var s = Td(o);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function hC(e) {
  for (var t = La(e), n = lF(e); n && KZ(n) && Td(n).position === "static"; )
    n = lF(n);
  return n && (bc(n) === "html" || bc(n) === "body" && Td(n).position === "static") ? t : n || YZ(e) || t;
}
function JI(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function pS(e, t, n) {
  return Zh(e, AT(t, n));
}
function XZ(e, t, n) {
  var r = pS(e, t, n);
  return r > n ? n : r;
}
function uV() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function cV(e) {
  return Object.assign({}, uV(), e);
}
function dV(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var QZ = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, cV(typeof t != "number" ? t : dV(t, pC));
};
function JZ(e) {
  var t, n = e.state, r = e.name, o = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, c = mc(n.placement), f = JI(c), m = [la, El].indexOf(c) >= 0, g = m ? "height" : "width";
  if (!(!s || !a)) {
    var y = QZ(o.padding, n), w = QI(s), C = f === "y" ? aa : la, T = f === "y" ? xl : El, E = n.rects.reference[g] + n.rects.reference[f] - a[f] - n.rects.popper[g], O = a[f] - n.rects.reference[f], k = hC(s), I = k ? f === "y" ? k.clientHeight || 0 : k.clientWidth || 0 : 0, M = E / 2 - O / 2, N = y[C], P = I - w[g] - y[T], F = I / 2 - w[g] / 2 + M, H = pS(N, F, P), U = f;
    n.modifiersData[r] = (t = {}, t[U] = H, t.centerOffset = H - F, t);
  }
}
function ZZ(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || lV(t.elements.popper, o) && (t.elements.arrow = o));
}
const eee = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: JZ,
  effect: ZZ,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Gv(e) {
  return e.split("-")[1];
}
var tee = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function nee(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Uv(n * o) / o || 0,
    y: Uv(r * o) / o || 0
  };
}
function uF(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, s = e.variation, a = e.offsets, c = e.position, f = e.gpuAcceleration, m = e.adaptive, g = e.roundOffsets, y = e.isFixed, w = a.x, C = w === void 0 ? 0 : w, T = a.y, E = T === void 0 ? 0 : T, O = typeof g == "function" ? g({
    x: C,
    y: E
  }) : {
    x: C,
    y: E
  };
  C = O.x, E = O.y;
  var k = a.hasOwnProperty("x"), I = a.hasOwnProperty("y"), M = la, N = aa, P = window;
  if (m) {
    var F = hC(n), H = "clientHeight", U = "clientWidth";
    if (F === La(n) && (F = ap(n), Td(F).position !== "static" && c === "absolute" && (H = "scrollHeight", U = "scrollWidth")), F = F, o === aa || (o === la || o === El) && s === $S) {
      N = xl;
      var z = y && F === P && P.visualViewport ? P.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        F[H]
      );
      E -= z - r.height, E *= f ? 1 : -1;
    }
    if (o === la || (o === aa || o === xl) && s === $S) {
      M = El;
      var A = y && F === P && P.visualViewport ? P.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        F[U]
      );
      C -= A - r.width, C *= f ? 1 : -1;
    }
  }
  var q = Object.assign({
    position: c
  }, m && tee), W = g === !0 ? nee({
    x: C,
    y: E
  }, La(n)) : {
    x: C,
    y: E
  };
  if (C = W.x, E = W.y, f) {
    var Y;
    return Object.assign({}, q, (Y = {}, Y[N] = I ? "0" : "", Y[M] = k ? "0" : "", Y.transform = (P.devicePixelRatio || 1) <= 1 ? "translate(" + C + "px, " + E + "px)" : "translate3d(" + C + "px, " + E + "px, 0)", Y));
  }
  return Object.assign({}, q, (t = {}, t[N] = I ? E + "px" : "", t[M] = k ? C + "px" : "", t.transform = "", t));
}
function ree(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, s = n.adaptive, a = s === void 0 ? !0 : s, c = n.roundOffsets, f = c === void 0 ? !0 : c, m = {
    placement: mc(t.placement),
    variation: Gv(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, uF(Object.assign({}, m, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: f
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, uF(Object.assign({}, m, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: f
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const oee = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: ree,
  data: {}
};
var DE = {
  passive: !0
};
function iee(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, s = o === void 0 ? !0 : o, a = r.resize, c = a === void 0 ? !0 : a, f = La(t.elements.popper), m = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && m.forEach(function(g) {
    g.addEventListener("scroll", n.update, DE);
  }), c && f.addEventListener("resize", n.update, DE), function() {
    s && m.forEach(function(g) {
      g.removeEventListener("scroll", n.update, DE);
    }), c && f.removeEventListener("resize", n.update, DE);
  };
}
const see = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: iee,
  data: {}
};
var aee = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function fT(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return aee[t];
  });
}
var lee = {
  start: "end",
  end: "start"
};
function cF(e) {
  return e.replace(/start|end/g, function(t) {
    return lee[t];
  });
}
function ZI(e) {
  var t = La(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function eD(e) {
  return Wv(ap(e)).left + ZI(e).scrollLeft;
}
function uee(e, t) {
  var n = La(e), r = ap(e), o = n.visualViewport, s = r.clientWidth, a = r.clientHeight, c = 0, f = 0;
  if (o) {
    s = o.width, a = o.height;
    var m = aV();
    (m || !m && t === "fixed") && (c = o.offsetLeft, f = o.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: c + eD(e),
    y: f
  };
}
function cee(e) {
  var t, n = ap(e), r = ZI(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, s = Zh(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), a = Zh(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), c = -r.scrollLeft + eD(e), f = -r.scrollTop;
  return Td(o || n).direction === "rtl" && (c += Zh(n.clientWidth, o ? o.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: c,
    y: f
  };
}
function tD(e) {
  var t = Td(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function fV(e) {
  return ["html", "body", "#document"].indexOf(bc(e)) >= 0 ? e.ownerDocument.body : gl(e) && tD(e) ? e : fV(L_(e));
}
function hS(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = fV(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), s = La(r), a = o ? [s].concat(s.visualViewport || [], tD(r) ? r : []) : r, c = t.concat(a);
  return o ? c : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    c.concat(hS(L_(a)))
  );
}
function mM(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function dee(e, t) {
  var n = Wv(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function dF(e, t, n) {
  return t === iV ? mM(uee(e, n)) : am(t) ? dee(t, n) : mM(cee(ap(e)));
}
function fee(e) {
  var t = hS(L_(e)), n = ["absolute", "fixed"].indexOf(Td(e).position) >= 0, r = n && gl(e) ? hC(e) : e;
  return am(r) ? t.filter(function(o) {
    return am(o) && lV(o, r) && bc(o) !== "body";
  }) : [];
}
function pee(e, t, n, r) {
  var o = t === "clippingParents" ? fee(e) : [].concat(t), s = [].concat(o, [n]), a = s[0], c = s.reduce(function(f, m) {
    var g = dF(e, m, r);
    return f.top = Zh(g.top, f.top), f.right = AT(g.right, f.right), f.bottom = AT(g.bottom, f.bottom), f.left = Zh(g.left, f.left), f;
  }, dF(e, a, r));
  return c.width = c.right - c.left, c.height = c.bottom - c.top, c.x = c.left, c.y = c.top, c;
}
function pV(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? mc(r) : null, s = r ? Gv(r) : null, a = t.x + t.width / 2 - n.width / 2, c = t.y + t.height / 2 - n.height / 2, f;
  switch (o) {
    case aa:
      f = {
        x: a,
        y: t.y - n.height
      };
      break;
    case xl:
      f = {
        x: a,
        y: t.y + t.height
      };
      break;
    case El:
      f = {
        x: t.x + t.width,
        y: c
      };
      break;
    case la:
      f = {
        x: t.x - n.width,
        y: c
      };
      break;
    default:
      f = {
        x: t.x,
        y: t.y
      };
  }
  var m = o ? JI(o) : null;
  if (m != null) {
    var g = m === "y" ? "height" : "width";
    switch (s) {
      case Vv:
        f[m] = f[m] - (t[g] / 2 - n[g] / 2);
        break;
      case $S:
        f[m] = f[m] + (t[g] / 2 - n[g] / 2);
        break;
    }
  }
  return f;
}
function jS(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, s = n.strategy, a = s === void 0 ? e.strategy : s, c = n.boundary, f = c === void 0 ? DZ : c, m = n.rootBoundary, g = m === void 0 ? iV : m, y = n.elementContext, w = y === void 0 ? Lw : y, C = n.altBoundary, T = C === void 0 ? !1 : C, E = n.padding, O = E === void 0 ? 0 : E, k = cV(typeof O != "number" ? O : dV(O, pC)), I = w === Lw ? AZ : Lw, M = e.rects.popper, N = e.elements[T ? I : w], P = pee(am(N) ? N : N.contextElement || ap(e.elements.popper), f, g, a), F = Wv(e.elements.reference), H = pV({
    reference: F,
    element: M,
    placement: o
  }), U = mM(Object.assign({}, M, H)), z = w === Lw ? U : F, A = {
    top: P.top - z.top + k.top,
    bottom: z.bottom - P.bottom + k.bottom,
    left: P.left - z.left + k.left,
    right: z.right - P.right + k.right
  }, q = e.modifiersData.offset;
  if (w === Lw && q) {
    var W = q[o];
    Object.keys(A).forEach(function(Y) {
      var ee = [El, xl].indexOf(Y) >= 0 ? 1 : -1, G = [aa, xl].indexOf(Y) >= 0 ? "y" : "x";
      A[Y] += W[G] * ee;
    });
  }
  return A;
}
function hee(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, s = n.rootBoundary, a = n.padding, c = n.flipVariations, f = n.allowedAutoPlacements, m = f === void 0 ? sV : f, g = Gv(r), y = g ? c ? aF : aF.filter(function(T) {
    return Gv(T) === g;
  }) : pC, w = y.filter(function(T) {
    return m.indexOf(T) >= 0;
  });
  w.length === 0 && (w = y);
  var C = w.reduce(function(T, E) {
    return T[E] = jS(e, {
      placement: E,
      boundary: o,
      rootBoundary: s,
      padding: a
    })[mc(E)], T;
  }, {});
  return Object.keys(C).sort(function(T, E) {
    return C[T] - C[E];
  });
}
function mee(e) {
  if (mc(e) === YI)
    return [];
  var t = fT(e);
  return [cF(e), t, cF(t)];
}
function gee(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, c = a === void 0 ? !0 : a, f = n.fallbackPlacements, m = n.padding, g = n.boundary, y = n.rootBoundary, w = n.altBoundary, C = n.flipVariations, T = C === void 0 ? !0 : C, E = n.allowedAutoPlacements, O = t.options.placement, k = mc(O), I = k === O, M = f || (I || !T ? [fT(O)] : mee(O)), N = [O].concat(M).reduce(function(ue, he) {
      return ue.concat(mc(he) === YI ? hee(t, {
        placement: he,
        boundary: g,
        rootBoundary: y,
        padding: m,
        flipVariations: T,
        allowedAutoPlacements: E
      }) : he);
    }, []), P = t.rects.reference, F = t.rects.popper, H = /* @__PURE__ */ new Map(), U = !0, z = N[0], A = 0; A < N.length; A++) {
      var q = N[A], W = mc(q), Y = Gv(q) === Vv, ee = [aa, xl].indexOf(W) >= 0, G = ee ? "width" : "height", K = jS(t, {
        placement: q,
        boundary: g,
        rootBoundary: y,
        altBoundary: w,
        padding: m
      }), X = ee ? Y ? El : la : Y ? xl : aa;
      P[G] > F[G] && (X = fT(X));
      var te = fT(X), re = [];
      if (s && re.push(K[W] <= 0), c && re.push(K[X] <= 0, K[te] <= 0), re.every(function(ue) {
        return ue;
      })) {
        z = q, U = !1;
        break;
      }
      H.set(q, re);
    }
    if (U)
      for (var Q = T ? 3 : 1, B = function(he) {
        var ge = N.find(function(fe) {
          var pe = H.get(fe);
          if (pe)
            return pe.slice(0, he).every(function(be) {
              return be;
            });
        });
        if (ge)
          return z = ge, "break";
      }, ie = Q; ie > 0; ie--) {
        var de = B(ie);
        if (de === "break") break;
      }
    t.placement !== z && (t.modifiersData[r]._skip = !0, t.placement = z, t.reset = !0);
  }
}
const vee = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: gee,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function fF(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function pF(e) {
  return [aa, El, xl, la].some(function(t) {
    return e[t] >= 0;
  });
}
function yee(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, s = t.modifiersData.preventOverflow, a = jS(t, {
    elementContext: "reference"
  }), c = jS(t, {
    altBoundary: !0
  }), f = fF(a, r), m = fF(c, o, s), g = pF(f), y = pF(m);
  t.modifiersData[n] = {
    referenceClippingOffsets: f,
    popperEscapeOffsets: m,
    isReferenceHidden: g,
    hasPopperEscaped: y
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": g,
    "data-popper-escaped": y
  });
}
const bee = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: yee
};
function wee(e, t, n) {
  var r = mc(e), o = [la, aa].indexOf(r) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], c = s[1];
  return a = a || 0, c = (c || 0) * o, [la, El].indexOf(r) >= 0 ? {
    x: c,
    y: a
  } : {
    x: a,
    y: c
  };
}
function See(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, s = o === void 0 ? [0, 0] : o, a = sV.reduce(function(g, y) {
    return g[y] = wee(y, t.rects, s), g;
  }, {}), c = a[t.placement], f = c.x, m = c.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += f, t.modifiersData.popperOffsets.y += m), t.modifiersData[r] = a;
}
const Cee = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: See
};
function xee(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = pV({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const Eee = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: xee,
  data: {}
};
function Tee(e) {
  return e === "x" ? "y" : "x";
}
function _ee(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, c = a === void 0 ? !1 : a, f = n.boundary, m = n.rootBoundary, g = n.altBoundary, y = n.padding, w = n.tether, C = w === void 0 ? !0 : w, T = n.tetherOffset, E = T === void 0 ? 0 : T, O = jS(t, {
    boundary: f,
    rootBoundary: m,
    padding: y,
    altBoundary: g
  }), k = mc(t.placement), I = Gv(t.placement), M = !I, N = JI(k), P = Tee(N), F = t.modifiersData.popperOffsets, H = t.rects.reference, U = t.rects.popper, z = typeof E == "function" ? E(Object.assign({}, t.rects, {
    placement: t.placement
  })) : E, A = typeof z == "number" ? {
    mainAxis: z,
    altAxis: z
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, z), q = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, W = {
    x: 0,
    y: 0
  };
  if (F) {
    if (s) {
      var Y, ee = N === "y" ? aa : la, G = N === "y" ? xl : El, K = N === "y" ? "height" : "width", X = F[N], te = X + O[ee], re = X - O[G], Q = C ? -U[K] / 2 : 0, B = I === Vv ? H[K] : U[K], ie = I === Vv ? -U[K] : -H[K], de = t.elements.arrow, ue = C && de ? QI(de) : {
        width: 0,
        height: 0
      }, he = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : uV(), ge = he[ee], fe = he[G], pe = pS(0, H[K], ue[K]), be = M ? H[K] / 2 - Q - pe - ge - A.mainAxis : B - pe - ge - A.mainAxis, we = M ? -H[K] / 2 + Q + pe + fe + A.mainAxis : ie + pe + fe + A.mainAxis, _e = t.elements.arrow && hC(t.elements.arrow), ce = _e ? N === "y" ? _e.clientTop || 0 : _e.clientLeft || 0 : 0, Ce = (Y = q == null ? void 0 : q[N]) != null ? Y : 0, Ne = X + be - Ce - ce, Be = X + we - Ce, tt = pS(C ? AT(te, Ne) : te, X, C ? Zh(re, Be) : re);
      F[N] = tt, W[N] = tt - X;
    }
    if (c) {
      var $e, rt = N === "x" ? aa : la, ot = N === "x" ? xl : El, wt = F[P], gt = P === "y" ? "height" : "width", nt = wt + O[rt], Ft = wt - O[ot], ut = [aa, la].indexOf(k) !== -1, Et = ($e = q == null ? void 0 : q[P]) != null ? $e : 0, Tt = ut ? nt : wt - H[gt] - U[gt] - Et + A.altAxis, At = ut ? wt + H[gt] + U[gt] - Et - A.altAxis : Ft, vt = C && ut ? XZ(Tt, wt, At) : pS(C ? Tt : nt, wt, C ? At : Ft);
      F[P] = vt, W[P] = vt - wt;
    }
    t.modifiersData[r] = W;
  }
}
const Oee = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: _ee,
  requiresIfExists: ["offset"]
};
function Ree(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function kee(e) {
  return e === La(e) || !gl(e) ? ZI(e) : Ree(e);
}
function Pee(e) {
  var t = e.getBoundingClientRect(), n = Uv(t.width) / e.offsetWidth || 1, r = Uv(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function Mee(e, t, n) {
  n === void 0 && (n = !1);
  var r = gl(t), o = gl(t) && Pee(t), s = ap(t), a = Wv(e, o, n), c = {
    scrollLeft: 0,
    scrollTop: 0
  }, f = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((bc(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  tD(s)) && (c = kee(t)), gl(t) ? (f = Wv(t, !0), f.x += t.clientLeft, f.y += t.clientTop) : s && (f.x = eD(s))), {
    x: a.left + c.scrollLeft - f.x,
    y: a.top + c.scrollTop - f.y,
    width: a.width,
    height: a.height
  };
}
function Iee(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function o(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(c) {
      if (!n.has(c)) {
        var f = t.get(c);
        f && o(f);
      }
    }), r.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || o(s);
  }), r;
}
function Dee(e) {
  var t = Iee(e);
  return UZ.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function Aee(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function Nee(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var hF = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function mF() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function Lee(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, s = o === void 0 ? hF : o;
  return function(c, f, m) {
    m === void 0 && (m = s);
    var g = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, hF, s),
      modifiersData: {},
      elements: {
        reference: c,
        popper: f
      },
      attributes: {},
      styles: {}
    }, y = [], w = !1, C = {
      state: g,
      setOptions: function(k) {
        var I = typeof k == "function" ? k(g.options) : k;
        E(), g.options = Object.assign({}, s, g.options, I), g.scrollParents = {
          reference: am(c) ? hS(c) : c.contextElement ? hS(c.contextElement) : [],
          popper: hS(f)
        };
        var M = Dee(Nee([].concat(r, g.options.modifiers)));
        return g.orderedModifiers = M.filter(function(N) {
          return N.enabled;
        }), T(), C.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!w) {
          var k = g.elements, I = k.reference, M = k.popper;
          if (mF(I, M)) {
            g.rects = {
              reference: Mee(I, hC(M), g.options.strategy === "fixed"),
              popper: QI(M)
            }, g.reset = !1, g.placement = g.options.placement, g.orderedModifiers.forEach(function(A) {
              return g.modifiersData[A.name] = Object.assign({}, A.data);
            });
            for (var N = 0; N < g.orderedModifiers.length; N++) {
              if (g.reset === !0) {
                g.reset = !1, N = -1;
                continue;
              }
              var P = g.orderedModifiers[N], F = P.fn, H = P.options, U = H === void 0 ? {} : H, z = P.name;
              typeof F == "function" && (g = F({
                state: g,
                options: U,
                name: z,
                instance: C
              }) || g);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: Aee(function() {
        return new Promise(function(O) {
          C.forceUpdate(), O(g);
        });
      }),
      destroy: function() {
        E(), w = !0;
      }
    };
    if (!mF(c, f))
      return C;
    C.setOptions(m).then(function(O) {
      !w && m.onFirstUpdate && m.onFirstUpdate(O);
    });
    function T() {
      g.orderedModifiers.forEach(function(O) {
        var k = O.name, I = O.options, M = I === void 0 ? {} : I, N = O.effect;
        if (typeof N == "function") {
          var P = N({
            state: g,
            name: k,
            instance: C,
            options: M
          }), F = function() {
          };
          y.push(P || F);
        }
      });
    }
    function E() {
      y.forEach(function(O) {
        return O();
      }), y = [];
    }
    return C;
  };
}
var $ee = [see, Eee, oee, qZ, Cee, vee, Oee, eee, bee], jee = /* @__PURE__ */ Lee({
  defaultModifiers: $ee
});
function Fee(e) {
  return typeof e == "function" ? e() : e;
}
const FS = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, c] = x.useState(null), f = Pr(/* @__PURE__ */ x.isValidElement(r) ? ip(r) : null, n);
  if (Nr(() => {
    s || c(Fee(o) || document.body);
  }, [o, s]), Nr(() => {
    if (a && !s)
      return iM(n, a), () => {
        iM(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ x.isValidElement(r)) {
      const m = {
        ref: f
      };
      return /* @__PURE__ */ x.cloneElement(r, m);
    }
    return r;
  }
  return a && /* @__PURE__ */ v_.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (FS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: u.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: u.oneOfType([Sl, u.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: u.bool
});
process.env.NODE_ENV !== "production" && (FS.propTypes = dC(FS.propTypes));
function zee(e) {
  return an("MuiPopper", e);
}
pn("MuiPopper", ["root"]);
function Bee(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function NT(e) {
  return typeof e == "function" ? e() : e;
}
function $_(e) {
  return e.nodeType !== void 0;
}
function Hee(e) {
  return !$_(e);
}
const Vee = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"]
  }, zee, t);
}, Uee = {}, Wee = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: s,
    disablePortal: a,
    modifiers: c,
    open: f,
    placement: m,
    popperOptions: g,
    popperRef: y,
    slotProps: w = {},
    slots: C = {},
    TransitionProps: T,
    // @ts-ignore internal logic
    ownerState: E,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...O
  } = t, k = x.useRef(null), I = Pr(k, n), M = x.useRef(null), N = Pr(M, y), P = x.useRef(N);
  Nr(() => {
    P.current = N;
  }, [N]), x.useImperativeHandle(y, () => M.current, []);
  const F = Bee(m, s), [H, U] = x.useState(F), [z, A] = x.useState(NT(r));
  x.useEffect(() => {
    M.current && M.current.forceUpdate();
  }), x.useEffect(() => {
    r && A(NT(r));
  }, [r]), Nr(() => {
    if (!z || !f)
      return;
    const G = (te) => {
      U(te.placement);
    };
    if (process.env.NODE_ENV !== "production" && z && $_(z) && z.nodeType === 1) {
      const te = z.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && te.top === 0 && te.left === 0 && te.right === 0 && te.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let K = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: te
      }) => {
        G(te);
      }
    }];
    c != null && (K = K.concat(c)), g && g.modifiers != null && (K = K.concat(g.modifiers));
    const X = jee(z, k.current, {
      placement: F,
      ...g,
      modifiers: K
    });
    return P.current(X), () => {
      X.destroy(), P.current(null);
    };
  }, [z, a, c, f, g, F]);
  const q = {
    placement: H
  };
  T !== null && (q.TransitionProps = T);
  const W = Vee(t), Y = C.root ?? "div", ee = FH({
    elementType: Y,
    externalSlotProps: w.root,
    externalForwardedProps: O,
    additionalProps: {
      role: "tooltip",
      ref: I
    },
    ownerState: t,
    className: W.root
  });
  return /* @__PURE__ */ $.jsx(Y, {
    ...ee,
    children: typeof o == "function" ? o(q) : o
  });
}), hV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: s,
    direction: a = "ltr",
    disablePortal: c = !1,
    keepMounted: f = !1,
    modifiers: m,
    open: g,
    placement: y = "bottom",
    popperOptions: w = Uee,
    popperRef: C,
    style: T,
    transition: E = !1,
    slotProps: O = {},
    slots: k = {},
    ...I
  } = t, [M, N] = x.useState(!0), P = () => {
    N(!1);
  }, F = () => {
    N(!0);
  };
  if (!f && !g && (!E || M))
    return null;
  let H;
  if (s)
    H = s;
  else if (r) {
    const A = NT(r);
    H = A && $_(A) ? ho(A).body : ho(null).body;
  }
  const U = !g && f && (!E || M) ? "none" : void 0, z = E ? {
    in: g,
    onEnter: P,
    onExited: F
  } : void 0;
  return /* @__PURE__ */ $.jsx(FS, {
    disablePortal: c,
    container: H,
    children: /* @__PURE__ */ $.jsx(Wee, {
      anchorEl: r,
      direction: a,
      disablePortal: c,
      modifiers: m,
      ref: n,
      open: E ? !M : g,
      placement: y,
      popperOptions: w,
      popperRef: C,
      slotProps: O,
      slots: k,
      ...I,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: U,
        ...T
      },
      TransitionProps: z,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (hV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Na(u.oneOfType([Sl, u.object, u.func]), (e) => {
    if (e.open) {
      const t = NT(e.anchorEl);
      if (t && $_(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || Hee(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: u.oneOfType([u.node, u.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: u.oneOfType([Sl, u.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: u.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: u.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: u.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: u.arrayOf(u.shape({
    data: u.object,
    effect: u.func,
    enabled: u.bool,
    fn: u.func,
    name: u.any,
    options: u.object,
    phase: u.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: u.arrayOf(u.string),
    requiresIfExists: u.arrayOf(u.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: u.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: u.shape({
    modifiers: u.array,
    onFirstUpdate: u.func,
    placement: u.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: u.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: ca,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: u.shape({
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: u.shape({
    root: u.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: u.bool
});
const Gee = Ue(hV, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), lp = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = cy(), o = mn({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: c,
    componentsProps: f,
    container: m,
    disablePortal: g,
    keepMounted: y,
    modifiers: w,
    open: C,
    placement: T,
    popperOptions: E,
    popperRef: O,
    transition: k,
    slots: I,
    slotProps: M,
    ...N
  } = o, P = (I == null ? void 0 : I.root) ?? (c == null ? void 0 : c.Root), F = {
    anchorEl: s,
    container: m,
    disablePortal: g,
    keepMounted: y,
    modifiers: w,
    open: C,
    placement: T,
    popperOptions: E,
    popperRef: O,
    transition: k,
    ...N
  };
  return /* @__PURE__ */ $.jsx(Gee, {
    as: a,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: P
    },
    slotProps: M ?? f,
    ...F,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (lp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: u.oneOfType([Sl, u.object, u.func]),
  /**
   * Popper render function or node.
   */
  children: u.oneOfType([u.node, u.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: u.shape({
    Root: u.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: u.shape({
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: u.oneOfType([Sl, u.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: u.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: u.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: u.arrayOf(u.shape({
    data: u.object,
    effect: u.func,
    enabled: u.bool,
    fn: u.func,
    name: u.any,
    options: u.object,
    phase: u.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: u.arrayOf(u.string),
    requiresIfExists: u.arrayOf(u.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: u.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: u.shape({
    modifiers: u.array,
    onFirstUpdate: u.func,
    placement: u.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: u.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: ca,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: u.shape({
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: u.shape({
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: u.bool
});
function qee(e) {
  return an("MuiListSubheader", e);
}
pn("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const Kee = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: r,
    inset: o,
    disableSticky: s
  } = e, a = {
    root: ["root", n !== "default" && `color${He(n)}`, !r && "gutters", o && "inset", !s && "sticky"]
  };
  return mt(a, qee, t);
}, Yee = Ue("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${He(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(Zt(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), LT = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: o,
    color: s = "default",
    component: a = "li",
    disableGutters: c = !1,
    disableSticky: f = !1,
    inset: m = !1,
    ...g
  } = r, y = {
    ...r,
    color: s,
    component: a,
    disableGutters: c,
    disableSticky: f,
    inset: m
  }, w = Kee(y);
  return /* @__PURE__ */ $.jsx(Yee, {
    as: a,
    className: et(w.root, o),
    ref: n,
    ownerState: y,
    ...g
  });
});
LT && (LT.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (LT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: u.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: u.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: u.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const Xee = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function Qee(e) {
  return an("MuiChip", e);
}
const Gn = pn("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), Jee = (e) => {
  const {
    classes: t,
    disabled: n,
    size: r,
    color: o,
    iconColor: s,
    onDelete: a,
    clickable: c,
    variant: f
  } = e, m = {
    root: ["root", f, n && "disabled", `size${He(r)}`, `color${He(o)}`, c && "clickable", c && `clickableColor${He(o)}`, a && "deletable", a && `deletableColor${He(o)}`, `${f}${He(o)}`],
    label: ["label", `label${He(r)}`],
    avatar: ["avatar", `avatar${He(r)}`, `avatarColor${He(o)}`],
    icon: ["icon", `icon${He(r)}`, `iconColor${He(s)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${He(r)}`, `deleteIconColor${He(o)}`, `deleteIcon${He(f)}Color${He(o)}`]
  };
  return mt(m, Qee, t);
}, Zee = Ue("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: r,
      iconColor: o,
      clickable: s,
      onDelete: a,
      size: c,
      variant: f
    } = n;
    return [{
      [`& .${Gn.avatar}`]: t.avatar
    }, {
      [`& .${Gn.avatar}`]: t[`avatar${He(c)}`]
    }, {
      [`& .${Gn.avatar}`]: t[`avatarColor${He(r)}`]
    }, {
      [`& .${Gn.icon}`]: t.icon
    }, {
      [`& .${Gn.icon}`]: t[`icon${He(c)}`]
    }, {
      [`& .${Gn.icon}`]: t[`iconColor${He(o)}`]
    }, {
      [`& .${Gn.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${Gn.deleteIcon}`]: t[`deleteIcon${He(c)}`]
    }, {
      [`& .${Gn.deleteIcon}`]: t[`deleteIconColor${He(r)}`]
    }, {
      [`& .${Gn.deleteIcon}`]: t[`deleteIcon${He(f)}Color${He(r)}`]
    }, t.root, t[`size${He(c)}`], t[`color${He(r)}`], s && t.clickable, s && r !== "default" && t[`clickableColor${He(r)})`], a && t.deletable, a && r !== "default" && t[`deletableColor${He(r)}`], t[f], t[`${f}${He(r)}`]];
  }
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${Gn.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${Gn.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${Gn.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${Gn.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${Gn.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${Gn.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${Gn.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : An(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : An(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${Gn.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${Gn.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(eo(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${Gn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : An(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${Gn.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${Gn.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${Gn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : An(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(eo(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${Gn.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : An(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${Gn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : An(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(eo(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${Gn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${Gn.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${Gn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${Gn.avatar}`]: {
          marginLeft: 4
        },
        [`& .${Gn.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${Gn.icon}`]: {
          marginLeft: 4
        },
        [`& .${Gn.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${Gn.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${Gn.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(eo()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : An(e.palette[n].main, 0.7)}`,
        [`&.${Gn.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${Gn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : An(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${Gn.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : An(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), ete = Ue("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: r
    } = n;
    return [t.label, t[`label${He(r)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function gF(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const Av = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiChip"
  }), {
    avatar: o,
    className: s,
    clickable: a,
    color: c = "default",
    component: f,
    deleteIcon: m,
    disabled: g = !1,
    icon: y,
    label: w,
    onClick: C,
    onDelete: T,
    onKeyDown: E,
    onKeyUp: O,
    size: k = "medium",
    variant: I = "filled",
    tabIndex: M,
    skipFocusWhenDisabled: N = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...P
  } = r, F = x.useRef(null), H = Pr(F, n), U = (re) => {
    re.stopPropagation(), T && T(re);
  }, z = (re) => {
    re.currentTarget === re.target && gF(re) && re.preventDefault(), E && E(re);
  }, A = (re) => {
    re.currentTarget === re.target && T && gF(re) && T(re), O && O(re);
  }, q = a !== !1 && C ? !0 : a, W = q || T ? sm : f || "div", Y = {
    ...r,
    component: W,
    disabled: g,
    size: k,
    color: c,
    iconColor: /* @__PURE__ */ x.isValidElement(y) && y.props.color || c,
    onDelete: !!T,
    clickable: q,
    variant: I
  }, ee = Jee(Y), G = W === sm ? {
    component: f || "div",
    focusVisibleClassName: ee.focusVisible,
    ...T && {
      disableRipple: !0
    }
  } : {};
  let K = null;
  T && (K = m && /* @__PURE__ */ x.isValidElement(m) ? /* @__PURE__ */ x.cloneElement(m, {
    className: et(m.props.className, ee.deleteIcon),
    onClick: U
  }) : /* @__PURE__ */ $.jsx(Xee, {
    className: et(ee.deleteIcon),
    onClick: U
  }));
  let X = null;
  o && /* @__PURE__ */ x.isValidElement(o) && (X = /* @__PURE__ */ x.cloneElement(o, {
    className: et(ee.avatar, o.props.className)
  }));
  let te = null;
  return y && /* @__PURE__ */ x.isValidElement(y) && (te = /* @__PURE__ */ x.cloneElement(y, {
    className: et(ee.icon, y.props.className)
  })), process.env.NODE_ENV !== "production" && X && te && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ $.jsxs(Zee, {
    as: W,
    className: et(ee.root, s),
    disabled: q && g ? !0 : void 0,
    onClick: C,
    onKeyDown: z,
    onKeyUp: A,
    ref: H,
    tabIndex: N && g ? -1 : M,
    ownerState: Y,
    ...G,
    ...P,
    children: [X || te, /* @__PURE__ */ $.jsx(ete, {
      className: et(ee.label),
      ownerState: Y,
      children: w
    }), K]
  });
});
process.env.NODE_ENV !== "production" && (Av.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: u.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: WX,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: u.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: u.oneOfType([u.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: u.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * Icon element.
   */
  icon: u.element,
  /**
   * The content of the component.
   */
  label: u.node,
  /**
   * @ignore
   */
  onClick: u.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: u.func,
  /**
   * @ignore
   */
  onKeyDown: u.func,
  /**
   * @ignore
   */
  onKeyUp: u.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * @ignore
   */
  tabIndex: u.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: u.oneOfType([u.oneOf(["filled", "outlined"]), u.string])
});
function AE(e) {
  return parseInt(e, 10) || 0;
}
const tte = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function nte(e) {
  for (const t in e)
    return !1;
  return !0;
}
function vF(e) {
  return nte(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const mV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: c,
    ...f
  } = t, {
    current: m
  } = x.useRef(c != null), g = x.useRef(null), y = Pr(n, g), w = x.useRef(null), C = x.useRef(null), T = x.useCallback(() => {
    const M = g.current, N = C.current;
    if (!M || !N)
      return;
    const F = Cl(M).getComputedStyle(M);
    if (F.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    N.style.width = F.width, N.value = M.value || t.placeholder || "x", N.value.slice(-1) === `
` && (N.value += " ");
    const H = F.boxSizing, U = AE(F.paddingBottom) + AE(F.paddingTop), z = AE(F.borderBottomWidth) + AE(F.borderTopWidth), A = N.scrollHeight;
    N.value = "x";
    const q = N.scrollHeight;
    let W = A;
    s && (W = Math.max(Number(s) * q, W)), o && (W = Math.min(Number(o) * q, W)), W = Math.max(W, q);
    const Y = W + (H === "border-box" ? U + z : 0), ee = Math.abs(W - A) <= 1;
    return {
      outerHeightStyle: Y,
      overflowing: ee
    };
  }, [o, s, t.placeholder]), E = jn(() => {
    const M = g.current, N = T();
    if (!M || !N || vF(N))
      return !1;
    const P = N.outerHeightStyle;
    return w.current != null && w.current !== P;
  }), O = x.useCallback(() => {
    const M = g.current, N = T();
    if (!M || !N || vF(N))
      return;
    const P = N.outerHeightStyle;
    w.current !== P && (w.current = P, M.style.height = `${P}px`), M.style.overflow = N.overflowing ? "hidden" : "";
  }, [T]), k = x.useRef(-1);
  Nr(() => {
    const M = NI(O), N = g == null ? void 0 : g.current;
    if (!N)
      return;
    const P = Cl(N);
    P.addEventListener("resize", M);
    let F;
    return typeof ResizeObserver < "u" && (F = new ResizeObserver(() => {
      E() && (F.unobserve(N), cancelAnimationFrame(k.current), O(), k.current = requestAnimationFrame(() => {
        F.observe(N);
      }));
    }), F.observe(N)), () => {
      M.clear(), cancelAnimationFrame(k.current), P.removeEventListener("resize", M), F && F.disconnect();
    };
  }, [T, O, E]), Nr(() => {
    O();
  });
  const I = (M) => {
    m || O(), r && r(M);
  };
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx("textarea", {
      value: c,
      onChange: I,
      ref: y,
      rows: s,
      style: a,
      ...f
    }), /* @__PURE__ */ $.jsx("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: C,
      tabIndex: -1,
      style: {
        ...tte.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (mV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: u.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * @ignore
   */
  onChange: u.func,
  /**
   * @ignore
   */
  placeholder: u.string,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * @ignore
   */
  value: u.oneOfType([u.arrayOf(u.string), u.number, u.string])
});
function gM(e) {
  return typeof e == "string";
}
function pm({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const mC = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (mC.displayName = "FormControlContext");
function Od() {
  return x.useContext(mC);
}
function yF(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function $T(e, t = !1) {
  return e && (yF(e.value) && e.value !== "" || t && yF(e.defaultValue) && e.defaultValue !== "");
}
function rte(e) {
  return e.startAdornment;
}
function ote(e) {
  return an("MuiInputBase", e);
}
const Ti = pn("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var bF;
const j_ = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${He(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, F_ = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, ite = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: c,
    fullWidth: f,
    hiddenLabel: m,
    multiline: g,
    readOnly: y,
    size: w,
    startAdornment: C,
    type: T
  } = e, E = {
    root: ["root", `color${He(n)}`, r && "disabled", o && "error", f && "fullWidth", a && "focused", c && "formControl", w && w !== "medium" && `size${He(w)}`, g && "multiline", C && "adornedStart", s && "adornedEnd", m && "hiddenLabel", y && "readOnly"],
    input: ["input", r && "disabled", T === "search" && "inputTypeSearch", g && "inputMultiline", w === "small" && "inputSizeSmall", m && "inputHiddenLabel", C && "inputAdornedStart", s && "inputAdornedEnd", y && "readOnly"]
  };
  return mt(E, ote, t);
}, z_ = Ue("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: j_
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Ti.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), B_ = Ue("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: F_
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Ti.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${Ti.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), wF = UI({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), hm = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: c,
    color: f,
    components: m = {},
    componentsProps: g = {},
    defaultValue: y,
    disabled: w,
    disableInjectingGlobalStyles: C,
    endAdornment: T,
    error: E,
    fullWidth: O = !1,
    id: k,
    inputComponent: I = "input",
    inputProps: M = {},
    inputRef: N,
    margin: P,
    maxRows: F,
    minRows: H,
    multiline: U = !1,
    name: z,
    onBlur: A,
    onChange: q,
    onClick: W,
    onFocus: Y,
    onKeyDown: ee,
    onKeyUp: G,
    placeholder: K,
    readOnly: X,
    renderSuffix: te,
    rows: re,
    size: Q,
    slotProps: B = {},
    slots: ie = {},
    startAdornment: de,
    type: ue = "text",
    value: he,
    ...ge
  } = r, fe = M.value != null ? M.value : he, {
    current: pe
  } = x.useRef(fe != null), be = x.useRef(), we = x.useCallback((Ie) => {
    process.env.NODE_ENV !== "production" && Ie && Ie.nodeName !== "INPUT" && !Ie.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), _e = Pr(be, N, M.ref, we), [ce, Ce] = x.useState(!1), Ne = Od();
  process.env.NODE_ENV !== "production" && x.useEffect(() => {
    if (Ne)
      return Ne.registerEffect();
  }, [Ne]);
  const Be = pm({
    props: r,
    muiFormControl: Ne,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  Be.focused = Ne ? Ne.focused : ce, x.useEffect(() => {
    !Ne && w && ce && (Ce(!1), A && A());
  }, [Ne, w, ce, A]);
  const tt = Ne && Ne.onFilled, $e = Ne && Ne.onEmpty, rt = x.useCallback((Ie) => {
    $T(Ie) ? tt && tt() : $e && $e();
  }, [tt, $e]);
  Nr(() => {
    pe && rt({
      value: fe
    });
  }, [fe, rt, pe]);
  const ot = (Ie) => {
    Y && Y(Ie), M.onFocus && M.onFocus(Ie), Ne && Ne.onFocus ? Ne.onFocus(Ie) : Ce(!0);
  }, wt = (Ie) => {
    A && A(Ie), M.onBlur && M.onBlur(Ie), Ne && Ne.onBlur ? Ne.onBlur(Ie) : Ce(!1);
  }, gt = (Ie, ...pt) => {
    if (!pe) {
      const yt = Ie.target || be.current;
      if (yt == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : vc(1));
      rt({
        value: yt.value
      });
    }
    M.onChange && M.onChange(Ie, ...pt), q && q(Ie, ...pt);
  };
  x.useEffect(() => {
    rt(be.current);
  }, []);
  const nt = (Ie) => {
    be.current && Ie.currentTarget === Ie.target && be.current.focus(), W && W(Ie);
  };
  let Ft = I, ut = M;
  U && Ft === "input" && (re ? (process.env.NODE_ENV !== "production" && (H || F) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ut = {
    type: void 0,
    minRows: re,
    maxRows: re,
    ...ut
  }) : ut = {
    type: void 0,
    maxRows: F,
    minRows: H,
    ...ut
  }, Ft = mV);
  const Et = (Ie) => {
    rt(Ie.animationName === "mui-auto-fill-cancel" ? be.current : {
      value: "x"
    });
  };
  x.useEffect(() => {
    Ne && Ne.setAdornedStart(!!de);
  }, [Ne, de]);
  const Tt = {
    ...r,
    color: Be.color || "primary",
    disabled: Be.disabled,
    endAdornment: T,
    error: Be.error,
    focused: Be.focused,
    formControl: Ne,
    fullWidth: O,
    hiddenLabel: Be.hiddenLabel,
    multiline: U,
    size: Be.size,
    startAdornment: de,
    type: ue
  }, At = ite(Tt), vt = ie.root || m.Root || z_, Xe = B.root || g.root || {}, Oe = ie.input || m.Input || B_;
  return ut = {
    ...ut,
    ...B.input ?? g.input
  }, /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [!C && typeof wF == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (bF || (bF = /* @__PURE__ */ $.jsx(wF, {}))), /* @__PURE__ */ $.jsxs(vt, {
      ...Xe,
      ref: n,
      onClick: nt,
      ...ge,
      ...!gM(vt) && {
        ownerState: {
          ...Tt,
          ...Xe.ownerState
        }
      },
      className: et(At.root, Xe.className, c, X && "MuiInputBase-readOnly"),
      children: [de, /* @__PURE__ */ $.jsx(mC.Provider, {
        value: null,
        children: /* @__PURE__ */ $.jsx(Oe, {
          "aria-invalid": Be.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: y,
          disabled: Be.disabled,
          id: k,
          onAnimationStart: Et,
          name: z,
          placeholder: K,
          readOnly: X,
          required: Be.required,
          rows: re,
          value: fe,
          onKeyDown: ee,
          onKeyUp: G,
          type: ue,
          ...ut,
          ...!gM(Oe) && {
            as: Ft,
            ownerState: {
              ...Tt,
              ...ut.ownerState
            }
          },
          ref: _e,
          className: et(At.input, ut.className, X && "MuiInputBase-readOnly"),
          onBlur: wt,
          onChange: gt,
          onFocus: ot
        })
      }), T, te ? te({
        ...Be,
        startAdornment: de
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (hm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": u.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: u.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Input: u.elementType,
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: u.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: u.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: u.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: u.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: AI,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: u.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: u.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: u.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: u.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * @ignore
   */
  onClick: u.func,
  /**
   * @ignore
   */
  onFocus: u.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: u.func,
  /**
   * @ignore
   */
  onKeyDown: u.func,
  /**
   * @ignore
   */
  onKeyUp: u.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: u.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: u.bool,
  /**
   * @ignore
   */
  renderSuffix: u.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: u.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: u.oneOfType([u.number, u.string]),
  /**
   * The size of the component.
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    root: u.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: u.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: u.any
});
function ste(e) {
  return an("MuiInput", e);
}
const Nf = {
  ...Ti,
  ...pn("MuiInput", ["root", "underline", "input"])
};
function ate(e) {
  return an("MuiOutlinedInput", e);
}
const ul = {
  ...Ti,
  ...pn("MuiOutlinedInput", ["root", "notchedOutline", "input"])
};
function lte(e) {
  return an("MuiFilledInput", e);
}
const Oa = {
  ...Ti,
  ...pn("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, gV = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function ute(e) {
  return an("MuiAutocomplete", e);
}
const $n = pn("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var SF, CF;
const cte = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: r,
    focused: o,
    fullWidth: s,
    hasClearIcon: a,
    hasPopupIcon: c,
    inputFocused: f,
    popupOpen: m,
    size: g
  } = e, y = {
    root: ["root", r && "expanded", o && "focused", s && "fullWidth", a && "hasClearIcon", c && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", f && "inputFocused"],
    tag: ["tag", `tagSize${He(g)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", m && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return mt(y, ute, t);
}, dte = Ue("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: r,
      hasClearIcon: o,
      hasPopupIcon: s,
      inputFocused: a,
      size: c
    } = n;
    return [{
      [`& .${$n.tag}`]: t.tag
    }, {
      [`& .${$n.tag}`]: t[`tagSize${He(c)}`]
    }, {
      [`& .${$n.inputRoot}`]: t.inputRoot
    }, {
      [`& .${$n.input}`]: t.input
    }, {
      [`& .${$n.input}`]: a && t.inputFocused
    }, t.root, r && t.fullWidth, s && t.hasPopupIcon, o && t.hasClearIcon];
  }
})({
  [`&.${$n.focused} .${$n.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${$n.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${$n.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${$n.inputRoot}`]: {
    [`.${$n.hasPopupIcon}&, .${$n.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${$n.hasPopupIcon}.${$n.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${$n.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${Nf.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${Nf.root}.${Ti.sizeSmall}`]: {
    [`& .${Nf.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${ul.root}`]: {
    padding: 9,
    [`.${$n.hasPopupIcon}&, .${$n.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${$n.hasPopupIcon}.${$n.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${$n.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${$n.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${ul.root}.${Ti.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${$n.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${Oa.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${$n.hasPopupIcon}&, .${$n.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${$n.hasPopupIcon}.${$n.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${Oa.input}`]: {
      padding: "7px 4px"
    },
    [`& .${$n.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Oa.root}.${Ti.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${Oa.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${Ti.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${Oa.root}.${Ti.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${$n.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${Oa.root}.${Ti.hiddenLabel}.${Ti.sizeSmall}`]: {
    [`& .${$n.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${$n.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${$n.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${$n.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${$n.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), fte = Ue("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), pte = Ue(cu, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), hte = Ue(cu, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popupIndicator, n.popupOpen && t.popupIndicatorOpen];
  }
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), mte = Ue(lp, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${$n.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(Zt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), gte = Ue(bu, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), vte = Ue("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})(Zt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), yte = Ue("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})(Zt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), bte = Ue("ul", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})(Zt(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${$n.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${$n.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${$n.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : An(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${$n.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : An(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${$n.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : An(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), wte = Ue(LT, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})(Zt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), Ste = Ue("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${$n.option}`]: {
    paddingLeft: 24
  }
}), nD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: o = !1,
    autoHighlight: s = !1,
    autoSelect: a = !1,
    blurOnSelect: c = !1,
    ChipProps: f,
    className: m,
    clearIcon: g = SF || (SF = /* @__PURE__ */ $.jsx(nV, {
      fontSize: "small"
    })),
    clearOnBlur: y = !r.freeSolo,
    clearOnEscape: w = !1,
    clearText: C = "Clear",
    closeText: T = "Close",
    componentsProps: E,
    defaultValue: O = r.multiple ? [] : null,
    disableClearable: k = !1,
    disableCloseOnSelect: I = !1,
    disabled: M = !1,
    disabledItemsFocusable: N = !1,
    disableListWrap: P = !1,
    disablePortal: F = !1,
    filterOptions: H,
    filterSelectedOptions: U = !1,
    forcePopupIcon: z = "auto",
    freeSolo: A = !1,
    fullWidth: q = !1,
    getLimitTagsText: W = (Mn) => `+${Mn}`,
    getOptionDisabled: Y,
    getOptionKey: ee,
    getOptionLabel: G,
    isOptionEqualToValue: K,
    groupBy: X,
    handleHomeEndKeys: te = !r.freeSolo,
    id: re,
    includeInputInList: Q = !1,
    inputValue: B,
    limitTags: ie = -1,
    ListboxComponent: de,
    ListboxProps: ue,
    loading: he = !1,
    loadingText: ge = "Loading…",
    multiple: fe = !1,
    noOptionsText: pe = "No options",
    onChange: be,
    onClose: we,
    onHighlightChange: _e,
    onInputChange: ce,
    onOpen: Ce,
    open: Ne,
    openOnFocus: Be = !1,
    openText: tt = "Open",
    options: $e,
    PaperComponent: rt,
    PopperComponent: ot,
    popupIcon: wt = CF || (CF = /* @__PURE__ */ $.jsx(gV, {})),
    readOnly: gt = !1,
    renderGroup: nt,
    renderInput: Ft,
    renderOption: ut,
    renderTags: Et,
    selectOnFocus: Tt = !r.freeSolo,
    size: At = "medium",
    slots: vt = {},
    slotProps: Xe = {},
    value: Oe,
    ...Ie
  } = r, {
    getRootProps: pt,
    getInputProps: yt,
    getInputLabelProps: zt,
    getPopupIndicatorProps: bt,
    getClearProps: We,
    getTagProps: St,
    getListboxProps: $t,
    getOptionProps: wn,
    value: cn,
    dirty: Tr,
    expanded: sr,
    id: $r,
    popupOpen: _r,
    focused: Xo,
    focusedTag: Qo,
    anchorEl: Wt,
    setAnchorEl: hr,
    inputValue: Jo,
    groupedOptions: Gr
  } = IZ({
    ...r,
    componentName: "Autocomplete"
  }), oo = !k && !M && Tr && !gt, qr = (!A || z === !0) && z !== !1, {
    onMouseDown: Ki
  } = yt(), {
    ref: Ri,
    ...Yi
  } = $t(), ye = G || ((Mn) => Mn.label ?? Mn), Ye = {
    ...r,
    disablePortal: F,
    expanded: sr,
    focused: Xo,
    fullWidth: q,
    getOptionLabel: ye,
    hasClearIcon: oo,
    hasPopupIcon: qr,
    inputFocused: Qo === -1,
    popupOpen: _r,
    size: At
  }, ft = cte(Ye), Ct = {
    slots: {
      paper: rt,
      popper: ot,
      ...vt
    },
    slotProps: {
      chip: f,
      listbox: ue,
      ...E,
      ...Xe
    }
  }, [dn, De] = vn("listbox", {
    elementType: bte,
    externalForwardedProps: Ct,
    ownerState: Ye,
    className: ft.listbox,
    additionalProps: Yi,
    ref: Ri
  }), [Re, Je] = vn("paper", {
    elementType: bu,
    externalForwardedProps: Ct,
    ownerState: Ye,
    className: ft.paper
  }), [Bt, jt] = vn("popper", {
    elementType: lp,
    externalForwardedProps: Ct,
    ownerState: Ye,
    className: ft.popper,
    additionalProps: {
      disablePortal: F,
      style: {
        width: Wt ? Wt.clientWidth : null
      },
      role: "presentation",
      anchorEl: Wt,
      open: _r
    }
  });
  let Kt;
  if (fe && cn.length > 0) {
    const Mn = (Mo) => ({
      className: ft.tag,
      disabled: M,
      ...St(Mo)
    });
    Et ? Kt = Et(cn, Mn, Ye) : Kt = cn.map((Mo, ki) => {
      const {
        key: Qi,
        ...bi
      } = Mn({
        index: ki
      });
      return /* @__PURE__ */ $.jsx(Av, {
        label: ye(Mo),
        size: At,
        ...bi,
        ...Ct.slotProps.chip
      }, Qi);
    });
  }
  if (ie > -1 && Array.isArray(Kt)) {
    const Mn = Kt.length - ie;
    !Xo && Mn > 0 && (Kt = Kt.splice(0, ie), Kt.push(/* @__PURE__ */ $.jsx("span", {
      className: ft.tag,
      children: W(Mn)
    }, Kt.length)));
  }
  const Or = nt || ((Mn) => /* @__PURE__ */ $.jsxs("li", {
    children: [/* @__PURE__ */ $.jsx(wte, {
      className: ft.groupLabel,
      ownerState: Ye,
      component: "div",
      children: Mn.group
    }), /* @__PURE__ */ $.jsx(Ste, {
      className: ft.groupUl,
      ownerState: Ye,
      children: Mn.children
    })]
  }, Mn.key)), yn = ut || ((Mn, Mo) => {
    const {
      key: ki,
      ...Qi
    } = Mn;
    return /* @__PURE__ */ $.jsx("li", {
      ...Qi,
      children: ye(Mo)
    }, ki);
  }), Sn = (Mn, Mo) => {
    const ki = wn({
      option: Mn,
      index: Mo
    });
    return yn({
      ...ki,
      className: ft.option
    }, Mn, {
      selected: ki["aria-selected"],
      index: Mo,
      inputValue: Jo
    }, Ye);
  }, yi = Ct.slotProps.clearIndicator, Ds = Ct.slotProps.popupIndicator;
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(dte, {
      ref: n,
      className: et(ft.root, m),
      ownerState: Ye,
      ...pt(Ie),
      children: Ft({
        id: $r,
        disabled: M,
        fullWidth: !0,
        size: At === "small" ? "small" : void 0,
        InputLabelProps: zt(),
        InputProps: {
          ref: hr,
          className: ft.inputRoot,
          startAdornment: Kt,
          onMouseDown: (Mn) => {
            Mn.target === Mn.currentTarget && Ki(Mn);
          },
          ...(oo || qr) && {
            endAdornment: /* @__PURE__ */ $.jsxs(fte, {
              className: ft.endAdornment,
              ownerState: Ye,
              children: [oo ? /* @__PURE__ */ $.jsx(pte, {
                ...We(),
                "aria-label": C,
                title: C,
                ownerState: Ye,
                ...yi,
                className: et(ft.clearIndicator, yi == null ? void 0 : yi.className),
                children: g
              }) : null, qr ? /* @__PURE__ */ $.jsx(hte, {
                ...bt(),
                disabled: M,
                "aria-label": _r ? T : tt,
                title: _r ? T : tt,
                ownerState: Ye,
                ...Ds,
                className: et(ft.popupIndicator, Ds == null ? void 0 : Ds.className),
                children: wt
              }) : null]
            })
          }
        },
        inputProps: {
          className: ft.input,
          disabled: M,
          readOnly: gt,
          ...yt()
        }
      })
    }), Wt ? /* @__PURE__ */ $.jsx(mte, {
      as: Bt,
      ...jt,
      children: /* @__PURE__ */ $.jsxs(gte, {
        as: Re,
        ...Je,
        children: [he && Gr.length === 0 ? /* @__PURE__ */ $.jsx(vte, {
          className: ft.loading,
          ownerState: Ye,
          children: ge
        }) : null, Gr.length === 0 && !A && !he ? /* @__PURE__ */ $.jsx(yte, {
          className: ft.noOptions,
          ownerState: Ye,
          role: "presentation",
          onMouseDown: (Mn) => {
            Mn.preventDefault();
          },
          children: pe
        }) : null, Gr.length > 0 ? /* @__PURE__ */ $.jsx(dn, {
          as: de,
          ...De,
          children: Gr.map((Mn, Mo) => X ? Or({
            key: Mn.key,
            group: Mn.group,
            children: Mn.options.map((ki, Qi) => Sn(ki, Mn.index + Qi))
          }) : Sn(Mn, Mo))
        }) : null]
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (nD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: u.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: u.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: u.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: u.oneOfType([u.oneOf(["mouse", "touch"]), u.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ChipProps: u.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: u.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: u.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: u.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: u.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: u.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: u.shape({
    clearIndicator: u.object,
    paper: u.object,
    popper: u.object,
    popupIndicator: u.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: Na(u.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: u.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: u.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: u.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: u.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: u.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: u.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: u.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: u.oneOfType([u.oneOf(["auto"]), u.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: u.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: u.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: u.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: u.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: u.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} option The Autocomplete option.
   * @returns {string}
   */
  groupBy: u.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: u.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: u.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: u.bool,
  /**
   * The input value.
   */
  inputValue: u.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: u.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Jh,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxComponent: u.elementType,
  /**
   * Props applied to the Listbox element.
   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ListboxProps: u.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: u.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: u.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: u.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: u.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: u.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: u.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: u.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: u.func,
  /**
   * @ignore
   */
  onKeyDown: u.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: u.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: u.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: u.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperComponent: u.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: u.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: u.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: u.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: u.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: u.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: u.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: u.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: u.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["small", "medium"]), u.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    chip: u.oneOfType([u.func, u.object]),
    clearIndicator: u.oneOfType([u.func, u.object]),
    listbox: u.oneOfType([u.func, u.object]),
    paper: u.oneOfType([u.func, u.object]),
    popper: u.oneOfType([u.func, u.object]),
    popupIndicator: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    listbox: u.elementType,
    paper: u.elementType,
    popper: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: Na(u.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const Cte = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, vV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = sp(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: c,
    easing: f,
    in: m,
    onEnter: g,
    onEntered: y,
    onEntering: w,
    onExit: C,
    onExited: T,
    onExiting: E,
    style: O,
    timeout: k = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: I = yu,
    ...M
  } = t, N = x.useRef(null), P = Pr(N, ip(c), n), F = (ee) => (G) => {
    if (ee) {
      const K = N.current;
      G === void 0 ? ee(K) : ee(K, G);
    }
  }, H = F(w), U = F((ee, G) => {
    KI(ee);
    const K = Hv({
      style: O,
      timeout: k,
      easing: f
    }, {
      mode: "enter"
    });
    ee.style.webkitTransition = r.transitions.create("opacity", K), ee.style.transition = r.transitions.create("opacity", K), g && g(ee, G);
  }), z = F(y), A = F(E), q = F((ee) => {
    const G = Hv({
      style: O,
      timeout: k,
      easing: f
    }, {
      mode: "exit"
    });
    ee.style.webkitTransition = r.transitions.create("opacity", G), ee.style.transition = r.transitions.create("opacity", G), C && C(ee);
  }), W = F(T), Y = (ee) => {
    s && s(N.current, ee);
  };
  return /* @__PURE__ */ $.jsx(I, {
    appear: a,
    in: m,
    nodeRef: N,
    onEnter: U,
    onEntered: z,
    onEntering: H,
    onExit: q,
    onExited: W,
    onExiting: A,
    addEndListener: Y,
    timeout: k,
    ...M,
    children: (ee, {
      ownerState: G,
      ...K
    }) => /* @__PURE__ */ x.cloneElement(c, {
      style: {
        opacity: 0,
        visibility: ee === "exited" && !m ? "hidden" : void 0,
        ...Cte[ee],
        ...O,
        ...c.props.style
      },
      ref: P,
      ...K
    })
  });
});
process.env.NODE_ENV !== "production" && (vV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: u.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: u.bool,
  /**
   * A single child content element.
   */
  children: op.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: u.oneOfType([u.shape({
    enter: u.string,
    exit: u.string
  }), u.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: u.bool,
  /**
   * @ignore
   */
  onEnter: u.func,
  /**
   * @ignore
   */
  onEntered: u.func,
  /**
   * @ignore
   */
  onEntering: u.func,
  /**
   * @ignore
   */
  onExit: u.func,
  /**
   * @ignore
   */
  onExited: u.func,
  /**
   * @ignore
   */
  onExiting: u.func,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: u.oneOfType([u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })])
});
function xte(e) {
  return an("MuiBackdrop", e);
}
pn("MuiBackdrop", ["root", "invisible"]);
const Ete = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return mt({
    root: ["root", n && "invisible"]
  }, xte, t);
}, Tte = Ue("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), yV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: c = !1,
    open: f,
    components: m = {},
    componentsProps: g = {},
    slotProps: y = {},
    slots: w = {},
    TransitionComponent: C,
    transitionDuration: T,
    ...E
  } = r, O = {
    ...r,
    component: a,
    invisible: c
  }, k = Ete(O), I = {
    transition: C,
    root: m.Root,
    ...w
  }, M = {
    ...g,
    ...y
  }, N = {
    slots: I,
    slotProps: M
  }, [P, F] = vn("root", {
    elementType: Tte,
    externalForwardedProps: N,
    className: et(k.root, s),
    ownerState: O
  }), [H, U] = vn("transition", {
    elementType: vV,
    externalForwardedProps: N,
    ownerState: O
  });
  return /* @__PURE__ */ $.jsx(H, {
    in: f,
    timeout: T,
    ...E,
    ...U,
    children: /* @__PURE__ */ $.jsx(P, {
      "aria-hidden": !0,
      ...F,
      classes: k,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (yV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    root: u.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: u.bool,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    root: u.oneOfType([u.func, u.object]),
    transition: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    root: u.elementType,
    transition: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: u.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: u.oneOfType([u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })])
});
function _te(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: r = 99,
    showZero: o = !1
  } = e, s = $I({
    badgeContent: t,
    max: r
  });
  let a = n;
  n === !1 && t === 0 && !o && (a = !0);
  const {
    badgeContent: c,
    max: f = r
  } = a ? s : e, m = c && Number(c) > f ? `${f}+` : c;
  return {
    badgeContent: c,
    invisible: a,
    max: f,
    displayValue: m
  };
}
function Ote(e) {
  return an("MuiBadge", e);
}
const kf = pn("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), sP = 10, aP = 4, Rte = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: r,
    overlap: o,
    variant: s,
    classes: a = {}
  } = e, c = {
    root: ["root"],
    badge: ["badge", s, r && "invisible", `anchorOrigin${He(n.vertical)}${He(n.horizontal)}`, `anchorOrigin${He(n.vertical)}${He(n.horizontal)}${He(o)}`, `overlap${He(o)}`, t !== "default" && `color${He(t)}`]
  };
  return mt(c, Ote, a);
}, kte = Ue("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), Pte = Ue("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${He(n.anchorOrigin.vertical)}${He(n.anchorOrigin.horizontal)}${He(n.overlap)}`], n.color !== "default" && t[`color${He(n.color)}`], n.invisible && t.invisible];
  }
})(Zt(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: sP * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: sP * 2,
  borderRadius: sP,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(eo(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: aP,
      height: aP * 2,
      minWidth: aP * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${kf.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
})));
function xF(e) {
  return {
    vertical: (e == null ? void 0 : e.vertical) ?? "top",
    horizontal: (e == null ? void 0 : e.horizontal) ?? "right"
  };
}
const bV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: o,
    className: s,
    classes: a,
    component: c,
    components: f = {},
    componentsProps: m = {},
    children: g,
    overlap: y = "rectangular",
    color: w = "default",
    invisible: C = !1,
    max: T = 99,
    badgeContent: E,
    slots: O,
    slotProps: k,
    showZero: I = !1,
    variant: M = "standard",
    ...N
  } = r, {
    badgeContent: P,
    invisible: F,
    max: H,
    displayValue: U
  } = _te({
    max: T,
    invisible: C,
    badgeContent: E,
    showZero: I
  }), z = $I({
    anchorOrigin: xF(o),
    color: w,
    overlap: y,
    variant: M,
    badgeContent: E
  }), A = F || P == null && M !== "dot", {
    color: q = w,
    overlap: W = y,
    anchorOrigin: Y,
    variant: ee = M
  } = A ? z : r, G = xF(Y), K = ee !== "dot" ? U : void 0, X = {
    ...r,
    badgeContent: P,
    invisible: A,
    max: H,
    displayValue: K,
    showZero: I,
    anchorOrigin: G,
    color: q,
    overlap: W,
    variant: ee
  }, te = Rte(X), re = {
    slots: {
      root: (O == null ? void 0 : O.root) ?? f.Root,
      badge: (O == null ? void 0 : O.badge) ?? f.Badge
    },
    slotProps: {
      root: (k == null ? void 0 : k.root) ?? m.root,
      badge: (k == null ? void 0 : k.badge) ?? m.badge
    }
  }, [Q, B] = vn("root", {
    elementType: kte,
    externalForwardedProps: {
      ...re,
      ...N
    },
    ownerState: X,
    className: et(te.root, s),
    ref: n,
    additionalProps: {
      as: c
    }
  }), [ie, de] = vn("badge", {
    elementType: Pte,
    externalForwardedProps: re,
    ownerState: X,
    className: te.badge
  });
  return /* @__PURE__ */ $.jsxs(Q, {
    ...B,
    children: [g, /* @__PURE__ */ $.jsx(ie, {
      ...de,
      children: K
    })]
  });
});
process.env.NODE_ENV !== "production" && (bV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: u.shape({
    horizontal: u.oneOf(["left", "right"]),
    vertical: u.oneOf(["bottom", "top"])
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: u.node,
  /**
   * The badge will be added relative to this node.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: u.oneOfType([u.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Badge: u.elementType,
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    badge: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: u.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: u.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: u.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: u.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    badge: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    badge: u.elementType,
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: u.oneOfType([u.oneOf(["dot", "standard"]), u.string])
});
const Mte = pn("MuiBox", ["root"]), Ite = N_(), H_ = xX({
  themeId: pc,
  defaultTheme: Ite,
  defaultClassName: Mte.root,
  generateClassName: xH.generate
});
process.env.NODE_ENV !== "production" && (H_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: u.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Dte(e) {
  return an("MuiButton", e);
}
const Rh = pn("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), wV = /* @__PURE__ */ x.createContext({});
process.env.NODE_ENV !== "production" && (wV.displayName = "ButtonGroupContext");
const SV = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (SV.displayName = "ButtonGroupButtonContext");
const Ate = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: s,
    loading: a,
    loadingPosition: c,
    classes: f
  } = e, m = {
    root: ["root", a && "loading", s, `${s}${He(t)}`, `size${He(o)}`, `${s}Size${He(o)}`, `color${He(t)}`, n && "disableElevation", r && "fullWidth", a && `loadingPosition${He(c)}`],
    startIcon: ["icon", "startIcon", `iconSize${He(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${He(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, g = mt(m, Dte, f);
  return {
    ...f,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...g
  };
}, CV = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], Nte = Ue(sm, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${He(n.color)}`], t[`size${He(n.size)}`], t[`${n.variant}Size${He(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Rh.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Rh.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Rh.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Rh.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(eo()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : An(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Rh.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Rh.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${Rh.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), Lte = Ue("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${He(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...CV]
})), $te = Ue("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${He(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...CV]
})), jte = Ue("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), EF = Ue("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), lm = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = x.useContext(wV), o = x.useContext(SV), s = Bv(r, t), a = mn({
    props: s,
    name: "MuiButton"
  }), {
    children: c,
    color: f = "primary",
    component: m = "button",
    className: g,
    disabled: y = !1,
    disableElevation: w = !1,
    disableFocusRipple: C = !1,
    endIcon: T,
    focusVisibleClassName: E,
    fullWidth: O = !1,
    id: k,
    loading: I = null,
    loadingIndicator: M,
    loadingPosition: N = "center",
    size: P = "medium",
    startIcon: F,
    type: H,
    variant: U = "text",
    ...z
  } = a, A = pr(k), q = M ?? /* @__PURE__ */ $.jsx(fC, {
    "aria-labelledby": A,
    color: "inherit",
    size: 16
  }), W = {
    ...a,
    color: f,
    component: m,
    disabled: y,
    disableElevation: w,
    disableFocusRipple: C,
    fullWidth: O,
    loading: I,
    loadingIndicator: q,
    loadingPosition: N,
    size: P,
    type: H,
    variant: U
  }, Y = Ate(W), ee = (F || I && N === "start") && /* @__PURE__ */ $.jsx(Lte, {
    className: Y.startIcon,
    ownerState: W,
    children: F || /* @__PURE__ */ $.jsx(EF, {
      className: Y.loadingIconPlaceholder,
      ownerState: W
    })
  }), G = (T || I && N === "end") && /* @__PURE__ */ $.jsx($te, {
    className: Y.endIcon,
    ownerState: W,
    children: T || /* @__PURE__ */ $.jsx(EF, {
      className: Y.loadingIconPlaceholder,
      ownerState: W
    })
  }), K = o || "", X = typeof I == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ $.jsx("span", {
      className: Y.loadingWrapper,
      style: {
        display: "contents"
      },
      children: I && /* @__PURE__ */ $.jsx(jte, {
        className: Y.loadingIndicator,
        ownerState: W,
        children: q
      })
    })
  ) : null;
  return /* @__PURE__ */ $.jsxs(Nte, {
    ownerState: W,
    className: et(r.className, Y.root, g, K),
    component: m,
    disabled: y || I,
    focusRipple: !C,
    focusVisibleClassName: et(Y.focusVisible, E),
    ref: n,
    type: H,
    id: I ? A : k,
    ...z,
    classes: Y,
    children: [ee, N !== "end" && X, c, N === "end" && X, G]
  });
});
process.env.NODE_ENV !== "production" && (lm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: u.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: u.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: u.bool,
  /**
   * Element placed after the children.
   */
  endIcon: u.node,
  /**
   * @ignore
   */
  focusVisibleClassName: u.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: u.string,
  /**
   * @ignore
   */
  id: u.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: u.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: u.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: u.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["small", "medium", "large"]), u.string]),
  /**
   * Element placed before the children.
   */
  startIcon: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * @ignore
   */
  type: u.oneOfType([u.oneOf(["button", "reset", "submit"]), u.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: u.oneOfType([u.oneOf(["contained", "outlined", "text"]), u.string])
});
function Fte(e) {
  return an("MuiCard", e);
}
pn("MuiCard", ["root"]);
const zte = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"]
  }, Fte, t);
}, Bte = Ue(bu, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  overflow: "hidden"
}), rD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiCard"
  }), {
    className: o,
    raised: s = !1,
    ...a
  } = r, c = {
    ...r,
    raised: s
  }, f = zte(c);
  return /* @__PURE__ */ $.jsx(Bte, {
    className: et(f.root, o),
    elevation: s ? 8 : void 0,
    ref: n,
    ownerState: c,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (rD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * If `true`, the card will use raised styling.
   * @default false
   */
  raised: Na(u.bool, (e) => e.raised && e.variant === "outlined" ? new Error('MUI: Combining `raised={true}` with `variant="outlined"` has no effect.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Hte(e) {
  return an("MuiCardContent", e);
}
pn("MuiCardContent", ["root"]);
const Vte = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"]
  }, Hte, t);
}, Ute = Ue("div", {
  name: "MuiCardContent",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  padding: 16,
  "&:last-child": {
    paddingBottom: 24
  }
}), oD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiCardContent"
  }), {
    className: o,
    component: s = "div",
    ...a
  } = r, c = {
    ...r,
    component: s
  }, f = Vte(c);
  return /* @__PURE__ */ $.jsx(Ute, {
    as: s,
    className: et(f.root, o),
    ownerState: c,
    ref: n,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (oD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Wte(e) {
  return an("PrivateSwitchBase", e);
}
pn("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const Gte = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, s = {
    root: ["root", n && "checked", r && "disabled", o && `edge${He(o)}`],
    input: ["input"]
  };
  return mt(s, Wte, t);
}, qte = Ue(sm, {
  name: "MuiSwitchBase"
})({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), Kte = Ue("input", {
  name: "MuiSwitchBase",
  shouldForwardProp: Is
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), xV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: s,
    defaultChecked: a,
    disabled: c,
    disableFocusRipple: f = !1,
    edge: m = !1,
    icon: g,
    id: y,
    inputProps: w,
    inputRef: C,
    name: T,
    onBlur: E,
    onChange: O,
    onFocus: k,
    readOnly: I,
    required: M = !1,
    tabIndex: N,
    type: P,
    value: F,
    slots: H = {},
    slotProps: U = {},
    ...z
  } = t, [A, q] = Qh({
    controlled: o,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), W = Od(), Y = (he) => {
    k && k(he), W && W.onFocus && W.onFocus(he);
  }, ee = (he) => {
    E && E(he), W && W.onBlur && W.onBlur(he);
  }, G = (he) => {
    if (he.nativeEvent.defaultPrevented)
      return;
    const ge = he.target.checked;
    q(ge), O && O(he, ge);
  };
  let K = c;
  W && typeof K > "u" && (K = W.disabled);
  const X = P === "checkbox" || P === "radio", te = {
    ...t,
    checked: A,
    disabled: K,
    disableFocusRipple: f,
    edge: m
  }, re = Gte(te), Q = {
    slots: H,
    slotProps: {
      input: w,
      ...U
    }
  }, [B, ie] = vn("root", {
    ref: n,
    elementType: qte,
    className: re.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...Q,
      component: "span",
      ...z
    },
    getSlotProps: (he) => ({
      ...he,
      onFocus: (ge) => {
        var fe;
        (fe = he.onFocus) == null || fe.call(he, ge), Y(ge);
      },
      onBlur: (ge) => {
        var fe;
        (fe = he.onBlur) == null || fe.call(he, ge), ee(ge);
      }
    }),
    ownerState: te,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !f,
      disabled: K,
      role: void 0,
      tabIndex: null
    }
  }), [de, ue] = vn("input", {
    ref: C,
    elementType: Kte,
    className: re.input,
    externalForwardedProps: Q,
    getSlotProps: (he) => ({
      onChange: (ge) => {
        var fe;
        (fe = he.onChange) == null || fe.call(he, ge), G(ge);
      }
    }),
    ownerState: te,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: a,
      disabled: K,
      id: X ? y : void 0,
      name: T,
      readOnly: I,
      required: M,
      tabIndex: N,
      type: P,
      ...P === "checkbox" && F === void 0 ? {} : {
        value: F
      }
    }
  });
  return /* @__PURE__ */ $.jsxs(B, {
    ...ie,
    children: [/* @__PURE__ */ $.jsx(de, {
      ...ue
    }), A ? s : g]
  });
});
process.env.NODE_ENV !== "production" && (xV.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: u.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: u.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: u.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * @ignore
   */
  defaultChecked: u.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: u.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: u.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: u.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: u.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /*
   * @ignore
   */
  name: u.string,
  /**
   * @ignore
   */
  onBlur: u.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: u.func,
  /**
   * @ignore
   */
  onFocus: u.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: u.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: u.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    input: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.object,
  /**
   * @ignore
   */
  tabIndex: u.oneOfType([u.number, u.string]),
  /**
   * The input component prop `type`.
   */
  type: u.string.isRequired,
  /**
   * The value of the component.
   */
  value: u.any
});
const Yte = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), Xte = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), Qte = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function Jte(e) {
  return an("MuiCheckbox", e);
}
const lP = pn("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), Zte = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, s = {
    root: ["root", n && "indeterminate", `color${He(r)}`, `size${He(o)}`]
  }, a = mt(s, Jte, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, ene = Ue(xV, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${He(n.size)}`], n.color !== "default" && t[`color${He(n.color)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : An(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${lP.checked}, &.${lP.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${lP.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), tne = /* @__PURE__ */ $.jsx(Xte, {}), nne = /* @__PURE__ */ $.jsx(Yte, {}), rne = /* @__PURE__ */ $.jsx(Qte, {}), EV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = tne,
    color: s = "primary",
    icon: a = nne,
    indeterminate: c = !1,
    indeterminateIcon: f = rne,
    inputProps: m,
    size: g = "medium",
    disableRipple: y = !1,
    className: w,
    slots: C = {},
    slotProps: T = {},
    ...E
  } = r, O = c ? f : a, k = c ? f : o, I = {
    ...r,
    disableRipple: y,
    color: s,
    indeterminate: c,
    size: g
  }, M = Zte(I), N = T.input ?? m, [P, F] = vn("root", {
    ref: n,
    elementType: ene,
    className: et(M.root, w),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: C,
      slotProps: T,
      ...E
    },
    ownerState: I,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ x.cloneElement(O, {
        fontSize: O.props.fontSize ?? g
      }),
      checkedIcon: /* @__PURE__ */ x.cloneElement(k, {
        fontSize: k.props.fontSize ?? g
      }),
      disableRipple: y,
      slots: C,
      slotProps: {
        input: WI(typeof N == "function" ? N(I) : N, {
          "data-indeterminate": c
        })
      }
    }
  });
  return /* @__PURE__ */ $.jsx(P, {
    ...F,
    classes: M
  });
});
process.env.NODE_ENV !== "production" && (EV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: u.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: u.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: u.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: u.node,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: u.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: u.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: u.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: u.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: u.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    input: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: u.any
});
function TF(e) {
  return e.substring(2).toLowerCase();
}
function one(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function zS(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: s = "onTouchEnd"
  } = e, a = x.useRef(!1), c = x.useRef(null), f = x.useRef(!1), m = x.useRef(!1);
  x.useEffect(() => (setTimeout(() => {
    f.current = !0;
  }, 0), () => {
    f.current = !1;
  }), []);
  const g = Pr(ip(t), c), y = jn((T) => {
    const E = m.current;
    m.current = !1;
    const O = ho(c.current);
    if (!f.current || !c.current || "clientX" in T && one(T, O))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let k;
    T.composedPath ? k = T.composedPath().includes(c.current) : k = !O.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      T.target
    ) || c.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      T.target
    ), !k && (n || !E) && o(T);
  }), w = (T) => (E) => {
    m.current = !0;
    const O = t.props[T];
    O && O(E);
  }, C = {
    ref: g
  };
  return s !== !1 && (C[s] = w(s)), x.useEffect(() => {
    if (s !== !1) {
      const T = TF(s), E = ho(c.current), O = () => {
        a.current = !0;
      };
      return E.addEventListener(T, y), E.addEventListener("touchmove", O), () => {
        E.removeEventListener(T, y), E.removeEventListener("touchmove", O);
      };
    }
  }, [y, s]), r !== !1 && (C[r] = w(r)), x.useEffect(() => {
    if (r !== !1) {
      const T = TF(r), E = ho(c.current);
      return E.addEventListener(T, y), () => {
        E.removeEventListener(T, y);
      };
    }
  }, [y, r]), /* @__PURE__ */ x.cloneElement(t, C);
}
process.env.NODE_ENV !== "production" && (zS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: op.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: u.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: u.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: u.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: u.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (zS.propTypes = dC(zS.propTypes));
const iD = bQ({
  createStyledComponent: Ue("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${He(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => mn({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && (iD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: u.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: u.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: u.oneOfType([u.oneOf(["xs", "sm", "md", "lg", "xl", !1]), u.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const vM = typeof UI({}) == "function", ine = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), sne = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), TV = (e, t = !1) => {
  var s, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([c, f]) => {
    var g, y;
    const m = e.getColorSchemeSelector(c);
    m.startsWith("@") ? n[m] = {
      ":root": {
        colorScheme: (g = f.palette) == null ? void 0 : g.mode
      }
    } : n[m.replace(/\s*&/, "")] = {
      colorScheme: (y = f.palette) == null ? void 0 : y.mode
    };
  });
  let r = {
    html: ine(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...sne(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (a = (s = e.components) == null ? void 0 : s.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return o && (r = [r, o]), r;
}, pT = "mui-ecs", ane = (e) => {
  const t = TV(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${pT})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var a, c;
    const s = e.getColorSchemeSelector(r);
    s.startsWith("@") ? n[s] = {
      [`:root:not(:has(.${pT}))`]: {
        colorScheme: (a = o.palette) == null ? void 0 : a.mode
      }
    } : n[s.replace(/\s*&/, "")] = {
      [`&:not(:has(.${pT}))`]: {
        colorScheme: (c = o.palette) == null ? void 0 : c.mode
      }
    };
  }), t;
}, lne = UI(vM ? ({
  theme: e,
  enableColorScheme: t
}) => TV(e, t) : ({
  theme: e
}) => ane(e));
function _V(e) {
  const t = mn({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [vM && /* @__PURE__ */ $.jsx(lne, {
      enableColorScheme: r
    }), !vM && !r && /* @__PURE__ */ $.jsx("span", {
      className: pT,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (_V.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: u.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: u.bool
});
function une(e) {
  const t = ho(e);
  return t.body === e ? Cl(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function mS(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function _F(e) {
  return parseInt(Cl(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function cne(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function OF(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const c = !s.includes(a), f = !cne(a);
    c && f && mS(a, o);
  });
}
function uP(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function dne(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (une(r)) {
      const a = IH(Cl(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${_F(r) + a}px`;
      const c = ho(r).querySelectorAll(".mui-fixed");
      [].forEach.call(c, (f) => {
        n.push({
          value: f.style.paddingRight,
          property: "padding-right",
          el: f
        }), f.style.paddingRight = `${_F(f) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = ho(r).body;
    else {
      const a = r.parentElement, c = Cl(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && c.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: c
    }) => {
      s ? a.style.setProperty(c, s) : a.style.removeProperty(c);
    });
  };
}
function fne(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class pne {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && mS(t.modalRef, !1);
    const o = fne(n);
    OF(n, t.mount, t.modalRef, o, !0);
    const s = uP(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = uP(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = dne(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = uP(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && mS(t.modalRef, n), OF(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && mS(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const hne = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function mne(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function gne(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function vne(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || gne(e));
}
function yne(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(hne)).forEach((r, o) => {
    const s = mne(r);
    s === -1 || !vne(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function bne() {
  return !0;
}
function BS(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = yne,
    isEnabled: a = bne,
    open: c
  } = e, f = x.useRef(!1), m = x.useRef(null), g = x.useRef(null), y = x.useRef(null), w = x.useRef(null), C = x.useRef(!1), T = x.useRef(null), E = Pr(ip(t), T), O = x.useRef(null);
  x.useEffect(() => {
    !c || !T.current || (C.current = !n);
  }, [n, c]), x.useEffect(() => {
    if (!c || !T.current)
      return;
    const M = ho(T.current);
    return T.current.contains(M.activeElement) || (T.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), T.current.setAttribute("tabIndex", "-1")), C.current && T.current.focus()), () => {
      o || (y.current && y.current.focus && (f.current = !0, y.current.focus()), y.current = null);
    };
  }, [c]), x.useEffect(() => {
    if (!c || !T.current)
      return;
    const M = ho(T.current), N = (H) => {
      O.current = H, !(r || !a() || H.key !== "Tab") && M.activeElement === T.current && H.shiftKey && (f.current = !0, g.current && g.current.focus());
    }, P = () => {
      var z, A;
      const H = T.current;
      if (H === null)
        return;
      if (!M.hasFocus() || !a() || f.current) {
        f.current = !1;
        return;
      }
      if (H.contains(M.activeElement) || r && M.activeElement !== m.current && M.activeElement !== g.current)
        return;
      if (M.activeElement !== w.current)
        w.current = null;
      else if (w.current !== null)
        return;
      if (!C.current)
        return;
      let U = [];
      if ((M.activeElement === m.current || M.activeElement === g.current) && (U = s(T.current)), U.length > 0) {
        const q = !!((z = O.current) != null && z.shiftKey && ((A = O.current) == null ? void 0 : A.key) === "Tab"), W = U[0], Y = U[U.length - 1];
        typeof W != "string" && typeof Y != "string" && (q ? Y.focus() : W.focus());
      } else
        H.focus();
    };
    M.addEventListener("focusin", P), M.addEventListener("keydown", N, !0);
    const F = setInterval(() => {
      M.activeElement && M.activeElement.tagName === "BODY" && P();
    }, 50);
    return () => {
      clearInterval(F), M.removeEventListener("focusin", P), M.removeEventListener("keydown", N, !0);
    };
  }, [n, r, o, a, c, s]);
  const k = (M) => {
    y.current === null && (y.current = M.relatedTarget), C.current = !0, w.current = M.target;
    const N = t.props.onFocus;
    N && N(M);
  }, I = (M) => {
    y.current === null && (y.current = M.relatedTarget), C.current = !0;
  };
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx("div", {
      tabIndex: c ? 0 : -1,
      onFocus: I,
      ref: m,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ x.cloneElement(t, {
      ref: E,
      onFocus: k
    }), /* @__PURE__ */ $.jsx("div", {
      tabIndex: c ? 0 : -1,
      onFocus: I,
      ref: g,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (BS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: op,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: u.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: u.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: u.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: u.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: u.func,
  /**
   * If `true`, focus is locked.
   */
  open: u.bool.isRequired
});
process.env.NODE_ENV !== "production" && (BS.propTypes = dC(BS.propTypes));
function wne(e) {
  return typeof e == "function" ? e() : e;
}
function Sne(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const RF = () => {
}, NE = new pne();
function Cne(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: c,
    onClose: f,
    open: m,
    rootRef: g
  } = e, y = x.useRef({}), w = x.useRef(null), C = x.useRef(null), T = Pr(C, g), [E, O] = x.useState(!m), k = Sne(c);
  let I = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (I = !1);
  const M = () => ho(w.current), N = () => (y.current.modalRef = C.current, y.current.mount = w.current, y.current), P = () => {
    NE.mount(N(), {
      disableScrollLock: r
    }), C.current && (C.current.scrollTop = 0);
  }, F = jn(() => {
    const G = wne(t) || M().body;
    NE.add(N(), G), C.current && P();
  }), H = () => NE.isTopModal(N()), U = jn((G) => {
    w.current = G, G && (m && H() ? P() : C.current && mS(C.current, I));
  }), z = x.useCallback(() => {
    NE.remove(N(), I);
  }, [I]);
  x.useEffect(() => () => {
    z();
  }, [z]), x.useEffect(() => {
    m ? F() : (!k || !o) && z();
  }, [m, z, k, o, F]);
  const A = (G) => (K) => {
    var X;
    (X = G.onKeyDown) == null || X.call(G, K), !(K.key !== "Escape" || K.which === 229 || // Wait until IME is settled.
    !H()) && (n || (K.stopPropagation(), f && f(K, "escapeKeyDown")));
  }, q = (G) => (K) => {
    var X;
    (X = G.onClick) == null || X.call(G, K), K.target === K.currentTarget && f && f(K, "backdropClick");
  };
  return {
    getRootProps: (G = {}) => {
      const K = LH(e);
      delete K.onTransitionEnter, delete K.onTransitionExited;
      const X = {
        ...K,
        ...G
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...X,
        onKeyDown: A(X),
        ref: T
      };
    },
    getBackdropProps: (G = {}) => {
      const K = G;
      return {
        "aria-hidden": !0,
        ...K,
        onClick: q(K),
        open: m
      };
    },
    getTransitionProps: () => {
      const G = () => {
        O(!1), s && s();
      }, K = () => {
        O(!0), a && a(), o && z();
      };
      return {
        onEnter: Dj(G, (c == null ? void 0 : c.props.onEnter) ?? RF),
        onExited: Dj(K, (c == null ? void 0 : c.props.onExited) ?? RF)
      };
    },
    rootRef: T,
    portalRef: U,
    isTopModal: H,
    exited: E,
    hasTransition: k
  };
}
function xne(e) {
  return an("MuiModal", e);
}
pn("MuiModal", ["root", "hidden", "backdrop"]);
const Ene = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return mt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, xne, r);
}, Tne = Ue("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Zt(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), _ne = Ue(yV, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), sD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = _ne,
    BackdropProps: s,
    classes: a,
    className: c,
    closeAfterTransition: f = !1,
    children: m,
    container: g,
    component: y,
    components: w = {},
    componentsProps: C = {},
    disableAutoFocus: T = !1,
    disableEnforceFocus: E = !1,
    disableEscapeKeyDown: O = !1,
    disablePortal: k = !1,
    disableRestoreFocus: I = !1,
    disableScrollLock: M = !1,
    hideBackdrop: N = !1,
    keepMounted: P = !1,
    onBackdropClick: F,
    onClose: H,
    onTransitionEnter: U,
    onTransitionExited: z,
    open: A,
    slotProps: q = {},
    slots: W = {},
    // eslint-disable-next-line react/prop-types
    theme: Y,
    ...ee
  } = r, G = {
    ...r,
    closeAfterTransition: f,
    disableAutoFocus: T,
    disableEnforceFocus: E,
    disableEscapeKeyDown: O,
    disablePortal: k,
    disableRestoreFocus: I,
    disableScrollLock: M,
    hideBackdrop: N,
    keepMounted: P
  }, {
    getRootProps: K,
    getBackdropProps: X,
    getTransitionProps: te,
    portalRef: re,
    isTopModal: Q,
    exited: B,
    hasTransition: ie
  } = Cne({
    ...G,
    rootRef: n
  }), de = {
    ...G,
    exited: B
  }, ue = Ene(de), he = {};
  if (m.props.tabIndex === void 0 && (he.tabIndex = "-1"), ie) {
    const {
      onEnter: _e,
      onExited: ce
    } = te();
    he.onEnter = _e, he.onExited = ce;
  }
  const ge = {
    slots: {
      root: w.Root,
      backdrop: w.Backdrop,
      ...W
    },
    slotProps: {
      ...C,
      ...q
    }
  }, [fe, pe] = vn("root", {
    ref: n,
    elementType: Tne,
    externalForwardedProps: {
      ...ge,
      ...ee,
      component: y
    },
    getSlotProps: K,
    ownerState: de,
    className: et(c, ue == null ? void 0 : ue.root, !de.open && de.exited && (ue == null ? void 0 : ue.hidden))
  }), [be, we] = vn("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: ge,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (_e) => X({
      ..._e,
      onClick: (ce) => {
        F && F(ce), _e != null && _e.onClick && _e.onClick(ce);
      }
    }),
    className: et(s == null ? void 0 : s.className, ue == null ? void 0 : ue.backdrop),
    ownerState: de
  });
  return !P && !A && (!ie || B) ? null : /* @__PURE__ */ $.jsx(FS, {
    ref: re,
    container: g,
    disablePortal: k,
    children: /* @__PURE__ */ $.jsxs(fe, {
      ...pe,
      children: [!N && o ? /* @__PURE__ */ $.jsx(be, {
        ...we
      }) : null, /* @__PURE__ */ $.jsx(BS, {
        disableEnforceFocus: E,
        disableAutoFocus: T,
        disableRestoreFocus: I,
        isEnabled: Q,
        open: A,
        children: /* @__PURE__ */ x.cloneElement(m, he)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (sD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: u.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: u.object,
  /**
   * A single child content element.
   */
  children: op.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: u.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Backdrop: u.elementType,
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    backdrop: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: u.oneOfType([Sl, u.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: u.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: u.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: u.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: u.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: u.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: u.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: u.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: u.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: u.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: u.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: u.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: u.shape({
    backdrop: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: u.shape({
    backdrop: u.elementType,
    root: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function One(e) {
  return an("MuiDivider", e);
}
const kF = pn("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), Rne = (e) => {
  const {
    absolute: t,
    children: n,
    classes: r,
    flexItem: o,
    light: s,
    orientation: a,
    textAlign: c,
    variant: f
  } = e;
  return mt({
    root: ["root", t && "absolute", f, s && "light", a === "vertical" && "vertical", o && "flexItem", n && "withChildren", n && a === "vertical" && "withChildrenVertical", c === "right" && a !== "vertical" && "textAlignRight", c === "left" && a !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", a === "vertical" && "wrapperVertical"]
  }, One, r);
}, kne = Ue("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.absolute && t.absolute, t[n.variant], n.light && t.light, n.orientation === "vertical" && t.vertical, n.flexItem && t.flexItem, n.children && t.withChildren, n.children && n.orientation === "vertical" && t.withChildrenVertical, n.textAlign === "right" && n.orientation !== "vertical" && t.textAlignRight, n.textAlign === "left" && n.orientation !== "vertical" && t.textAlignLeft];
  }
})(Zt(({
  theme: e
}) => ({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin",
  variants: [{
    props: {
      absolute: !0
    },
    style: {
      position: "absolute",
      bottom: 0,
      left: 0,
      width: "100%"
    }
  }, {
    props: {
      light: !0
    },
    style: {
      borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : An(e.palette.divider, 0.08)
    }
  }, {
    props: {
      variant: "inset"
    },
    style: {
      marginLeft: 72
    }
  }, {
    props: {
      variant: "middle",
      orientation: "horizontal"
    },
    style: {
      marginLeft: e.spacing(2),
      marginRight: e.spacing(2)
    }
  }, {
    props: {
      variant: "middle",
      orientation: "vertical"
    },
    style: {
      marginTop: e.spacing(1),
      marginBottom: e.spacing(1)
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      borderBottomWidth: 0,
      borderRightWidth: "thin"
    }
  }, {
    props: {
      flexItem: !0
    },
    style: {
      alignSelf: "stretch",
      height: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.children,
    style: {
      display: "flex",
      textAlign: "center",
      border: 0,
      borderTopStyle: "solid",
      borderLeftStyle: "solid",
      "&::before, &::after": {
        content: '""',
        alignSelf: "center"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.children && t.orientation !== "vertical",
    style: {
      "&::before, &::after": {
        width: "100%",
        borderTop: `thin solid ${(e.vars || e).palette.divider}`,
        borderTopStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.orientation === "vertical" && t.children,
    style: {
      flexDirection: "column",
      "&::before, &::after": {
        height: "100%",
        borderLeft: `thin solid ${(e.vars || e).palette.divider}`,
        borderLeftStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "right" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "90%"
      },
      "&::after": {
        width: "10%"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "left" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "10%"
      },
      "&::after": {
        width: "90%"
      }
    }
  }]
}))), Pne = Ue("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.wrapper, n.orientation === "vertical" && t.wrapperVertical];
  }
})(Zt(({
  theme: e
}) => ({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      paddingTop: `calc(${e.spacing(1)} * 1.2)`,
      paddingBottom: `calc(${e.spacing(1)} * 1.2)`
    }
  }]
}))), HS = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiDivider"
  }), {
    absolute: o = !1,
    children: s,
    className: a,
    orientation: c = "horizontal",
    component: f = s || c === "vertical" ? "div" : "hr",
    flexItem: m = !1,
    light: g = !1,
    role: y = f !== "hr" ? "separator" : void 0,
    textAlign: w = "center",
    variant: C = "fullWidth",
    ...T
  } = r, E = {
    ...r,
    absolute: o,
    component: f,
    flexItem: m,
    light: g,
    orientation: c,
    role: y,
    textAlign: w,
    variant: C
  }, O = Rne(E);
  return /* @__PURE__ */ $.jsx(kne, {
    as: f,
    className: et(O.root, a),
    role: y,
    ref: n,
    ownerState: E,
    "aria-orientation": y === "separator" && (f !== "hr" || c === "vertical") ? c : void 0,
    ...T,
    children: s ? /* @__PURE__ */ $.jsx(Pne, {
      className: O.wrapper,
      ownerState: E,
      children: s
    }) : null
  });
});
HS && (HS.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (HS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: u.bool,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: u.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  light: u.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: u.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: u.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: u.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: u.oneOfType([u.oneOf(["fullWidth", "inset", "middle"]), u.string])
});
function Mne(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), s = Cl(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const m = s.getComputedStyle(t);
    a = m.getPropertyValue("-webkit-transform") || m.getPropertyValue("transform");
  }
  let c = 0, f = 0;
  if (a && a !== "none" && typeof a == "string") {
    const m = a.split("(")[1].split(")")[0].split(",");
    c = parseInt(m[4], 10), f = parseInt(m[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + c - r.left}px)` : `translateX(${s.innerWidth + c - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - c}px)` : `translateX(-${r.left + r.width - c}px)` : e === "up" ? o ? `translateY(${o.bottom + f - r.top}px)` : `translateY(${s.innerHeight + f - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - f}px)` : `translateY(-${r.top + r.height - f}px)`;
}
function OV(e) {
  return typeof e == "function" ? e() : e;
}
function LE(e, t, n) {
  const r = OV(n), o = Mne(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const RV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = sp(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: c = !0,
    children: f,
    container: m,
    direction: g = "down",
    easing: y = o,
    in: w,
    onEnter: C,
    onEntered: T,
    onEntering: E,
    onExit: O,
    onExited: k,
    onExiting: I,
    style: M,
    timeout: N = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: P = yu,
    ...F
  } = t, H = x.useRef(null), U = Pr(ip(f), H, n), z = (te) => (re) => {
    te && (re === void 0 ? te(H.current) : te(H.current, re));
  }, A = z((te, re) => {
    LE(g, te, m), KI(te), C && C(te, re);
  }), q = z((te, re) => {
    const Q = Hv({
      timeout: N,
      style: M,
      easing: y
    }, {
      mode: "enter"
    });
    te.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...Q
    }), te.style.transition = r.transitions.create("transform", {
      ...Q
    }), te.style.webkitTransform = "none", te.style.transform = "none", E && E(te, re);
  }), W = z(T), Y = z(I), ee = z((te) => {
    const re = Hv({
      timeout: N,
      style: M,
      easing: y
    }, {
      mode: "exit"
    });
    te.style.webkitTransition = r.transitions.create("-webkit-transform", re), te.style.transition = r.transitions.create("transform", re), LE(g, te, m), O && O(te);
  }), G = z((te) => {
    te.style.webkitTransition = "", te.style.transition = "", k && k(te);
  }), K = (te) => {
    a && a(H.current, te);
  }, X = x.useCallback(() => {
    H.current && LE(g, H.current, m);
  }, [g, m]);
  return x.useEffect(() => {
    if (w || g === "down" || g === "right")
      return;
    const te = NI(() => {
      H.current && LE(g, H.current, m);
    }), re = Cl(H.current);
    return re.addEventListener("resize", te), () => {
      te.clear(), re.removeEventListener("resize", te);
    };
  }, [g, w, m]), x.useEffect(() => {
    w || X();
  }, [w, X]), /* @__PURE__ */ $.jsx(P, {
    nodeRef: H,
    onEnter: A,
    onEntered: W,
    onEntering: q,
    onExit: ee,
    onExited: G,
    onExiting: Y,
    addEndListener: K,
    appear: c,
    in: w,
    timeout: N,
    ...F,
    children: (te, {
      ownerState: re,
      ...Q
    }) => /* @__PURE__ */ x.cloneElement(f, {
      ref: U,
      style: {
        visibility: te === "exited" && !w ? "hidden" : void 0,
        ...M,
        ...f.props.style
      },
      ...Q
    })
  });
});
process.env.NODE_ENV !== "production" && (RV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: u.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: u.bool,
  /**
   * A single child content element.
   */
  children: op.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Na(u.oneOfType([Sl, u.func]), (e) => {
    if (e.open) {
      const t = OV(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: u.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: u.oneOfType([u.shape({
    enter: u.string,
    exit: u.string
  }), u.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: u.bool,
  /**
   * @ignore
   */
  onEnter: u.func,
  /**
   * @ignore
   */
  onEntered: u.func,
  /**
   * @ignore
   */
  onEntering: u.func,
  /**
   * @ignore
   */
  onExit: u.func,
  /**
   * @ignore
   */
  onExited: u.func,
  /**
   * @ignore
   */
  onExiting: u.func,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: u.oneOfType([u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })])
});
function Ine(e) {
  return an("MuiDrawer", e);
}
pn("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const kV = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, Dne = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${He(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${He(n)}`, r !== "temporary" && `paperAnchorDocked${He(n)}`]
  };
  return mt(o, Ine, t);
}, Ane = Ue(sD, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: kV
})(Zt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), Nne = Ue("div", {
  shouldForwardProp: Is,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: kV
})({
  flex: "0 0 auto"
}), Lne = Ue(bu, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${He(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${He(n.anchor)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), PV = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function $ne(e) {
  return ["left", "right"].includes(e);
}
function jne({
  direction: e
}, t) {
  return e === "rtl" && $ne(t) ? PV[t] : t;
}
const MV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiDrawer"
  }), o = sp(), s = cy(), a = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: c = "left",
    BackdropProps: f,
    children: m,
    className: g,
    elevation: y = 16,
    hideBackdrop: w = !1,
    ModalProps: {
      BackdropProps: C,
      ...T
    } = {},
    onClose: E,
    open: O = !1,
    PaperProps: k = {},
    SlideProps: I,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: M,
    transitionDuration: N = a,
    variant: P = "temporary",
    slots: F = {},
    slotProps: H = {},
    ...U
  } = r, z = x.useRef(!1);
  x.useEffect(() => {
    z.current = !0;
  }, []);
  const A = jne({
    direction: s ? "rtl" : "ltr"
  }, c), W = {
    ...r,
    anchor: c,
    elevation: y,
    open: O,
    variant: P,
    ...U
  }, Y = Dne(W), ee = {
    slots: {
      transition: M,
      ...F
    },
    slotProps: {
      paper: k,
      transition: I,
      ...H,
      backdrop: WI(H.backdrop || {
        ...f,
        ...C
      }, {
        transitionDuration: N
      })
    }
  }, [G, K] = vn("root", {
    ref: n,
    elementType: Ane,
    className: et(Y.root, Y.modal, g),
    shouldForwardComponentProp: !0,
    ownerState: W,
    externalForwardedProps: {
      ...ee,
      ...U,
      ...T
    },
    additionalProps: {
      open: O,
      onClose: E,
      hideBackdrop: w,
      slots: {
        backdrop: ee.slots.backdrop
      },
      slotProps: {
        backdrop: ee.slotProps.backdrop
      }
    }
  }), [X, te] = vn("paper", {
    elementType: Lne,
    shouldForwardComponentProp: !0,
    className: et(Y.paper, k.className),
    ownerState: W,
    externalForwardedProps: ee,
    additionalProps: {
      elevation: P === "temporary" ? y : 0,
      square: !0
    }
  }), [re, Q] = vn("docked", {
    elementType: Nne,
    ref: n,
    className: et(Y.root, Y.docked, g),
    ownerState: W,
    externalForwardedProps: ee,
    additionalProps: U
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [B, ie] = vn("transition", {
    elementType: RV,
    ownerState: W,
    externalForwardedProps: ee,
    additionalProps: {
      in: O,
      direction: PV[A],
      timeout: N,
      appear: z.current
    }
  }), de = /* @__PURE__ */ $.jsx(X, {
    ...te,
    children: m
  });
  if (P === "permanent")
    return /* @__PURE__ */ $.jsx(re, {
      ...Q,
      children: de
    });
  const ue = /* @__PURE__ */ $.jsx(B, {
    ...ie,
    children: de
  });
  return P === "persistent" ? /* @__PURE__ */ $.jsx(re, {
    ...Q,
    children: ue
  }) : /* @__PURE__ */ $.jsx(G, {
    ...K,
    children: ue
  });
});
process.env.NODE_ENV !== "production" && (MV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: u.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: u.object,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Jh,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: u.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: u.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: u.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: u.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: u.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: u.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    backdrop: u.oneOfType([u.func, u.object]),
    docked: u.oneOfType([u.func, u.object]),
    paper: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object]),
    transition: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    backdrop: u.elementType,
    docked: u.elementType,
    paper: u.elementType,
    root: u.elementType,
    transition: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: u.oneOfType([u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: u.oneOf(["permanent", "persistent", "temporary"])
});
const Fne = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: s,
    hiddenLabel: a,
    multiline: c
  } = e, f = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", s === "small" && `size${He(s)}`, a && "hiddenLabel", c && "multiline"],
    input: ["input"]
  }, m = mt(f, lte, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...m
  };
}, zne = Ue(z_, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...j_(e, t), !n.disableUnderline && t.underline];
  }
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${Oa.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${Oa.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Oa.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Oa.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Oa.disabled}, .${Oa.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Oa.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(eo()).map(([a]) => {
      var c;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(c = (e.vars || e).palette[a]) == null ? void 0 : c.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: c
      }) => a.multiline && c === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), Bne = Ue(B_, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: F_
})(Zt(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), V_ = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: c = !1,
    hiddenLabel: f,
    // declare here to prevent spreading to DOM
    inputComponent: m = "input",
    multiline: g = !1,
    slotProps: y,
    slots: w = {},
    type: C = "text",
    ...T
  } = r, E = {
    ...r,
    disableUnderline: o,
    fullWidth: c,
    inputComponent: m,
    multiline: g,
    type: C
  }, O = Fne(r), k = {
    root: {
      ownerState: E
    },
    input: {
      ownerState: E
    }
  }, I = y ?? a ? Oi(k, y ?? a) : k, M = w.root ?? s.Root ?? zne, N = w.input ?? s.Input ?? Bne;
  return /* @__PURE__ */ $.jsx(hm, {
    slots: {
      root: M,
      input: N
    },
    slotProps: I,
    fullWidth: c,
    inputComponent: m,
    multiline: g,
    ref: n,
    type: C,
    ...T,
    classes: O
  });
});
process.env.NODE_ENV !== "production" && (V_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: u.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary"]), u.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Input: u.elementType,
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: u.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: u.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: u.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: u.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: u.bool,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: u.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: u.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: u.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: u.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: u.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: u.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: u.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: u.oneOfType([u.number, u.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    root: u.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: u.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: u.any
});
V_.muiName = "Input";
function Hne(e) {
  return an("MuiFormControl", e);
}
pn("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const Vne = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${He(n)}`, r && "fullWidth"]
  };
  return mt(o, Hne, t);
}, Une = Ue("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${He(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), U_ = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: s,
    color: a = "primary",
    component: c = "div",
    disabled: f = !1,
    error: m = !1,
    focused: g,
    fullWidth: y = !1,
    hiddenLabel: w = !1,
    margin: C = "none",
    required: T = !1,
    size: E = "medium",
    variant: O = "outlined",
    ...k
  } = r, I = {
    ...r,
    color: a,
    component: c,
    disabled: f,
    error: m,
    fullWidth: y,
    hiddenLabel: w,
    margin: C,
    required: T,
    size: E,
    variant: O
  }, M = Vne(I), [N, P] = x.useState(() => {
    let K = !1;
    return o && x.Children.forEach(o, (X) => {
      if (!dT(X, ["Input", "Select"]))
        return;
      const te = dT(X, ["Select"]) ? X.props.input : X;
      te && rte(te.props) && (K = !0);
    }), K;
  }), [F, H] = x.useState(() => {
    let K = !1;
    return o && x.Children.forEach(o, (X) => {
      dT(X, ["Input", "Select"]) && ($T(X.props, !0) || $T(X.props.inputProps, !0)) && (K = !0);
    }), K;
  }), [U, z] = x.useState(!1);
  f && U && z(!1);
  const A = g !== void 0 && !f ? g : U;
  let q;
  const W = x.useRef(!1);
  process.env.NODE_ENV !== "production" && (q = () => (W.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), W.current = !0, () => {
    W.current = !1;
  }));
  const Y = x.useCallback(() => {
    H(!0);
  }, []), ee = x.useCallback(() => {
    H(!1);
  }, []), G = x.useMemo(() => ({
    adornedStart: N,
    setAdornedStart: P,
    color: a,
    disabled: f,
    error: m,
    filled: F,
    focused: A,
    fullWidth: y,
    hiddenLabel: w,
    size: E,
    onBlur: () => {
      z(!1);
    },
    onFocus: () => {
      z(!0);
    },
    onEmpty: ee,
    onFilled: Y,
    registerEffect: q,
    required: T,
    variant: O
  }), [N, a, f, m, F, A, y, w, q, ee, Y, T, E, O]);
  return /* @__PURE__ */ $.jsx(mC.Provider, {
    value: G,
    children: /* @__PURE__ */ $.jsx(Une, {
      as: c,
      ownerState: I,
      className: et(M.root, s),
      ref: n,
      ...k,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (U_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: u.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: u.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: u.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: u.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: u.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: u.oneOf(["filled", "outlined", "standard"])
});
function Wne(e) {
  return an("MuiFormControlLabel", e);
}
const nS = pn("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), Gne = (e) => {
  const {
    classes: t,
    disabled: n,
    labelPlacement: r,
    error: o,
    required: s
  } = e, a = {
    root: ["root", n && "disabled", `labelPlacement${He(r)}`, o && "error", s && "required"],
    label: ["label", n && "disabled"],
    asterisk: ["asterisk", o && "error"]
  };
  return mt(a, Wne, t);
}, qne = Ue("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${nS.label}`]: t.label
    }, t.root, t[`labelPlacement${He(n.labelPlacement)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${nS.disabled}`]: {
    cursor: "default"
  },
  [`& .${nS.label}`]: {
    [`&.${nS.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  },
  variants: [{
    props: {
      labelPlacement: "start"
    },
    style: {
      flexDirection: "row-reverse",
      marginRight: -11
    }
  }, {
    props: {
      labelPlacement: "top"
    },
    style: {
      flexDirection: "column-reverse"
    }
  }, {
    props: {
      labelPlacement: "bottom"
    },
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      labelPlacement: t
    }) => t === "start" || t === "top" || t === "bottom",
    style: {
      marginLeft: 16
      // used for row presentation of radio/checkbox
    }
  }]
}))), Kne = Ue("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(Zt(({
  theme: e
}) => ({
  [`&.${nS.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), yM = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiFormControlLabel"
  }), {
    checked: o,
    className: s,
    componentsProps: a = {},
    control: c,
    disabled: f,
    disableTypography: m,
    inputRef: g,
    label: y,
    labelPlacement: w = "end",
    name: C,
    onChange: T,
    required: E,
    slots: O = {},
    slotProps: k = {},
    value: I,
    ...M
  } = r, N = Od(), P = f ?? c.props.disabled ?? (N == null ? void 0 : N.disabled), F = E ?? c.props.required, H = {
    disabled: P,
    required: F
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((G) => {
    typeof c.props[G] > "u" && typeof r[G] < "u" && (H[G] = r[G]);
  });
  const U = pm({
    props: r,
    muiFormControl: N,
    states: ["error"]
  }), z = {
    ...r,
    disabled: P,
    labelPlacement: w,
    required: F,
    error: U.error
  }, A = Gne(z), q = {
    slots: O,
    slotProps: {
      ...a,
      ...k
    }
  }, [W, Y] = vn("typography", {
    elementType: Po,
    externalForwardedProps: q,
    ownerState: z
  });
  let ee = y;
  return ee != null && ee.type !== Po && !m && (ee = /* @__PURE__ */ $.jsx(W, {
    component: "span",
    ...Y,
    className: et(A.label, Y == null ? void 0 : Y.className),
    children: ee
  })), /* @__PURE__ */ $.jsxs(qne, {
    className: et(A.root, s),
    ownerState: z,
    ref: n,
    ...M,
    children: [/* @__PURE__ */ x.cloneElement(c, H), F ? /* @__PURE__ */ $.jsxs("div", {
      children: [ee, /* @__PURE__ */ $.jsxs(Kne, {
        ownerState: z,
        "aria-hidden": !0,
        className: A.asterisk,
        children: [" ", "*"]
      })]
    }) : ee]
  });
});
process.env.NODE_ENV !== "production" && (yM.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The props used for each slot inside.
   * @default {}
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: u.shape({
    typography: u.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: u.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: u.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: u.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: u.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: u.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: u.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: u.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: u.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    typography: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    typography: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The value of the component.
   */
  value: u.any
});
function Yne(e) {
  return an("MuiFormHelperText", e);
}
const PF = pn("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var MF;
const Xne = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: s,
    filled: a,
    focused: c,
    required: f
  } = e, m = {
    root: ["root", o && "disabled", s && "error", r && `size${He(r)}`, n && "contained", c && "focused", a && "filled", f && "required"]
  };
  return mt(m, Yne, t);
}, Qne = Ue("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${He(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(Zt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${PF.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${PF.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), IV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: s,
    component: a = "p",
    disabled: c,
    error: f,
    filled: m,
    focused: g,
    margin: y,
    required: w,
    variant: C,
    ...T
  } = r, E = Od(), O = pm({
    props: r,
    muiFormControl: E,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), k = {
    ...r,
    component: a,
    contained: O.variant === "filled" || O.variant === "outlined",
    variant: O.variant,
    size: O.size,
    disabled: O.disabled,
    error: O.error,
    filled: O.filled,
    focused: O.focused,
    required: O.required
  };
  delete k.ownerState;
  const I = Xne(k);
  return /* @__PURE__ */ $.jsx(Qne, {
    as: a,
    className: et(I.root, s),
    ref: n,
    ...T,
    ownerState: k,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      MF || (MF = /* @__PURE__ */ $.jsx("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (IV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: u.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: u.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: u.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: u.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: u.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   */
  variant: u.oneOfType([u.oneOf(["filled", "outlined", "standard"]), u.string])
});
function Jne(e) {
  return an("MuiFormLabel", e);
}
const gS = pn("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), Zne = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: s,
    filled: a,
    required: c
  } = e, f = {
    root: ["root", `color${He(n)}`, o && "disabled", s && "error", a && "filled", r && "focused", c && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return mt(f, Jne, t);
}, ere = Ue("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(Zt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${gS.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${gS.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${gS.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), tre = Ue("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(Zt(({
  theme: e
}) => ({
  [`&.${gS.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), DV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: s,
    color: a,
    component: c = "label",
    disabled: f,
    error: m,
    filled: g,
    focused: y,
    required: w,
    ...C
  } = r, T = Od(), E = pm({
    props: r,
    muiFormControl: T,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), O = {
    ...r,
    color: E.color || "primary",
    component: c,
    disabled: E.disabled,
    error: E.error,
    filled: E.filled,
    focused: E.focused,
    required: E.required
  }, k = Zne(O);
  return /* @__PURE__ */ $.jsxs(ere, {
    as: c,
    ownerState: O,
    className: et(k.root, s),
    ref: n,
    ...C,
    children: [o, E.required && /* @__PURE__ */ $.jsxs(tre, {
      ownerState: O,
      "aria-hidden": !0,
      className: k.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (DV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: u.oneOfType([u.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), u.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: u.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: u.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: u.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: u.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const jT = LQ({
  createStyledComponent: Ue("div", {
    name: "MuiGrid2",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, n.container && t.container];
    }
  }),
  componentName: "MuiGrid2",
  useThemeProps: (e) => mn({
    props: e,
    name: "MuiGrid2"
  }),
  useTheme: sp
});
process.env.NODE_ENV !== "production" && (jT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * The number of columns.
   * @default 12
   */
  columns: u.oneOfType([u.arrayOf(u.number), u.number, u.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: u.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: u.oneOfType([u.oneOf(["column-reverse", "column", "row-reverse", "row"]), u.arrayOf(u.oneOf(["column-reverse", "column", "row-reverse", "row"])), u.object]),
  /**
   * Defines the offset value for the type `item` components.
   */
  offset: u.oneOfType([u.string, u.number, u.arrayOf(u.oneOfType([u.string, u.number])), u.object]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
  /**
   * Defines the size of the the type `item` components.
   */
  size: u.oneOfType([u.string, u.bool, u.number, u.arrayOf(u.oneOfType([u.string, u.bool, u.number])), u.object]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
  /**
   * @ignore
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * @internal
   * The level of the grid starts from `0` and increases when the grid nests
   * inside another grid. Nesting is defined as a container Grid being a direct
   * child of a container Grid.
   *
   * ```js
   * <Grid container> // level 0
   *   <Grid container> // level 1
   *     <Grid container> // level 2
   * ```
   *
   * Only consecutive grid is considered nesting. A grid container will start at
   * `0` if there are non-Grid container element above it.
   *
   * ```js
   * <Grid container> // level 0
   *   <div>
   *     <Grid container> // level 0
   * ```
   *
   * ```js
   * <Grid container> // level 0
   *   <Grid>
   *     <Grid container> // level 0
   * ```
   */
  unstable_level: u.number,
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: u.oneOf(["nowrap", "wrap-reverse", "wrap"])
});
if (process.env.NODE_ENV !== "production") {
  const e = jT, t = HX("Grid2", e);
  e.propTypes = {
    // eslint-disable-next-line react/forbid-foreign-prop-types
    ...e.propTypes,
    direction: t("container"),
    spacing: t("container"),
    wrap: t("container")
  };
}
function bM(e) {
  return `scale(${e}, ${e ** 2})`;
}
const nre = {
  entering: {
    opacity: 1,
    transform: bM(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, cP = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), qv = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: c,
    onEnter: f,
    onEntered: m,
    onEntering: g,
    onExit: y,
    onExited: w,
    onExiting: C,
    style: T,
    timeout: E = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: O = yu,
    ...k
  } = t, I = Ma(), M = x.useRef(), N = sp(), P = x.useRef(null), F = Pr(P, ip(s), n), H = (G) => (K) => {
    if (G) {
      const X = P.current;
      K === void 0 ? G(X) : G(X, K);
    }
  }, U = H(g), z = H((G, K) => {
    KI(G);
    const {
      duration: X,
      delay: te,
      easing: re
    } = Hv({
      style: T,
      timeout: E,
      easing: a
    }, {
      mode: "enter"
    });
    let Q;
    E === "auto" ? (Q = N.transitions.getAutoHeightDuration(G.clientHeight), M.current = Q) : Q = X, G.style.transition = [N.transitions.create("opacity", {
      duration: Q,
      delay: te
    }), N.transitions.create("transform", {
      duration: cP ? Q : Q * 0.666,
      delay: te,
      easing: re
    })].join(","), f && f(G, K);
  }), A = H(m), q = H(C), W = H((G) => {
    const {
      duration: K,
      delay: X,
      easing: te
    } = Hv({
      style: T,
      timeout: E,
      easing: a
    }, {
      mode: "exit"
    });
    let re;
    E === "auto" ? (re = N.transitions.getAutoHeightDuration(G.clientHeight), M.current = re) : re = K, G.style.transition = [N.transitions.create("opacity", {
      duration: re,
      delay: X
    }), N.transitions.create("transform", {
      duration: cP ? re : re * 0.666,
      delay: cP ? X : X || re * 0.333,
      easing: te
    })].join(","), G.style.opacity = 0, G.style.transform = bM(0.75), y && y(G);
  }), Y = H(w), ee = (G) => {
    E === "auto" && I.start(M.current || 0, G), r && r(P.current, G);
  };
  return /* @__PURE__ */ $.jsx(O, {
    appear: o,
    in: c,
    nodeRef: P,
    onEnter: z,
    onEntered: A,
    onEntering: U,
    onExit: W,
    onExited: Y,
    onExiting: q,
    addEndListener: ee,
    timeout: E === "auto" ? null : E,
    ...k,
    children: (G, {
      ownerState: K,
      ...X
    }) => /* @__PURE__ */ x.cloneElement(s, {
      style: {
        opacity: 0,
        transform: bM(0.75),
        visibility: G === "exited" && !c ? "hidden" : void 0,
        ...nre[G],
        ...T,
        ...s.props.style
      },
      ref: F,
      ...X
    })
  });
});
process.env.NODE_ENV !== "production" && (qv.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: u.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: u.bool,
  /**
   * A single child content element.
   */
  children: op.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: u.oneOfType([u.shape({
    enter: u.string,
    exit: u.string
  }), u.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: u.bool,
  /**
   * @ignore
   */
  onEnter: u.func,
  /**
   * @ignore
   */
  onEntered: u.func,
  /**
   * @ignore
   */
  onEntering: u.func,
  /**
   * @ignore
   */
  onExit: u.func,
  /**
   * @ignore
   */
  onExited: u.func,
  /**
   * @ignore
   */
  onExiting: u.func,
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: u.oneOfType([u.oneOf(["auto"]), u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })])
});
qv && (qv.muiSupportAuto = !0);
const rre = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = mt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, ste, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, ore = Ue(z_, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...j_(e, t), !n.disableUnderline && t.underline];
  }
})(Zt(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Nf.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Nf.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Nf.disabled}, .${Nf.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Nf.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(eo()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), ire = Ue(B_, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: F_
})({}), W_ = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: c = !1,
    inputComponent: f = "input",
    multiline: m = !1,
    slotProps: g,
    slots: y = {},
    type: w = "text",
    ...C
  } = r, T = rre(r), O = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, k = g ?? a ? Oi(g ?? a, O) : O, I = y.root ?? s.Root ?? ore, M = y.input ?? s.Input ?? ire;
  return /* @__PURE__ */ $.jsx(hm, {
    slots: {
      root: I,
      input: M
    },
    slotProps: k,
    fullWidth: c,
    inputComponent: f,
    multiline: m,
    ref: n,
    type: w,
    ...C,
    classes: T
  });
});
process.env.NODE_ENV !== "production" && (W_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: u.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary"]), u.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Input: u.elementType,
    Root: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: u.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: u.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: u.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: u.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: u.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: u.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: u.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: u.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: u.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: u.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: u.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: u.oneOfType([u.number, u.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: u.shape({
    input: u.object,
    root: u.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    root: u.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: u.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: u.any
});
W_.muiName = "Input";
function sre(e) {
  return an("MuiInputAdornment", e);
}
const IF = pn("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var DF;
const are = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, t[`position${He(n.position)}`], n.disablePointerEvents === !0 && t.disablePointerEvents, t[n.variant]];
}, lre = (e) => {
  const {
    classes: t,
    disablePointerEvents: n,
    hiddenLabel: r,
    position: o,
    size: s,
    variant: a
  } = e, c = {
    root: ["root", n && "disablePointerEvents", o && `position${He(o)}`, a, r && "hiddenLabel", s && `size${He(s)}`]
  };
  return mt(c, sre, t);
}, ure = Ue("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: are
})(Zt(({
  theme: e
}) => ({
  display: "flex",
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active,
  variants: [{
    props: {
      variant: "filled"
    },
    style: {
      [`&.${IF.positionStart}&:not(.${IF.hiddenLabel})`]: {
        marginTop: 16
      }
    }
  }, {
    props: {
      position: "start"
    },
    style: {
      marginRight: 8
    }
  }, {
    props: {
      position: "end"
    },
    style: {
      marginLeft: 8
    }
  }, {
    props: {
      disablePointerEvents: !0
    },
    style: {
      pointerEvents: "none"
    }
  }]
}))), aD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiInputAdornment"
  }), {
    children: o,
    className: s,
    component: a = "div",
    disablePointerEvents: c = !1,
    disableTypography: f = !1,
    position: m,
    variant: g,
    ...y
  } = r, w = Od() || {};
  let C = g;
  g && w.variant && process.env.NODE_ENV !== "production" && g === w.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), w && !C && (C = w.variant);
  const T = {
    ...r,
    hiddenLabel: w.hiddenLabel,
    size: w.size,
    disablePointerEvents: c,
    position: m,
    variant: C
  }, E = lre(T);
  return /* @__PURE__ */ $.jsx(mC.Provider, {
    value: null,
    children: /* @__PURE__ */ $.jsx(ure, {
      as: a,
      ownerState: T,
      className: et(E.root, s),
      ref: n,
      ...y,
      children: typeof o == "string" && !f ? /* @__PURE__ */ $.jsx(Po, {
        color: "textSecondary",
        children: o
      }) : /* @__PURE__ */ $.jsxs(x.Fragment, {
        children: [m === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          DF || (DF = /* @__PURE__ */ $.jsx("span", {
            className: "notranslate",
            "aria-hidden": !0,
            children: "​"
          }))
        ) : null, o]
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (aD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: u.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: u.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: u.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: u.oneOf(["filled", "outlined", "standard"])
});
function cre(e) {
  return an("MuiInputLabel", e);
}
pn("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const dre = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: s,
    variant: a,
    required: c
  } = e, f = {
    root: ["root", n && "formControl", !s && "animated", o && "shrink", r && r !== "normal" && `size${He(r)}`, a],
    asterisk: [c && "asterisk"]
  }, m = mt(f, cre, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...m
  };
}, fre = Ue(DV, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${gS.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(Zt(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), G_ = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: s,
    shrink: a,
    variant: c,
    className: f,
    ...m
  } = r, g = Od();
  let y = a;
  typeof y > "u" && g && (y = g.filled || g.focused || g.adornedStart);
  const w = pm({
    props: r,
    muiFormControl: g,
    states: ["size", "variant", "required", "focused"]
  }), C = {
    ...r,
    disableAnimation: o,
    formControl: g,
    shrink: y,
    size: w.size,
    variant: w.variant,
    required: w.required,
    focused: w.focused
  }, T = dre(C);
  return /* @__PURE__ */ $.jsx(fre, {
    "data-shrink": y,
    ref: n,
    className: et(T.root, f),
    ...m,
    ownerState: C,
    classes: T
  });
});
process.env.NODE_ENV !== "production" && (G_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: u.oneOfType([u.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), u.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: u.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: u.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: u.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: u.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: u.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: u.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: u.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: u.oneOfType([u.oneOf(["normal", "small"]), u.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   */
  variant: u.oneOf(["filled", "outlined", "standard"])
});
function pre(e) {
  return an("MuiLinearProgress", e);
}
pn("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "bar1", "bar2", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const wM = 4, SM = Cc`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, hre = typeof SM != "string" ? np`
        animation: ${SM} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, CM = Cc`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, mre = typeof CM != "string" ? np`
        animation: ${CM} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, xM = Cc`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, gre = typeof xM != "string" ? np`
        animation: ${xM} 3s infinite linear;
      ` : null, vre = (e) => {
  const {
    classes: t,
    variant: n,
    color: r
  } = e, o = {
    root: ["root", `color${He(r)}`, n],
    dashed: ["dashed", `dashedColor${He(r)}`],
    bar1: ["bar", "bar1", `barColor${He(r)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", "bar2", n !== "buffer" && `barColor${He(r)}`, n === "buffer" && `color${He(r)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return mt(o, pre, t);
}, lD = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? Qf(e.palette[t].main, 0.62) : Xf(e.palette[t].main, 0.5), yre = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${He(n.color)}`], t[n.variant]];
  }
})(Zt(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: lD(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), bre = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${He(n.color)}`]];
  }
})(Zt(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => {
    const n = lD(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), gre || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${xM} 3s infinite linear`
}), wre = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar1, t[`barColor${He(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(Zt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${wM}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${wM}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: hre || {
      animation: `${SM} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), Sre = Ue("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t.bar2, t[`barColor${He(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(Zt(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color === "inherit",
    style: {
      backgroundColor: "currentColor"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(eo()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: lD(e, t),
      transition: `transform .${wM}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: mre || {
      animation: `${CM} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), AV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: o,
    color: s = "primary",
    value: a,
    valueBuffer: c,
    variant: f = "indeterminate",
    ...m
  } = r, g = {
    ...r,
    color: s,
    variant: f
  }, y = vre(g), w = cy(), C = {}, T = {
    bar1: {},
    bar2: {}
  };
  if (f === "determinate" || f === "buffer")
    if (a !== void 0) {
      C["aria-valuenow"] = Math.round(a), C["aria-valuemin"] = 0, C["aria-valuemax"] = 100;
      let E = a - 100;
      w && (E = -E), T.bar1.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (f === "buffer")
    if (c !== void 0) {
      let E = (c || 0) - 100;
      w && (E = -E), T.bar2.transform = `translateX(${E}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ $.jsxs(yre, {
    className: et(y.root, o),
    ownerState: g,
    role: "progressbar",
    ...C,
    ref: n,
    ...m,
    children: [f === "buffer" ? /* @__PURE__ */ $.jsx(bre, {
      className: y.dashed,
      ownerState: g
    }) : null, /* @__PURE__ */ $.jsx(wre, {
      className: y.bar1,
      ownerState: g,
      style: T.bar1
    }), f === "determinate" ? null : /* @__PURE__ */ $.jsx(Sre, {
      className: y.bar2,
      ownerState: g,
      style: T.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (AV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["inherit", "primary", "secondary"]), u.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: u.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: u.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: u.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const Kv = /* @__PURE__ */ x.createContext({});
process.env.NODE_ENV !== "production" && (Kv.displayName = "ListContext");
function Cre(e) {
  return an("MuiList", e);
}
pn("MuiList", ["root", "padding", "dense", "subheader"]);
const xre = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return mt({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, Cre, t);
}, Ere = Ue("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), NV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: s,
    component: a = "ul",
    dense: c = !1,
    disablePadding: f = !1,
    subheader: m,
    ...g
  } = r, y = x.useMemo(() => ({
    dense: c
  }), [c]), w = {
    ...r,
    component: a,
    dense: c,
    disablePadding: f
  }, C = xre(w);
  return /* @__PURE__ */ $.jsx(Kv.Provider, {
    value: y,
    children: /* @__PURE__ */ $.jsxs(Ere, {
      as: a,
      className: et(C.root, s),
      ref: n,
      ownerState: w,
      ...g,
      children: [m, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (NV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: u.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: u.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Tre(e) {
  return an("MuiListItemIcon", e);
}
const AF = pn("MuiListItemIcon", ["root", "alignItemsFlexStart"]), _re = (e) => {
  const {
    alignItems: t,
    classes: n
  } = e;
  return mt({
    root: ["root", t === "flex-start" && "alignItemsFlexStart"]
  }, Tre, n);
}, Ore = Ue("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.alignItems === "flex-start" && t.alignItemsFlexStart];
  }
})(Zt(({
  theme: e
}) => ({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex",
  variants: [{
    props: {
      alignItems: "flex-start"
    },
    style: {
      marginTop: 8
    }
  }]
}))), em = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiListItemIcon"
  }), {
    className: o,
    ...s
  } = r, a = x.useContext(Kv), c = {
    ...r,
    alignItems: a.alignItems
  }, f = _re(c);
  return /* @__PURE__ */ $.jsx(Ore, {
    className: et(f.root, o),
    ownerState: c,
    ref: n,
    ...s
  });
});
process.env.NODE_ENV !== "production" && (em.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Rre(e) {
  return an("MuiListItemText", e);
}
const Tv = pn("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]), kre = (e) => {
  const {
    classes: t,
    inset: n,
    primary: r,
    secondary: o,
    dense: s
  } = e;
  return mt({
    root: ["root", n && "inset", s && "dense", r && o && "multiline"],
    primary: ["primary"],
    secondary: ["secondary"]
  }, Rre, t);
}, Pre = Ue("div", {
  name: "MuiListItemText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Tv.primary}`]: t.primary
    }, {
      [`& .${Tv.secondary}`]: t.secondary
    }, t.root, n.inset && t.inset, n.primary && n.secondary && t.multiline, n.dense && t.dense];
  }
})({
  flex: "1 1 auto",
  minWidth: 0,
  marginTop: 4,
  marginBottom: 4,
  [`.${tF.root}:where(& .${Tv.primary})`]: {
    display: "block"
  },
  [`.${tF.root}:where(& .${Tv.secondary})`]: {
    display: "block"
  },
  variants: [{
    props: ({
      ownerState: e
    }) => e.primary && e.secondary,
    style: {
      marginTop: 6,
      marginBottom: 6
    }
  }, {
    props: ({
      ownerState: e
    }) => e.inset,
    style: {
      paddingLeft: 56
    }
  }]
}), tm = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiListItemText"
  }), {
    children: o,
    className: s,
    disableTypography: a = !1,
    inset: c = !1,
    primary: f,
    primaryTypographyProps: m,
    secondary: g,
    secondaryTypographyProps: y,
    slots: w = {},
    slotProps: C = {},
    ...T
  } = r, {
    dense: E
  } = x.useContext(Kv);
  let O = f ?? o, k = g;
  const I = {
    ...r,
    disableTypography: a,
    inset: c,
    primary: !!O,
    secondary: !!k,
    dense: E
  }, M = kre(I), N = {
    slots: w,
    slotProps: {
      primary: m,
      secondary: y,
      ...C
    }
  }, [P, F] = vn("root", {
    className: et(M.root, s),
    elementType: Pre,
    externalForwardedProps: {
      ...N,
      ...T
    },
    ownerState: I,
    ref: n
  }), [H, U] = vn("primary", {
    className: M.primary,
    elementType: Po,
    externalForwardedProps: N,
    ownerState: I
  }), [z, A] = vn("secondary", {
    className: M.secondary,
    elementType: Po,
    externalForwardedProps: N,
    ownerState: I
  });
  return O != null && O.type !== Po && !a && (O = /* @__PURE__ */ $.jsx(H, {
    variant: E ? "body2" : "body1",
    component: U != null && U.variant ? void 0 : "span",
    ...U,
    children: O
  })), k != null && k.type !== Po && !a && (k = /* @__PURE__ */ $.jsx(z, {
    variant: "body2",
    color: "textSecondary",
    ...A,
    children: k
  })), /* @__PURE__ */ $.jsxs(P, {
    ...F,
    children: [O, k]
  });
});
process.env.NODE_ENV !== "production" && (tm.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Alias for the `primary` prop.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * If `true`, the children won't be wrapped by a Typography component.
   * This can be useful to render an alternative Typography variant by wrapping
   * the `children` (or `primary`) text, and optional `secondary` text
   * with the Typography component.
   * @default false
   */
  disableTypography: u.bool,
  /**
   * If `true`, the children are indented.
   * This should be used if there is no left avatar or left icon.
   * @default false
   */
  inset: u.bool,
  /**
   * The main content element.
   */
  primary: u.node,
  /**
   * These props will be forwarded to the primary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.primary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  primaryTypographyProps: u.object,
  /**
   * The secondary content element.
   */
  secondary: u.node,
  /**
   * These props will be forwarded to the secondary typography component
   * (as long as disableTypography is not `true`).
   * @deprecated Use `slotProps.secondary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  secondaryTypographyProps: u.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    primary: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object]),
    secondary: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    primary: u.elementType,
    root: u.elementType,
    secondary: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function dP(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function NF(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function LV(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function $w(e, t, n, r, o, s) {
  let a = !1, c = o(e, t, t ? n : !1);
  for (; c; ) {
    if (c === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const f = r ? !1 : c.disabled || c.getAttribute("aria-disabled") === "true";
    if (!c.hasAttribute("tabindex") || !LV(c, s) || f)
      c = o(e, c, n);
    else
      return c.focus(), !0;
  }
  return !1;
}
const gC = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: s = !1,
    children: a,
    className: c,
    disabledItemsFocusable: f = !1,
    disableListWrap: m = !1,
    onKeyDown: g,
    variant: y = "selectedMenu",
    ...w
  } = t, C = x.useRef(null), T = x.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  Nr(() => {
    o && C.current.focus();
  }, [o]), x.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (M, {
      direction: N
    }) => {
      const P = !C.current.style.width;
      if (M.clientHeight < C.current.clientHeight && P) {
        const F = `${IH(Cl(M))}px`;
        C.current.style[N === "rtl" ? "paddingLeft" : "paddingRight"] = F, C.current.style.width = `calc(100% + ${F})`;
      }
      return C.current;
    }
  }), []);
  const E = (M) => {
    const N = C.current, P = M.key;
    if (M.ctrlKey || M.metaKey || M.altKey) {
      g && g(M);
      return;
    }
    const H = ho(N).activeElement;
    if (P === "ArrowDown")
      M.preventDefault(), $w(N, H, m, f, dP);
    else if (P === "ArrowUp")
      M.preventDefault(), $w(N, H, m, f, NF);
    else if (P === "Home")
      M.preventDefault(), $w(N, null, m, f, dP);
    else if (P === "End")
      M.preventDefault(), $w(N, null, m, f, NF);
    else if (P.length === 1) {
      const U = T.current, z = P.toLowerCase(), A = performance.now();
      U.keys.length > 0 && (A - U.lastTime > 500 ? (U.keys = [], U.repeating = !0, U.previousKeyMatched = !0) : U.repeating && z !== U.keys[0] && (U.repeating = !1)), U.lastTime = A, U.keys.push(z);
      const q = H && !U.repeating && LV(H, U);
      U.previousKeyMatched && (q || $w(N, H, !1, f, dP, U)) ? M.preventDefault() : U.previousKeyMatched = !1;
    }
    g && g(M);
  }, O = Pr(C, n);
  let k = -1;
  x.Children.forEach(a, (M, N) => {
    if (!/* @__PURE__ */ x.isValidElement(M)) {
      k === N && (k += 1, k >= a.length && (k = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && mu.isFragment(M) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), M.props.disabled || (y === "selectedMenu" && M.props.selected || k === -1) && (k = N), k === N && (M.props.disabled || M.props.muiSkipListHighlight || M.type.muiSkipListHighlight) && (k += 1, k >= a.length && (k = -1));
  });
  const I = x.Children.map(a, (M, N) => {
    if (N === k) {
      const P = {};
      return s && (P.autoFocus = !0), M.props.tabIndex === void 0 && y === "selectedMenu" && (P.tabIndex = 0), /* @__PURE__ */ x.cloneElement(M, P);
    }
    return M;
  });
  return /* @__PURE__ */ $.jsx(NV, {
    role: "menu",
    ref: O,
    className: c,
    onKeyDown: E,
    tabIndex: o ? 0 : -1,
    ...w,
    children: I
  });
});
process.env.NODE_ENV !== "production" && (gC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: u.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: u.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: u.node,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: u.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: u.bool,
  /**
   * @ignore
   */
  onKeyDown: u.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: u.oneOf(["menu", "selectedMenu"])
});
function Mre(e) {
  return an("MuiPopover", e);
}
pn("MuiPopover", ["root", "paper"]);
function LF(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function $F(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function jF(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function rS(e) {
  return typeof e == "function" ? e() : e;
}
const Ire = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"],
    paper: ["paper"]
  }, Mre, t);
}, Dre = Ue(sD, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), $V = Ue(bu, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), jV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: c,
    anchorReference: f = "anchorEl",
    children: m,
    className: g,
    container: y,
    elevation: w = 8,
    marginThreshold: C = 16,
    open: T,
    PaperProps: E = {},
    // TODO: remove in v7
    slots: O = {},
    slotProps: k = {},
    transformOrigin: I = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: M,
    // TODO: remove in v7
    transitionDuration: N = "auto",
    TransitionProps: P = {},
    // TODO: remove in v7
    disableScrollLock: F = !1,
    ...H
  } = r, U = x.useRef(), z = {
    ...r,
    anchorOrigin: a,
    anchorReference: f,
    elevation: w,
    marginThreshold: C,
    transformOrigin: I,
    TransitionComponent: M,
    transitionDuration: N,
    TransitionProps: P
  }, A = Ire(z), q = x.useCallback(() => {
    if (f === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (c || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), c;
    const we = rS(s), _e = we && we.nodeType === 1 ? we : ho(U.current).body, ce = _e.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const Ce = _e.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && Ce.top === 0 && Ce.left === 0 && Ce.right === 0 && Ce.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: ce.top + LF(ce, a.vertical),
      left: ce.left + $F(ce, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, c, f]), W = x.useCallback((we) => ({
    vertical: LF(we, I.vertical),
    horizontal: $F(we, I.horizontal)
  }), [I.horizontal, I.vertical]), Y = x.useCallback((we) => {
    const _e = {
      width: we.offsetWidth,
      height: we.offsetHeight
    }, ce = W(_e);
    if (f === "none")
      return {
        top: null,
        left: null,
        transformOrigin: jF(ce)
      };
    const Ce = q();
    let Ne = Ce.top - ce.vertical, Be = Ce.left - ce.horizontal;
    const tt = Ne + _e.height, $e = Be + _e.width, rt = Cl(rS(s)), ot = rt.innerHeight - C, wt = rt.innerWidth - C;
    if (C !== null && Ne < C) {
      const gt = Ne - C;
      Ne -= gt, ce.vertical += gt;
    } else if (C !== null && tt > ot) {
      const gt = tt - ot;
      Ne -= gt, ce.vertical += gt;
    }
    if (process.env.NODE_ENV !== "production" && _e.height > ot && _e.height && ot && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${_e.height - ot}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), C !== null && Be < C) {
      const gt = Be - C;
      Be -= gt, ce.horizontal += gt;
    } else if ($e > wt) {
      const gt = $e - wt;
      Be -= gt, ce.horizontal += gt;
    }
    return {
      top: `${Math.round(Ne)}px`,
      left: `${Math.round(Be)}px`,
      transformOrigin: jF(ce)
    };
  }, [s, f, q, W, C]), [ee, G] = x.useState(T), K = x.useCallback(() => {
    const we = U.current;
    if (!we)
      return;
    const _e = Y(we);
    _e.top !== null && we.style.setProperty("top", _e.top), _e.left !== null && (we.style.left = _e.left), we.style.transformOrigin = _e.transformOrigin, G(!0);
  }, [Y]);
  x.useEffect(() => (F && window.addEventListener("scroll", K), () => window.removeEventListener("scroll", K)), [s, F, K]);
  const X = () => {
    K();
  }, te = () => {
    G(!1);
  };
  x.useEffect(() => {
    T && K();
  }), x.useImperativeHandle(o, () => T ? {
    updatePosition: () => {
      K();
    }
  } : null, [T, K]), x.useEffect(() => {
    if (!T)
      return;
    const we = NI(() => {
      K();
    }), _e = Cl(rS(s));
    return _e.addEventListener("resize", we), () => {
      we.clear(), _e.removeEventListener("resize", we);
    };
  }, [s, T, K]);
  let re = N;
  const Q = {
    slots: {
      transition: M,
      ...O
    },
    slotProps: {
      transition: P,
      paper: E,
      ...k
    }
  }, [B, ie] = vn("transition", {
    elementType: qv,
    externalForwardedProps: Q,
    ownerState: z,
    getSlotProps: (we) => ({
      ...we,
      onEntering: (_e, ce) => {
        var Ce;
        (Ce = we.onEntering) == null || Ce.call(we, _e, ce), X();
      },
      onExited: (_e) => {
        var ce;
        (ce = we.onExited) == null || ce.call(we, _e), te();
      }
    }),
    additionalProps: {
      appear: !0,
      in: T
    }
  });
  N === "auto" && !B.muiSupportAuto && (re = void 0);
  const de = y || (s ? ho(rS(s)).body : void 0), [ue, {
    slots: he,
    slotProps: ge,
    ...fe
  }] = vn("root", {
    ref: n,
    elementType: Dre,
    externalForwardedProps: {
      ...Q,
      ...H
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: O.backdrop
      },
      slotProps: {
        backdrop: WI(typeof k.backdrop == "function" ? k.backdrop(z) : k.backdrop, {
          invisible: !0
        })
      },
      container: de,
      open: T
    },
    ownerState: z,
    className: et(A.root, g)
  }), [pe, be] = vn("paper", {
    ref: U,
    className: A.paper,
    elementType: $V,
    externalForwardedProps: Q,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: w,
      style: ee ? void 0 : {
        opacity: 0
      }
    },
    ownerState: z
  });
  return /* @__PURE__ */ $.jsx(ue, {
    ...fe,
    ...!gM(ue) && {
      slots: he,
      slotProps: ge,
      disableScrollLock: F
    },
    children: /* @__PURE__ */ $.jsx(B, {
      ...ie,
      timeout: re,
      children: /* @__PURE__ */ $.jsx(pe, {
        ...be,
        children: m
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (jV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: ca,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Na(u.oneOfType([Sl, u.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = rS(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: u.shape({
    horizontal: u.oneOfType([u.oneOf(["center", "left", "right"]), u.number]).isRequired,
    vertical: u.oneOfType([u.oneOf(["bottom", "center", "top"]), u.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: u.shape({
    left: u.number.isRequired,
    top: u.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: u.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: u.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: u.object,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: u.oneOfType([Sl, u.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: u.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Jh,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: u.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: u.shape({
    component: AI
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    backdrop: u.oneOfType([u.func, u.object]),
    paper: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object]),
    transition: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    backdrop: u.elementType,
    paper: u.elementType,
    root: u.elementType,
    transition: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: u.shape({
    horizontal: u.oneOfType([u.oneOf(["center", "left", "right"]), u.number]).isRequired,
    vertical: u.oneOfType([u.oneOf(["bottom", "center", "top"]), u.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: u.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: u.oneOfType([u.oneOf(["auto"]), u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: u.object
});
function Are(e) {
  return an("MuiMenu", e);
}
pn("MuiMenu", ["root", "paper", "list"]);
const Nre = {
  vertical: "top",
  horizontal: "right"
}, Lre = {
  vertical: "top",
  horizontal: "left"
}, $re = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, Are, t);
}, jre = Ue(jV, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Fre = Ue($V, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), zre = Ue(gC, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), FV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: s,
    className: a,
    disableAutoFocusItem: c = !1,
    MenuListProps: f = {},
    onClose: m,
    open: g,
    PaperProps: y = {},
    PopoverClasses: w,
    transitionDuration: C = "auto",
    TransitionProps: {
      onEntering: T,
      ...E
    } = {},
    variant: O = "selectedMenu",
    slots: k = {},
    slotProps: I = {},
    ...M
  } = r, N = cy(), P = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: c,
    MenuListProps: f,
    onEntering: T,
    PaperProps: y,
    transitionDuration: C,
    TransitionProps: E,
    variant: O
  }, F = $re(P), H = o && !c && g, U = x.useRef(null), z = (re, Q) => {
    U.current && U.current.adjustStyleForScrollbar(re, {
      direction: N ? "rtl" : "ltr"
    }), T && T(re, Q);
  }, A = (re) => {
    re.key === "Tab" && (re.preventDefault(), m && m(re, "tabKeyDown"));
  };
  let q = -1;
  x.Children.map(s, (re, Q) => {
    /* @__PURE__ */ x.isValidElement(re) && (process.env.NODE_ENV !== "production" && mu.isFragment(re) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), re.props.disabled || (O === "selectedMenu" && re.props.selected || q === -1) && (q = Q));
  });
  const W = {
    slots: k,
    slotProps: {
      list: f,
      transition: E,
      paper: y,
      ...I
    }
  }, Y = FH({
    elementType: k.root,
    externalSlotProps: I.root,
    ownerState: P,
    className: [F.root, a]
  }), [ee, G] = vn("paper", {
    className: F.paper,
    elementType: Fre,
    externalForwardedProps: W,
    shouldForwardComponentProp: !0,
    ownerState: P
  }), [K, X] = vn("list", {
    className: et(F.list, f.className),
    elementType: zre,
    shouldForwardComponentProp: !0,
    externalForwardedProps: W,
    getSlotProps: (re) => ({
      ...re,
      onKeyDown: (Q) => {
        var B;
        A(Q), (B = re.onKeyDown) == null || B.call(re, Q);
      }
    }),
    ownerState: P
  }), te = typeof W.slotProps.transition == "function" ? W.slotProps.transition(P) : W.slotProps.transition;
  return /* @__PURE__ */ $.jsx(jre, {
    onClose: m,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: N ? "right" : "left"
    },
    transformOrigin: N ? Nre : Lre,
    slots: {
      root: k.root,
      paper: ee,
      backdrop: k.backdrop,
      ...k.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: k.transition
      }
    },
    slotProps: {
      root: Y,
      paper: G,
      backdrop: typeof I.backdrop == "function" ? I.backdrop(P) : I.backdrop,
      transition: {
        ...te,
        onEntering: (...re) => {
          var Q;
          z(...re), (Q = te == null ? void 0 : te.onEntering) == null || Q.call(te, ...re);
        }
      }
    },
    open: g,
    ref: n,
    transitionDuration: C,
    ownerState: P,
    ...M,
    classes: w,
    children: /* @__PURE__ */ $.jsx(K, {
      actions: U,
      autoFocus: o && (q === -1 || c),
      autoFocusItem: H,
      variant: O,
      ...X,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (FV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: u.oneOfType([Sl, u.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: u.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: u.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: u.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: u.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: u.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    backdrop: u.oneOfType([u.func, u.object]),
    list: u.oneOfType([u.func, u.object]),
    paper: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object]),
    transition: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    backdrop: u.elementType,
    list: u.elementType,
    paper: u.elementType,
    root: u.elementType,
    transition: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: u.oneOfType([u.oneOf(["auto"]), u.number, u.shape({
    appear: u.number,
    enter: u.number,
    exit: u.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: u.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: u.oneOf(["menu", "selectedMenu"])
});
function Bre(e) {
  return an("MuiMenuItem", e);
}
const jw = pn("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), Hre = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.dense && t.dense, n.divider && t.divider, !n.disableGutters && t.gutters];
}, Vre = (e) => {
  const {
    disabled: t,
    dense: n,
    divider: r,
    disableGutters: o,
    selected: s,
    classes: a
  } = e, f = mt({
    root: ["root", n && "dense", t && "disabled", !o && "gutters", r && "divider", s && "selected"]
  }, Bre, a);
  return {
    ...a,
    ...f
  };
}, Ure = Ue(sm, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: Hre
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body1,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap",
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${jw.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : An(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${jw.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : An(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${jw.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : An(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : An(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${jw.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${jw.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${kF.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${kF.inset}`]: {
    marginLeft: 52
  },
  [`& .${Tv.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${Tv.inset}`]: {
    paddingLeft: 36
  },
  [`& .${AF.root}`]: {
    minWidth: 36
  },
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dense,
    style: {
      [e.breakpoints.up("sm")]: {
        minHeight: "auto"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.dense,
    style: {
      minHeight: 32,
      // https://m2.material.io/components/menus#specs > Dense
      paddingTop: 4,
      paddingBottom: 4,
      ...e.typography.body2,
      [`& .${AF.root} svg`]: {
        fontSize: "1.25rem"
      }
    }
  }]
}))), vl = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiMenuItem"
  }), {
    autoFocus: o = !1,
    component: s = "li",
    dense: a = !1,
    divider: c = !1,
    disableGutters: f = !1,
    focusVisibleClassName: m,
    role: g = "menuitem",
    tabIndex: y,
    className: w,
    ...C
  } = r, T = x.useContext(Kv), E = x.useMemo(() => ({
    dense: a || T.dense || !1,
    disableGutters: f
  }), [T.dense, a, f]), O = x.useRef(null);
  Nr(() => {
    o && (O.current ? O.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [o]);
  const k = {
    ...r,
    dense: E.dense,
    divider: c,
    disableGutters: f
  }, I = Vre(r), M = Pr(O, n);
  let N;
  return r.disabled || (N = y !== void 0 ? y : -1), /* @__PURE__ */ $.jsx(Kv.Provider, {
    value: E,
    children: /* @__PURE__ */ $.jsx(Ure, {
      ref: M,
      role: g,
      tabIndex: N,
      component: s,
      focusVisibleClassName: et(I.focusVisible, m),
      className: et(I.root, w),
      ...C,
      ownerState: k,
      classes: I
    })
  });
});
process.env.NODE_ENV !== "production" && (vl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: u.bool,
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: u.bool,
  /**
   * @ignore
   */
  disabled: u.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: u.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: u.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: u.string,
  /**
   * @ignore
   */
  role: u.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * @default 0
   */
  tabIndex: u.number
});
function Wre(e) {
  return an("MuiNativeSelect", e);
}
const uD = pn("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Gre = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, c = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${He(n)}`, s && "iconOpen", r && "disabled"]
  };
  return mt(c, Wre, t);
}, zV = Ue("select", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${uD.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), qre = Ue(zV, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Is,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${uD.multiple}`]: t.multiple
    }];
  }
})({}), BV = Ue("svg", {
  name: "MuiNativeSelect"
})(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${uD.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), Kre = Ue(BV, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${He(n.variant)}`], n.open && t.iconOpen];
  }
})({}), HV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: s,
    IconComponent: a,
    inputRef: c,
    variant: f = "standard",
    ...m
  } = t, g = {
    ...t,
    disabled: o,
    variant: f,
    error: s
  }, y = Gre(g);
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(qre, {
      ownerState: g,
      className: et(y.select, r),
      disabled: o,
      ref: c || n,
      ...m
    }), t.multiple ? null : /* @__PURE__ */ $.jsx(Kre, {
      as: a,
      ownerState: g,
      className: y.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (HV.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The CSS class name of the select element.
   */
  className: u.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: u.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: u.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: u.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: ca,
  /**
   * @ignore
   */
  multiple: u.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: u.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * The input value.
   */
  value: u.any,
  /**
   * The variant to use.
   */
  variant: u.oneOf(["standard", "outlined", "filled"])
});
var FF;
const Yre = Ue("fieldset", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Is
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), Xre = Ue("legend", {
  name: "MuiNotchedOutlined",
  shouldForwardProp: Is
})(Zt(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function VV(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, c = o != null && o !== "", f = {
    ...e,
    notched: s,
    withLabel: c
  };
  return /* @__PURE__ */ $.jsx(Yre, {
    "aria-hidden": !0,
    className: r,
    ownerState: f,
    ...a,
    children: /* @__PURE__ */ $.jsx(Xre, {
      ownerState: f,
      children: c ? /* @__PURE__ */ $.jsx("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        FF || (FF = /* @__PURE__ */ $.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (VV.propTypes = {
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The label.
   */
  label: u.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: u.bool.isRequired,
  /**
   * @ignore
   */
  style: u.object
});
const Qre = (e) => {
  const {
    classes: t
  } = e, r = mt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, ate, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, Jre = Ue(z_, {
  shouldForwardProp: (e) => Is(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: j_
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${ul.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${ul.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${ul.focused} .${ul.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(eo()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${ul.focused} .${ul.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${ul.error} .${ul.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${ul.disabled} .${ul.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), Zre = Ue(VV, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Zt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), eoe = Ue(B_, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: F_
})(Zt(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), q_ = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: o = {},
    fullWidth: s = !1,
    inputComponent: a = "input",
    label: c,
    multiline: f = !1,
    notched: m,
    slots: g = {},
    slotProps: y = {},
    type: w = "text",
    ...C
  } = r, T = Qre(r), E = Od(), O = pm({
    props: r,
    muiFormControl: E,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), k = {
    ...r,
    color: O.color || "primary",
    disabled: O.disabled,
    error: O.error,
    focused: O.focused,
    formControl: E,
    fullWidth: s,
    hiddenLabel: O.hiddenLabel,
    multiline: f,
    size: O.size,
    type: w
  }, I = g.root ?? o.Root ?? Jre, M = g.input ?? o.Input ?? eoe, [N, P] = vn("notchedOutline", {
    elementType: Zre,
    className: T.notchedOutline,
    shouldForwardComponentProp: !0,
    ownerState: k,
    externalForwardedProps: {
      slots: g,
      slotProps: y
    },
    additionalProps: {
      label: c != null && c !== "" && O.required ? /* @__PURE__ */ $.jsxs(x.Fragment, {
        children: [c, " ", "*"]
      }) : c
    }
  });
  return /* @__PURE__ */ $.jsx(hm, {
    slots: {
      root: I,
      input: M
    },
    slotProps: y,
    renderSuffix: (F) => /* @__PURE__ */ $.jsx(N, {
      ...P,
      notched: typeof m < "u" ? m : !!(F.startAdornment || F.filled || F.focused)
    }),
    fullWidth: s,
    inputComponent: a,
    multiline: f,
    ref: n,
    type: w,
    ...C,
    classes: {
      ...T,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (q_.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: u.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary"]), u.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Input: u.elementType,
    Root: u.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: u.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: u.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: u.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The id of the `input` element.
   */
  id: u.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: u.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: u.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: u.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: u.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: u.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: u.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: u.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: u.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: u.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: u.oneOfType([u.number, u.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    input: u.object,
    notchedOutline: u.oneOfType([u.func, u.object]),
    root: u.object
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    input: u.elementType,
    notchedOutline: u.elementType,
    root: u.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: u.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: u.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: u.any
});
q_.muiName = "Input";
const toe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), noe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");
function UV(e) {
  return an("MuiSelect", e);
}
const Fw = pn("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var zF;
const roe = Ue(zV, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Fw.select}`]: t.select
      },
      {
        [`&.${Fw.select}`]: t[n.variant]
      },
      {
        [`&.${Fw.error}`]: t.error
      },
      {
        [`&.${Fw.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Fw.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), ooe = Ue(BV, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${He(n.variant)}`], n.open && t.iconOpen];
  }
})({}), ioe = Ue("input", {
  shouldForwardProp: (e) => QH(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function BF(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function soe(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const aoe = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, c = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${He(n)}`, s && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return mt(c, UV, t);
}, WV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  var bt;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: s,
    autoWidth: a,
    children: c,
    className: f,
    defaultOpen: m,
    defaultValue: g,
    disabled: y,
    displayEmpty: w,
    error: C = !1,
    IconComponent: T,
    inputRef: E,
    labelId: O,
    MenuProps: k = {},
    multiple: I,
    name: M,
    onBlur: N,
    onChange: P,
    onClose: F,
    onFocus: H,
    onOpen: U,
    open: z,
    readOnly: A,
    renderValue: q,
    required: W,
    SelectDisplayProps: Y = {},
    tabIndex: ee,
    // catching `type` from Input which makes no sense for SelectInput
    type: G,
    value: K,
    variant: X = "standard",
    ...te
  } = t, [re, Q] = Qh({
    controlled: K,
    default: g,
    name: "Select"
  }), [B, ie] = Qh({
    controlled: z,
    default: m,
    name: "Select"
  }), de = x.useRef(null), ue = x.useRef(null), [he, ge] = x.useState(null), {
    current: fe
  } = x.useRef(z != null), [pe, be] = x.useState(), we = Pr(n, E), _e = x.useCallback((We) => {
    ue.current = We, We && ge(We);
  }, []), ce = he == null ? void 0 : he.parentNode;
  x.useImperativeHandle(we, () => ({
    focus: () => {
      ue.current.focus();
    },
    node: de.current,
    value: re
  }), [re]), x.useEffect(() => {
    m && B && he && !fe && (be(a ? null : ce.clientWidth), ue.current.focus());
  }, [he, a]), x.useEffect(() => {
    s && ue.current.focus();
  }, [s]), x.useEffect(() => {
    if (!O)
      return;
    const We = ho(ue.current).getElementById(O);
    if (We) {
      const St = () => {
        getSelection().isCollapsed && ue.current.focus();
      };
      return We.addEventListener("click", St), () => {
        We.removeEventListener("click", St);
      };
    }
  }, [O]);
  const Ce = (We, St) => {
    We ? U && U(St) : F && F(St), fe || (be(a ? null : ce.clientWidth), ie(We));
  }, Ne = (We) => {
    We.button === 0 && (We.preventDefault(), ue.current.focus(), Ce(!0, We));
  }, Be = (We) => {
    Ce(!1, We);
  }, tt = x.Children.toArray(c), $e = (We) => {
    const St = tt.find(($t) => $t.props.value === We.target.value);
    St !== void 0 && (Q(St.props.value), P && P(We, St));
  }, rt = (We) => (St) => {
    let $t;
    if (St.currentTarget.hasAttribute("tabindex")) {
      if (I) {
        $t = Array.isArray(re) ? re.slice() : [];
        const wn = re.indexOf(We.props.value);
        wn === -1 ? $t.push(We.props.value) : $t.splice(wn, 1);
      } else
        $t = We.props.value;
      if (We.props.onClick && We.props.onClick(St), re !== $t && (Q($t), P)) {
        const wn = St.nativeEvent || St, cn = new wn.constructor(wn.type, wn);
        Object.defineProperty(cn, "target", {
          writable: !0,
          value: {
            value: $t,
            name: M
          }
        }), P(cn, We);
      }
      I || Ce(!1, St);
    }
  }, ot = (We) => {
    A || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(We.key) && (We.preventDefault(), Ce(!0, We));
  }, wt = he !== null && B, gt = (We) => {
    !wt && N && (Object.defineProperty(We, "target", {
      writable: !0,
      value: {
        value: re,
        name: M
      }
    }), N(We));
  };
  delete te["aria-invalid"];
  let nt, Ft;
  const ut = [];
  let Et = !1, Tt = !1;
  ($T({
    value: re
  }) || w) && (q ? nt = q(re) : Et = !0);
  const At = tt.map((We) => {
    if (!/* @__PURE__ */ x.isValidElement(We))
      return null;
    process.env.NODE_ENV !== "production" && mu.isFragment(We) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let St;
    if (I) {
      if (!Array.isArray(re))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : vc(2));
      St = re.some(($t) => BF($t, We.props.value)), St && Et && ut.push(We.props.children);
    } else
      St = BF(re, We.props.value), St && Et && (Ft = We.props.children);
    return St && (Tt = !0), /* @__PURE__ */ x.cloneElement(We, {
      "aria-selected": St ? "true" : "false",
      onClick: rt(We),
      onKeyUp: ($t) => {
        $t.key === " " && $t.preventDefault(), We.props.onKeyUp && We.props.onKeyUp($t);
      },
      role: "option",
      selected: St,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": We.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && x.useEffect(() => {
    if (!Tt && !I && re !== "") {
      const We = tt.map((St) => St.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${re}\` for the select ${M ? `(name="${M}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${We.filter((St) => St != null).map((St) => `\`${St}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [Tt, tt, I, M, re]), Et && (I ? ut.length === 0 ? nt = null : nt = ut.reduce((We, St, $t) => (We.push(St), $t < ut.length - 1 && We.push(", "), We), []) : nt = Ft);
  let vt = pe;
  !a && fe && he && (vt = ce.clientWidth);
  let Xe;
  typeof ee < "u" ? Xe = ee : Xe = y ? null : 0;
  const Oe = Y.id || (M ? `mui-component-select-${M}` : void 0), Ie = {
    ...t,
    variant: X,
    value: re,
    open: wt,
    error: C
  }, pt = aoe(Ie), yt = {
    ...k.PaperProps,
    ...(bt = k.slotProps) == null ? void 0 : bt.paper
  }, zt = pr();
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(roe, {
      as: "div",
      ref: _e,
      tabIndex: Xe,
      role: "combobox",
      "aria-controls": wt ? zt : void 0,
      "aria-disabled": y ? "true" : void 0,
      "aria-expanded": wt ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [O, Oe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": W ? "true" : void 0,
      "aria-invalid": C ? "true" : void 0,
      onKeyDown: ot,
      onMouseDown: y || A ? null : Ne,
      onBlur: gt,
      onFocus: H,
      ...Y,
      ownerState: Ie,
      className: et(Y.className, pt.select, f),
      id: Oe,
      children: soe(nt) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        zF || (zF = /* @__PURE__ */ $.jsx("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : nt
    }), /* @__PURE__ */ $.jsx(ioe, {
      "aria-invalid": C,
      value: Array.isArray(re) ? re.join(",") : re,
      name: M,
      ref: de,
      "aria-hidden": !0,
      onChange: $e,
      tabIndex: -1,
      disabled: y,
      className: pt.nativeInput,
      autoFocus: s,
      required: W,
      ...te,
      ownerState: Ie
    }), /* @__PURE__ */ $.jsx(ooe, {
      as: T,
      className: pt.icon,
      ownerState: Ie
    }), /* @__PURE__ */ $.jsx(FV, {
      id: `menu-${M || ""}`,
      anchorEl: ce,
      open: wt,
      onClose: Be,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...k,
      slotProps: {
        ...k.slotProps,
        list: {
          "aria-labelledby": O,
          role: "listbox",
          "aria-multiselectable": I ? "true" : void 0,
          disableListWrap: !0,
          id: zt,
          ...k.MenuListProps
        },
        paper: {
          ...yt,
          style: {
            minWidth: vt,
            ...yt != null ? yt.style : null
          }
        }
      },
      children: At
    })]
  });
});
process.env.NODE_ENV !== "production" && (WV.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": u.string,
  /**
   * @ignore
   */
  "aria-label": u.string,
  /**
   * @ignore
   */
  autoFocus: u.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: u.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The CSS class name of the select element.
   */
  className: u.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: u.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: u.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: u.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: u.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: u.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: ca,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: u.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: u.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: u.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: u.string,
  /**
   * @ignore
   */
  onBlur: u.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: u.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: u.func,
  /**
   * @ignore
   */
  onFocus: u.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool,
  /**
   * @ignore
   */
  readOnly: u.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: u.func,
  /**
   * If `true`, the component is required.
   */
  required: u.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: u.object,
  /**
   * @ignore
   */
  tabIndex: u.oneOfType([u.number, u.string]),
  /**
   * @ignore
   */
  type: u.any,
  /**
   * The input value.
   */
  value: u.any,
  /**
   * The variant to use.
   */
  variant: u.oneOf(["standard", "outlined", "filled"])
});
const loe = (e) => {
  const {
    classes: t
  } = e, r = mt({
    root: ["root"]
  }, UV, t);
  return {
    ...t,
    ...r
  };
}, cD = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Is(e) && e !== "variant",
  slot: "Root"
}, uoe = Ue(W_, cD)(""), coe = Ue(q_, cD)(""), doe = Ue(V_, cD)(""), fy = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: s,
    classes: a = {},
    className: c,
    defaultOpen: f = !1,
    displayEmpty: m = !1,
    IconComponent: g = gV,
    id: y,
    input: w,
    inputProps: C,
    label: T,
    labelId: E,
    MenuProps: O,
    multiple: k = !1,
    native: I = !1,
    onClose: M,
    onOpen: N,
    open: P,
    renderValue: F,
    SelectDisplayProps: H,
    variant: U = "outlined",
    ...z
  } = r, A = I ? HV : WV, q = Od(), W = pm({
    props: r,
    muiFormControl: q,
    states: ["variant", "error"]
  }), Y = W.variant || U, ee = {
    ...r,
    variant: Y,
    classes: a
  }, G = loe(ee), {
    root: K,
    ...X
  } = G, te = w || {
    standard: /* @__PURE__ */ $.jsx(uoe, {
      ownerState: ee
    }),
    outlined: /* @__PURE__ */ $.jsx(coe, {
      label: T,
      ownerState: ee
    }),
    filled: /* @__PURE__ */ $.jsx(doe, {
      ownerState: ee
    })
  }[Y], re = Pr(n, ip(te));
  return /* @__PURE__ */ $.jsx(x.Fragment, {
    children: /* @__PURE__ */ x.cloneElement(te, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: A,
      inputProps: {
        children: s,
        error: W.error,
        IconComponent: g,
        variant: Y,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: k,
        ...I ? {
          id: y
        } : {
          autoWidth: o,
          defaultOpen: f,
          displayEmpty: m,
          labelId: E,
          MenuProps: O,
          onClose: M,
          onOpen: N,
          open: P,
          renderValue: F,
          SelectDisplayProps: {
            id: y,
            ...H
          }
        },
        ...C,
        classes: C ? Oi(X, C.classes) : X,
        ...w ? w.props.inputProps : {}
      },
      ...(k && I || m) && Y === "outlined" ? {
        notched: !0
      } : {},
      ref: re,
      className: et(te.props.className, c, G.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!w && {
        variant: Y
      },
      ...z
    })
  });
});
process.env.NODE_ENV !== "production" && (fy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: u.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: u.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: u.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: u.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: u.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: u.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: u.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: u.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: u.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: u.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: u.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: u.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: u.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: u.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: u.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: u.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: u.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: u.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: u.oneOfType([u.oneOf([""]), u.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: u.oneOf(["filled", "outlined", "standard"])
});
fy.muiName = "Select";
function foe(e) {
  return an("MuiSkeleton", e);
}
pn("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);
const poe = (e) => {
  const {
    classes: t,
    variant: n,
    animation: r,
    hasChildren: o,
    width: s,
    height: a
  } = e;
  return mt({
    root: ["root", n, r, o && "withChildren", o && !s && "fitContent", o && !a && "heightAuto"]
  }, foe, t);
}, EM = Cc`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`, TM = Cc`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`, hoe = typeof EM != "string" ? np`
        animation: ${EM} 2s ease-in-out 0.5s infinite;
      ` : null, moe = typeof TM != "string" ? np`
        &::after {
          animation: ${TM} 2s linear 0.5s infinite;
        }
      ` : null, goe = Ue("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.animation !== !1 && t[n.animation], n.hasChildren && t.withChildren, n.hasChildren && !n.width && t.fitContent, n.hasChildren && !n.height && t.heightAuto];
  }
})(Zt(({
  theme: e
}) => {
  const t = bJ(e.shape.borderRadius) || "px", n = wJ(e.shape.borderRadius);
  return {
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : An(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em",
    variants: [{
      props: {
        variant: "text"
      },
      style: {
        marginTop: 0,
        marginBottom: 0,
        height: "auto",
        transformOrigin: "0 55%",
        transform: "scale(1, 0.60)",
        borderRadius: `${n}${t}/${Math.round(n / 0.6 * 10) / 10}${t}`,
        "&:empty:before": {
          content: '"\\00a0"'
        }
      }
    }, {
      props: {
        variant: "circular"
      },
      style: {
        borderRadius: "50%"
      }
    }, {
      props: {
        variant: "rounded"
      },
      style: {
        borderRadius: (e.vars || e).shape.borderRadius
      }
    }, {
      props: ({
        ownerState: r
      }) => r.hasChildren,
      style: {
        "& > *": {
          visibility: "hidden"
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => r.hasChildren && !r.width,
      style: {
        maxWidth: "fit-content"
      }
    }, {
      props: ({
        ownerState: r
      }) => r.hasChildren && !r.height,
      style: {
        height: "auto"
      }
    }, {
      props: {
        animation: "pulse"
      },
      style: hoe || {
        animation: `${EM} 2s ease-in-out 0.5s infinite`
      }
    }, {
      props: {
        animation: "wave"
      },
      style: {
        position: "relative",
        overflow: "hidden",
        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
        WebkitMaskImage: "-webkit-radial-gradient(white, black)",
        "&::after": {
          background: `linear-gradient(
                90deg,
                transparent,
                ${(e.vars || e).palette.action.hover},
                transparent
              )`,
          content: '""',
          position: "absolute",
          transform: "translateX(-100%)",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0
        }
      }
    }, {
      props: {
        animation: "wave"
      },
      style: moe || {
        "&::after": {
          animation: `${TM} 2s linear 0.5s infinite`
        }
      }
    }]
  };
})), GV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiSkeleton"
  }), {
    animation: o = "pulse",
    className: s,
    component: a = "span",
    height: c,
    style: f,
    variant: m = "text",
    width: g,
    ...y
  } = r, w = {
    ...r,
    animation: o,
    component: a,
    variant: m,
    hasChildren: !!y.children
  }, C = poe(w);
  return /* @__PURE__ */ $.jsx(goe, {
    as: a,
    ref: n,
    className: et(C.root, s),
    ownerState: w,
    ...y,
    style: {
      width: g,
      height: c,
      ...f
    }
  });
});
process.env.NODE_ENV !== "production" && (GV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: u.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: u.oneOfType([u.number, u.string]),
  /**
   * @ignore
   */
  style: u.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: u.oneOfType([u.oneOf(["circular", "rectangular", "rounded", "text"]), u.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: u.oneOfType([u.number, u.string])
});
function voe(e) {
  return an("MuiTooltip", e);
}
const Ro = pn("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function yoe(e) {
  return Math.round(e * 1e5) / 1e5;
}
const boe = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${He(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return mt(a, voe, t);
}, woe = Ue(lp, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(Zt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${Ro.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${Ro.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${Ro.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${Ro.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Ro.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${Ro.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Ro.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${Ro.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), Soe = Ue("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${He(n.placement.split("-")[0])}`]];
  }
})(Zt(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : An(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${Ro.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${Ro.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${Ro.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${Ro.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${yoe(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${Ro.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${Ro.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${Ro.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${Ro.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${Ro.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${Ro.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${Ro.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${Ro.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Ro.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${Ro.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), Coe = Ue("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(Zt(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : An(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let $E = !1;
const HF = new D_();
let zw = {
  x: 0,
  y: 0
};
function jE(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const qV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: s,
    classes: a,
    components: c = {},
    componentsProps: f = {},
    describeChild: m = !1,
    disableFocusListener: g = !1,
    disableHoverListener: y = !1,
    disableInteractive: w = !1,
    disableTouchListener: C = !1,
    enterDelay: T = 100,
    enterNextDelay: E = 0,
    enterTouchDelay: O = 700,
    followCursor: k = !1,
    id: I,
    leaveDelay: M = 0,
    leaveTouchDelay: N = 1500,
    onClose: P,
    onOpen: F,
    open: H,
    placement: U = "bottom",
    PopperComponent: z,
    PopperProps: A = {},
    slotProps: q = {},
    slots: W = {},
    title: Y,
    TransitionComponent: ee,
    TransitionProps: G,
    ...K
  } = r, X = /* @__PURE__ */ x.isValidElement(s) ? s : /* @__PURE__ */ $.jsx("span", {
    children: s
  }), te = sp(), re = cy(), [Q, B] = x.useState(), [ie, de] = x.useState(null), ue = x.useRef(!1), he = w || k, ge = Ma(), fe = Ma(), pe = Ma(), be = Ma(), [we, _e] = Qh({
    controlled: H,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let ce = we;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Wt
    } = x.useRef(H !== void 0);
    x.useEffect(() => {
      Q && Q.disabled && !Wt && Y !== "" && Q.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [Y, Q, Wt]);
  }
  const Ce = pr(I), Ne = x.useRef(), Be = jn(() => {
    Ne.current !== void 0 && (document.body.style.WebkitUserSelect = Ne.current, Ne.current = void 0), be.clear();
  });
  x.useEffect(() => Be, [Be]);
  const tt = (Wt) => {
    HF.clear(), $E = !0, _e(!0), F && !ce && F(Wt);
  }, $e = jn(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Wt) => {
      HF.start(800 + M, () => {
        $E = !1;
      }), _e(!1), P && ce && P(Wt), ge.start(te.transitions.duration.shortest, () => {
        ue.current = !1;
      });
    }
  ), rt = (Wt) => {
    ue.current && Wt.type !== "touchstart" || (Q && Q.removeAttribute("title"), fe.clear(), pe.clear(), T || $E && E ? fe.start($E ? E : T, () => {
      tt(Wt);
    }) : tt(Wt));
  }, ot = (Wt) => {
    fe.clear(), pe.start(M, () => {
      $e(Wt);
    });
  }, [, wt] = x.useState(!1), gt = (Wt) => {
    RT(Wt.target) || (wt(!1), ot(Wt));
  }, nt = (Wt) => {
    Q || B(Wt.currentTarget), RT(Wt.target) && (wt(!0), rt(Wt));
  }, Ft = (Wt) => {
    ue.current = !0;
    const hr = X.props;
    hr.onTouchStart && hr.onTouchStart(Wt);
  }, ut = (Wt) => {
    Ft(Wt), pe.clear(), ge.clear(), Be(), Ne.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", be.start(O, () => {
      document.body.style.WebkitUserSelect = Ne.current, rt(Wt);
    });
  }, Et = (Wt) => {
    X.props.onTouchEnd && X.props.onTouchEnd(Wt), Be(), pe.start(N, () => {
      $e(Wt);
    });
  };
  x.useEffect(() => {
    if (!ce)
      return;
    function Wt(hr) {
      hr.key === "Escape" && $e(hr);
    }
    return document.addEventListener("keydown", Wt), () => {
      document.removeEventListener("keydown", Wt);
    };
  }, [$e, ce]);
  const Tt = Pr(ip(X), B, n);
  !Y && Y !== 0 && (ce = !1);
  const At = x.useRef(), vt = (Wt) => {
    const hr = X.props;
    hr.onMouseMove && hr.onMouseMove(Wt), zw = {
      x: Wt.clientX,
      y: Wt.clientY
    }, At.current && At.current.update();
  }, Xe = {}, Oe = typeof Y == "string";
  m ? (Xe.title = !ce && Oe && !y ? Y : null, Xe["aria-describedby"] = ce ? Ce : null) : (Xe["aria-label"] = Oe ? Y : null, Xe["aria-labelledby"] = ce && !Oe ? Ce : null);
  const Ie = {
    ...Xe,
    ...K,
    ...X.props,
    className: et(K.className, X.props.className),
    onTouchStart: Ft,
    ref: Tt,
    ...k ? {
      onMouseMove: vt
    } : {}
  };
  process.env.NODE_ENV !== "production" && (Ie["data-mui-internal-clone-element"] = !0, x.useEffect(() => {
    Q && !Q.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [Q]));
  const pt = {};
  C || (Ie.onTouchStart = ut, Ie.onTouchEnd = Et), y || (Ie.onMouseOver = jE(rt, Ie.onMouseOver), Ie.onMouseLeave = jE(ot, Ie.onMouseLeave), he || (pt.onMouseOver = rt, pt.onMouseLeave = ot)), g || (Ie.onFocus = jE(nt, Ie.onFocus), Ie.onBlur = jE(gt, Ie.onBlur), he || (pt.onFocus = nt, pt.onBlur = gt)), process.env.NODE_ENV !== "production" && X.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${X.props.title}\` or the Tooltip component.`].join(`
`));
  const yt = {
    ...r,
    isRtl: re,
    arrow: o,
    disableInteractive: he,
    placement: U,
    PopperComponentProp: z,
    touch: ue.current
  }, zt = typeof q.popper == "function" ? q.popper(yt) : q.popper, bt = x.useMemo(() => {
    var hr, Jo;
    let Wt = [{
      name: "arrow",
      enabled: !!ie,
      options: {
        element: ie,
        padding: 4
      }
    }];
    return (hr = A.popperOptions) != null && hr.modifiers && (Wt = Wt.concat(A.popperOptions.modifiers)), (Jo = zt == null ? void 0 : zt.popperOptions) != null && Jo.modifiers && (Wt = Wt.concat(zt.popperOptions.modifiers)), {
      ...A.popperOptions,
      ...zt == null ? void 0 : zt.popperOptions,
      modifiers: Wt
    };
  }, [ie, A.popperOptions, zt == null ? void 0 : zt.popperOptions]), We = boe(yt), St = typeof q.transition == "function" ? q.transition(yt) : q.transition, $t = {
    slots: {
      popper: c.Popper,
      transition: c.Transition ?? ee,
      tooltip: c.Tooltip,
      arrow: c.Arrow,
      ...W
    },
    slotProps: {
      arrow: q.arrow ?? f.arrow,
      popper: {
        ...A,
        ...zt ?? f.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: q.tooltip ?? f.tooltip,
      transition: {
        ...G,
        ...St ?? f.transition
      }
    }
  }, [wn, cn] = vn("popper", {
    elementType: woe,
    externalForwardedProps: $t,
    ownerState: yt,
    className: et(We.popper, A == null ? void 0 : A.className)
  }), [Tr, sr] = vn("transition", {
    elementType: qv,
    externalForwardedProps: $t,
    ownerState: yt
  }), [$r, _r] = vn("tooltip", {
    elementType: Soe,
    className: We.tooltip,
    externalForwardedProps: $t,
    ownerState: yt
  }), [Xo, Qo] = vn("arrow", {
    elementType: Coe,
    className: We.arrow,
    externalForwardedProps: $t,
    ownerState: yt,
    ref: de
  });
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ x.cloneElement(X, Ie), /* @__PURE__ */ $.jsx(wn, {
      as: z ?? lp,
      placement: U,
      anchorEl: k ? {
        getBoundingClientRect: () => ({
          top: zw.y,
          left: zw.x,
          right: zw.x,
          bottom: zw.y,
          width: 0,
          height: 0
        })
      } : Q,
      popperRef: At,
      open: Q ? ce : !1,
      id: Ce,
      transition: !0,
      ...pt,
      ...cn,
      popperOptions: bt,
      children: ({
        TransitionProps: Wt
      }) => /* @__PURE__ */ $.jsx(Tr, {
        timeout: te.transitions.duration.shorter,
        ...Wt,
        ...sr,
        children: /* @__PURE__ */ $.jsxs($r, {
          ..._r,
          children: [Y, o ? /* @__PURE__ */ $.jsx(Xo, {
            ...Qo
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (qV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: u.bool,
  /**
   * Tooltip reference element.
   */
  children: op.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: u.shape({
    Arrow: u.elementType,
    Popper: u.elementType,
    Tooltip: u.elementType,
    Transition: u.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: u.shape({
    arrow: u.object,
    popper: u.object,
    tooltip: u.object,
    transition: u.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: u.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: u.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: u.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: u.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: u.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: u.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: u.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: u.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: u.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: u.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: u.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: u.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: u.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: u.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: u.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: u.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    arrow: u.oneOfType([u.func, u.object]),
    popper: u.oneOfType([u.func, u.object]),
    tooltip: u.oneOfType([u.func, u.object]),
    transition: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    arrow: u.elementType,
    popper: u.elementType,
    tooltip: u.elementType,
    transition: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: u.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: u.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: u.object
});
const ra = VQ({
  createStyledComponent: Ue("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, t) => t.root
  }),
  useThemeProps: (e) => mn({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (ra.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: u.oneOfType([u.oneOf(["column-reverse", "column", "row-reverse", "row"]), u.arrayOf(u.oneOf(["column-reverse", "column", "row-reverse", "row"])), u.object]),
  /**
   * Add an element between each child.
   */
  divider: u.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string])), u.number, u.object, u.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: u.bool
});
const KV = /* @__PURE__ */ x.createContext();
process.env.NODE_ENV !== "production" && (KV.displayName = "TableContext");
const YV = /* @__PURE__ */ x.createContext();
process.env.NODE_ENV !== "production" && (YV.displayName = "Tablelvl2Context");
function xoe(e) {
  return an("MuiTableCell", e);
}
const Eoe = pn("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), Toe = (e) => {
  const {
    classes: t,
    variant: n,
    align: r,
    padding: o,
    size: s,
    stickyHeader: a
  } = e, c = {
    root: ["root", n, a && "stickyHeader", r !== "inherit" && `align${He(r)}`, o !== "normal" && `padding${He(o)}`, `size${He(s)}`]
  };
  return mt(c, xoe, t);
}, _oe = Ue("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`size${He(n.size)}`], n.padding !== "normal" && t[`padding${He(n.padding)}`], n.align !== "inherit" && t[`align${He(n.align)}`], n.stickyHeader && t.stickyHeader];
  }
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body2,
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? Qf(An(e.palette.divider, 1), 0.88) : Xf(An(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16,
  variants: [{
    props: {
      variant: "head"
    },
    style: {
      color: (e.vars || e).palette.text.primary,
      lineHeight: e.typography.pxToRem(24),
      fontWeight: e.typography.fontWeightMedium
    }
  }, {
    props: {
      variant: "body"
    },
    style: {
      color: (e.vars || e).palette.text.primary
    }
  }, {
    props: {
      variant: "footer"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      lineHeight: e.typography.pxToRem(21),
      fontSize: e.typography.pxToRem(12)
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      padding: "6px 16px",
      [`&.${Eoe.paddingCheckbox}`]: {
        width: 24,
        // prevent the checkbox column from growing
        padding: "0 12px 0 16px",
        "& > *": {
          padding: 0
        }
      }
    }
  }, {
    props: {
      padding: "checkbox"
    },
    style: {
      width: 48,
      // prevent the checkbox column from growing
      padding: "0 0 0 4px"
    }
  }, {
    props: {
      padding: "none"
    },
    style: {
      padding: 0
    }
  }, {
    props: {
      align: "left"
    },
    style: {
      textAlign: "left"
    }
  }, {
    props: {
      align: "center"
    },
    style: {
      textAlign: "center"
    }
  }, {
    props: {
      align: "right"
    },
    style: {
      textAlign: "right",
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      align: "justify"
    },
    style: {
      textAlign: "justify"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 2,
      backgroundColor: (e.vars || e).palette.background.default
    }
  }]
}))), FT = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiTableCell"
  }), {
    align: o = "inherit",
    className: s,
    component: a,
    padding: c,
    scope: f,
    size: m,
    sortDirection: g,
    variant: y,
    ...w
  } = r, C = x.useContext(KV), T = x.useContext(YV), E = T && T.variant === "head";
  let O;
  a ? O = a : O = E ? "th" : "td";
  let k = f;
  O === "td" ? k = void 0 : !k && E && (k = "col");
  const I = y || T && T.variant, M = {
    ...r,
    align: o,
    component: O,
    padding: c || (C && C.padding ? C.padding : "normal"),
    size: m || (C && C.size ? C.size : "medium"),
    sortDirection: g,
    stickyHeader: I === "head" && C && C.stickyHeader,
    variant: I
  }, N = Toe(M);
  let P = null;
  return g && (P = g === "asc" ? "ascending" : "descending"), /* @__PURE__ */ $.jsx(_oe, {
    as: O,
    ref: n,
    className: et(N.root, s),
    "aria-sort": P,
    scope: k,
    ownerState: M,
    ...w
  });
});
process.env.NODE_ENV !== "production" && (FT.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: u.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: u.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: u.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: u.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: u.oneOfType([u.oneOf(["body", "footer", "head"]), u.string])
});
function Ooe(e) {
  return an("MuiToolbar", e);
}
pn("MuiToolbar", ["root", "gutters", "regular", "dense"]);
const Roe = (e) => {
  const {
    classes: t,
    disableGutters: n,
    variant: r
  } = e;
  return mt({
    root: ["root", !n && "gutters", r]
  }, Ooe, t);
}, koe = Ue("div", {
  name: "MuiToolbar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disableGutters && t.gutters, t[n.variant]];
  }
})(Zt(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: e.spacing(2),
      paddingRight: e.spacing(2),
      [e.breakpoints.up("sm")]: {
        paddingLeft: e.spacing(3),
        paddingRight: e.spacing(3)
      }
    }
  }, {
    props: {
      variant: "dense"
    },
    style: {
      minHeight: 48
    }
  }, {
    props: {
      variant: "regular"
    },
    style: e.mixins.toolbar
  }]
}))), dD = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiToolbar"
  }), {
    className: o,
    component: s = "div",
    disableGutters: a = !1,
    variant: c = "regular",
    ...f
  } = r, m = {
    ...r,
    component: s,
    disableGutters: a,
    variant: c
  }, g = Roe(m);
  return /* @__PURE__ */ $.jsx(koe, {
    as: s,
    className: et(g.root, o),
    ref: n,
    ownerState: m,
    ...f
  });
});
process.env.NODE_ENV !== "production" && (dD.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * If `true`, disables gutter padding.
   * @default false
   */
  disableGutters: u.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant to use.
   * @default 'regular'
   */
  variant: u.oneOfType([u.oneOf(["dense", "regular"]), u.string])
});
const Poe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), Moe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight"), XV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const {
    backIconButtonProps: r,
    count: o,
    disabled: s = !1,
    getItemAriaLabel: a,
    nextIconButtonProps: c,
    onPageChange: f,
    page: m,
    rowsPerPage: g,
    showFirstButton: y,
    showLastButton: w,
    slots: C = {},
    slotProps: T = {},
    ...E
  } = t, O = cy(), k = (B) => {
    f(B, 0);
  }, I = (B) => {
    f(B, m - 1);
  }, M = (B) => {
    f(B, m + 1);
  }, N = (B) => {
    f(B, Math.max(0, Math.ceil(o / g) - 1));
  }, P = C.firstButton ?? cu, F = C.lastButton ?? cu, H = C.nextButton ?? cu, U = C.previousButton ?? cu, z = C.firstButtonIcon ?? toe, A = C.lastButtonIcon ?? noe, q = C.nextButtonIcon ?? Moe, W = C.previousButtonIcon ?? Poe, Y = O ? F : P, ee = O ? H : U, G = O ? U : H, K = O ? P : F, X = O ? T.lastButton : T.firstButton, te = O ? T.nextButton : T.previousButton, re = O ? T.previousButton : T.nextButton, Q = O ? T.firstButton : T.lastButton;
  return /* @__PURE__ */ $.jsxs("div", {
    ref: n,
    ...E,
    children: [y && /* @__PURE__ */ $.jsx(Y, {
      onClick: k,
      disabled: s || m === 0,
      "aria-label": a("first", m),
      title: a("first", m),
      ...X,
      children: O ? /* @__PURE__ */ $.jsx(A, {
        ...T.lastButtonIcon
      }) : /* @__PURE__ */ $.jsx(z, {
        ...T.firstButtonIcon
      })
    }), /* @__PURE__ */ $.jsx(ee, {
      onClick: I,
      disabled: s || m === 0,
      color: "inherit",
      "aria-label": a("previous", m),
      title: a("previous", m),
      ...te ?? r,
      children: O ? /* @__PURE__ */ $.jsx(q, {
        ...T.nextButtonIcon
      }) : /* @__PURE__ */ $.jsx(W, {
        ...T.previousButtonIcon
      })
    }), /* @__PURE__ */ $.jsx(G, {
      onClick: M,
      disabled: s || (o !== -1 ? m >= Math.ceil(o / g) - 1 : !1),
      color: "inherit",
      "aria-label": a("next", m),
      title: a("next", m),
      ...re ?? c,
      children: O ? /* @__PURE__ */ $.jsx(W, {
        ...T.previousButtonIcon
      }) : /* @__PURE__ */ $.jsx(q, {
        ...T.nextButtonIcon
      })
    }), w && /* @__PURE__ */ $.jsx(K, {
      onClick: N,
      disabled: s || m >= Math.ceil(o / g) - 1,
      "aria-label": a("last", m),
      title: a("last", m),
      ...Q,
      children: O ? /* @__PURE__ */ $.jsx(z, {
        ...T.firstButtonIcon
      }) : /* @__PURE__ */ $.jsx(A, {
        ...T.lastButtonIcon
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (XV.propTypes = {
  /**
   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  backIconButtonProps: u.object,
  /**
   * The total number of rows.
   */
  count: u.number.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   *
   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
   *
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
   * @param {number} page The page number to format.
   * @returns {string}
   */
  getItemAriaLabel: u.func.isRequired,
  /**
   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.
   */
  nextIconButtonProps: u.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: u.func.isRequired,
  /**
   * The zero-based index of the current page.
   */
  page: u.number.isRequired,
  /**
   * The number of rows per page.
   */
  rowsPerPage: u.number.isRequired,
  /**
   * If `true`, show the first-page button.
   */
  showFirstButton: u.bool.isRequired,
  /**
   * If `true`, show the last-page button.
   */
  showLastButton: u.bool.isRequired,
  /**
   * The props used for each slot inside the TablePaginationActions.
   * @default {}
   */
  slotProps: u.shape({
    firstButton: u.object,
    firstButtonIcon: u.object,
    lastButton: u.object,
    lastButtonIcon: u.object,
    nextButton: u.object,
    nextButtonIcon: u.object,
    previousButton: u.object,
    previousButtonIcon: u.object
  }),
  /**
   * The components used for each slot inside the TablePaginationActions.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: u.shape({
    firstButton: u.elementType,
    firstButtonIcon: u.elementType,
    lastButton: u.elementType,
    lastButtonIcon: u.elementType,
    nextButton: u.elementType,
    nextButtonIcon: u.elementType,
    previousButton: u.elementType,
    previousButtonIcon: u.elementType
  })
});
function Ioe(e) {
  return an("MuiTablePagination", e);
}
const nm = pn("MuiTablePagination", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);
var VF;
const Doe = Ue(FT, {
  name: "MuiTablePagination",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(Zt(({
  theme: e
}) => ({
  overflow: "auto",
  color: (e.vars || e).palette.text.primary,
  fontSize: e.typography.pxToRem(14),
  // Increase the specificity to override TableCell.
  "&:last-child": {
    padding: 0
  }
}))), Aoe = Ue(dD, {
  name: "MuiTablePagination",
  slot: "Toolbar",
  overridesResolver: (e, t) => ({
    [`& .${nm.actions}`]: t.actions,
    ...t.toolbar
  })
})(Zt(({
  theme: e
}) => ({
  minHeight: 52,
  paddingRight: 2,
  [`${e.breakpoints.up("xs")} and (orientation: landscape)`]: {
    minHeight: 52
  },
  [e.breakpoints.up("sm")]: {
    minHeight: 52,
    paddingRight: 2
  },
  [`& .${nm.actions}`]: {
    flexShrink: 0,
    marginLeft: 20
  }
}))), Noe = Ue("div", {
  name: "MuiTablePagination",
  slot: "Spacer",
  overridesResolver: (e, t) => t.spacer
})({
  flex: "1 1 100%"
}), Loe = Ue("p", {
  name: "MuiTablePagination",
  slot: "SelectLabel",
  overridesResolver: (e, t) => t.selectLabel
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
}))), $oe = Ue(fy, {
  name: "MuiTablePagination",
  slot: "Select",
  overridesResolver: (e, t) => ({
    [`& .${nm.selectIcon}`]: t.selectIcon,
    [`& .${nm.select}`]: t.select,
    ...t.input,
    ...t.selectRoot
  })
})({
  color: "inherit",
  fontSize: "inherit",
  flexShrink: 0,
  marginRight: 32,
  marginLeft: 8,
  [`& .${nm.select}`]: {
    paddingLeft: 8,
    paddingRight: 24,
    textAlign: "right",
    textAlignLast: "right"
    // Align <select> on Chrome.
  }
}), joe = Ue(vl, {
  name: "MuiTablePagination",
  slot: "MenuItem",
  overridesResolver: (e, t) => t.menuItem
})({}), Foe = Ue("p", {
  name: "MuiTablePagination",
  slot: "DisplayedRows",
  overridesResolver: (e, t) => t.displayedRows
})(Zt(({
  theme: e
}) => ({
  ...e.typography.body2,
  flexShrink: 0
})));
function zoe({
  from: e,
  to: t,
  count: n
}) {
  return `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`;
}
function Boe(e) {
  return `Go to ${e} page`;
}
const Hoe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  }, Ioe, t);
}, QV = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiTablePagination"
  }), {
    ActionsComponent: o = XV,
    backIconButtonProps: s,
    colSpan: a,
    component: c = FT,
    count: f,
    disabled: m = !1,
    getItemAriaLabel: g = Boe,
    labelDisplayedRows: y = zoe,
    labelRowsPerPage: w = "Rows per page:",
    nextIconButtonProps: C,
    onPageChange: T,
    onRowsPerPageChange: E,
    page: O,
    rowsPerPage: k,
    rowsPerPageOptions: I = [10, 25, 50, 100],
    SelectProps: M = {},
    showFirstButton: N = !1,
    showLastButton: P = !1,
    slotProps: F = {},
    slots: H = {},
    ...U
  } = r, z = r, A = Hoe(z), q = (F == null ? void 0 : F.select) ?? M, W = q.native ? "option" : joe;
  let Y;
  (c === FT || c === "td") && (Y = a || 1e3);
  const ee = pr(q.id), G = pr(q.labelId), K = () => f === -1 ? (O + 1) * k : k === -1 ? f : Math.min(f, (O + 1) * k), X = {
    slots: H,
    slotProps: F
  }, [te, re] = vn("root", {
    ref: n,
    className: A.root,
    elementType: Doe,
    externalForwardedProps: {
      ...X,
      component: c,
      ...U
    },
    ownerState: z,
    additionalProps: {
      colSpan: Y
    }
  }), [Q, B] = vn("toolbar", {
    className: A.toolbar,
    elementType: Aoe,
    externalForwardedProps: X,
    ownerState: z
  }), [ie, de] = vn("spacer", {
    className: A.spacer,
    elementType: Noe,
    externalForwardedProps: X,
    ownerState: z
  }), [ue, he] = vn("selectLabel", {
    className: A.selectLabel,
    elementType: Loe,
    externalForwardedProps: X,
    ownerState: z,
    additionalProps: {
      id: G
    }
  }), [ge, fe] = vn("select", {
    className: A.select,
    elementType: $oe,
    externalForwardedProps: X,
    ownerState: z
  }), [pe, be] = vn("menuItem", {
    className: A.menuItem,
    elementType: W,
    externalForwardedProps: X,
    ownerState: z
  }), [we, _e] = vn("displayedRows", {
    className: A.displayedRows,
    elementType: Foe,
    externalForwardedProps: X,
    ownerState: z
  });
  return /* @__PURE__ */ $.jsx(te, {
    ...re,
    children: /* @__PURE__ */ $.jsxs(Q, {
      ...B,
      children: [/* @__PURE__ */ $.jsx(ie, {
        ...de
      }), I.length > 1 && /* @__PURE__ */ $.jsx(ue, {
        ...he,
        children: w
      }), I.length > 1 && /* @__PURE__ */ $.jsx(ge, {
        variant: "standard",
        ...!q.variant && {
          input: VF || (VF = /* @__PURE__ */ $.jsx(hm, {}))
        },
        value: k,
        onChange: E,
        id: ee,
        labelId: G,
        ...q,
        classes: {
          ...q.classes,
          // TODO v5 remove `classes.input`
          root: et(A.input, A.selectRoot, (q.classes || {}).root),
          select: et(A.select, (q.classes || {}).select),
          // TODO v5 remove `selectIcon`
          icon: et(A.selectIcon, (q.classes || {}).icon)
        },
        disabled: m,
        ...fe,
        children: I.map((ce) => /* @__PURE__ */ x.createElement(pe, {
          ...be,
          key: ce.label ? ce.label : ce,
          value: ce.value ? ce.value : ce
        }, ce.label ? ce.label : ce))
      }), /* @__PURE__ */ $.jsx(we, {
        ..._e,
        children: y({
          from: f === 0 ? 0 : O * k + 1,
          to: K(),
          count: f === -1 ? -1 : f,
          page: O
        })
      }), /* @__PURE__ */ $.jsx(o, {
        className: A.actions,
        backIconButtonProps: s,
        count: f,
        nextIconButtonProps: C,
        onPageChange: T,
        page: O,
        rowsPerPage: k,
        showFirstButton: N,
        showLastButton: P,
        slotProps: F.actions,
        slots: H.actions,
        getItemAriaLabel: g,
        disabled: m
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (QV.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The component used for displaying the actions.
   * Either a string to use a HTML element or a component.
   * @default TablePaginationActions
   */
  ActionsComponent: u.elementType,
  /**
   * Props applied to the back arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) component.
   *
   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.previousButton` instead.
   */
  backIconButtonProps: u.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  colSpan: u.number,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: u.elementType,
  /**
   * The total number of rows.
   *
   * To enable server side pagination for an unknown number of items, provide -1.
   */
  count: Jh.isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
   * @returns {string}
   * @default function defaultGetAriaLabel(type) {
   *   return `Go to ${type} page`;
   * }
   */
  getItemAriaLabel: u.func,
  /**
   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
   * object.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default function defaultLabelDisplayedRows({ from, to, count }) {
   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
   * }
   */
  labelDisplayedRows: u.func,
  /**
   * Customize the rows per page label.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Rows per page:'
   */
  labelRowsPerPage: u.node,
  /**
   * Props applied to the next arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) element.
   *
   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.actions.nextButton` instead.
   */
  nextIconButtonProps: u.object,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onPageChange: u.func.isRequired,
  /**
   * Callback fired when the number of rows per page is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   */
  onRowsPerPageChange: u.func,
  /**
   * The zero-based index of the current page.
   */
  page: Na(Jh.isRequired, (e) => {
    const {
      count: t,
      page: n,
      rowsPerPage: r
    } = e;
    if (t === -1)
      return null;
    const o = Math.max(0, Math.ceil(t / r) - 1);
    return n < 0 || n > o ? new Error(`MUI: The page prop of a TablePagination is out of range (0 to ${o}, but page is ${n}).`) : null;
  }),
  /**
   * The number of rows per page.
   *
   * Set -1 to display all the rows.
   */
  rowsPerPage: Jh.isRequired,
  /**
   * Customizes the options of the rows per page select field. If less than two options are
   * available, no select field will be displayed.
   * Use -1 for the value with a custom label to show all the rows.
   * @default [10, 25, 50, 100]
   */
  rowsPerPageOptions: u.arrayOf(u.oneOfType([u.number, u.shape({
    label: u.string.isRequired,
    value: u.number.isRequired
  })]).isRequired),
  /**
   * Props applied to the rows per page [`Select`](https://mui.com/material-ui/api/select/) element.
   *
   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.select` instead.
   *
   * @default {}
   */
  SelectProps: u.object,
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: u.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: u.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    actions: u.shape({
      firstButton: u.object,
      firstButtonIcon: u.object,
      lastButton: u.object,
      lastButtonIcon: u.object,
      nextButton: u.object,
      nextButtonIcon: u.object,
      previousButton: u.object,
      previousButtonIcon: u.object
    }),
    displayedRows: u.oneOfType([u.func, u.object]),
    menuItem: u.oneOfType([u.func, u.object]),
    root: u.oneOfType([u.func, u.object]),
    select: u.object,
    selectLabel: u.oneOfType([u.func, u.object]),
    spacer: u.oneOfType([u.func, u.object]),
    toolbar: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    actions: u.shape({
      firstButton: u.elementType,
      firstButtonIcon: u.elementType,
      lastButton: u.elementType,
      lastButtonIcon: u.elementType,
      nextButton: u.elementType,
      nextButtonIcon: u.elementType,
      previousButton: u.elementType,
      previousButtonIcon: u.elementType
    }),
    displayedRows: u.elementType,
    menuItem: u.elementType,
    root: u.elementType,
    select: u.elementType,
    selectLabel: u.elementType,
    spacer: u.elementType,
    toolbar: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
function Voe(e) {
  return an("MuiTextField", e);
}
pn("MuiTextField", ["root"]);
const Uoe = {
  standard: W_,
  filled: V_,
  outlined: q_
}, Woe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["root"]
  }, Voe, t);
}, Goe = Ue(U_, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), jf = /* @__PURE__ */ x.forwardRef(function(t, n) {
  const r = mn({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: s = !1,
    children: a,
    className: c,
    color: f = "primary",
    defaultValue: m,
    disabled: g = !1,
    error: y = !1,
    FormHelperTextProps: w,
    fullWidth: C = !1,
    helperText: T,
    id: E,
    InputLabelProps: O,
    inputProps: k,
    InputProps: I,
    inputRef: M,
    label: N,
    maxRows: P,
    minRows: F,
    multiline: H = !1,
    name: U,
    onBlur: z,
    onChange: A,
    onFocus: q,
    placeholder: W,
    required: Y = !1,
    rows: ee,
    select: G = !1,
    SelectProps: K,
    slots: X = {},
    slotProps: te = {},
    type: re,
    value: Q,
    variant: B = "outlined",
    ...ie
  } = r, de = {
    ...r,
    autoFocus: s,
    color: f,
    disabled: g,
    error: y,
    fullWidth: C,
    multiline: H,
    required: Y,
    select: G,
    variant: B
  }, ue = Woe(de);
  process.env.NODE_ENV !== "production" && G && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const he = pr(E), ge = T && he ? `${he}-helper-text` : void 0, fe = N && he ? `${he}-label` : void 0, pe = Uoe[B], be = {
    slots: X,
    slotProps: {
      input: I,
      inputLabel: O,
      htmlInput: k,
      formHelperText: w,
      select: K,
      ...te
    }
  }, we = {}, _e = be.slotProps.inputLabel;
  B === "outlined" && (_e && typeof _e.shrink < "u" && (we.notched = _e.shrink), we.label = N), G && ((!K || !K.native) && (we.id = void 0), we["aria-describedby"] = void 0);
  const [ce, Ce] = vn("root", {
    elementType: Goe,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...be,
      ...ie
    },
    ownerState: de,
    className: et(ue.root, c),
    ref: n,
    additionalProps: {
      disabled: g,
      error: y,
      fullWidth: C,
      required: Y,
      color: f,
      variant: B
    }
  }), [Ne, Be] = vn("input", {
    elementType: pe,
    externalForwardedProps: be,
    additionalProps: we,
    ownerState: de
  }), [tt, $e] = vn("inputLabel", {
    elementType: G_,
    externalForwardedProps: be,
    ownerState: de
  }), [rt, ot] = vn("htmlInput", {
    elementType: "input",
    externalForwardedProps: be,
    ownerState: de
  }), [wt, gt] = vn("formHelperText", {
    elementType: IV,
    externalForwardedProps: be,
    ownerState: de
  }), [nt, Ft] = vn("select", {
    elementType: fy,
    externalForwardedProps: be,
    ownerState: de
  }), ut = /* @__PURE__ */ $.jsx(Ne, {
    "aria-describedby": ge,
    autoComplete: o,
    autoFocus: s,
    defaultValue: m,
    fullWidth: C,
    multiline: H,
    name: U,
    rows: ee,
    maxRows: P,
    minRows: F,
    type: re,
    value: Q,
    id: he,
    inputRef: M,
    onBlur: z,
    onChange: A,
    onFocus: q,
    placeholder: W,
    inputProps: ot,
    slots: {
      input: X.htmlInput ? rt : void 0
    },
    ...Be
  });
  return /* @__PURE__ */ $.jsxs(ce, {
    ...Ce,
    children: [N != null && N !== "" && /* @__PURE__ */ $.jsx(tt, {
      htmlFor: he,
      id: fe,
      ...$e,
      children: N
    }), G ? /* @__PURE__ */ $.jsx(nt, {
      "aria-describedby": ge,
      id: he,
      labelId: fe,
      value: Q,
      input: ut,
      ...Ft,
      children: a
    }) : ut, T && /* @__PURE__ */ $.jsx(wt, {
      id: ge,
      ...gt,
      children: T
    })]
  });
});
process.env.NODE_ENV !== "production" && (jf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: u.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: u.bool,
  /**
   * @ignore
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * @ignore
   */
  className: u.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: u.oneOfType([u.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), u.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: u.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: u.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: u.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: u.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: u.bool,
  /**
   * The helper text content.
   */
  helperText: u.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: u.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: u.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: u.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: u.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: ca,
  /**
   * The label content.
   */
  label: u.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: u.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: u.oneOfType([u.number, u.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: u.oneOfType([u.number, u.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: u.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: u.string,
  /**
   * @ignore
   */
  onBlur: u.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: u.func,
  /**
   * @ignore
   */
  onFocus: u.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: u.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: u.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: u.oneOfType([u.number, u.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: u.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: u.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: u.oneOfType([u.oneOf(["medium", "small"]), u.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.shape({
    formHelperText: u.oneOfType([u.func, u.object]),
    htmlInput: u.oneOfType([u.func, u.object]),
    input: u.oneOfType([u.func, u.object]),
    inputLabel: u.oneOfType([u.func, u.object]),
    select: u.oneOfType([u.func, u.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: u.shape({
    formHelperText: u.elementType,
    htmlInput: u.elementType,
    input: u.elementType,
    inputLabel: u.elementType,
    root: u.elementType,
    select: u.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: u.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: u.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: u.oneOf(["filled", "outlined", "standard"])
});
const qoe = (e) => {
  let t;
  return e ? t = e : typeof fetch > "u" ? t = (...n) => Promise.resolve().then(() => py).then(({ default: r }) => r(...n)) : t = fetch, (...n) => t(...n);
};
class fD extends Error {
  constructor(t, n = "FunctionsError", r) {
    super(t), this.name = n, this.context = r;
  }
}
class UF extends fD {
  constructor(t) {
    super("Failed to send a request to the Edge Function", "FunctionsFetchError", t);
  }
}
class WF extends fD {
  constructor(t) {
    super("Relay Error invoking the Edge Function", "FunctionsRelayError", t);
  }
}
class GF extends fD {
  constructor(t) {
    super("Edge Function returned a non-2xx status code", "FunctionsHttpError", t);
  }
}
var _M;
(function(e) {
  e.Any = "any", e.ApNortheast1 = "ap-northeast-1", e.ApNortheast2 = "ap-northeast-2", e.ApSouth1 = "ap-south-1", e.ApSoutheast1 = "ap-southeast-1", e.ApSoutheast2 = "ap-southeast-2", e.CaCentral1 = "ca-central-1", e.EuCentral1 = "eu-central-1", e.EuWest1 = "eu-west-1", e.EuWest2 = "eu-west-2", e.EuWest3 = "eu-west-3", e.SaEast1 = "sa-east-1", e.UsEast1 = "us-east-1", e.UsWest1 = "us-west-1", e.UsWest2 = "us-west-2";
})(_M || (_M = {}));
var Koe = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
class Yoe {
  constructor(t, { headers: n = {}, customFetch: r, region: o = _M.Any } = {}) {
    this.url = t, this.headers = n, this.region = o, this.fetch = qoe(r);
  }
  /**
   * Updates the authorization header
   * @param token - the new jwt token sent in the authorisation header
   */
  setAuth(t) {
    this.headers.Authorization = `Bearer ${t}`;
  }
  /**
   * Invokes a function
   * @param functionName - The name of the Function to invoke.
   * @param options - Options for invoking the Function.
   */
  invoke(t) {
    return Koe(this, arguments, void 0, function* (n, r = {}) {
      var o;
      try {
        const { headers: s, method: a, body: c, signal: f } = r;
        let m = {}, { region: g } = r;
        g || (g = this.region);
        const y = new URL(`${this.url}/${n}`);
        g && g !== "any" && (m["x-region"] = g, y.searchParams.set("forceFunctionRegion", g));
        let w;
        c && (s && !Object.prototype.hasOwnProperty.call(s, "Content-Type") || !s) && (typeof Blob < "u" && c instanceof Blob || c instanceof ArrayBuffer ? (m["Content-Type"] = "application/octet-stream", w = c) : typeof c == "string" ? (m["Content-Type"] = "text/plain", w = c) : typeof FormData < "u" && c instanceof FormData ? w = c : (m["Content-Type"] = "application/json", w = JSON.stringify(c)));
        const C = yield this.fetch(y.toString(), {
          method: a || "POST",
          // headers priority is (high to low):
          // 1. invoke-level headers
          // 2. client-level headers
          // 3. default Content-Type header
          headers: Object.assign(Object.assign(Object.assign({}, m), this.headers), s),
          body: w,
          signal: f
        }).catch((k) => {
          throw k.name === "AbortError" ? k : new UF(k);
        }), T = C.headers.get("x-relay-error");
        if (T && T === "true")
          throw new WF(C);
        if (!C.ok)
          throw new GF(C);
        let E = ((o = C.headers.get("Content-Type")) !== null && o !== void 0 ? o : "text/plain").split(";")[0].trim(), O;
        return E === "application/json" ? O = yield C.json() : E === "application/octet-stream" ? O = yield C.blob() : E === "text/event-stream" ? O = C : E === "multipart/form-data" ? O = yield C.formData() : O = yield C.text(), { data: O, error: null, response: C };
      } catch (s) {
        return s instanceof Error && s.name === "AbortError" ? { data: null, error: new UF(s) } : {
          data: null,
          error: s,
          response: s instanceof GF || s instanceof WF ? s.context : void 0
        };
      }
    });
  }
}
var oa = {}, pD = {}, K_ = {}, vC = {}, Y_ = {}, X_ = {}, Xoe = function() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof global < "u")
    return global;
  throw new Error("unable to locate global object");
}, Yv = Xoe();
const Qoe = Yv.fetch, JV = Yv.fetch.bind(Yv), ZV = Yv.Headers, Joe = Yv.Request, Zoe = Yv.Response, py = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Headers: ZV,
  Request: Joe,
  Response: Zoe,
  default: JV,
  fetch: Qoe
}, Symbol.toStringTag, { value: "Module" })), eie = /* @__PURE__ */ $9(py);
var Q_ = {};
Object.defineProperty(Q_, "__esModule", { value: !0 });
let tie = class extends Error {
  constructor(t) {
    super(t.message), this.name = "PostgrestError", this.details = t.details, this.hint = t.hint, this.code = t.code;
  }
};
Q_.default = tie;
var eU = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(X_, "__esModule", { value: !0 });
const nie = eU(eie), rie = eU(Q_);
let oie = class {
  constructor(t) {
    var n, r;
    this.shouldThrowOnError = !1, this.method = t.method, this.url = t.url, this.headers = new Headers(t.headers), this.schema = t.schema, this.body = t.body, this.shouldThrowOnError = (n = t.shouldThrowOnError) !== null && n !== void 0 ? n : !1, this.signal = t.signal, this.isMaybeSingle = (r = t.isMaybeSingle) !== null && r !== void 0 ? r : !1, t.fetch ? this.fetch = t.fetch : typeof fetch > "u" ? this.fetch = nie.default : this.fetch = fetch;
  }
  /**
   * If there's an error with the query, throwOnError will reject the promise by
   * throwing the error instead of returning it as part of a successful response.
   *
   * {@link https://github.com/supabase/supabase-js/issues/92}
   */
  throwOnError() {
    return this.shouldThrowOnError = !0, this;
  }
  /**
   * Set an HTTP header for the request.
   */
  setHeader(t, n) {
    return this.headers = new Headers(this.headers), this.headers.set(t, n), this;
  }
  then(t, n) {
    this.schema === void 0 || (["GET", "HEAD"].includes(this.method) ? this.headers.set("Accept-Profile", this.schema) : this.headers.set("Content-Profile", this.schema)), this.method !== "GET" && this.method !== "HEAD" && this.headers.set("Content-Type", "application/json");
    const r = this.fetch;
    let o = r(this.url.toString(), {
      method: this.method,
      headers: this.headers,
      body: JSON.stringify(this.body),
      signal: this.signal
    }).then(async (s) => {
      var a, c, f, m;
      let g = null, y = null, w = null, C = s.status, T = s.statusText;
      if (s.ok) {
        if (this.method !== "HEAD") {
          const I = await s.text();
          I === "" || (this.headers.get("Accept") === "text/csv" || this.headers.get("Accept") && (!((a = this.headers.get("Accept")) === null || a === void 0) && a.includes("application/vnd.pgrst.plan+text")) ? y = I : y = JSON.parse(I));
        }
        const O = (c = this.headers.get("Prefer")) === null || c === void 0 ? void 0 : c.match(/count=(exact|planned|estimated)/), k = (f = s.headers.get("content-range")) === null || f === void 0 ? void 0 : f.split("/");
        O && k && k.length > 1 && (w = parseInt(k[1])), this.isMaybeSingle && this.method === "GET" && Array.isArray(y) && (y.length > 1 ? (g = {
          // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553
          code: "PGRST116",
          details: `Results contain ${y.length} rows, application/vnd.pgrst.object+json requires 1 row`,
          hint: null,
          message: "JSON object requested, multiple (or no) rows returned"
        }, y = null, w = null, C = 406, T = "Not Acceptable") : y.length === 1 ? y = y[0] : y = null);
      } else {
        const O = await s.text();
        try {
          g = JSON.parse(O), Array.isArray(g) && s.status === 404 && (y = [], g = null, C = 200, T = "OK");
        } catch {
          s.status === 404 && O === "" ? (C = 204, T = "No Content") : g = {
            message: O
          };
        }
        if (g && this.isMaybeSingle && (!((m = g == null ? void 0 : g.details) === null || m === void 0) && m.includes("0 rows")) && (g = null, C = 200, T = "OK"), g && this.shouldThrowOnError)
          throw new rie.default(g);
      }
      return {
        error: g,
        data: y,
        count: w,
        status: C,
        statusText: T
      };
    });
    return this.shouldThrowOnError || (o = o.catch((s) => {
      var a, c, f;
      return {
        error: {
          message: `${(a = s == null ? void 0 : s.name) !== null && a !== void 0 ? a : "FetchError"}: ${s == null ? void 0 : s.message}`,
          details: `${(c = s == null ? void 0 : s.stack) !== null && c !== void 0 ? c : ""}`,
          hint: "",
          code: `${(f = s == null ? void 0 : s.code) !== null && f !== void 0 ? f : ""}`
        },
        data: null,
        count: null,
        status: 0,
        statusText: ""
      };
    })), o.then(t, n);
  }
  /**
   * Override the type of the returned `data`.
   *
   * @typeParam NewResult - The new result type to override with
   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead
   */
  returns() {
    return this;
  }
  /**
   * Override the type of the returned `data` field in the response.
   *
   * @typeParam NewResult - The new type to cast the response data to
   * @typeParam Options - Optional type configuration (defaults to { merge: true })
   * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)
   * @example
   * ```typescript
   * // Merge with existing types (default behavior)
   * const query = supabase
   *   .from('users')
   *   .select()
   *   .overrideTypes<{ custom_field: string }>()
   *
   * // Replace existing types completely
   * const replaceQuery = supabase
   *   .from('users')
   *   .select()
   *   .overrideTypes<{ id: number; name: string }, { merge: false }>()
   * ```
   * @returns A PostgrestBuilder instance with the new type
   */
  overrideTypes() {
    return this;
  }
};
X_.default = oie;
var iie = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(Y_, "__esModule", { value: !0 });
const sie = iie(X_);
let aie = class extends sie.default {
  /**
   * Perform a SELECT on the query result.
   *
   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not
   * return modified rows. By calling this method, modified rows are returned in
   * `data`.
   *
   * @param columns - The columns to retrieve, separated by commas
   */
  select(t) {
    let n = !1;
    const r = (t ?? "*").split("").map((o) => /\s/.test(o) && !n ? "" : (o === '"' && (n = !n), o)).join("");
    return this.url.searchParams.set("select", r), this.headers.append("Prefer", "return=representation"), this;
  }
  /**
   * Order the query result by `column`.
   *
   * You can call this method multiple times to order by multiple columns.
   *
   * You can order referenced tables, but it only affects the ordering of the
   * parent table if you use `!inner` in the query.
   *
   * @param column - The column to order by
   * @param options - Named parameters
   * @param options.ascending - If `true`, the result will be in ascending order
   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,
   * `null`s appear last.
   * @param options.referencedTable - Set this to order a referenced table by
   * its columns
   * @param options.foreignTable - Deprecated, use `options.referencedTable`
   * instead
   */
  order(t, { ascending: n = !0, nullsFirst: r, foreignTable: o, referencedTable: s = o } = {}) {
    const a = s ? `${s}.order` : "order", c = this.url.searchParams.get(a);
    return this.url.searchParams.set(a, `${c ? `${c},` : ""}${t}.${n ? "asc" : "desc"}${r === void 0 ? "" : r ? ".nullsfirst" : ".nullslast"}`), this;
  }
  /**
   * Limit the query result by `count`.
   *
   * @param count - The maximum number of rows to return
   * @param options - Named parameters
   * @param options.referencedTable - Set this to limit rows of referenced
   * tables instead of the parent table
   * @param options.foreignTable - Deprecated, use `options.referencedTable`
   * instead
   */
  limit(t, { foreignTable: n, referencedTable: r = n } = {}) {
    const o = typeof r > "u" ? "limit" : `${r}.limit`;
    return this.url.searchParams.set(o, `${t}`), this;
  }
  /**
   * Limit the query result by starting at an offset `from` and ending at the offset `to`.
   * Only records within this range are returned.
   * This respects the query order and if there is no order clause the range could behave unexpectedly.
   * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third
   * and fourth rows of the query.
   *
   * @param from - The starting index from which to limit the result
   * @param to - The last index to which to limit the result
   * @param options - Named parameters
   * @param options.referencedTable - Set this to limit rows of referenced
   * tables instead of the parent table
   * @param options.foreignTable - Deprecated, use `options.referencedTable`
   * instead
   */
  range(t, n, { foreignTable: r, referencedTable: o = r } = {}) {
    const s = typeof o > "u" ? "offset" : `${o}.offset`, a = typeof o > "u" ? "limit" : `${o}.limit`;
    return this.url.searchParams.set(s, `${t}`), this.url.searchParams.set(a, `${n - t + 1}`), this;
  }
  /**
   * Set the AbortSignal for the fetch request.
   *
   * @param signal - The AbortSignal to use for the fetch request
   */
  abortSignal(t) {
    return this.signal = t, this;
  }
  /**
   * Return `data` as a single object instead of an array of objects.
   *
   * Query result must be one row (e.g. using `.limit(1)`), otherwise this
   * returns an error.
   */
  single() {
    return this.headers.set("Accept", "application/vnd.pgrst.object+json"), this;
  }
  /**
   * Return `data` as a single object instead of an array of objects.
   *
   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise
   * this returns an error.
   */
  maybeSingle() {
    return this.method === "GET" ? this.headers.set("Accept", "application/json") : this.headers.set("Accept", "application/vnd.pgrst.object+json"), this.isMaybeSingle = !0, this;
  }
  /**
   * Return `data` as a string in CSV format.
   */
  csv() {
    return this.headers.set("Accept", "text/csv"), this;
  }
  /**
   * Return `data` as an object in [GeoJSON](https://geojson.org) format.
   */
  geojson() {
    return this.headers.set("Accept", "application/geo+json"), this;
  }
  /**
   * Return `data` as the EXPLAIN plan for the query.
   *
   * You need to enable the
   * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)
   * setting before using this method.
   *
   * @param options - Named parameters
   *
   * @param options.analyze - If `true`, the query will be executed and the
   * actual run time will be returned
   *
   * @param options.verbose - If `true`, the query identifier will be returned
   * and `data` will include the output columns of the query
   *
   * @param options.settings - If `true`, include information on configuration
   * parameters that affect query planning
   *
   * @param options.buffers - If `true`, include information on buffer usage
   *
   * @param options.wal - If `true`, include information on WAL record generation
   *
   * @param options.format - The format of the output, can be `"text"` (default)
   * or `"json"`
   */
  explain({ analyze: t = !1, verbose: n = !1, settings: r = !1, buffers: o = !1, wal: s = !1, format: a = "text" } = {}) {
    var c;
    const f = [
      t ? "analyze" : null,
      n ? "verbose" : null,
      r ? "settings" : null,
      o ? "buffers" : null,
      s ? "wal" : null
    ].filter(Boolean).join("|"), m = (c = this.headers.get("Accept")) !== null && c !== void 0 ? c : "application/json";
    return this.headers.set("Accept", `application/vnd.pgrst.plan+${a}; for="${m}"; options=${f};`), a === "json" ? this : this;
  }
  /**
   * Rollback the query.
   *
   * `data` will still be returned, but the query is not committed.
   */
  rollback() {
    return this.headers.append("Prefer", "tx=rollback"), this;
  }
  /**
   * Override the type of the returned `data`.
   *
   * @typeParam NewResult - The new result type to override with
   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead
   */
  returns() {
    return this;
  }
  /**
   * Set the maximum number of rows that can be affected by the query.
   * Only available in PostgREST v13+ and only works with PATCH and DELETE methods.
   *
   * @param value - The maximum number of rows that can be affected
   */
  maxAffected(t) {
    return this.headers.append("Prefer", "handling=strict"), this.headers.append("Prefer", `max-affected=${t}`), this;
  }
};
Y_.default = aie;
var lie = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(vC, "__esModule", { value: !0 });
const uie = lie(Y_);
let cie = class extends uie.default {
  /**
   * Match only rows where `column` is equal to `value`.
   *
   * To check if the value of `column` is NULL, you should use `.is()` instead.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  eq(t, n) {
    return this.url.searchParams.append(t, `eq.${n}`), this;
  }
  /**
   * Match only rows where `column` is not equal to `value`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  neq(t, n) {
    return this.url.searchParams.append(t, `neq.${n}`), this;
  }
  /**
   * Match only rows where `column` is greater than `value`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  gt(t, n) {
    return this.url.searchParams.append(t, `gt.${n}`), this;
  }
  /**
   * Match only rows where `column` is greater than or equal to `value`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  gte(t, n) {
    return this.url.searchParams.append(t, `gte.${n}`), this;
  }
  /**
   * Match only rows where `column` is less than `value`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  lt(t, n) {
    return this.url.searchParams.append(t, `lt.${n}`), this;
  }
  /**
   * Match only rows where `column` is less than or equal to `value`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  lte(t, n) {
    return this.url.searchParams.append(t, `lte.${n}`), this;
  }
  /**
   * Match only rows where `column` matches `pattern` case-sensitively.
   *
   * @param column - The column to filter on
   * @param pattern - The pattern to match with
   */
  like(t, n) {
    return this.url.searchParams.append(t, `like.${n}`), this;
  }
  /**
   * Match only rows where `column` matches all of `patterns` case-sensitively.
   *
   * @param column - The column to filter on
   * @param patterns - The patterns to match with
   */
  likeAllOf(t, n) {
    return this.url.searchParams.append(t, `like(all).{${n.join(",")}}`), this;
  }
  /**
   * Match only rows where `column` matches any of `patterns` case-sensitively.
   *
   * @param column - The column to filter on
   * @param patterns - The patterns to match with
   */
  likeAnyOf(t, n) {
    return this.url.searchParams.append(t, `like(any).{${n.join(",")}}`), this;
  }
  /**
   * Match only rows where `column` matches `pattern` case-insensitively.
   *
   * @param column - The column to filter on
   * @param pattern - The pattern to match with
   */
  ilike(t, n) {
    return this.url.searchParams.append(t, `ilike.${n}`), this;
  }
  /**
   * Match only rows where `column` matches all of `patterns` case-insensitively.
   *
   * @param column - The column to filter on
   * @param patterns - The patterns to match with
   */
  ilikeAllOf(t, n) {
    return this.url.searchParams.append(t, `ilike(all).{${n.join(",")}}`), this;
  }
  /**
   * Match only rows where `column` matches any of `patterns` case-insensitively.
   *
   * @param column - The column to filter on
   * @param patterns - The patterns to match with
   */
  ilikeAnyOf(t, n) {
    return this.url.searchParams.append(t, `ilike(any).{${n.join(",")}}`), this;
  }
  /**
   * Match only rows where `column` IS `value`.
   *
   * For non-boolean columns, this is only relevant for checking if the value of
   * `column` is NULL by setting `value` to `null`.
   *
   * For boolean columns, you can also set `value` to `true` or `false` and it
   * will behave the same way as `.eq()`.
   *
   * @param column - The column to filter on
   * @param value - The value to filter with
   */
  is(t, n) {
    return this.url.searchParams.append(t, `is.${n}`), this;
  }
  /**
   * Match only rows where `column` is included in the `values` array.
   *
   * @param column - The column to filter on
   * @param values - The values array to filter with
   */
  in(t, n) {
    const r = Array.from(new Set(n)).map((o) => typeof o == "string" && new RegExp("[,()]").test(o) ? `"${o}"` : `${o}`).join(",");
    return this.url.searchParams.append(t, `in.(${r})`), this;
  }
  /**
   * Only relevant for jsonb, array, and range columns. Match only rows where
   * `column` contains every element appearing in `value`.
   *
   * @param column - The jsonb, array, or range column to filter on
   * @param value - The jsonb, array, or range value to filter with
   */
  contains(t, n) {
    return typeof n == "string" ? this.url.searchParams.append(t, `cs.${n}`) : Array.isArray(n) ? this.url.searchParams.append(t, `cs.{${n.join(",")}}`) : this.url.searchParams.append(t, `cs.${JSON.stringify(n)}`), this;
  }
  /**
   * Only relevant for jsonb, array, and range columns. Match only rows where
   * every element appearing in `column` is contained by `value`.
   *
   * @param column - The jsonb, array, or range column to filter on
   * @param value - The jsonb, array, or range value to filter with
   */
  containedBy(t, n) {
    return typeof n == "string" ? this.url.searchParams.append(t, `cd.${n}`) : Array.isArray(n) ? this.url.searchParams.append(t, `cd.{${n.join(",")}}`) : this.url.searchParams.append(t, `cd.${JSON.stringify(n)}`), this;
  }
  /**
   * Only relevant for range columns. Match only rows where every element in
   * `column` is greater than any element in `range`.
   *
   * @param column - The range column to filter on
   * @param range - The range to filter with
   */
  rangeGt(t, n) {
    return this.url.searchParams.append(t, `sr.${n}`), this;
  }
  /**
   * Only relevant for range columns. Match only rows where every element in
   * `column` is either contained in `range` or greater than any element in
   * `range`.
   *
   * @param column - The range column to filter on
   * @param range - The range to filter with
   */
  rangeGte(t, n) {
    return this.url.searchParams.append(t, `nxl.${n}`), this;
  }
  /**
   * Only relevant for range columns. Match only rows where every element in
   * `column` is less than any element in `range`.
   *
   * @param column - The range column to filter on
   * @param range - The range to filter with
   */
  rangeLt(t, n) {
    return this.url.searchParams.append(t, `sl.${n}`), this;
  }
  /**
   * Only relevant for range columns. Match only rows where every element in
   * `column` is either contained in `range` or less than any element in
   * `range`.
   *
   * @param column - The range column to filter on
   * @param range - The range to filter with
   */
  rangeLte(t, n) {
    return this.url.searchParams.append(t, `nxr.${n}`), this;
  }
  /**
   * Only relevant for range columns. Match only rows where `column` is
   * mutually exclusive to `range` and there can be no element between the two
   * ranges.
   *
   * @param column - The range column to filter on
   * @param range - The range to filter with
   */
  rangeAdjacent(t, n) {
    return this.url.searchParams.append(t, `adj.${n}`), this;
  }
  /**
   * Only relevant for array and range columns. Match only rows where
   * `column` and `value` have an element in common.
   *
   * @param column - The array or range column to filter on
   * @param value - The array or range value to filter with
   */
  overlaps(t, n) {
    return typeof n == "string" ? this.url.searchParams.append(t, `ov.${n}`) : this.url.searchParams.append(t, `ov.{${n.join(",")}}`), this;
  }
  /**
   * Only relevant for text and tsvector columns. Match only rows where
   * `column` matches the query string in `query`.
   *
   * @param column - The text or tsvector column to filter on
   * @param query - The query text to match with
   * @param options - Named parameters
   * @param options.config - The text search configuration to use
   * @param options.type - Change how the `query` text is interpreted
   */
  textSearch(t, n, { config: r, type: o } = {}) {
    let s = "";
    o === "plain" ? s = "pl" : o === "phrase" ? s = "ph" : o === "websearch" && (s = "w");
    const a = r === void 0 ? "" : `(${r})`;
    return this.url.searchParams.append(t, `${s}fts${a}.${n}`), this;
  }
  /**
   * Match only rows where each column in `query` keys is equal to its
   * associated value. Shorthand for multiple `.eq()`s.
   *
   * @param query - The object to filter with, with column names as keys mapped
   * to their filter values
   */
  match(t) {
    return Object.entries(t).forEach(([n, r]) => {
      this.url.searchParams.append(n, `eq.${r}`);
    }), this;
  }
  /**
   * Match only rows which doesn't satisfy the filter.
   *
   * Unlike most filters, `opearator` and `value` are used as-is and need to
   * follow [PostgREST
   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
   * to make sure they are properly sanitized.
   *
   * @param column - The column to filter on
   * @param operator - The operator to be negated to filter with, following
   * PostgREST syntax
   * @param value - The value to filter with, following PostgREST syntax
   */
  not(t, n, r) {
    return this.url.searchParams.append(t, `not.${n}.${r}`), this;
  }
  /**
   * Match only rows which satisfy at least one of the filters.
   *
   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST
   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
   * to make sure it's properly sanitized.
   *
   * It's currently not possible to do an `.or()` filter across multiple tables.
   *
   * @param filters - The filters to use, following PostgREST syntax
   * @param options - Named parameters
   * @param options.referencedTable - Set this to filter on referenced tables
   * instead of the parent table
   * @param options.foreignTable - Deprecated, use `referencedTable` instead
   */
  or(t, { foreignTable: n, referencedTable: r = n } = {}) {
    const o = r ? `${r}.or` : "or";
    return this.url.searchParams.append(o, `(${t})`), this;
  }
  /**
   * Match only rows which satisfy the filter. This is an escape hatch - you
   * should use the specific filter methods wherever possible.
   *
   * Unlike most filters, `opearator` and `value` are used as-is and need to
   * follow [PostgREST
   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
   * to make sure they are properly sanitized.
   *
   * @param column - The column to filter on
   * @param operator - The operator to filter with, following PostgREST syntax
   * @param value - The value to filter with, following PostgREST syntax
   */
  filter(t, n, r) {
    return this.url.searchParams.append(t, `${n}.${r}`), this;
  }
};
vC.default = cie;
var die = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(K_, "__esModule", { value: !0 });
const Bw = die(vC);
let fie = class {
  constructor(t, { headers: n = {}, schema: r, fetch: o }) {
    this.url = t, this.headers = new Headers(n), this.schema = r, this.fetch = o;
  }
  /**
   * Perform a SELECT query on the table or view.
   *
   * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`
   *
   * @param options - Named parameters
   *
   * @param options.head - When set to `true`, `data` will not be returned.
   * Useful if you only need the count.
   *
   * @param options.count - Count algorithm to use to count rows in the table or view.
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   */
  select(t, n) {
    const { head: r = !1, count: o } = n ?? {}, s = r ? "HEAD" : "GET";
    let a = !1;
    const c = (t ?? "*").split("").map((f) => /\s/.test(f) && !a ? "" : (f === '"' && (a = !a), f)).join("");
    return this.url.searchParams.set("select", c), o && this.headers.append("Prefer", `count=${o}`), new Bw.default({
      method: s,
      url: this.url,
      headers: this.headers,
      schema: this.schema,
      fetch: this.fetch
    });
  }
  /**
   * Perform an INSERT into the table or view.
   *
   * By default, inserted rows are not returned. To return it, chain the call
   * with `.select()`.
   *
   * @param values - The values to insert. Pass an object to insert a single row
   * or an array to insert multiple rows.
   *
   * @param options - Named parameters
   *
   * @param options.count - Count algorithm to use to count inserted rows.
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   *
   * @param options.defaultToNull - Make missing fields default to `null`.
   * Otherwise, use the default value for the column. Only applies for bulk
   * inserts.
   */
  insert(t, { count: n, defaultToNull: r = !0 } = {}) {
    var o;
    const s = "POST";
    if (n && this.headers.append("Prefer", `count=${n}`), r || this.headers.append("Prefer", "missing=default"), Array.isArray(t)) {
      const a = t.reduce((c, f) => c.concat(Object.keys(f)), []);
      if (a.length > 0) {
        const c = [...new Set(a)].map((f) => `"${f}"`);
        this.url.searchParams.set("columns", c.join(","));
      }
    }
    return new Bw.default({
      method: s,
      url: this.url,
      headers: this.headers,
      schema: this.schema,
      body: t,
      fetch: (o = this.fetch) !== null && o !== void 0 ? o : fetch
    });
  }
  /**
   * Perform an UPSERT on the table or view. Depending on the column(s) passed
   * to `onConflict`, `.upsert()` allows you to perform the equivalent of
   * `.insert()` if a row with the corresponding `onConflict` columns doesn't
   * exist, or if it does exist, perform an alternative action depending on
   * `ignoreDuplicates`.
   *
   * By default, upserted rows are not returned. To return it, chain the call
   * with `.select()`.
   *
   * @param values - The values to upsert with. Pass an object to upsert a
   * single row or an array to upsert multiple rows.
   *
   * @param options - Named parameters
   *
   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how
   * duplicate rows are determined. Two rows are duplicates if all the
   * `onConflict` columns are equal.
   *
   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If
   * `false`, duplicate rows are merged with existing rows.
   *
   * @param options.count - Count algorithm to use to count upserted rows.
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   *
   * @param options.defaultToNull - Make missing fields default to `null`.
   * Otherwise, use the default value for the column. This only applies when
   * inserting new rows, not when merging with existing rows under
   * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.
   */
  upsert(t, { onConflict: n, ignoreDuplicates: r = !1, count: o, defaultToNull: s = !0 } = {}) {
    var a;
    const c = "POST";
    if (this.headers.append("Prefer", `resolution=${r ? "ignore" : "merge"}-duplicates`), n !== void 0 && this.url.searchParams.set("on_conflict", n), o && this.headers.append("Prefer", `count=${o}`), s || this.headers.append("Prefer", "missing=default"), Array.isArray(t)) {
      const f = t.reduce((m, g) => m.concat(Object.keys(g)), []);
      if (f.length > 0) {
        const m = [...new Set(f)].map((g) => `"${g}"`);
        this.url.searchParams.set("columns", m.join(","));
      }
    }
    return new Bw.default({
      method: c,
      url: this.url,
      headers: this.headers,
      schema: this.schema,
      body: t,
      fetch: (a = this.fetch) !== null && a !== void 0 ? a : fetch
    });
  }
  /**
   * Perform an UPDATE on the table or view.
   *
   * By default, updated rows are not returned. To return it, chain the call
   * with `.select()` after filters.
   *
   * @param values - The values to update with
   *
   * @param options - Named parameters
   *
   * @param options.count - Count algorithm to use to count updated rows.
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   */
  update(t, { count: n } = {}) {
    var r;
    const o = "PATCH";
    return n && this.headers.append("Prefer", `count=${n}`), new Bw.default({
      method: o,
      url: this.url,
      headers: this.headers,
      schema: this.schema,
      body: t,
      fetch: (r = this.fetch) !== null && r !== void 0 ? r : fetch
    });
  }
  /**
   * Perform a DELETE on the table or view.
   *
   * By default, deleted rows are not returned. To return it, chain the call
   * with `.select()` after filters.
   *
   * @param options - Named parameters
   *
   * @param options.count - Count algorithm to use to count deleted rows.
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   */
  delete({ count: t } = {}) {
    var n;
    const r = "DELETE";
    return t && this.headers.append("Prefer", `count=${t}`), new Bw.default({
      method: r,
      url: this.url,
      headers: this.headers,
      schema: this.schema,
      fetch: (n = this.fetch) !== null && n !== void 0 ? n : fetch
    });
  }
};
K_.default = fie;
var tU = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(pD, "__esModule", { value: !0 });
const pie = tU(K_), hie = tU(vC);
let mie = class nU {
  // TODO: Add back shouldThrowOnError once we figure out the typings
  /**
   * Creates a PostgREST client.
   *
   * @param url - URL of the PostgREST endpoint
   * @param options - Named parameters
   * @param options.headers - Custom headers
   * @param options.schema - Postgres schema to switch to
   * @param options.fetch - Custom fetch
   */
  constructor(t, { headers: n = {}, schema: r, fetch: o } = {}) {
    this.url = t, this.headers = new Headers(n), this.schemaName = r, this.fetch = o;
  }
  /**
   * Perform a query on a table or a view.
   *
   * @param relation - The table or view name to query
   */
  from(t) {
    const n = new URL(`${this.url}/${t}`);
    return new pie.default(n, {
      headers: new Headers(this.headers),
      schema: this.schemaName,
      fetch: this.fetch
    });
  }
  /**
   * Select a schema to query or perform an function (rpc) call.
   *
   * The schema needs to be on the list of exposed schemas inside Supabase.
   *
   * @param schema - The schema to query
   */
  schema(t) {
    return new nU(this.url, {
      headers: this.headers,
      schema: t,
      fetch: this.fetch
    });
  }
  /**
   * Perform a function call.
   *
   * @param fn - The function name to call
   * @param args - The arguments to pass to the function call
   * @param options - Named parameters
   * @param options.head - When set to `true`, `data` will not be returned.
   * Useful if you only need the count.
   * @param options.get - When set to `true`, the function will be called with
   * read-only access mode.
   * @param options.count - Count algorithm to use to count rows returned by the
   * function. Only applicable for [set-returning
   * functions](https://www.postgresql.org/docs/current/functions-srf.html).
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   */
  rpc(t, n = {}, { head: r = !1, get: o = !1, count: s } = {}) {
    var a;
    let c;
    const f = new URL(`${this.url}/rpc/${t}`);
    let m;
    r || o ? (c = r ? "HEAD" : "GET", Object.entries(n).filter(([y, w]) => w !== void 0).map(([y, w]) => [y, Array.isArray(w) ? `{${w.join(",")}}` : `${w}`]).forEach(([y, w]) => {
      f.searchParams.append(y, w);
    })) : (c = "POST", m = n);
    const g = new Headers(this.headers);
    return s && g.set("Prefer", `count=${s}`), new hie.default({
      method: c,
      url: f,
      headers: g,
      schema: this.schemaName,
      body: m,
      fetch: (a = this.fetch) !== null && a !== void 0 ? a : fetch
    });
  }
};
pD.default = mie;
var hy = wl && wl.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(oa, "__esModule", { value: !0 });
oa.PostgrestError = oa.PostgrestBuilder = oa.PostgrestTransformBuilder = oa.PostgrestFilterBuilder = oa.PostgrestQueryBuilder = oa.PostgrestClient = void 0;
const rU = hy(pD);
oa.PostgrestClient = rU.default;
const oU = hy(K_);
oa.PostgrestQueryBuilder = oU.default;
const iU = hy(vC);
oa.PostgrestFilterBuilder = iU.default;
const sU = hy(Y_);
oa.PostgrestTransformBuilder = sU.default;
const aU = hy(X_);
oa.PostgrestBuilder = aU.default;
const lU = hy(Q_);
oa.PostgrestError = lU.default;
var gie = oa.default = {
  PostgrestClient: rU.default,
  PostgrestQueryBuilder: oU.default,
  PostgrestFilterBuilder: iU.default,
  PostgrestTransformBuilder: sU.default,
  PostgrestBuilder: aU.default,
  PostgrestError: lU.default
};
const {
  PostgrestClient: vie,
  PostgrestQueryBuilder: n0e,
  PostgrestFilterBuilder: r0e,
  PostgrestTransformBuilder: o0e,
  PostgrestBuilder: i0e,
  PostgrestError: s0e
} = gie;
class yie {
  static detectEnvironment() {
    var t;
    if (typeof WebSocket < "u")
      return { type: "native", constructor: WebSocket };
    if (typeof globalThis < "u" && typeof globalThis.WebSocket < "u")
      return { type: "native", constructor: globalThis.WebSocket };
    if (typeof global < "u" && typeof global.WebSocket < "u")
      return { type: "native", constructor: global.WebSocket };
    if (typeof globalThis < "u" && typeof globalThis.WebSocketPair < "u" && typeof globalThis.WebSocket > "u")
      return {
        type: "cloudflare",
        error: "Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.",
        workaround: "Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime."
      };
    if (typeof globalThis < "u" && globalThis.EdgeRuntime || typeof navigator < "u" && (!((t = navigator.userAgent) === null || t === void 0) && t.includes("Vercel-Edge")))
      return {
        type: "unsupported",
        error: "Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.",
        workaround: "Use serverless functions or a different deployment target for WebSocket functionality."
      };
    if (typeof process < "u") {
      const n = process.versions;
      if (n && n.node) {
        const r = n.node, o = parseInt(r.replace(/^v/, "").split(".")[0]);
        return o >= 22 ? typeof globalThis.WebSocket < "u" ? { type: "native", constructor: globalThis.WebSocket } : {
          type: "unsupported",
          error: `Node.js ${o} detected but native WebSocket not found.`,
          workaround: "Provide a WebSocket implementation via the transport option."
        } : {
          type: "unsupported",
          error: `Node.js ${o} detected without native WebSocket support.`,
          workaround: `For Node.js < 22, install "ws" package and provide it via the transport option:
import ws from "ws"
new RealtimeClient(url, { transport: ws })`
        };
      }
    }
    return {
      type: "unsupported",
      error: "Unknown JavaScript runtime without WebSocket support.",
      workaround: "Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation."
    };
  }
  static getWebSocketConstructor() {
    const t = this.detectEnvironment();
    if (t.constructor)
      return t.constructor;
    let n = t.error || "WebSocket not supported in this environment.";
    throw t.workaround && (n += `

Suggested solution: ${t.workaround}`), new Error(n);
  }
  static createWebSocket(t, n) {
    const r = this.getWebSocketConstructor();
    return new r(t, n);
  }
  static isWebSocketSupported() {
    try {
      const t = this.detectEnvironment();
      return t.type === "native" || t.type === "ws";
    } catch {
      return !1;
    }
  }
}
const bie = "2.75.0", wie = `realtime-js/${bie}`, Sie = "1.0.0", OM = 1e4, Cie = 1e3, xie = 100;
var vS;
(function(e) {
  e[e.connecting = 0] = "connecting", e[e.open = 1] = "open", e[e.closing = 2] = "closing", e[e.closed = 3] = "closed";
})(vS || (vS = {}));
var hi;
(function(e) {
  e.closed = "closed", e.errored = "errored", e.joined = "joined", e.joining = "joining", e.leaving = "leaving";
})(hi || (hi = {}));
var su;
(function(e) {
  e.close = "phx_close", e.error = "phx_error", e.join = "phx_join", e.reply = "phx_reply", e.leave = "phx_leave", e.access_token = "access_token";
})(su || (su = {}));
var RM;
(function(e) {
  e.websocket = "websocket";
})(RM || (RM = {}));
var Hh;
(function(e) {
  e.Connecting = "connecting", e.Open = "open", e.Closing = "closing", e.Closed = "closed";
})(Hh || (Hh = {}));
class Eie {
  constructor() {
    this.HEADER_LENGTH = 1;
  }
  decode(t, n) {
    return t.constructor === ArrayBuffer ? n(this._binaryDecode(t)) : n(typeof t == "string" ? JSON.parse(t) : {});
  }
  _binaryDecode(t) {
    const n = new DataView(t), r = new TextDecoder();
    return this._decodeBroadcast(t, n, r);
  }
  _decodeBroadcast(t, n, r) {
    const o = n.getUint8(1), s = n.getUint8(2);
    let a = this.HEADER_LENGTH + 2;
    const c = r.decode(t.slice(a, a + o));
    a = a + o;
    const f = r.decode(t.slice(a, a + s));
    a = a + s;
    const m = JSON.parse(r.decode(t.slice(a, t.byteLength)));
    return { ref: null, topic: c, event: f, payload: m };
  }
}
class uU {
  constructor(t, n) {
    this.callback = t, this.timerCalc = n, this.timer = void 0, this.tries = 0, this.callback = t, this.timerCalc = n;
  }
  reset() {
    this.tries = 0, clearTimeout(this.timer), this.timer = void 0;
  }
  // Cancels any previous scheduleTimeout and schedules callback
  scheduleTimeout() {
    clearTimeout(this.timer), this.timer = setTimeout(() => {
      this.tries = this.tries + 1, this.callback();
    }, this.timerCalc(this.tries + 1));
  }
}
var Wr;
(function(e) {
  e.abstime = "abstime", e.bool = "bool", e.date = "date", e.daterange = "daterange", e.float4 = "float4", e.float8 = "float8", e.int2 = "int2", e.int4 = "int4", e.int4range = "int4range", e.int8 = "int8", e.int8range = "int8range", e.json = "json", e.jsonb = "jsonb", e.money = "money", e.numeric = "numeric", e.oid = "oid", e.reltime = "reltime", e.text = "text", e.time = "time", e.timestamp = "timestamp", e.timestamptz = "timestamptz", e.timetz = "timetz", e.tsrange = "tsrange", e.tstzrange = "tstzrange";
})(Wr || (Wr = {}));
const qF = (e, t, n = {}) => {
  var r;
  const o = (r = n.skipTypes) !== null && r !== void 0 ? r : [];
  return t ? Object.keys(t).reduce((s, a) => (s[a] = Tie(a, e, t, o), s), {}) : {};
}, Tie = (e, t, n, r) => {
  const o = t.find((c) => c.name === e), s = o == null ? void 0 : o.type, a = n[e];
  return s && !r.includes(s) ? cU(s, a) : kM(a);
}, cU = (e, t) => {
  if (e.charAt(0) === "_") {
    const n = e.slice(1, e.length);
    return kie(t, n);
  }
  switch (e) {
    case Wr.bool:
      return _ie(t);
    case Wr.float4:
    case Wr.float8:
    case Wr.int2:
    case Wr.int4:
    case Wr.int8:
    case Wr.numeric:
    case Wr.oid:
      return Oie(t);
    case Wr.json:
    case Wr.jsonb:
      return Rie(t);
    case Wr.timestamp:
      return Pie(t);
    case Wr.abstime:
    case Wr.date:
    case Wr.daterange:
    case Wr.int4range:
    case Wr.int8range:
    case Wr.money:
    case Wr.reltime:
    case Wr.text:
    case Wr.time:
    case Wr.timestamptz:
    case Wr.timetz:
    case Wr.tsrange:
    case Wr.tstzrange:
      return kM(t);
    default:
      return kM(t);
  }
}, kM = (e) => e, _ie = (e) => {
  switch (e) {
    case "t":
      return !0;
    case "f":
      return !1;
    default:
      return e;
  }
}, Oie = (e) => {
  if (typeof e == "string") {
    const t = parseFloat(e);
    if (!Number.isNaN(t))
      return t;
  }
  return e;
}, Rie = (e) => {
  if (typeof e == "string")
    try {
      return JSON.parse(e);
    } catch (t) {
      return console.log(`JSON parse error: ${t}`), e;
    }
  return e;
}, kie = (e, t) => {
  if (typeof e != "string")
    return e;
  const n = e.length - 1, r = e[n];
  if (e[0] === "{" && r === "}") {
    let s;
    const a = e.slice(1, n);
    try {
      s = JSON.parse("[" + a + "]");
    } catch {
      s = a ? a.split(",") : [];
    }
    return s.map((c) => cU(t, c));
  }
  return e;
}, Pie = (e) => typeof e == "string" ? e.replace(" ", "T") : e, dU = (e) => {
  let t = e;
  return t = t.replace(/^ws/i, "http"), t = t.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i, ""), t.replace(/\/+$/, "") + "/api/broadcast";
};
class fP {
  /**
   * Initializes the Push
   *
   * @param channel The Channel
   * @param event The event, for example `"phx_join"`
   * @param payload The payload, for example `{user_id: 123}`
   * @param timeout The push timeout in milliseconds
   */
  constructor(t, n, r = {}, o = OM) {
    this.channel = t, this.event = n, this.payload = r, this.timeout = o, this.sent = !1, this.timeoutTimer = void 0, this.ref = "", this.receivedResp = null, this.recHooks = [], this.refEvent = null;
  }
  resend(t) {
    this.timeout = t, this._cancelRefEvent(), this.ref = "", this.refEvent = null, this.receivedResp = null, this.sent = !1, this.send();
  }
  send() {
    this._hasReceived("timeout") || (this.startTimeout(), this.sent = !0, this.channel.socket.push({
      topic: this.channel.topic,
      event: this.event,
      payload: this.payload,
      ref: this.ref,
      join_ref: this.channel._joinRef()
    }));
  }
  updatePayload(t) {
    this.payload = Object.assign(Object.assign({}, this.payload), t);
  }
  receive(t, n) {
    var r;
    return this._hasReceived(t) && n((r = this.receivedResp) === null || r === void 0 ? void 0 : r.response), this.recHooks.push({ status: t, callback: n }), this;
  }
  startTimeout() {
    if (this.timeoutTimer)
      return;
    this.ref = this.channel.socket._makeRef(), this.refEvent = this.channel._replyEventName(this.ref);
    const t = (n) => {
      this._cancelRefEvent(), this._cancelTimeout(), this.receivedResp = n, this._matchReceive(n);
    };
    this.channel._on(this.refEvent, {}, t), this.timeoutTimer = setTimeout(() => {
      this.trigger("timeout", {});
    }, this.timeout);
  }
  trigger(t, n) {
    this.refEvent && this.channel._trigger(this.refEvent, { status: t, response: n });
  }
  destroy() {
    this._cancelRefEvent(), this._cancelTimeout();
  }
  _cancelRefEvent() {
    this.refEvent && this.channel._off(this.refEvent, {});
  }
  _cancelTimeout() {
    clearTimeout(this.timeoutTimer), this.timeoutTimer = void 0;
  }
  _matchReceive({ status: t, response: n }) {
    this.recHooks.filter((r) => r.status === t).forEach((r) => r.callback(n));
  }
  _hasReceived(t) {
    return this.receivedResp && this.receivedResp.status === t;
  }
}
var KF;
(function(e) {
  e.SYNC = "sync", e.JOIN = "join", e.LEAVE = "leave";
})(KF || (KF = {}));
class yS {
  /**
   * Initializes the Presence.
   *
   * @param channel - The RealtimeChannel
   * @param opts - The options,
   *        for example `{events: {state: 'state', diff: 'diff'}}`
   */
  constructor(t, n) {
    this.channel = t, this.state = {}, this.pendingDiffs = [], this.joinRef = null, this.enabled = !1, this.caller = {
      onJoin: () => {
      },
      onLeave: () => {
      },
      onSync: () => {
      }
    };
    const r = (n == null ? void 0 : n.events) || {
      state: "presence_state",
      diff: "presence_diff"
    };
    this.channel._on(r.state, {}, (o) => {
      const { onJoin: s, onLeave: a, onSync: c } = this.caller;
      this.joinRef = this.channel._joinRef(), this.state = yS.syncState(this.state, o, s, a), this.pendingDiffs.forEach((f) => {
        this.state = yS.syncDiff(this.state, f, s, a);
      }), this.pendingDiffs = [], c();
    }), this.channel._on(r.diff, {}, (o) => {
      const { onJoin: s, onLeave: a, onSync: c } = this.caller;
      this.inPendingSyncState() ? this.pendingDiffs.push(o) : (this.state = yS.syncDiff(this.state, o, s, a), c());
    }), this.onJoin((o, s, a) => {
      this.channel._trigger("presence", {
        event: "join",
        key: o,
        currentPresences: s,
        newPresences: a
      });
    }), this.onLeave((o, s, a) => {
      this.channel._trigger("presence", {
        event: "leave",
        key: o,
        currentPresences: s,
        leftPresences: a
      });
    }), this.onSync(() => {
      this.channel._trigger("presence", { event: "sync" });
    });
  }
  /**
   * Used to sync the list of presences on the server with the
   * client's state.
   *
   * An optional `onJoin` and `onLeave` callback can be provided to
   * react to changes in the client's local presences across
   * disconnects and reconnects with the server.
   *
   * @internal
   */
  static syncState(t, n, r, o) {
    const s = this.cloneDeep(t), a = this.transformState(n), c = {}, f = {};
    return this.map(s, (m, g) => {
      a[m] || (f[m] = g);
    }), this.map(a, (m, g) => {
      const y = s[m];
      if (y) {
        const w = g.map((O) => O.presence_ref), C = y.map((O) => O.presence_ref), T = g.filter((O) => C.indexOf(O.presence_ref) < 0), E = y.filter((O) => w.indexOf(O.presence_ref) < 0);
        T.length > 0 && (c[m] = T), E.length > 0 && (f[m] = E);
      } else
        c[m] = g;
    }), this.syncDiff(s, { joins: c, leaves: f }, r, o);
  }
  /**
   * Used to sync a diff of presence join and leave events from the
   * server, as they happen.
   *
   * Like `syncState`, `syncDiff` accepts optional `onJoin` and
   * `onLeave` callbacks to react to a user joining or leaving from a
   * device.
   *
   * @internal
   */
  static syncDiff(t, n, r, o) {
    const { joins: s, leaves: a } = {
      joins: this.transformState(n.joins),
      leaves: this.transformState(n.leaves)
    };
    return r || (r = () => {
    }), o || (o = () => {
    }), this.map(s, (c, f) => {
      var m;
      const g = (m = t[c]) !== null && m !== void 0 ? m : [];
      if (t[c] = this.cloneDeep(f), g.length > 0) {
        const y = t[c].map((C) => C.presence_ref), w = g.filter((C) => y.indexOf(C.presence_ref) < 0);
        t[c].unshift(...w);
      }
      r(c, g, f);
    }), this.map(a, (c, f) => {
      let m = t[c];
      if (!m)
        return;
      const g = f.map((y) => y.presence_ref);
      m = m.filter((y) => g.indexOf(y.presence_ref) < 0), t[c] = m, o(c, m, f), m.length === 0 && delete t[c];
    }), t;
  }
  /** @internal */
  static map(t, n) {
    return Object.getOwnPropertyNames(t).map((r) => n(r, t[r]));
  }
  /**
   * Remove 'metas' key
   * Change 'phx_ref' to 'presence_ref'
   * Remove 'phx_ref' and 'phx_ref_prev'
   *
   * @example
   * // returns {
   *  abc123: [
   *    { presence_ref: '2', user_id: 1 },
   *    { presence_ref: '3', user_id: 2 }
   *  ]
   * }
   * RealtimePresence.transformState({
   *  abc123: {
   *    metas: [
   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },
   *      { phx_ref: '3', user_id: 2 }
   *    ]
   *  }
   * })
   *
   * @internal
   */
  static transformState(t) {
    return t = this.cloneDeep(t), Object.getOwnPropertyNames(t).reduce((n, r) => {
      const o = t[r];
      return "metas" in o ? n[r] = o.metas.map((s) => (s.presence_ref = s.phx_ref, delete s.phx_ref, delete s.phx_ref_prev, s)) : n[r] = o, n;
    }, {});
  }
  /** @internal */
  static cloneDeep(t) {
    return JSON.parse(JSON.stringify(t));
  }
  /** @internal */
  onJoin(t) {
    this.caller.onJoin = t;
  }
  /** @internal */
  onLeave(t) {
    this.caller.onLeave = t;
  }
  /** @internal */
  onSync(t) {
    this.caller.onSync = t;
  }
  /** @internal */
  inPendingSyncState() {
    return !this.joinRef || this.joinRef !== this.channel._joinRef();
  }
}
var YF;
(function(e) {
  e.ALL = "*", e.INSERT = "INSERT", e.UPDATE = "UPDATE", e.DELETE = "DELETE";
})(YF || (YF = {}));
var bS;
(function(e) {
  e.BROADCAST = "broadcast", e.PRESENCE = "presence", e.POSTGRES_CHANGES = "postgres_changes", e.SYSTEM = "system";
})(bS || (bS = {}));
var bd;
(function(e) {
  e.SUBSCRIBED = "SUBSCRIBED", e.TIMED_OUT = "TIMED_OUT", e.CLOSED = "CLOSED", e.CHANNEL_ERROR = "CHANNEL_ERROR";
})(bd || (bd = {}));
class hD {
  constructor(t, n = { config: {} }, r) {
    var o, s;
    if (this.topic = t, this.params = n, this.socket = r, this.bindings = {}, this.state = hi.closed, this.joinedOnce = !1, this.pushBuffer = [], this.subTopic = t.replace(/^realtime:/i, ""), this.params.config = Object.assign({
      broadcast: { ack: !1, self: !1 },
      presence: { key: "", enabled: !1 },
      private: !1
    }, n.config), this.timeout = this.socket.timeout, this.joinPush = new fP(this, su.join, this.params, this.timeout), this.rejoinTimer = new uU(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs), this.joinPush.receive("ok", () => {
      this.state = hi.joined, this.rejoinTimer.reset(), this.pushBuffer.forEach((a) => a.send()), this.pushBuffer = [];
    }), this._onClose(() => {
      this.rejoinTimer.reset(), this.socket.log("channel", `close ${this.topic} ${this._joinRef()}`), this.state = hi.closed, this.socket._remove(this);
    }), this._onError((a) => {
      this._isLeaving() || this._isClosed() || (this.socket.log("channel", `error ${this.topic}`, a), this.state = hi.errored, this.rejoinTimer.scheduleTimeout());
    }), this.joinPush.receive("timeout", () => {
      this._isJoining() && (this.socket.log("channel", `timeout ${this.topic}`, this.joinPush.timeout), this.state = hi.errored, this.rejoinTimer.scheduleTimeout());
    }), this.joinPush.receive("error", (a) => {
      this._isLeaving() || this._isClosed() || (this.socket.log("channel", `error ${this.topic}`, a), this.state = hi.errored, this.rejoinTimer.scheduleTimeout());
    }), this._on(su.reply, {}, (a, c) => {
      this._trigger(this._replyEventName(c), a);
    }), this.presence = new yS(this), this.broadcastEndpointURL = dU(this.socket.endPoint), this.private = this.params.config.private || !1, !this.private && (!((s = (o = this.params.config) === null || o === void 0 ? void 0 : o.broadcast) === null || s === void 0) && s.replay))
      throw `tried to use replay on public channel '${this.topic}'. It must be a private channel.`;
  }
  /** Subscribe registers your client with the server */
  subscribe(t, n = this.timeout) {
    var r, o, s;
    if (this.socket.isConnected() || this.socket.connect(), this.state == hi.closed) {
      const { config: { broadcast: a, presence: c, private: f } } = this.params, m = (o = (r = this.bindings.postgres_changes) === null || r === void 0 ? void 0 : r.map((C) => C.filter)) !== null && o !== void 0 ? o : [], g = !!this.bindings[bS.PRESENCE] && this.bindings[bS.PRESENCE].length > 0 || ((s = this.params.config.presence) === null || s === void 0 ? void 0 : s.enabled) === !0, y = {}, w = {
        broadcast: a,
        presence: Object.assign(Object.assign({}, c), { enabled: g }),
        postgres_changes: m,
        private: f
      };
      this.socket.accessTokenValue && (y.access_token = this.socket.accessTokenValue), this._onError((C) => t == null ? void 0 : t(bd.CHANNEL_ERROR, C)), this._onClose(() => t == null ? void 0 : t(bd.CLOSED)), this.updateJoinPayload(Object.assign({ config: w }, y)), this.joinedOnce = !0, this._rejoin(n), this.joinPush.receive("ok", async ({ postgres_changes: C }) => {
        var T;
        if (this.socket.setAuth(), C === void 0) {
          t == null || t(bd.SUBSCRIBED);
          return;
        } else {
          const E = this.bindings.postgres_changes, O = (T = E == null ? void 0 : E.length) !== null && T !== void 0 ? T : 0, k = [];
          for (let I = 0; I < O; I++) {
            const M = E[I], { filter: { event: N, schema: P, table: F, filter: H } } = M, U = C && C[I];
            if (U && U.event === N && U.schema === P && U.table === F && U.filter === H)
              k.push(Object.assign(Object.assign({}, M), { id: U.id }));
            else {
              this.unsubscribe(), this.state = hi.errored, t == null || t(bd.CHANNEL_ERROR, new Error("mismatch between server and client bindings for postgres changes"));
              return;
            }
          }
          this.bindings.postgres_changes = k, t && t(bd.SUBSCRIBED);
          return;
        }
      }).receive("error", (C) => {
        this.state = hi.errored, t == null || t(bd.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(C).join(", ") || "error")));
      }).receive("timeout", () => {
        t == null || t(bd.TIMED_OUT);
      });
    }
    return this;
  }
  presenceState() {
    return this.presence.state;
  }
  async track(t, n = {}) {
    return await this.send({
      type: "presence",
      event: "track",
      payload: t
    }, n.timeout || this.timeout);
  }
  async untrack(t = {}) {
    return await this.send({
      type: "presence",
      event: "untrack"
    }, t);
  }
  on(t, n, r) {
    return this.state === hi.joined && t === bS.PRESENCE && (this.socket.log("channel", `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`), this.unsubscribe().then(() => this.subscribe())), this._on(t, n, r);
  }
  /**
   * Sends a message into the channel.
   *
   * @param args Arguments to send to channel
   * @param args.type The type of event to send
   * @param args.event The name of the event being sent
   * @param args.payload Payload to be sent
   * @param opts Options to be used during the send process
   */
  async send(t, n = {}) {
    var r, o;
    if (!this._canPush() && t.type === "broadcast") {
      const { event: s, payload: a } = t, f = {
        method: "POST",
        headers: {
          Authorization: this.socket.accessTokenValue ? `Bearer ${this.socket.accessTokenValue}` : "",
          apikey: this.socket.apiKey ? this.socket.apiKey : "",
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          messages: [
            {
              topic: this.subTopic,
              event: s,
              payload: a,
              private: this.private
            }
          ]
        })
      };
      try {
        const m = await this._fetchWithTimeout(this.broadcastEndpointURL, f, (r = n.timeout) !== null && r !== void 0 ? r : this.timeout);
        return await ((o = m.body) === null || o === void 0 ? void 0 : o.cancel()), m.ok ? "ok" : "error";
      } catch (m) {
        return m.name === "AbortError" ? "timed out" : "error";
      }
    } else
      return new Promise((s) => {
        var a, c, f;
        const m = this._push(t.type, t, n.timeout || this.timeout);
        t.type === "broadcast" && !(!((f = (c = (a = this.params) === null || a === void 0 ? void 0 : a.config) === null || c === void 0 ? void 0 : c.broadcast) === null || f === void 0) && f.ack) && s("ok"), m.receive("ok", () => s("ok")), m.receive("error", () => s("error")), m.receive("timeout", () => s("timed out"));
      });
  }
  updateJoinPayload(t) {
    this.joinPush.updatePayload(t);
  }
  /**
   * Leaves the channel.
   *
   * Unsubscribes from server events, and instructs channel to terminate on server.
   * Triggers onClose() hooks.
   *
   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:
   * channel.unsubscribe().receive("ok", () => alert("left!") )
   */
  unsubscribe(t = this.timeout) {
    this.state = hi.leaving;
    const n = () => {
      this.socket.log("channel", `leave ${this.topic}`), this._trigger(su.close, "leave", this._joinRef());
    };
    this.joinPush.destroy();
    let r = null;
    return new Promise((o) => {
      r = new fP(this, su.leave, {}, t), r.receive("ok", () => {
        n(), o("ok");
      }).receive("timeout", () => {
        n(), o("timed out");
      }).receive("error", () => {
        o("error");
      }), r.send(), this._canPush() || r.trigger("ok", {});
    }).finally(() => {
      r == null || r.destroy();
    });
  }
  /**
   * Teardown the channel.
   *
   * Destroys and stops related timers.
   */
  teardown() {
    this.pushBuffer.forEach((t) => t.destroy()), this.pushBuffer = [], this.rejoinTimer.reset(), this.joinPush.destroy(), this.state = hi.closed, this.bindings = {};
  }
  /** @internal */
  async _fetchWithTimeout(t, n, r) {
    const o = new AbortController(), s = setTimeout(() => o.abort(), r), a = await this.socket.fetch(t, Object.assign(Object.assign({}, n), { signal: o.signal }));
    return clearTimeout(s), a;
  }
  /** @internal */
  _push(t, n, r = this.timeout) {
    if (!this.joinedOnce)
      throw `tried to push '${t}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;
    let o = new fP(this, t, n, r);
    return this._canPush() ? o.send() : this._addToPushBuffer(o), o;
  }
  /** @internal */
  _addToPushBuffer(t) {
    if (t.startTimeout(), this.pushBuffer.push(t), this.pushBuffer.length > xie) {
      const n = this.pushBuffer.shift();
      n && (n.destroy(), this.socket.log("channel", `discarded push due to buffer overflow: ${n.event}`, n.payload));
    }
  }
  /**
   * Overridable message hook
   *
   * Receives all events for specialized message handling before dispatching to the channel callbacks.
   * Must return the payload, modified or unmodified.
   *
   * @internal
   */
  _onMessage(t, n, r) {
    return n;
  }
  /** @internal */
  _isMember(t) {
    return this.topic === t;
  }
  /** @internal */
  _joinRef() {
    return this.joinPush.ref;
  }
  /** @internal */
  _trigger(t, n, r) {
    var o, s;
    const a = t.toLocaleLowerCase(), { close: c, error: f, leave: m, join: g } = su;
    if (r && [c, f, m, g].indexOf(a) >= 0 && r !== this._joinRef())
      return;
    let w = this._onMessage(a, n, r);
    if (n && !w)
      throw "channel onMessage callbacks must return the payload, modified or unmodified";
    ["insert", "update", "delete"].includes(a) ? (o = this.bindings.postgres_changes) === null || o === void 0 || o.filter((C) => {
      var T, E, O;
      return ((T = C.filter) === null || T === void 0 ? void 0 : T.event) === "*" || ((O = (E = C.filter) === null || E === void 0 ? void 0 : E.event) === null || O === void 0 ? void 0 : O.toLocaleLowerCase()) === a;
    }).map((C) => C.callback(w, r)) : (s = this.bindings[a]) === null || s === void 0 || s.filter((C) => {
      var T, E, O, k, I, M;
      if (["broadcast", "presence", "postgres_changes"].includes(a))
        if ("id" in C) {
          const N = C.id, P = (T = C.filter) === null || T === void 0 ? void 0 : T.event;
          return N && ((E = n.ids) === null || E === void 0 ? void 0 : E.includes(N)) && (P === "*" || (P == null ? void 0 : P.toLocaleLowerCase()) === ((O = n.data) === null || O === void 0 ? void 0 : O.type.toLocaleLowerCase()));
        } else {
          const N = (I = (k = C == null ? void 0 : C.filter) === null || k === void 0 ? void 0 : k.event) === null || I === void 0 ? void 0 : I.toLocaleLowerCase();
          return N === "*" || N === ((M = n == null ? void 0 : n.event) === null || M === void 0 ? void 0 : M.toLocaleLowerCase());
        }
      else
        return C.type.toLocaleLowerCase() === a;
    }).map((C) => {
      if (typeof w == "object" && "ids" in w) {
        const T = w.data, { schema: E, table: O, commit_timestamp: k, type: I, errors: M } = T;
        w = Object.assign(Object.assign({}, {
          schema: E,
          table: O,
          commit_timestamp: k,
          eventType: I,
          new: {},
          old: {},
          errors: M
        }), this._getPayloadRecords(T));
      }
      C.callback(w, r);
    });
  }
  /** @internal */
  _isClosed() {
    return this.state === hi.closed;
  }
  /** @internal */
  _isJoined() {
    return this.state === hi.joined;
  }
  /** @internal */
  _isJoining() {
    return this.state === hi.joining;
  }
  /** @internal */
  _isLeaving() {
    return this.state === hi.leaving;
  }
  /** @internal */
  _replyEventName(t) {
    return `chan_reply_${t}`;
  }
  /** @internal */
  _on(t, n, r) {
    const o = t.toLocaleLowerCase(), s = {
      type: o,
      filter: n,
      callback: r
    };
    return this.bindings[o] ? this.bindings[o].push(s) : this.bindings[o] = [s], this;
  }
  /** @internal */
  _off(t, n) {
    const r = t.toLocaleLowerCase();
    return this.bindings[r] && (this.bindings[r] = this.bindings[r].filter((o) => {
      var s;
      return !(((s = o.type) === null || s === void 0 ? void 0 : s.toLocaleLowerCase()) === r && hD.isEqual(o.filter, n));
    })), this;
  }
  /** @internal */
  static isEqual(t, n) {
    if (Object.keys(t).length !== Object.keys(n).length)
      return !1;
    for (const r in t)
      if (t[r] !== n[r])
        return !1;
    return !0;
  }
  /** @internal */
  _rejoinUntilConnected() {
    this.rejoinTimer.scheduleTimeout(), this.socket.isConnected() && this._rejoin();
  }
  /**
   * Registers a callback that will be executed when the channel closes.
   *
   * @internal
   */
  _onClose(t) {
    this._on(su.close, {}, t);
  }
  /**
   * Registers a callback that will be executed when the channel encounteres an error.
   *
   * @internal
   */
  _onError(t) {
    this._on(su.error, {}, (n) => t(n));
  }
  /**
   * Returns `true` if the socket is connected and the channel has been joined.
   *
   * @internal
   */
  _canPush() {
    return this.socket.isConnected() && this._isJoined();
  }
  /** @internal */
  _rejoin(t = this.timeout) {
    this._isLeaving() || (this.socket._leaveOpenTopic(this.topic), this.state = hi.joining, this.joinPush.resend(t));
  }
  /** @internal */
  _getPayloadRecords(t) {
    const n = {
      new: {},
      old: {}
    };
    return (t.type === "INSERT" || t.type === "UPDATE") && (n.new = qF(t.columns, t.record)), (t.type === "UPDATE" || t.type === "DELETE") && (n.old = qF(t.columns, t.old_record)), n;
  }
}
const pP = () => {
}, FE = {
  HEARTBEAT_INTERVAL: 25e3,
  RECONNECT_DELAY: 10,
  HEARTBEAT_TIMEOUT_FALLBACK: 100
}, Mie = [1e3, 2e3, 5e3, 1e4], Iie = 1e4, Die = `
  addEventListener("message", (e) => {
    if (e.data.event === "start") {
      setInterval(() => postMessage({ event: "keepAlive" }), e.data.interval);
    }
  });`;
class Aie {
  /**
   * Initializes the Socket.
   *
   * @param endPoint The string WebSocket endpoint, ie, "ws://example.com/socket", "wss://example.com", "/socket" (inherited host & protocol)
   * @param httpEndpoint The string HTTP endpoint, ie, "https://example.com", "/" (inherited host & protocol)
   * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation
   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.
   * @param options.params The optional params to pass when connecting.
   * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.
   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.
   * @param options.heartbeatCallback The optional function to handle heartbeat status.
   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }
   * @param options.logLevel Sets the log level for Realtime
   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))
   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.
   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.
   * @param options.worker Use Web Worker to set a side flow. Defaults to false.
   * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.
   */
  constructor(t, n) {
    var r;
    if (this.accessTokenValue = null, this.apiKey = null, this.channels = new Array(), this.endPoint = "", this.httpEndpoint = "", this.headers = {}, this.params = {}, this.timeout = OM, this.transport = null, this.heartbeatIntervalMs = FE.HEARTBEAT_INTERVAL, this.heartbeatTimer = void 0, this.pendingHeartbeatRef = null, this.heartbeatCallback = pP, this.ref = 0, this.reconnectTimer = null, this.logger = pP, this.conn = null, this.sendBuffer = [], this.serializer = new Eie(), this.stateChangeCallbacks = {
      open: [],
      close: [],
      error: [],
      message: []
    }, this.accessToken = null, this._connectionState = "disconnected", this._wasManualDisconnect = !1, this._authPromise = null, this._resolveFetch = (o) => {
      let s;
      return o ? s = o : typeof fetch > "u" ? s = (...a) => Promise.resolve().then(() => py).then(({ default: c }) => c(...a)).catch((c) => {
        throw new Error(`Failed to load @supabase/node-fetch: ${c.message}. This is required for HTTP requests in Node.js environments without native fetch.`);
      }) : s = fetch, (...a) => s(...a);
    }, !(!((r = n == null ? void 0 : n.params) === null || r === void 0) && r.apikey))
      throw new Error("API key is required to connect to Realtime");
    this.apiKey = n.params.apikey, this.endPoint = `${t}/${RM.websocket}`, this.httpEndpoint = dU(t), this._initializeOptions(n), this._setupReconnectionTimer(), this.fetch = this._resolveFetch(n == null ? void 0 : n.fetch);
  }
  /**
   * Connects the socket, unless already connected.
   */
  connect() {
    if (!(this.isConnecting() || this.isDisconnecting() || this.conn !== null && this.isConnected())) {
      if (this._setConnectionState("connecting"), this._setAuthSafely("connect"), this.transport)
        this.conn = new this.transport(this.endpointURL());
      else
        try {
          this.conn = yie.createWebSocket(this.endpointURL());
        } catch (t) {
          this._setConnectionState("disconnected");
          const n = t.message;
          throw n.includes("Node.js") ? new Error(`${n}

To use Realtime in Node.js, you need to provide a WebSocket implementation:

Option 1: Use Node.js 22+ which has native WebSocket support
Option 2: Install and provide the "ws" package:

  npm install ws

  import ws from "ws"
  const client = new RealtimeClient(url, {
    ...options,
    transport: ws
  })`) : new Error(`WebSocket not available: ${n}`);
        }
      this._setupConnectionHandlers();
    }
  }
  /**
   * Returns the URL of the websocket.
   * @returns string The URL of the websocket.
   */
  endpointURL() {
    return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: Sie }));
  }
  /**
   * Disconnects the socket.
   *
   * @param code A numeric status code to send on disconnect.
   * @param reason A custom reason for the disconnect.
   */
  disconnect(t, n) {
    if (!this.isDisconnecting())
      if (this._setConnectionState("disconnecting", !0), this.conn) {
        const r = setTimeout(() => {
          this._setConnectionState("disconnected");
        }, 100);
        this.conn.onclose = () => {
          clearTimeout(r), this._setConnectionState("disconnected");
        }, t ? this.conn.close(t, n ?? "") : this.conn.close(), this._teardownConnection();
      } else
        this._setConnectionState("disconnected");
  }
  /**
   * Returns all created channels
   */
  getChannels() {
    return this.channels;
  }
  /**
   * Unsubscribes and removes a single channel
   * @param channel A RealtimeChannel instance
   */
  async removeChannel(t) {
    const n = await t.unsubscribe();
    return this.channels.length === 0 && this.disconnect(), n;
  }
  /**
   * Unsubscribes and removes all channels
   */
  async removeAllChannels() {
    const t = await Promise.all(this.channels.map((n) => n.unsubscribe()));
    return this.channels = [], this.disconnect(), t;
  }
  /**
   * Logs the message.
   *
   * For customized logging, `this.logger` can be overridden.
   */
  log(t, n, r) {
    this.logger(t, n, r);
  }
  /**
   * Returns the current state of the socket.
   */
  connectionState() {
    switch (this.conn && this.conn.readyState) {
      case vS.connecting:
        return Hh.Connecting;
      case vS.open:
        return Hh.Open;
      case vS.closing:
        return Hh.Closing;
      default:
        return Hh.Closed;
    }
  }
  /**
   * Returns `true` is the connection is open.
   */
  isConnected() {
    return this.connectionState() === Hh.Open;
  }
  /**
   * Returns `true` if the connection is currently connecting.
   */
  isConnecting() {
    return this._connectionState === "connecting";
  }
  /**
   * Returns `true` if the connection is currently disconnecting.
   */
  isDisconnecting() {
    return this._connectionState === "disconnecting";
  }
  channel(t, n = { config: {} }) {
    const r = `realtime:${t}`, o = this.getChannels().find((s) => s.topic === r);
    if (o)
      return o;
    {
      const s = new hD(`realtime:${t}`, n, this);
      return this.channels.push(s), s;
    }
  }
  /**
   * Push out a message if the socket is connected.
   *
   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.
   */
  push(t) {
    const { topic: n, event: r, payload: o, ref: s } = t, a = () => {
      this.encode(t, (c) => {
        var f;
        (f = this.conn) === null || f === void 0 || f.send(c);
      });
    };
    this.log("push", `${n} ${r} (${s})`, o), this.isConnected() ? a() : this.sendBuffer.push(a);
  }
  /**
   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.
   *
   * If param is null it will use the `accessToken` callback function or the token set on the client.
   *
   * On callback used, it will set the value of the token internal to the client.
   *
   * @param token A JWT string to override the token set on the client.
   */
  async setAuth(t = null) {
    this._authPromise = this._performAuth(t);
    try {
      await this._authPromise;
    } finally {
      this._authPromise = null;
    }
  }
  /**
   * Sends a heartbeat message if the socket is connected.
   */
  async sendHeartbeat() {
    var t;
    if (!this.isConnected()) {
      try {
        this.heartbeatCallback("disconnected");
      } catch (n) {
        this.log("error", "error in heartbeat callback", n);
      }
      return;
    }
    if (this.pendingHeartbeatRef) {
      this.pendingHeartbeatRef = null, this.log("transport", "heartbeat timeout. Attempting to re-establish connection");
      try {
        this.heartbeatCallback("timeout");
      } catch (n) {
        this.log("error", "error in heartbeat callback", n);
      }
      this._wasManualDisconnect = !1, (t = this.conn) === null || t === void 0 || t.close(Cie, "heartbeat timeout"), setTimeout(() => {
        var n;
        this.isConnected() || (n = this.reconnectTimer) === null || n === void 0 || n.scheduleTimeout();
      }, FE.HEARTBEAT_TIMEOUT_FALLBACK);
      return;
    }
    this.pendingHeartbeatRef = this._makeRef(), this.push({
      topic: "phoenix",
      event: "heartbeat",
      payload: {},
      ref: this.pendingHeartbeatRef
    });
    try {
      this.heartbeatCallback("sent");
    } catch (n) {
      this.log("error", "error in heartbeat callback", n);
    }
    this._setAuthSafely("heartbeat");
  }
  onHeartbeat(t) {
    this.heartbeatCallback = t;
  }
  /**
   * Flushes send buffer
   */
  flushSendBuffer() {
    this.isConnected() && this.sendBuffer.length > 0 && (this.sendBuffer.forEach((t) => t()), this.sendBuffer = []);
  }
  /**
   * Return the next message ref, accounting for overflows
   *
   * @internal
   */
  _makeRef() {
    let t = this.ref + 1;
    return t === this.ref ? this.ref = 0 : this.ref = t, this.ref.toString();
  }
  /**
   * Unsubscribe from channels with the specified topic.
   *
   * @internal
   */
  _leaveOpenTopic(t) {
    let n = this.channels.find((r) => r.topic === t && (r._isJoined() || r._isJoining()));
    n && (this.log("transport", `leaving duplicate topic "${t}"`), n.unsubscribe());
  }
  /**
   * Removes a subscription from the socket.
   *
   * @param channel An open subscription.
   *
   * @internal
   */
  _remove(t) {
    this.channels = this.channels.filter((n) => n.topic !== t.topic);
  }
  /** @internal */
  _onConnMessage(t) {
    this.decode(t.data, (n) => {
      if (n.topic === "phoenix" && n.event === "phx_reply")
        try {
          this.heartbeatCallback(n.payload.status === "ok" ? "ok" : "error");
        } catch (m) {
          this.log("error", "error in heartbeat callback", m);
        }
      n.ref && n.ref === this.pendingHeartbeatRef && (this.pendingHeartbeatRef = null);
      const { topic: r, event: o, payload: s, ref: a } = n, c = a ? `(${a})` : "", f = s.status || "";
      this.log("receive", `${f} ${r} ${o} ${c}`.trim(), s), this.channels.filter((m) => m._isMember(r)).forEach((m) => m._trigger(o, s, a)), this._triggerStateCallbacks("message", n);
    });
  }
  /**
   * Clear specific timer
   * @internal
   */
  _clearTimer(t) {
    var n;
    t === "heartbeat" && this.heartbeatTimer ? (clearInterval(this.heartbeatTimer), this.heartbeatTimer = void 0) : t === "reconnect" && ((n = this.reconnectTimer) === null || n === void 0 || n.reset());
  }
  /**
   * Clear all timers
   * @internal
   */
  _clearAllTimers() {
    this._clearTimer("heartbeat"), this._clearTimer("reconnect");
  }
  /**
   * Setup connection handlers for WebSocket events
   * @internal
   */
  _setupConnectionHandlers() {
    this.conn && ("binaryType" in this.conn && (this.conn.binaryType = "arraybuffer"), this.conn.onopen = () => this._onConnOpen(), this.conn.onerror = (t) => this._onConnError(t), this.conn.onmessage = (t) => this._onConnMessage(t), this.conn.onclose = (t) => this._onConnClose(t));
  }
  /**
   * Teardown connection and cleanup resources
   * @internal
   */
  _teardownConnection() {
    this.conn && (this.conn.onopen = null, this.conn.onerror = null, this.conn.onmessage = null, this.conn.onclose = null, this.conn = null), this._clearAllTimers(), this.channels.forEach((t) => t.teardown());
  }
  /** @internal */
  _onConnOpen() {
    this._setConnectionState("connected"), this.log("transport", `connected to ${this.endpointURL()}`), this.flushSendBuffer(), this._clearTimer("reconnect"), this.worker ? this.workerRef || this._startWorkerHeartbeat() : this._startHeartbeat(), this._triggerStateCallbacks("open");
  }
  /** @internal */
  _startHeartbeat() {
    this.heartbeatTimer && clearInterval(this.heartbeatTimer), this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);
  }
  /** @internal */
  _startWorkerHeartbeat() {
    this.workerUrl ? this.log("worker", `starting worker for from ${this.workerUrl}`) : this.log("worker", "starting default worker");
    const t = this._workerObjectUrl(this.workerUrl);
    this.workerRef = new Worker(t), this.workerRef.onerror = (n) => {
      this.log("worker", "worker error", n.message), this.workerRef.terminate();
    }, this.workerRef.onmessage = (n) => {
      n.data.event === "keepAlive" && this.sendHeartbeat();
    }, this.workerRef.postMessage({
      event: "start",
      interval: this.heartbeatIntervalMs
    });
  }
  /** @internal */
  _onConnClose(t) {
    var n;
    this._setConnectionState("disconnected"), this.log("transport", "close", t), this._triggerChanError(), this._clearTimer("heartbeat"), this._wasManualDisconnect || (n = this.reconnectTimer) === null || n === void 0 || n.scheduleTimeout(), this._triggerStateCallbacks("close", t);
  }
  /** @internal */
  _onConnError(t) {
    this._setConnectionState("disconnected"), this.log("transport", `${t}`), this._triggerChanError(), this._triggerStateCallbacks("error", t);
  }
  /** @internal */
  _triggerChanError() {
    this.channels.forEach((t) => t._trigger(su.error));
  }
  /** @internal */
  _appendParams(t, n) {
    if (Object.keys(n).length === 0)
      return t;
    const r = t.match(/\?/) ? "&" : "?", o = new URLSearchParams(n);
    return `${t}${r}${o}`;
  }
  _workerObjectUrl(t) {
    let n;
    if (t)
      n = t;
    else {
      const r = new Blob([Die], { type: "application/javascript" });
      n = URL.createObjectURL(r);
    }
    return n;
  }
  /**
   * Set connection state with proper state management
   * @internal
   */
  _setConnectionState(t, n = !1) {
    this._connectionState = t, t === "connecting" ? this._wasManualDisconnect = !1 : t === "disconnecting" && (this._wasManualDisconnect = n);
  }
  /**
   * Perform the actual auth operation
   * @internal
   */
  async _performAuth(t = null) {
    let n;
    t ? n = t : this.accessToken ? n = await this.accessToken() : n = this.accessTokenValue, this.accessTokenValue != n && (this.accessTokenValue = n, this.channels.forEach((r) => {
      const o = {
        access_token: n,
        version: wie
      };
      n && r.updateJoinPayload(o), r.joinedOnce && r._isJoined() && r._push(su.access_token, {
        access_token: n
      });
    }));
  }
  /**
   * Wait for any in-flight auth operations to complete
   * @internal
   */
  async _waitForAuthIfNeeded() {
    this._authPromise && await this._authPromise;
  }
  /**
   * Safely call setAuth with standardized error handling
   * @internal
   */
  _setAuthSafely(t = "general") {
    this.setAuth().catch((n) => {
      this.log("error", `error setting auth in ${t}`, n);
    });
  }
  /**
   * Trigger state change callbacks with proper error handling
   * @internal
   */
  _triggerStateCallbacks(t, n) {
    try {
      this.stateChangeCallbacks[t].forEach((r) => {
        try {
          r(n);
        } catch (o) {
          this.log("error", `error in ${t} callback`, o);
        }
      });
    } catch (r) {
      this.log("error", `error triggering ${t} callbacks`, r);
    }
  }
  /**
   * Setup reconnection timer with proper configuration
   * @internal
   */
  _setupReconnectionTimer() {
    this.reconnectTimer = new uU(async () => {
      setTimeout(async () => {
        await this._waitForAuthIfNeeded(), this.isConnected() || this.connect();
      }, FE.RECONNECT_DELAY);
    }, this.reconnectAfterMs);
  }
  /**
   * Initialize client options with defaults
   * @internal
   */
  _initializeOptions(t) {
    var n, r, o, s, a, c, f, m, g;
    if (this.transport = (n = t == null ? void 0 : t.transport) !== null && n !== void 0 ? n : null, this.timeout = (r = t == null ? void 0 : t.timeout) !== null && r !== void 0 ? r : OM, this.heartbeatIntervalMs = (o = t == null ? void 0 : t.heartbeatIntervalMs) !== null && o !== void 0 ? o : FE.HEARTBEAT_INTERVAL, this.worker = (s = t == null ? void 0 : t.worker) !== null && s !== void 0 ? s : !1, this.accessToken = (a = t == null ? void 0 : t.accessToken) !== null && a !== void 0 ? a : null, this.heartbeatCallback = (c = t == null ? void 0 : t.heartbeatCallback) !== null && c !== void 0 ? c : pP, t != null && t.params && (this.params = t.params), t != null && t.logger && (this.logger = t.logger), (t != null && t.logLevel || t != null && t.log_level) && (this.logLevel = t.logLevel || t.log_level, this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel })), this.reconnectAfterMs = (f = t == null ? void 0 : t.reconnectAfterMs) !== null && f !== void 0 ? f : (y) => Mie[y - 1] || Iie, this.encode = (m = t == null ? void 0 : t.encode) !== null && m !== void 0 ? m : (y, w) => w(JSON.stringify(y)), this.decode = (g = t == null ? void 0 : t.decode) !== null && g !== void 0 ? g : this.serializer.decode.bind(this.serializer), this.worker) {
      if (typeof window < "u" && !window.Worker)
        throw new Error("Web Worker is not supported");
      this.workerUrl = t == null ? void 0 : t.workerUrl;
    }
  }
}
class mD extends Error {
  constructor(t) {
    super(t), this.__isStorageError = !0, this.name = "StorageError";
  }
}
function qo(e) {
  return typeof e == "object" && e !== null && "__isStorageError" in e;
}
class Nie extends mD {
  constructor(t, n, r) {
    super(t), this.name = "StorageApiError", this.status = n, this.statusCode = r;
  }
  toJSON() {
    return {
      name: this.name,
      message: this.message,
      status: this.status,
      statusCode: this.statusCode
    };
  }
}
class PM extends mD {
  constructor(t, n) {
    super(t), this.name = "StorageUnknownError", this.originalError = n;
  }
}
var Lie = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
const fU = (e) => {
  let t;
  return e ? t = e : typeof fetch > "u" ? t = (...n) => Promise.resolve().then(() => py).then(({ default: r }) => r(...n)) : t = fetch, (...n) => t(...n);
}, $ie = () => Lie(void 0, void 0, void 0, function* () {
  return typeof Response > "u" ? (yield Promise.resolve().then(() => py)).Response : Response;
}), MM = (e) => {
  if (Array.isArray(e))
    return e.map((n) => MM(n));
  if (typeof e == "function" || e !== Object(e))
    return e;
  const t = {};
  return Object.entries(e).forEach(([n, r]) => {
    const o = n.replace(/([-_][a-z])/gi, (s) => s.toUpperCase().replace(/[-_]/g, ""));
    t[o] = MM(r);
  }), t;
}, jie = (e) => {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
};
var mm = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
const hP = (e) => e.msg || e.message || e.error_description || e.error || JSON.stringify(e), Fie = (e, t, n) => mm(void 0, void 0, void 0, function* () {
  const r = yield $ie();
  e instanceof r && !(n != null && n.noResolveJson) ? e.json().then((o) => {
    const s = e.status || 500, a = (o == null ? void 0 : o.statusCode) || s + "";
    t(new Nie(hP(o), s, a));
  }).catch((o) => {
    t(new PM(hP(o), o));
  }) : t(new PM(hP(e), e));
}), zie = (e, t, n, r) => {
  const o = { method: e, headers: (t == null ? void 0 : t.headers) || {} };
  return e === "GET" || !r ? o : (jie(r) ? (o.headers = Object.assign({ "Content-Type": "application/json" }, t == null ? void 0 : t.headers), o.body = JSON.stringify(r)) : o.body = r, t != null && t.duplex && (o.duplex = t.duplex), Object.assign(Object.assign({}, o), n));
};
function yC(e, t, n, r, o, s) {
  return mm(this, void 0, void 0, function* () {
    return new Promise((a, c) => {
      e(n, zie(t, r, o, s)).then((f) => {
        if (!f.ok)
          throw f;
        return r != null && r.noResolveJson ? f : f.json();
      }).then((f) => a(f)).catch((f) => Fie(f, c, r));
    });
  });
}
function zT(e, t, n, r) {
  return mm(this, void 0, void 0, function* () {
    return yC(e, "GET", t, n, r);
  });
}
function sc(e, t, n, r, o) {
  return mm(this, void 0, void 0, function* () {
    return yC(e, "POST", t, r, o, n);
  });
}
function IM(e, t, n, r, o) {
  return mm(this, void 0, void 0, function* () {
    return yC(e, "PUT", t, r, o, n);
  });
}
function Bie(e, t, n, r) {
  return mm(this, void 0, void 0, function* () {
    return yC(e, "HEAD", t, Object.assign(Object.assign({}, n), { noResolveJson: !0 }), r);
  });
}
function pU(e, t, n, r, o) {
  return mm(this, void 0, void 0, function* () {
    return yC(e, "DELETE", t, r, o, n);
  });
}
var Hie = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
class Vie {
  constructor(t, n) {
    this.downloadFn = t, this.shouldThrowOnError = n;
  }
  then(t, n) {
    return this.execute().then(t, n);
  }
  execute() {
    return Hie(this, void 0, void 0, function* () {
      try {
        return {
          data: (yield this.downloadFn()).body,
          error: null
        };
      } catch (t) {
        if (this.shouldThrowOnError)
          throw t;
        if (qo(t))
          return { data: null, error: t };
        throw t;
      }
    });
  }
}
var Uie = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
class Wie {
  constructor(t, n) {
    this.downloadFn = t, this.shouldThrowOnError = n;
  }
  asStream() {
    return new Vie(this.downloadFn, this.shouldThrowOnError);
  }
  then(t, n) {
    return this.execute().then(t, n);
  }
  execute() {
    return Uie(this, void 0, void 0, function* () {
      try {
        return {
          data: yield (yield this.downloadFn()).blob(),
          error: null
        };
      } catch (t) {
        if (this.shouldThrowOnError)
          throw t;
        if (qo(t))
          return { data: null, error: t };
        throw t;
      }
    });
  }
}
var ea = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
const Gie = {
  limit: 100,
  offset: 0,
  sortBy: {
    column: "name",
    order: "asc"
  }
}, XF = {
  cacheControl: "3600",
  contentType: "text/plain;charset=UTF-8",
  upsert: !1
};
class qie {
  constructor(t, n = {}, r, o) {
    this.shouldThrowOnError = !1, this.url = t, this.headers = n, this.bucketId = r, this.fetch = fU(o);
  }
  /**
   * Enable throwing errors instead of returning them.
   */
  throwOnError() {
    return this.shouldThrowOnError = !0, this;
  }
  /**
   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.
   *
   * @param method HTTP method.
   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
   * @param fileBody The body of the file to be stored in the bucket.
   */
  uploadOrUpdate(t, n, r, o) {
    return ea(this, void 0, void 0, function* () {
      try {
        let s;
        const a = Object.assign(Object.assign({}, XF), o);
        let c = Object.assign(Object.assign({}, this.headers), t === "POST" && { "x-upsert": String(a.upsert) });
        const f = a.metadata;
        typeof Blob < "u" && r instanceof Blob ? (s = new FormData(), s.append("cacheControl", a.cacheControl), f && s.append("metadata", this.encodeMetadata(f)), s.append("", r)) : typeof FormData < "u" && r instanceof FormData ? (s = r, s.append("cacheControl", a.cacheControl), f && s.append("metadata", this.encodeMetadata(f))) : (s = r, c["cache-control"] = `max-age=${a.cacheControl}`, c["content-type"] = a.contentType, f && (c["x-metadata"] = this.toBase64(this.encodeMetadata(f)))), o != null && o.headers && (c = Object.assign(Object.assign({}, c), o.headers));
        const m = this._removeEmptyFolders(n), g = this._getFinalPath(m), y = yield (t == "PUT" ? IM : sc)(this.fetch, `${this.url}/object/${g}`, s, Object.assign({ headers: c }, a != null && a.duplex ? { duplex: a.duplex } : {}));
        return {
          data: { path: m, id: y.Id, fullPath: y.Key },
          error: null
        };
      } catch (s) {
        if (this.shouldThrowOnError)
          throw s;
        if (qo(s))
          return { data: null, error: s };
        throw s;
      }
    });
  }
  /**
   * Uploads a file to an existing bucket.
   *
   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
   * @param fileBody The body of the file to be stored in the bucket.
   */
  upload(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      return this.uploadOrUpdate("POST", t, n, r);
    });
  }
  /**
   * Upload a file with a token generated from `createSignedUploadUrl`.
   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
   * @param token The token generated from `createSignedUploadUrl`
   * @param fileBody The body of the file to be stored in the bucket.
   */
  uploadToSignedUrl(t, n, r, o) {
    return ea(this, void 0, void 0, function* () {
      const s = this._removeEmptyFolders(t), a = this._getFinalPath(s), c = new URL(this.url + `/object/upload/sign/${a}`);
      c.searchParams.set("token", n);
      try {
        let f;
        const m = Object.assign({ upsert: XF.upsert }, o), g = Object.assign(Object.assign({}, this.headers), { "x-upsert": String(m.upsert) });
        typeof Blob < "u" && r instanceof Blob ? (f = new FormData(), f.append("cacheControl", m.cacheControl), f.append("", r)) : typeof FormData < "u" && r instanceof FormData ? (f = r, f.append("cacheControl", m.cacheControl)) : (f = r, g["cache-control"] = `max-age=${m.cacheControl}`, g["content-type"] = m.contentType);
        const y = yield IM(this.fetch, c.toString(), f, { headers: g });
        return {
          data: { path: s, fullPath: y.Key },
          error: null
        };
      } catch (f) {
        if (this.shouldThrowOnError)
          throw f;
        if (qo(f))
          return { data: null, error: f };
        throw f;
      }
    });
  }
  /**
   * Creates a signed upload URL.
   * Signed upload URLs can be used to upload files to the bucket without further authentication.
   * They are valid for 2 hours.
   * @param path The file path, including the current file name. For example `folder/image.png`.
   * @param options.upsert If set to true, allows the file to be overwritten if it already exists.
   */
  createSignedUploadUrl(t, n) {
    return ea(this, void 0, void 0, function* () {
      try {
        let r = this._getFinalPath(t);
        const o = Object.assign({}, this.headers);
        n != null && n.upsert && (o["x-upsert"] = "true");
        const s = yield sc(this.fetch, `${this.url}/object/upload/sign/${r}`, {}, { headers: o }), a = new URL(this.url + s.url), c = a.searchParams.get("token");
        if (!c)
          throw new mD("No token returned by API");
        return { data: { signedUrl: a.toString(), path: t, token: c }, error: null };
      } catch (r) {
        if (this.shouldThrowOnError)
          throw r;
        if (qo(r))
          return { data: null, error: r };
        throw r;
      }
    });
  }
  /**
   * Replaces an existing file at the specified path with a new one.
   *
   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.
   * @param fileBody The body of the file to be stored in the bucket.
   */
  update(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      return this.uploadOrUpdate("PUT", t, n, r);
    });
  }
  /**
   * Moves an existing file to a new path in the same bucket.
   *
   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.
   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.
   * @param options The destination options.
   */
  move(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      try {
        return { data: yield sc(this.fetch, `${this.url}/object/move`, {
          bucketId: this.bucketId,
          sourceKey: t,
          destinationKey: n,
          destinationBucket: r == null ? void 0 : r.destinationBucket
        }, { headers: this.headers }), error: null };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * Copies an existing file to a new path in the same bucket.
   *
   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.
   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.
   * @param options The destination options.
   */
  copy(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      try {
        return { data: { path: (yield sc(this.fetch, `${this.url}/object/copy`, {
          bucketId: this.bucketId,
          sourceKey: t,
          destinationKey: n,
          destinationBucket: r == null ? void 0 : r.destinationBucket
        }, { headers: this.headers })).Key }, error: null };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.
   *
   * @param path The file path, including the current file name. For example `folder/image.png`.
   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.
   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
   * @param options.transform Transform the asset before serving it to the client.
   */
  createSignedUrl(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      try {
        let o = this._getFinalPath(t), s = yield sc(this.fetch, `${this.url}/object/sign/${o}`, Object.assign({ expiresIn: n }, r != null && r.transform ? { transform: r.transform } : {}), { headers: this.headers });
        const a = r != null && r.download ? `&download=${r.download === !0 ? "" : r.download}` : "";
        return s = { signedUrl: encodeURI(`${this.url}${s.signedURL}${a}`) }, { data: s, error: null };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.
   *
   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.
   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.
   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
   */
  createSignedUrls(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      try {
        const o = yield sc(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn: n, paths: t }, { headers: this.headers }), s = r != null && r.download ? `&download=${r.download === !0 ? "" : r.download}` : "";
        return {
          data: o.map((a) => Object.assign(Object.assign({}, a), { signedUrl: a.signedURL ? encodeURI(`${this.url}${a.signedURL}${s}`) : null })),
          error: null
        };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.
   *
   * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.
   * @param options.transform Transform the asset before serving it to the client.
   */
  download(t, n) {
    const o = typeof (n == null ? void 0 : n.transform) < "u" ? "render/image/authenticated" : "object", s = this.transformOptsToQueryString((n == null ? void 0 : n.transform) || {}), a = s ? `?${s}` : "", c = this._getFinalPath(t), f = () => zT(this.fetch, `${this.url}/${o}/${c}${a}`, {
      headers: this.headers,
      noResolveJson: !0
    });
    return new Wie(f, this.shouldThrowOnError);
  }
  /**
   * Retrieves the details of an existing file.
   * @param path
   */
  info(t) {
    return ea(this, void 0, void 0, function* () {
      const n = this._getFinalPath(t);
      try {
        const r = yield zT(this.fetch, `${this.url}/object/info/${n}`, {
          headers: this.headers
        });
        return { data: MM(r), error: null };
      } catch (r) {
        if (this.shouldThrowOnError)
          throw r;
        if (qo(r))
          return { data: null, error: r };
        throw r;
      }
    });
  }
  /**
   * Checks the existence of a file.
   * @param path
   */
  exists(t) {
    return ea(this, void 0, void 0, function* () {
      const n = this._getFinalPath(t);
      try {
        return yield Bie(this.fetch, `${this.url}/object/${n}`, {
          headers: this.headers
        }), { data: !0, error: null };
      } catch (r) {
        if (this.shouldThrowOnError)
          throw r;
        if (qo(r) && r instanceof PM) {
          const o = r.originalError;
          if ([400, 404].includes(o == null ? void 0 : o.status))
            return { data: !1, error: r };
        }
        throw r;
      }
    });
  }
  /**
   * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.
   * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.
   *
   * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.
   * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
   * @param options.transform Transform the asset before serving it to the client.
   */
  getPublicUrl(t, n) {
    const r = this._getFinalPath(t), o = [], s = n != null && n.download ? `download=${n.download === !0 ? "" : n.download}` : "";
    s !== "" && o.push(s);
    const c = typeof (n == null ? void 0 : n.transform) < "u" ? "render/image" : "object", f = this.transformOptsToQueryString((n == null ? void 0 : n.transform) || {});
    f !== "" && o.push(f);
    let m = o.join("&");
    return m !== "" && (m = `?${m}`), {
      data: { publicUrl: encodeURI(`${this.url}/${c}/public/${r}${m}`) }
    };
  }
  /**
   * Deletes files within the same bucket
   *
   * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].
   */
  remove(t) {
    return ea(this, void 0, void 0, function* () {
      try {
        return { data: yield pU(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: t }, { headers: this.headers }), error: null };
      } catch (n) {
        if (this.shouldThrowOnError)
          throw n;
        if (qo(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
  /**
   * Get file metadata
   * @param id the file id to retrieve metadata
   */
  // async getMetadata(
  //   id: string
  // ): Promise<
  //   | {
  //       data: Metadata
  //       error: null
  //     }
  //   | {
  //       data: null
  //       error: StorageError
  //     }
  // > {
  //   try {
  //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })
  //     return { data, error: null }
  //   } catch (error) {
  //     if (isStorageError(error)) {
  //       return { data: null, error }
  //     }
  //     throw error
  //   }
  // }
  /**
   * Update file metadata
   * @param id the file id to update metadata
   * @param meta the new file metadata
   */
  // async updateMetadata(
  //   id: string,
  //   meta: Metadata
  // ): Promise<
  //   | {
  //       data: Metadata
  //       error: null
  //     }
  //   | {
  //       data: null
  //       error: StorageError
  //     }
  // > {
  //   try {
  //     const data = await post(
  //       this.fetch,
  //       `${this.url}/metadata/${id}`,
  //       { ...meta },
  //       { headers: this.headers }
  //     )
  //     return { data, error: null }
  //   } catch (error) {
  //     if (isStorageError(error)) {
  //       return { data: null, error }
  //     }
  //     throw error
  //   }
  // }
  /**
   * Lists all the files and folders within a path of the bucket.
   * @param path The folder path.
   * @param options Search options including limit (defaults to 100), offset, sortBy, and search
   */
  list(t, n, r) {
    return ea(this, void 0, void 0, function* () {
      try {
        const o = Object.assign(Object.assign(Object.assign({}, Gie), n), { prefix: t || "" });
        return { data: yield sc(this.fetch, `${this.url}/object/list/${this.bucketId}`, o, { headers: this.headers }, r), error: null };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * @experimental this method signature might change in the future
   * @param options search options
   * @param parameters
   */
  listV2(t, n) {
    return ea(this, void 0, void 0, function* () {
      try {
        const r = Object.assign({}, t);
        return { data: yield sc(this.fetch, `${this.url}/object/list-v2/${this.bucketId}`, r, { headers: this.headers }, n), error: null };
      } catch (r) {
        if (this.shouldThrowOnError)
          throw r;
        if (qo(r))
          return { data: null, error: r };
        throw r;
      }
    });
  }
  encodeMetadata(t) {
    return JSON.stringify(t);
  }
  toBase64(t) {
    return typeof Buffer < "u" ? Buffer.from(t).toString("base64") : btoa(t);
  }
  _getFinalPath(t) {
    return `${this.bucketId}/${t.replace(/^\/+/, "")}`;
  }
  _removeEmptyFolders(t) {
    return t.replace(/^\/|\/$/g, "").replace(/\/+/g, "/");
  }
  transformOptsToQueryString(t) {
    const n = [];
    return t.width && n.push(`width=${t.width}`), t.height && n.push(`height=${t.height}`), t.resize && n.push(`resize=${t.resize}`), t.format && n.push(`format=${t.format}`), t.quality && n.push(`quality=${t.quality}`), n.join("&");
  }
}
const Kie = "2.75.0", Yie = { "X-Client-Info": `storage-js/${Kie}` };
var uv = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
class Xie {
  constructor(t, n = {}, r, o) {
    this.shouldThrowOnError = !1;
    const s = new URL(t);
    o != null && o.useNewHostname && /supabase\.(co|in|red)$/.test(s.hostname) && !s.hostname.includes("storage.supabase.") && (s.hostname = s.hostname.replace("supabase.", "storage.supabase.")), this.url = s.href.replace(/\/$/, ""), this.headers = Object.assign(Object.assign({}, Yie), n), this.fetch = fU(r);
  }
  /**
   * Enable throwing errors instead of returning them.
   */
  throwOnError() {
    return this.shouldThrowOnError = !0, this;
  }
  /**
   * Retrieves the details of all Storage buckets within an existing project.
   */
  listBuckets() {
    return uv(this, void 0, void 0, function* () {
      try {
        return { data: yield zT(this.fetch, `${this.url}/bucket`, { headers: this.headers }), error: null };
      } catch (t) {
        if (this.shouldThrowOnError)
          throw t;
        if (qo(t))
          return { data: null, error: t };
        throw t;
      }
    });
  }
  /**
   * Retrieves the details of an existing Storage bucket.
   *
   * @param id The unique identifier of the bucket you would like to retrieve.
   */
  getBucket(t) {
    return uv(this, void 0, void 0, function* () {
      try {
        return { data: yield zT(this.fetch, `${this.url}/bucket/${t}`, { headers: this.headers }), error: null };
      } catch (n) {
        if (this.shouldThrowOnError)
          throw n;
        if (qo(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
  /**
   * Creates a new Storage bucket
   *
   * @param id A unique identifier for the bucket you are creating.
   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.
   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.
   * The global file size limit takes precedence over this value.
   * The default value is null, which doesn't set a per bucket file size limit.
   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.
   * The default value is null, which allows files with all mime types to be uploaded.
   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.
   * @returns newly created bucket id
   * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.
   *   - default bucket type is `STANDARD`
   */
  createBucket(t) {
    return uv(this, arguments, void 0, function* (n, r = {
      public: !1
    }) {
      try {
        return { data: yield sc(this.fetch, `${this.url}/bucket`, {
          id: n,
          name: n,
          type: r.type,
          public: r.public,
          file_size_limit: r.fileSizeLimit,
          allowed_mime_types: r.allowedMimeTypes
        }, { headers: this.headers }), error: null };
      } catch (o) {
        if (this.shouldThrowOnError)
          throw o;
        if (qo(o))
          return { data: null, error: o };
        throw o;
      }
    });
  }
  /**
   * Updates a Storage bucket
   *
   * @param id A unique identifier for the bucket you are updating.
   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.
   * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.
   * The global file size limit takes precedence over this value.
   * The default value is null, which doesn't set a per bucket file size limit.
   * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.
   * The default value is null, which allows files with all mime types to be uploaded.
   * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.
   */
  updateBucket(t, n) {
    return uv(this, void 0, void 0, function* () {
      try {
        return { data: yield IM(this.fetch, `${this.url}/bucket/${t}`, {
          id: t,
          name: t,
          public: n.public,
          file_size_limit: n.fileSizeLimit,
          allowed_mime_types: n.allowedMimeTypes
        }, { headers: this.headers }), error: null };
      } catch (r) {
        if (this.shouldThrowOnError)
          throw r;
        if (qo(r))
          return { data: null, error: r };
        throw r;
      }
    });
  }
  /**
   * Removes all objects inside a single bucket.
   *
   * @param id The unique identifier of the bucket you would like to empty.
   */
  emptyBucket(t) {
    return uv(this, void 0, void 0, function* () {
      try {
        return { data: yield sc(this.fetch, `${this.url}/bucket/${t}/empty`, {}, { headers: this.headers }), error: null };
      } catch (n) {
        if (this.shouldThrowOnError)
          throw n;
        if (qo(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
  /**
   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.
   * You must first `empty()` the bucket.
   *
   * @param id The unique identifier of the bucket you would like to delete.
   */
  deleteBucket(t) {
    return uv(this, void 0, void 0, function* () {
      try {
        return { data: yield pU(this.fetch, `${this.url}/bucket/${t}`, {}, { headers: this.headers }), error: null };
      } catch (n) {
        if (this.shouldThrowOnError)
          throw n;
        if (qo(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
}
class Qie extends Xie {
  constructor(t, n = {}, r, o) {
    super(t, n, r, o);
  }
  /**
   * Perform file operation in a bucket.
   *
   * @param id The bucket id to operate on.
   */
  from(t) {
    return new qie(this.url, this.headers, t, this.fetch);
  }
}
const Jie = "2.75.0";
let oS = "";
typeof Deno < "u" ? oS = "deno" : typeof document < "u" ? oS = "web" : typeof navigator < "u" && navigator.product === "ReactNative" ? oS = "react-native" : oS = "node";
const Zie = { "X-Client-Info": `supabase-js-${oS}/${Jie}` }, ese = {
  headers: Zie
}, tse = {
  schema: "public"
}, nse = {
  autoRefreshToken: !0,
  persistSession: !0,
  detectSessionInUrl: !0,
  flowType: "implicit"
}, rse = {};
var ose = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
const ise = (e) => {
  let t;
  return e ? t = e : typeof fetch > "u" ? t = JV : t = fetch, (...n) => t(...n);
}, sse = () => typeof Headers > "u" ? ZV : Headers, ase = (e, t, n) => {
  const r = ise(n), o = sse();
  return (s, a) => ose(void 0, void 0, void 0, function* () {
    var c;
    const f = (c = yield t()) !== null && c !== void 0 ? c : e;
    let m = new o(a == null ? void 0 : a.headers);
    return m.has("apikey") || m.set("apikey", e), m.has("Authorization") || m.set("Authorization", `Bearer ${f}`), r(s, Object.assign(Object.assign({}, a), { headers: m }));
  });
};
var lse = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
function use(e) {
  return e.endsWith("/") ? e : e + "/";
}
function cse(e, t) {
  var n, r;
  const { db: o, auth: s, realtime: a, global: c } = e, { db: f, auth: m, realtime: g, global: y } = t, w = {
    db: Object.assign(Object.assign({}, f), o),
    auth: Object.assign(Object.assign({}, m), s),
    realtime: Object.assign(Object.assign({}, g), a),
    storage: {},
    global: Object.assign(Object.assign(Object.assign({}, y), c), { headers: Object.assign(Object.assign({}, (n = y == null ? void 0 : y.headers) !== null && n !== void 0 ? n : {}), (r = c == null ? void 0 : c.headers) !== null && r !== void 0 ? r : {}) }),
    accessToken: () => lse(this, void 0, void 0, function* () {
      return "";
    })
  };
  return e.accessToken ? w.accessToken = e.accessToken : delete w.accessToken, w;
}
function dse(e) {
  const t = e == null ? void 0 : e.trim();
  if (!t)
    throw new Error("supabaseUrl is required.");
  if (!t.match(/^https?:\/\//i))
    throw new Error("Invalid supabaseUrl: Must be a valid HTTP or HTTPS URL.");
  try {
    return new URL(use(t));
  } catch {
    throw Error("Invalid supabaseUrl: Provided URL is malformed.");
  }
}
const hU = "2.75.0", Sv = 30 * 1e3, DM = 3, mP = DM * Sv, fse = "http://localhost:9999", pse = "supabase.auth.token", hse = { "X-Client-Info": `gotrue-js/${hU}` }, AM = "X-Supabase-Api-Version", mU = {
  "2024-01-01": {
    timestamp: Date.parse("2024-01-01T00:00:00.0Z"),
    name: "2024-01-01"
  }
}, mse = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i, gse = 10 * 60 * 1e3;
class VS extends Error {
  constructor(t, n, r) {
    super(t), this.__isAuthError = !0, this.name = "AuthError", this.status = n, this.code = r;
  }
}
function un(e) {
  return typeof e == "object" && e !== null && "__isAuthError" in e;
}
class vse extends VS {
  constructor(t, n, r) {
    super(t, n, r), this.name = "AuthApiError", this.status = n, this.code = r;
  }
}
function yse(e) {
  return un(e) && e.name === "AuthApiError";
}
class Vh extends VS {
  constructor(t, n) {
    super(t), this.name = "AuthUnknownError", this.originalError = n;
  }
}
class up extends VS {
  constructor(t, n, r, o) {
    super(t, r, o), this.name = n, this.status = r;
  }
}
class Mf extends up {
  constructor() {
    super("Auth session missing!", "AuthSessionMissingError", 400, void 0);
  }
}
function bse(e) {
  return un(e) && e.name === "AuthSessionMissingError";
}
class cv extends up {
  constructor() {
    super("Auth session or user missing", "AuthInvalidTokenResponseError", 500, void 0);
  }
}
class zE extends up {
  constructor(t) {
    super(t, "AuthInvalidCredentialsError", 400, void 0);
  }
}
class BE extends up {
  constructor(t, n = null) {
    super(t, "AuthImplicitGrantRedirectError", 500, void 0), this.details = null, this.details = n;
  }
  toJSON() {
    return {
      name: this.name,
      message: this.message,
      status: this.status,
      details: this.details
    };
  }
}
function wse(e) {
  return un(e) && e.name === "AuthImplicitGrantRedirectError";
}
class QF extends up {
  constructor(t, n = null) {
    super(t, "AuthPKCEGrantCodeExchangeError", 500, void 0), this.details = null, this.details = n;
  }
  toJSON() {
    return {
      name: this.name,
      message: this.message,
      status: this.status,
      details: this.details
    };
  }
}
class NM extends up {
  constructor(t, n) {
    super(t, "AuthRetryableFetchError", n, void 0);
  }
}
function gP(e) {
  return un(e) && e.name === "AuthRetryableFetchError";
}
class JF extends up {
  constructor(t, n, r) {
    super(t, "AuthWeakPasswordError", n, "weak_password"), this.reasons = r;
  }
}
class LM extends up {
  constructor(t) {
    super(t, "AuthInvalidJwtError", 400, "invalid_jwt");
  }
}
const BT = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".split(""), ZF = ` 	
\r=`.split(""), Sse = (() => {
  const e = new Array(128);
  for (let t = 0; t < e.length; t += 1)
    e[t] = -1;
  for (let t = 0; t < ZF.length; t += 1)
    e[ZF[t].charCodeAt(0)] = -2;
  for (let t = 0; t < BT.length; t += 1)
    e[BT[t].charCodeAt(0)] = t;
  return e;
})();
function e2(e, t, n) {
  if (e !== null)
    for (t.queue = t.queue << 8 | e, t.queuedBits += 8; t.queuedBits >= 6; ) {
      const r = t.queue >> t.queuedBits - 6 & 63;
      n(BT[r]), t.queuedBits -= 6;
    }
  else if (t.queuedBits > 0)
    for (t.queue = t.queue << 6 - t.queuedBits, t.queuedBits = 6; t.queuedBits >= 6; ) {
      const r = t.queue >> t.queuedBits - 6 & 63;
      n(BT[r]), t.queuedBits -= 6;
    }
}
function gU(e, t, n) {
  const r = Sse[e];
  if (r > -1)
    for (t.queue = t.queue << 6 | r, t.queuedBits += 6; t.queuedBits >= 8; )
      n(t.queue >> t.queuedBits - 8 & 255), t.queuedBits -= 8;
  else {
    if (r === -2)
      return;
    throw new Error(`Invalid Base64-URL character "${String.fromCharCode(e)}"`);
  }
}
function t2(e) {
  const t = [], n = (a) => {
    t.push(String.fromCodePoint(a));
  }, r = {
    utf8seq: 0,
    codepoint: 0
  }, o = { queue: 0, queuedBits: 0 }, s = (a) => {
    Ese(a, r, n);
  };
  for (let a = 0; a < e.length; a += 1)
    gU(e.charCodeAt(a), o, s);
  return t.join("");
}
function Cse(e, t) {
  if (e <= 127) {
    t(e);
    return;
  } else if (e <= 2047) {
    t(192 | e >> 6), t(128 | e & 63);
    return;
  } else if (e <= 65535) {
    t(224 | e >> 12), t(128 | e >> 6 & 63), t(128 | e & 63);
    return;
  } else if (e <= 1114111) {
    t(240 | e >> 18), t(128 | e >> 12 & 63), t(128 | e >> 6 & 63), t(128 | e & 63);
    return;
  }
  throw new Error(`Unrecognized Unicode codepoint: ${e.toString(16)}`);
}
function xse(e, t) {
  for (let n = 0; n < e.length; n += 1) {
    let r = e.charCodeAt(n);
    if (r > 55295 && r <= 56319) {
      const o = (r - 55296) * 1024 & 65535;
      r = (e.charCodeAt(n + 1) - 56320 & 65535 | o) + 65536, n += 1;
    }
    Cse(r, t);
  }
}
function Ese(e, t, n) {
  if (t.utf8seq === 0) {
    if (e <= 127) {
      n(e);
      return;
    }
    for (let r = 1; r < 6; r += 1)
      if (!(e >> 7 - r & 1)) {
        t.utf8seq = r;
        break;
      }
    if (t.utf8seq === 2)
      t.codepoint = e & 31;
    else if (t.utf8seq === 3)
      t.codepoint = e & 15;
    else if (t.utf8seq === 4)
      t.codepoint = e & 7;
    else
      throw new Error("Invalid UTF-8 sequence");
    t.utf8seq -= 1;
  } else if (t.utf8seq > 0) {
    if (e <= 127)
      throw new Error("Invalid UTF-8 sequence");
    t.codepoint = t.codepoint << 6 | e & 63, t.utf8seq -= 1, t.utf8seq === 0 && n(t.codepoint);
  }
}
function Nv(e) {
  const t = [], n = { queue: 0, queuedBits: 0 }, r = (o) => {
    t.push(o);
  };
  for (let o = 0; o < e.length; o += 1)
    gU(e.charCodeAt(o), n, r);
  return new Uint8Array(t);
}
function Tse(e) {
  const t = [];
  return xse(e, (n) => t.push(n)), new Uint8Array(t);
}
function Kh(e) {
  const t = [], n = { queue: 0, queuedBits: 0 }, r = (o) => {
    t.push(o);
  };
  return e.forEach((o) => e2(o, n, r)), e2(null, n, r), t.join("");
}
function _se(e) {
  return Math.round(Date.now() / 1e3) + e;
}
function Ose() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
    const t = Math.random() * 16 | 0;
    return (e == "x" ? t : t & 3 | 8).toString(16);
  });
}
const Ea = () => typeof window < "u" && typeof document < "u", kh = {
  tested: !1,
  writable: !1
}, vU = () => {
  if (!Ea())
    return !1;
  try {
    if (typeof globalThis.localStorage != "object")
      return !1;
  } catch {
    return !1;
  }
  if (kh.tested)
    return kh.writable;
  const e = `lswt-${Math.random()}${Math.random()}`;
  try {
    globalThis.localStorage.setItem(e, e), globalThis.localStorage.removeItem(e), kh.tested = !0, kh.writable = !0;
  } catch {
    kh.tested = !0, kh.writable = !1;
  }
  return kh.writable;
};
function Rse(e) {
  const t = {}, n = new URL(e);
  if (n.hash && n.hash[0] === "#")
    try {
      new URLSearchParams(n.hash.substring(1)).forEach((o, s) => {
        t[s] = o;
      });
    } catch {
    }
  return n.searchParams.forEach((r, o) => {
    t[o] = r;
  }), t;
}
const yU = (e) => {
  let t;
  return e ? t = e : typeof fetch > "u" ? t = (...n) => Promise.resolve().then(() => py).then(({ default: r }) => r(...n)) : t = fetch, (...n) => t(...n);
}, kse = (e) => typeof e == "object" && e !== null && "status" in e && "ok" in e && "json" in e && typeof e.json == "function", Cv = async (e, t, n) => {
  await e.setItem(t, JSON.stringify(n));
}, Ph = async (e, t) => {
  const n = await e.getItem(t);
  if (!n)
    return null;
  try {
    return JSON.parse(n);
  } catch {
    return n;
  }
}, Pf = async (e, t) => {
  await e.removeItem(t);
};
class J_ {
  constructor() {
    this.promise = new J_.promiseConstructor((t, n) => {
      this.resolve = t, this.reject = n;
    });
  }
}
J_.promiseConstructor = Promise;
function vP(e) {
  const t = e.split(".");
  if (t.length !== 3)
    throw new LM("Invalid JWT structure");
  for (let r = 0; r < t.length; r++)
    if (!mse.test(t[r]))
      throw new LM("JWT not in base64url format");
  return {
    // using base64url lib
    header: JSON.parse(t2(t[0])),
    payload: JSON.parse(t2(t[1])),
    signature: Nv(t[2]),
    raw: {
      header: t[0],
      payload: t[1]
    }
  };
}
async function Pse(e) {
  return await new Promise((t) => {
    setTimeout(() => t(null), e);
  });
}
function Mse(e, t) {
  return new Promise((r, o) => {
    (async () => {
      for (let s = 0; s < 1 / 0; s++)
        try {
          const a = await e(s);
          if (!t(s, null, a)) {
            r(a);
            return;
          }
        } catch (a) {
          if (!t(s, a)) {
            o(a);
            return;
          }
        }
    })();
  });
}
function Ise(e) {
  return ("0" + e.toString(16)).substr(-2);
}
function Dse() {
  const t = new Uint32Array(56);
  if (typeof crypto > "u") {
    const n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~", r = n.length;
    let o = "";
    for (let s = 0; s < 56; s++)
      o += n.charAt(Math.floor(Math.random() * r));
    return o;
  }
  return crypto.getRandomValues(t), Array.from(t, Ise).join("");
}
async function Ase(e) {
  const n = new TextEncoder().encode(e), r = await crypto.subtle.digest("SHA-256", n), o = new Uint8Array(r);
  return Array.from(o).map((s) => String.fromCharCode(s)).join("");
}
async function Nse(e) {
  if (!(typeof crypto < "u" && typeof crypto.subtle < "u" && typeof TextEncoder < "u"))
    return console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."), e;
  const n = await Ase(e);
  return btoa(n).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
}
async function dv(e, t, n = !1) {
  const r = Dse();
  let o = r;
  n && (o += "/PASSWORD_RECOVERY"), await Cv(e, `${t}-code-verifier`, o);
  const s = await Nse(r);
  return [s, r === s ? "plain" : "s256"];
}
const Lse = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;
function $se(e) {
  const t = e.headers.get(AM);
  if (!t || !t.match(Lse))
    return null;
  try {
    return /* @__PURE__ */ new Date(`${t}T00:00:00.0Z`);
  } catch {
    return null;
  }
}
function jse(e) {
  if (!e)
    throw new Error("Missing exp claim");
  const t = Math.floor(Date.now() / 1e3);
  if (e <= t)
    throw new Error("JWT has expired");
}
function Fse(e) {
  switch (e) {
    case "RS256":
      return {
        name: "RSASSA-PKCS1-v1_5",
        hash: { name: "SHA-256" }
      };
    case "ES256":
      return {
        name: "ECDSA",
        namedCurve: "P-256",
        hash: { name: "SHA-256" }
      };
    default:
      throw new Error("Invalid alg claim");
  }
}
const zse = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;
function fv(e) {
  if (!zse.test(e))
    throw new Error("@supabase/auth-js: Expected parameter to be UUID but is not");
}
function yP() {
  const e = {};
  return new Proxy(e, {
    get: (t, n) => {
      if (n === "__isUserNotAvailableProxy")
        return !0;
      if (typeof n == "symbol") {
        const r = n.toString();
        if (r === "Symbol(Symbol.toPrimitive)" || r === "Symbol(Symbol.toStringTag)" || r === "Symbol(util.inspect.custom)")
          return;
      }
      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the "${n}" property of the session object is not supported. Please use getUser() instead.`);
    },
    set: (t, n) => {
      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the "${n}" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);
    },
    deleteProperty: (t, n) => {
      throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the "${n}" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);
    }
  });
}
function n2(e) {
  return JSON.parse(JSON.stringify(e));
}
var Bse = function(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, r = Object.getOwnPropertySymbols(e); o < r.length; o++)
      t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]]);
  return n;
};
const $h = (e) => e.msg || e.message || e.error_description || e.error || JSON.stringify(e), Hse = [502, 503, 504];
async function r2(e) {
  var t;
  if (!kse(e))
    throw new NM($h(e), 0);
  if (Hse.includes(e.status))
    throw new NM($h(e), e.status);
  let n;
  try {
    n = await e.json();
  } catch (s) {
    throw new Vh($h(s), s);
  }
  let r;
  const o = $se(e);
  if (o && o.getTime() >= mU["2024-01-01"].timestamp && typeof n == "object" && n && typeof n.code == "string" ? r = n.code : typeof n == "object" && n && typeof n.error_code == "string" && (r = n.error_code), r) {
    if (r === "weak_password")
      throw new JF($h(n), e.status, ((t = n.weak_password) === null || t === void 0 ? void 0 : t.reasons) || []);
    if (r === "session_not_found")
      throw new Mf();
  } else if (typeof n == "object" && n && typeof n.weak_password == "object" && n.weak_password && Array.isArray(n.weak_password.reasons) && n.weak_password.reasons.length && n.weak_password.reasons.reduce((s, a) => s && typeof a == "string", !0))
    throw new JF($h(n), e.status, n.weak_password.reasons);
  throw new vse($h(n), e.status || 500, r);
}
const Vse = (e, t, n, r) => {
  const o = { method: e, headers: (t == null ? void 0 : t.headers) || {} };
  return e === "GET" ? o : (o.headers = Object.assign({ "Content-Type": "application/json;charset=UTF-8" }, t == null ? void 0 : t.headers), o.body = JSON.stringify(r), Object.assign(Object.assign({}, o), n));
};
async function _n(e, t, n, r) {
  var o;
  const s = Object.assign({}, r == null ? void 0 : r.headers);
  s[AM] || (s[AM] = mU["2024-01-01"].name), r != null && r.jwt && (s.Authorization = `Bearer ${r.jwt}`);
  const a = (o = r == null ? void 0 : r.query) !== null && o !== void 0 ? o : {};
  r != null && r.redirectTo && (a.redirect_to = r.redirectTo);
  const c = Object.keys(a).length ? "?" + new URLSearchParams(a).toString() : "", f = await Use(e, t, n + c, {
    headers: s,
    noResolveJson: r == null ? void 0 : r.noResolveJson
  }, {}, r == null ? void 0 : r.body);
  return r != null && r.xform ? r == null ? void 0 : r.xform(f) : { data: Object.assign({}, f), error: null };
}
async function Use(e, t, n, r, o, s) {
  const a = Vse(t, r, o, s);
  let c;
  try {
    c = await e(n, Object.assign({}, a));
  } catch (f) {
    throw console.error(f), new NM($h(f), 0);
  }
  if (c.ok || await r2(c), r != null && r.noResolveJson)
    return c;
  try {
    return await c.json();
  } catch (f) {
    await r2(f);
  }
}
function ru(e) {
  var t;
  let n = null;
  qse(e) && (n = Object.assign({}, e), e.expires_at || (n.expires_at = _se(e.expires_in)));
  const r = (t = e.user) !== null && t !== void 0 ? t : e;
  return { data: { session: n, user: r }, error: null };
}
function o2(e) {
  const t = ru(e);
  return !t.error && e.weak_password && typeof e.weak_password == "object" && Array.isArray(e.weak_password.reasons) && e.weak_password.reasons.length && e.weak_password.message && typeof e.weak_password.message == "string" && e.weak_password.reasons.reduce((n, r) => n && typeof r == "string", !0) && (t.data.weak_password = e.weak_password), t;
}
function Lf(e) {
  var t;
  return { data: { user: (t = e.user) !== null && t !== void 0 ? t : e }, error: null };
}
function Wse(e) {
  return { data: e, error: null };
}
function Gse(e) {
  const { action_link: t, email_otp: n, hashed_token: r, redirect_to: o, verification_type: s } = e, a = Bse(e, ["action_link", "email_otp", "hashed_token", "redirect_to", "verification_type"]), c = {
    action_link: t,
    email_otp: n,
    hashed_token: r,
    redirect_to: o,
    verification_type: s
  }, f = Object.assign({}, a);
  return {
    data: {
      properties: c,
      user: f
    },
    error: null
  };
}
function i2(e) {
  return e;
}
function qse(e) {
  return e.access_token && e.refresh_token && e.expires_in;
}
const bP = ["global", "local", "others"];
var Kse = function(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, r = Object.getOwnPropertySymbols(e); o < r.length; o++)
      t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]]);
  return n;
};
class Yse {
  constructor({ url: t = "", headers: n = {}, fetch: r }) {
    this.url = t, this.headers = n, this.fetch = yU(r), this.mfa = {
      listFactors: this._listFactors.bind(this),
      deleteFactor: this._deleteFactor.bind(this)
    }, this.oauth = {
      listClients: this._listOAuthClients.bind(this),
      createClient: this._createOAuthClient.bind(this),
      getClient: this._getOAuthClient.bind(this),
      deleteClient: this._deleteOAuthClient.bind(this),
      regenerateClientSecret: this._regenerateOAuthClientSecret.bind(this)
    };
  }
  /**
   * Removes a logged-in session.
   * @param jwt A valid, logged-in JWT.
   * @param scope The logout sope.
   */
  async signOut(t, n = bP[0]) {
    if (bP.indexOf(n) < 0)
      throw new Error(`@supabase/auth-js: Parameter scope must be one of ${bP.join(", ")}`);
    try {
      return await _n(this.fetch, "POST", `${this.url}/logout?scope=${n}`, {
        headers: this.headers,
        jwt: t,
        noResolveJson: !0
      }), { data: null, error: null };
    } catch (r) {
      if (un(r))
        return { data: null, error: r };
      throw r;
    }
  }
  /**
   * Sends an invite link to an email address.
   * @param email The email address of the user.
   * @param options Additional options to be included when inviting.
   */
  async inviteUserByEmail(t, n = {}) {
    try {
      return await _n(this.fetch, "POST", `${this.url}/invite`, {
        body: { email: t, data: n.data },
        headers: this.headers,
        redirectTo: n.redirectTo,
        xform: Lf
      });
    } catch (r) {
      if (un(r))
        return { data: { user: null }, error: r };
      throw r;
    }
  }
  /**
   * Generates email links and OTPs to be sent via a custom email provider.
   * @param email The user's email.
   * @param options.password User password. For signup only.
   * @param options.data Optional user metadata. For signup only.
   * @param options.redirectTo The redirect url which should be appended to the generated link
   */
  async generateLink(t) {
    try {
      const { options: n } = t, r = Kse(t, ["options"]), o = Object.assign(Object.assign({}, r), n);
      return "newEmail" in r && (o.new_email = r == null ? void 0 : r.newEmail, delete o.newEmail), await _n(this.fetch, "POST", `${this.url}/admin/generate_link`, {
        body: o,
        headers: this.headers,
        xform: Gse,
        redirectTo: n == null ? void 0 : n.redirectTo
      });
    } catch (n) {
      if (un(n))
        return {
          data: {
            properties: null,
            user: null
          },
          error: n
        };
      throw n;
    }
  }
  // User Admin API
  /**
   * Creates a new user.
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async createUser(t) {
    try {
      return await _n(this.fetch, "POST", `${this.url}/admin/users`, {
        body: t,
        headers: this.headers,
        xform: Lf
      });
    } catch (n) {
      if (un(n))
        return { data: { user: null }, error: n };
      throw n;
    }
  }
  /**
   * Get a list of users.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.
   */
  async listUsers(t) {
    var n, r, o, s, a, c, f;
    try {
      const m = { nextPage: null, lastPage: 0, total: 0 }, g = await _n(this.fetch, "GET", `${this.url}/admin/users`, {
        headers: this.headers,
        noResolveJson: !0,
        query: {
          page: (r = (n = t == null ? void 0 : t.page) === null || n === void 0 ? void 0 : n.toString()) !== null && r !== void 0 ? r : "",
          per_page: (s = (o = t == null ? void 0 : t.perPage) === null || o === void 0 ? void 0 : o.toString()) !== null && s !== void 0 ? s : ""
        },
        xform: i2
      });
      if (g.error)
        throw g.error;
      const y = await g.json(), w = (a = g.headers.get("x-total-count")) !== null && a !== void 0 ? a : 0, C = (f = (c = g.headers.get("link")) === null || c === void 0 ? void 0 : c.split(",")) !== null && f !== void 0 ? f : [];
      return C.length > 0 && (C.forEach((T) => {
        const E = parseInt(T.split(";")[0].split("=")[1].substring(0, 1)), O = JSON.parse(T.split(";")[1].split("=")[1]);
        m[`${O}Page`] = E;
      }), m.total = parseInt(w)), { data: Object.assign(Object.assign({}, y), m), error: null };
    } catch (m) {
      if (un(m))
        return { data: { users: [] }, error: m };
      throw m;
    }
  }
  /**
   * Get user by id.
   *
   * @param uid The user's unique identifier
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async getUserById(t) {
    fv(t);
    try {
      return await _n(this.fetch, "GET", `${this.url}/admin/users/${t}`, {
        headers: this.headers,
        xform: Lf
      });
    } catch (n) {
      if (un(n))
        return { data: { user: null }, error: n };
      throw n;
    }
  }
  /**
   * Updates the user data.
   *
   * @param attributes The data you want to update.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async updateUserById(t, n) {
    fv(t);
    try {
      return await _n(this.fetch, "PUT", `${this.url}/admin/users/${t}`, {
        body: n,
        headers: this.headers,
        xform: Lf
      });
    } catch (r) {
      if (un(r))
        return { data: { user: null }, error: r };
      throw r;
    }
  }
  /**
   * Delete a user. Requires a `service_role` key.
   *
   * @param id The user id you want to remove.
   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.
   * Defaults to false for backward compatibility.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async deleteUser(t, n = !1) {
    fv(t);
    try {
      return await _n(this.fetch, "DELETE", `${this.url}/admin/users/${t}`, {
        headers: this.headers,
        body: {
          should_soft_delete: n
        },
        xform: Lf
      });
    } catch (r) {
      if (un(r))
        return { data: { user: null }, error: r };
      throw r;
    }
  }
  async _listFactors(t) {
    fv(t.userId);
    try {
      const { data: n, error: r } = await _n(this.fetch, "GET", `${this.url}/admin/users/${t.userId}/factors`, {
        headers: this.headers,
        xform: (o) => ({ data: { factors: o }, error: null })
      });
      return { data: n, error: r };
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  async _deleteFactor(t) {
    fv(t.userId), fv(t.id);
    try {
      return { data: await _n(this.fetch, "DELETE", `${this.url}/admin/users/${t.userId}/factors/${t.id}`, {
        headers: this.headers
      }), error: null };
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  /**
   * Lists all OAuth clients with optional pagination.
   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async _listOAuthClients(t) {
    var n, r, o, s, a, c, f;
    try {
      const m = { nextPage: null, lastPage: 0, total: 0 }, g = await _n(this.fetch, "GET", `${this.url}/admin/oauth/clients`, {
        headers: this.headers,
        noResolveJson: !0,
        query: {
          page: (r = (n = t == null ? void 0 : t.page) === null || n === void 0 ? void 0 : n.toString()) !== null && r !== void 0 ? r : "",
          per_page: (s = (o = t == null ? void 0 : t.perPage) === null || o === void 0 ? void 0 : o.toString()) !== null && s !== void 0 ? s : ""
        },
        xform: i2
      });
      if (g.error)
        throw g.error;
      const y = await g.json(), w = (a = g.headers.get("x-total-count")) !== null && a !== void 0 ? a : 0, C = (f = (c = g.headers.get("link")) === null || c === void 0 ? void 0 : c.split(",")) !== null && f !== void 0 ? f : [];
      return C.length > 0 && (C.forEach((T) => {
        const E = parseInt(T.split(";")[0].split("=")[1].substring(0, 1)), O = JSON.parse(T.split(";")[1].split("=")[1]);
        m[`${O}Page`] = E;
      }), m.total = parseInt(w)), { data: Object.assign(Object.assign({}, y), m), error: null };
    } catch (m) {
      if (un(m))
        return { data: { clients: [] }, error: m };
      throw m;
    }
  }
  /**
   * Creates a new OAuth client.
   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async _createOAuthClient(t) {
    try {
      return await _n(this.fetch, "POST", `${this.url}/admin/oauth/clients`, {
        body: t,
        headers: this.headers,
        xform: (n) => ({ data: n, error: null })
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  /**
   * Gets details of a specific OAuth client.
   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async _getOAuthClient(t) {
    try {
      return await _n(this.fetch, "GET", `${this.url}/admin/oauth/clients/${t}`, {
        headers: this.headers,
        xform: (n) => ({ data: n, error: null })
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  /**
   * Deletes an OAuth client.
   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async _deleteOAuthClient(t) {
    try {
      return await _n(this.fetch, "DELETE", `${this.url}/admin/oauth/clients/${t}`, {
        headers: this.headers,
        xform: (n) => ({ data: n, error: null })
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  /**
   * Regenerates the secret for an OAuth client.
   * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.
   *
   * This function should only be called on a server. Never expose your `service_role` key in the browser.
   */
  async _regenerateOAuthClientSecret(t) {
    try {
      return await _n(this.fetch, "POST", `${this.url}/admin/oauth/clients/${t}/regenerate_secret`, {
        headers: this.headers,
        xform: (n) => ({ data: n, error: null })
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
}
function s2(e = {}) {
  return {
    getItem: (t) => e[t] || null,
    setItem: (t, n) => {
      e[t] = n;
    },
    removeItem: (t) => {
      delete e[t];
    }
  };
}
const pv = {
  /**
   * @experimental
   */
  debug: !!(globalThis && vU() && globalThis.localStorage && globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug") === "true")
};
class bU extends Error {
  constructor(t) {
    super(t), this.isAcquireTimeout = !0;
  }
}
class Xse extends bU {
}
async function Qse(e, t, n) {
  pv.debug && console.log("@supabase/gotrue-js: navigatorLock: acquire lock", e, t);
  const r = new globalThis.AbortController();
  return t > 0 && setTimeout(() => {
    r.abort(), pv.debug && console.log("@supabase/gotrue-js: navigatorLock acquire timed out", e);
  }, t), await Promise.resolve().then(() => globalThis.navigator.locks.request(e, t === 0 ? {
    mode: "exclusive",
    ifAvailable: !0
  } : {
    mode: "exclusive",
    signal: r.signal
  }, async (o) => {
    if (o) {
      pv.debug && console.log("@supabase/gotrue-js: navigatorLock: acquired", e, o.name);
      try {
        return await n();
      } finally {
        pv.debug && console.log("@supabase/gotrue-js: navigatorLock: released", e, o.name);
      }
    } else {
      if (t === 0)
        throw pv.debug && console.log("@supabase/gotrue-js: navigatorLock: not immediately available", e), new Xse(`Acquiring an exclusive Navigator LockManager lock "${e}" immediately failed`);
      if (pv.debug)
        try {
          const s = await globalThis.navigator.locks.query();
          console.log("@supabase/gotrue-js: Navigator LockManager state", JSON.stringify(s, null, "  "));
        } catch (s) {
          console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state", s);
        }
      return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"), await n();
    }
  }));
}
function Jse() {
  if (typeof globalThis != "object")
    try {
      Object.defineProperty(Object.prototype, "__magic__", {
        get: function() {
          return this;
        },
        configurable: !0
      }), __magic__.globalThis = __magic__, delete Object.prototype.__magic__;
    } catch {
      typeof self < "u" && (self.globalThis = self);
    }
}
function wU(e) {
  if (!/^0x[a-fA-F0-9]{40}$/.test(e))
    throw new Error(`@supabase/auth-js: Address "${e}" is invalid.`);
  return e.toLowerCase();
}
function Zse(e) {
  return parseInt(e, 16);
}
function eae(e) {
  const t = new TextEncoder().encode(e);
  return "0x" + Array.from(t, (r) => r.toString(16).padStart(2, "0")).join("");
}
function tae(e) {
  var t;
  const { chainId: n, domain: r, expirationTime: o, issuedAt: s = /* @__PURE__ */ new Date(), nonce: a, notBefore: c, requestId: f, resources: m, scheme: g, uri: y, version: w } = e;
  {
    if (!Number.isInteger(n))
      throw new Error(`@supabase/auth-js: Invalid SIWE message field "chainId". Chain ID must be a EIP-155 chain ID. Provided value: ${n}`);
    if (!r)
      throw new Error('@supabase/auth-js: Invalid SIWE message field "domain". Domain must be provided.');
    if (a && a.length < 8)
      throw new Error(`@supabase/auth-js: Invalid SIWE message field "nonce". Nonce must be at least 8 characters. Provided value: ${a}`);
    if (!y)
      throw new Error('@supabase/auth-js: Invalid SIWE message field "uri". URI must be provided.');
    if (w !== "1")
      throw new Error(`@supabase/auth-js: Invalid SIWE message field "version". Version must be '1'. Provided value: ${w}`);
    if (!((t = e.statement) === null || t === void 0) && t.includes(`
`))
      throw new Error(`@supabase/auth-js: Invalid SIWE message field "statement". Statement must not include '\\n'. Provided value: ${e.statement}`);
  }
  const C = wU(e.address), T = g ? `${g}://${r}` : r, E = e.statement ? `${e.statement}
` : "", O = `${T} wants you to sign in with your Ethereum account:
${C}

${E}`;
  let k = `URI: ${y}
Version: ${w}
Chain ID: ${n}${a ? `
Nonce: ${a}` : ""}
Issued At: ${s.toISOString()}`;
  if (o && (k += `
Expiration Time: ${o.toISOString()}`), c && (k += `
Not Before: ${c.toISOString()}`), f && (k += `
Request ID: ${f}`), m) {
    let I = `
Resources:`;
    for (const M of m) {
      if (!M || typeof M != "string")
        throw new Error(`@supabase/auth-js: Invalid SIWE message field "resources". Every resource must be a valid string. Provided value: ${M}`);
      I += `
- ${M}`;
    }
    k += I;
  }
  return `${O}
${k}`;
}
class Go extends Error {
  constructor({ message: t, code: n, cause: r, name: o }) {
    var s;
    super(t, { cause: r }), this.__isWebAuthnError = !0, this.name = (s = o ?? (r instanceof Error ? r.name : void 0)) !== null && s !== void 0 ? s : "Unknown Error", this.code = n;
  }
}
class HT extends Go {
  constructor(t, n) {
    super({
      code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
      cause: n,
      message: t
    }), this.name = "WebAuthnUnknownError", this.originalError = n;
  }
}
function nae({ error: e, options: t }) {
  var n, r, o;
  const { publicKey: s } = t;
  if (!s)
    throw Error("options was missing required publicKey property");
  if (e.name === "AbortError") {
    if (t.signal instanceof AbortSignal)
      return new Go({
        message: "Registration ceremony was sent an abort signal",
        code: "ERROR_CEREMONY_ABORTED",
        cause: e
      });
  } else if (e.name === "ConstraintError") {
    if (((n = s.authenticatorSelection) === null || n === void 0 ? void 0 : n.requireResidentKey) === !0)
      return new Go({
        message: "Discoverable credentials were required but no available authenticator supported it",
        code: "ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",
        cause: e
      });
    if (
      // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024
      t.mediation === "conditional" && ((r = s.authenticatorSelection) === null || r === void 0 ? void 0 : r.userVerification) === "required"
    )
      return new Go({
        message: "User verification was required during automatic registration but it could not be performed",
        code: "ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE",
        cause: e
      });
    if (((o = s.authenticatorSelection) === null || o === void 0 ? void 0 : o.userVerification) === "required")
      return new Go({
        message: "User verification was required but no available authenticator supported it",
        code: "ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",
        cause: e
      });
  } else {
    if (e.name === "InvalidStateError")
      return new Go({
        message: "The authenticator was previously registered",
        code: "ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",
        cause: e
      });
    if (e.name === "NotAllowedError")
      return new Go({
        message: e.message,
        code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
        cause: e
      });
    if (e.name === "NotSupportedError")
      return s.pubKeyCredParams.filter((c) => c.type === "public-key").length === 0 ? new Go({
        message: 'No entry in pubKeyCredParams was of type "public-key"',
        code: "ERROR_MALFORMED_PUBKEYCREDPARAMS",
        cause: e
      }) : new Go({
        message: "No available authenticator supported any of the specified pubKeyCredParams algorithms",
        code: "ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",
        cause: e
      });
    if (e.name === "SecurityError") {
      const a = window.location.hostname;
      if (CU(a)) {
        if (s.rp.id !== a)
          return new Go({
            message: `The RP ID "${s.rp.id}" is invalid for this domain`,
            code: "ERROR_INVALID_RP_ID",
            cause: e
          });
      } else return new Go({
        message: `${window.location.hostname} is an invalid domain`,
        code: "ERROR_INVALID_DOMAIN",
        cause: e
      });
    } else if (e.name === "TypeError") {
      if (s.user.id.byteLength < 1 || s.user.id.byteLength > 64)
        return new Go({
          message: "User ID was not between 1 and 64 characters",
          code: "ERROR_INVALID_USER_ID_LENGTH",
          cause: e
        });
    } else if (e.name === "UnknownError")
      return new Go({
        message: "The authenticator was unable to process the specified options, or could not create a new credential",
        code: "ERROR_AUTHENTICATOR_GENERAL_ERROR",
        cause: e
      });
  }
  return new Go({
    message: "a Non-Webauthn related error has occurred",
    code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
    cause: e
  });
}
function rae({ error: e, options: t }) {
  const { publicKey: n } = t;
  if (!n)
    throw Error("options was missing required publicKey property");
  if (e.name === "AbortError") {
    if (t.signal instanceof AbortSignal)
      return new Go({
        message: "Authentication ceremony was sent an abort signal",
        code: "ERROR_CEREMONY_ABORTED",
        cause: e
      });
  } else {
    if (e.name === "NotAllowedError")
      return new Go({
        message: e.message,
        code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
        cause: e
      });
    if (e.name === "SecurityError") {
      const r = window.location.hostname;
      if (CU(r)) {
        if (n.rpId !== r)
          return new Go({
            message: `The RP ID "${n.rpId}" is invalid for this domain`,
            code: "ERROR_INVALID_RP_ID",
            cause: e
          });
      } else return new Go({
        message: `${window.location.hostname} is an invalid domain`,
        code: "ERROR_INVALID_DOMAIN",
        cause: e
      });
    } else if (e.name === "UnknownError")
      return new Go({
        message: "The authenticator was unable to process the specified options, or could not create a new assertion signature",
        code: "ERROR_AUTHENTICATOR_GENERAL_ERROR",
        cause: e
      });
  }
  return new Go({
    message: "a Non-Webauthn related error has occurred",
    code: "ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",
    cause: e
  });
}
var SU = function(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, r = Object.getOwnPropertySymbols(e); o < r.length; o++)
      t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]]);
  return n;
};
class oae {
  /**
   * Create an abort signal for a new WebAuthn operation.
   * Automatically cancels any existing operation.
   *
   * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()
   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}
   */
  createNewAbortSignal() {
    if (this.controller) {
      const n = new Error("Cancelling existing WebAuthn API call for new one");
      n.name = "AbortError", this.controller.abort(n);
    }
    const t = new AbortController();
    return this.controller = t, t.signal;
  }
  /**
   * Manually cancel the current WebAuthn operation.
   * Useful for cleaning up when user cancels or navigates away.
   *
   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}
   */
  cancelCeremony() {
    if (this.controller) {
      const t = new Error("Manually cancelling existing WebAuthn API call");
      t.name = "AbortError", this.controller.abort(t), this.controller = void 0;
    }
  }
}
const iae = new oae();
function sae(e) {
  if (!e)
    throw new Error("Credential creation options are required");
  if (typeof PublicKeyCredential < "u" && "parseCreationOptionsFromJSON" in PublicKeyCredential && typeof PublicKeyCredential.parseCreationOptionsFromJSON == "function")
    return PublicKeyCredential.parseCreationOptionsFromJSON(
      /** we assert the options here as typescript still doesn't know about future webauthn types */
      e
    );
  const { challenge: t, user: n, excludeCredentials: r } = e, o = SU(
    e,
    ["challenge", "user", "excludeCredentials"]
  ), s = Nv(t).buffer, a = Object.assign(Object.assign({}, n), { id: Nv(n.id).buffer }), c = Object.assign(Object.assign({}, o), {
    challenge: s,
    user: a
  });
  if (r && r.length > 0) {
    c.excludeCredentials = new Array(r.length);
    for (let f = 0; f < r.length; f++) {
      const m = r[f];
      c.excludeCredentials[f] = Object.assign(Object.assign({}, m), {
        id: Nv(m.id).buffer,
        type: m.type || "public-key",
        // Cast transports to handle future transport types like "cable"
        transports: m.transports
      });
    }
  }
  return c;
}
function aae(e) {
  if (!e)
    throw new Error("Credential request options are required");
  if (typeof PublicKeyCredential < "u" && "parseRequestOptionsFromJSON" in PublicKeyCredential && typeof PublicKeyCredential.parseRequestOptionsFromJSON == "function")
    return PublicKeyCredential.parseRequestOptionsFromJSON(e);
  const { challenge: t, allowCredentials: n } = e, r = SU(
    e,
    ["challenge", "allowCredentials"]
  ), o = Nv(t).buffer, s = Object.assign(Object.assign({}, r), { challenge: o });
  if (n && n.length > 0) {
    s.allowCredentials = new Array(n.length);
    for (let a = 0; a < n.length; a++) {
      const c = n[a];
      s.allowCredentials[a] = Object.assign(Object.assign({}, c), {
        id: Nv(c.id).buffer,
        type: c.type || "public-key",
        // Cast transports to handle future transport types like "cable"
        transports: c.transports
      });
    }
  }
  return s;
}
function lae(e) {
  var t;
  if ("toJSON" in e && typeof e.toJSON == "function")
    return e.toJSON();
  const n = e;
  return {
    id: e.id,
    rawId: e.id,
    response: {
      attestationObject: Kh(new Uint8Array(e.response.attestationObject)),
      clientDataJSON: Kh(new Uint8Array(e.response.clientDataJSON))
    },
    type: "public-key",
    clientExtensionResults: e.getClientExtensionResults(),
    // Convert null to undefined and cast to AuthenticatorAttachment type
    authenticatorAttachment: (t = n.authenticatorAttachment) !== null && t !== void 0 ? t : void 0
  };
}
function uae(e) {
  var t;
  if ("toJSON" in e && typeof e.toJSON == "function")
    return e.toJSON();
  const n = e, r = e.getClientExtensionResults(), o = e.response;
  return {
    id: e.id,
    rawId: e.id,
    // W3C spec expects rawId to match id for JSON format
    response: {
      authenticatorData: Kh(new Uint8Array(o.authenticatorData)),
      clientDataJSON: Kh(new Uint8Array(o.clientDataJSON)),
      signature: Kh(new Uint8Array(o.signature)),
      userHandle: o.userHandle ? Kh(new Uint8Array(o.userHandle)) : void 0
    },
    type: "public-key",
    clientExtensionResults: r,
    // Convert null to undefined and cast to AuthenticatorAttachment type
    authenticatorAttachment: (t = n.authenticatorAttachment) !== null && t !== void 0 ? t : void 0
  };
}
function CU(e) {
  return (
    // Consider localhost valid as well since it's okay wrt Secure Contexts
    e === "localhost" || /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)
  );
}
function a2() {
  var e, t;
  return !!(Ea() && "PublicKeyCredential" in window && window.PublicKeyCredential && "credentials" in navigator && typeof ((e = navigator == null ? void 0 : navigator.credentials) === null || e === void 0 ? void 0 : e.create) == "function" && typeof ((t = navigator == null ? void 0 : navigator.credentials) === null || t === void 0 ? void 0 : t.get) == "function");
}
async function cae(e) {
  try {
    const t = await navigator.credentials.create(
      /** we assert the type here until typescript types are updated */
      e
    );
    return t ? t instanceof PublicKeyCredential ? { data: t, error: null } : {
      data: null,
      error: new HT("Browser returned unexpected credential type", t)
    } : {
      data: null,
      error: new HT("Empty credential response", t)
    };
  } catch (t) {
    return {
      data: null,
      error: nae({
        error: t,
        options: e
      })
    };
  }
}
async function dae(e) {
  try {
    const t = await navigator.credentials.get(
      /** we assert the type here until typescript types are updated */
      e
    );
    return t ? t instanceof PublicKeyCredential ? { data: t, error: null } : {
      data: null,
      error: new HT("Browser returned unexpected credential type", t)
    } : {
      data: null,
      error: new HT("Empty credential response", t)
    };
  } catch (t) {
    return {
      data: null,
      error: rae({
        error: t,
        options: e
      })
    };
  }
}
const fae = {
  hints: ["security-key"],
  authenticatorSelection: {
    authenticatorAttachment: "cross-platform",
    requireResidentKey: !1,
    /** set to preferred because older yubikeys don't have PIN/Biometric */
    userVerification: "preferred",
    residentKey: "discouraged"
  },
  attestation: "none"
}, pae = {
  /** set to preferred because older yubikeys don't have PIN/Biometric */
  userVerification: "preferred",
  hints: ["security-key"]
};
function VT(...e) {
  const t = (o) => o !== null && typeof o == "object" && !Array.isArray(o), n = (o) => o instanceof ArrayBuffer || ArrayBuffer.isView(o), r = {};
  for (const o of e)
    if (o)
      for (const s in o) {
        const a = o[s];
        if (a !== void 0)
          if (Array.isArray(a))
            r[s] = a;
          else if (n(a))
            r[s] = a;
          else if (t(a)) {
            const c = r[s];
            t(c) ? r[s] = VT(c, a) : r[s] = VT(a);
          } else
            r[s] = a;
      }
  return r;
}
function hae(e, t) {
  return VT(fae, e, t || {});
}
function mae(e, t) {
  return VT(pae, e, t || {});
}
class gae {
  constructor(t) {
    this.client = t, this.enroll = this._enroll.bind(this), this.challenge = this._challenge.bind(this), this.verify = this._verify.bind(this), this.authenticate = this._authenticate.bind(this), this.register = this._register.bind(this);
  }
  /**
   * Enroll a new WebAuthn factor.
   * Creates an unverified WebAuthn factor that must be verified with a credential.
   *
   * @experimental This method is experimental and may change in future releases
   * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)
   * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error
   * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}
   */
  async _enroll(t) {
    return this.client.mfa.enroll(Object.assign(Object.assign({}, t), { factorType: "webauthn" }));
  }
  /**
   * Challenge for WebAuthn credential creation or authentication.
   * Combines server challenge with browser credential operations.
   * Handles both registration (create) and authentication (request) flows.
   *
   * @experimental This method is experimental and may change in future releases
   * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId
   * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials
   * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation
   * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request
   * @returns {Promise<RequestResult>} Challenge response with credential or error
   * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}
   * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}
   */
  async _challenge({ factorId: t, webauthn: n, friendlyName: r, signal: o }, s) {
    try {
      const { data: a, error: c } = await this.client.mfa.challenge({
        factorId: t,
        webauthn: n
      });
      if (!a)
        return { data: null, error: c };
      const f = o ?? iae.createNewAbortSignal();
      if (a.webauthn.type === "create") {
        const { user: m } = a.webauthn.credential_options.publicKey;
        m.name || (m.name = `${m.id}:${r}`), m.displayName || (m.displayName = m.name);
      }
      switch (a.webauthn.type) {
        case "create": {
          const m = hae(a.webauthn.credential_options.publicKey, s == null ? void 0 : s.create), { data: g, error: y } = await cae({
            publicKey: m,
            signal: f
          });
          return g ? {
            data: {
              factorId: t,
              challengeId: a.id,
              webauthn: {
                type: a.webauthn.type,
                credential_response: g
              }
            },
            error: null
          } : { data: null, error: y };
        }
        case "request": {
          const m = mae(a.webauthn.credential_options.publicKey, s == null ? void 0 : s.request), { data: g, error: y } = await dae(Object.assign(Object.assign({}, a.webauthn.credential_options), { publicKey: m, signal: f }));
          return g ? {
            data: {
              factorId: t,
              challengeId: a.id,
              webauthn: {
                type: a.webauthn.type,
                credential_response: g
              }
            },
            error: null
          } : { data: null, error: y };
        }
      }
    } catch (a) {
      return un(a) ? { data: null, error: a } : {
        data: null,
        error: new Vh("Unexpected error in challenge", a)
      };
    }
  }
  /**
   * Verify a WebAuthn credential with the server.
   * Completes the WebAuthn ceremony by sending the credential to the server for verification.
   *
   * @experimental This method is experimental and may change in future releases
   * @param {Object} params - Verification parameters
   * @param {string} params.challengeId - ID of the challenge being verified
   * @param {string} params.factorId - ID of the WebAuthn factor
   * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response
   * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error
   * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}
   * */
  async _verify({ challengeId: t, factorId: n, webauthn: r }) {
    return this.client.mfa.verify({
      factorId: n,
      challengeId: t,
      webauthn: r
    });
  }
  /**
   * Complete WebAuthn authentication flow.
   * Performs challenge and verification in a single operation for existing credentials.
   *
   * @experimental This method is experimental and may change in future releases
   * @param {Object} params - Authentication parameters
   * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with
   * @param {Object} params.webauthn - WebAuthn configuration
   * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)
   * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)
   * @param {AbortSignal} params.webauthn.signal - Optional abort signal
   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get
   * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result
   * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}
   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}
   */
  async _authenticate({ factorId: t, webauthn: { rpId: n = typeof window < "u" ? window.location.hostname : void 0, rpOrigins: r = typeof window < "u" ? [window.location.origin] : void 0, signal: o } }, s) {
    if (!n)
      return {
        data: null,
        error: new VS("rpId is required for WebAuthn authentication")
      };
    try {
      if (!a2())
        return {
          data: null,
          error: new Vh("Browser does not support WebAuthn", null)
        };
      const { data: a, error: c } = await this.challenge({
        factorId: t,
        webauthn: { rpId: n, rpOrigins: r },
        signal: o
      }, { request: s });
      if (!a)
        return { data: null, error: c };
      const { webauthn: f } = a;
      return this._verify({
        factorId: t,
        challengeId: a.challengeId,
        webauthn: {
          type: f.type,
          rpId: n,
          rpOrigins: r,
          credential_response: f.credential_response
        }
      });
    } catch (a) {
      return un(a) ? { data: null, error: a } : {
        data: null,
        error: new Vh("Unexpected error in authenticate", a)
      };
    }
  }
  /**
   * Complete WebAuthn registration flow.
   * Performs enrollment, challenge, and verification in a single operation for new credentials.
   *
   * @experimental This method is experimental and may change in future releases
   * @param {Object} params - Registration parameters
   * @param {string} params.friendlyName - User-friendly name for the credential
   * @param {string} params.rpId - Relying Party ID (defaults to current hostname)
   * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)
   * @param {AbortSignal} params.signal - Optional abort signal
   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create
   * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result
   * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}
   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}
   */
  async _register({ friendlyName: t, rpId: n = typeof window < "u" ? window.location.hostname : void 0, rpOrigins: r = typeof window < "u" ? [window.location.origin] : void 0, signal: o }, s) {
    if (!n)
      return {
        data: null,
        error: new VS("rpId is required for WebAuthn registration")
      };
    try {
      if (!a2())
        return {
          data: null,
          error: new Vh("Browser does not support WebAuthn", null)
        };
      const { data: a, error: c } = await this._enroll({
        friendlyName: t
      });
      if (!a)
        return await this.client.mfa.listFactors().then((g) => {
          var y;
          return (y = g.data) === null || y === void 0 ? void 0 : y.all.find((w) => w.factor_type === "webauthn" && w.friendly_name === t && w.status !== "unverified");
        }).then((g) => g ? this.client.mfa.unenroll({ factorId: g == null ? void 0 : g.id }) : void 0), { data: null, error: c };
      const { data: f, error: m } = await this._challenge({
        factorId: a.id,
        friendlyName: a.friendly_name,
        webauthn: { rpId: n, rpOrigins: r },
        signal: o
      }, {
        create: s
      });
      return f ? this._verify({
        factorId: a.id,
        challengeId: f.challengeId,
        webauthn: {
          rpId: n,
          rpOrigins: r,
          type: f.webauthn.type,
          credential_response: f.webauthn.credential_response
        }
      }) : { data: null, error: m };
    } catch (a) {
      return un(a) ? { data: null, error: a } : {
        data: null,
        error: new Vh("Unexpected error in register", a)
      };
    }
  }
}
Jse();
const vae = {
  url: fse,
  storageKey: pse,
  autoRefreshToken: !0,
  persistSession: !0,
  detectSessionInUrl: !0,
  headers: hse,
  flowType: "implicit",
  debug: !1,
  hasCustomAuthorizationHeader: !1
};
async function l2(e, t, n) {
  return await n();
}
const hv = {};
class US {
  /**
   * The JWKS used for verifying asymmetric JWTs
   */
  get jwks() {
    var t, n;
    return (n = (t = hv[this.storageKey]) === null || t === void 0 ? void 0 : t.jwks) !== null && n !== void 0 ? n : { keys: [] };
  }
  set jwks(t) {
    hv[this.storageKey] = Object.assign(Object.assign({}, hv[this.storageKey]), { jwks: t });
  }
  get jwks_cached_at() {
    var t, n;
    return (n = (t = hv[this.storageKey]) === null || t === void 0 ? void 0 : t.cachedAt) !== null && n !== void 0 ? n : Number.MIN_SAFE_INTEGER;
  }
  set jwks_cached_at(t) {
    hv[this.storageKey] = Object.assign(Object.assign({}, hv[this.storageKey]), { cachedAt: t });
  }
  /**
   * Create a new client for use in the browser.
   */
  constructor(t) {
    var n, r;
    this.userStorage = null, this.memoryStorage = null, this.stateChangeEmitters = /* @__PURE__ */ new Map(), this.autoRefreshTicker = null, this.visibilityChangedCallback = null, this.refreshingDeferred = null, this.initializePromise = null, this.detectSessionInUrl = !0, this.hasCustomAuthorizationHeader = !1, this.suppressGetSessionWarning = !1, this.lockAcquired = !1, this.pendingInLock = [], this.broadcastChannel = null, this.logger = console.log, this.instanceID = US.nextInstanceID, US.nextInstanceID += 1, this.instanceID > 0 && Ea() && console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");
    const o = Object.assign(Object.assign({}, vae), t);
    if (this.logDebugMessages = !!o.debug, typeof o.debug == "function" && (this.logger = o.debug), this.persistSession = o.persistSession, this.storageKey = o.storageKey, this.autoRefreshToken = o.autoRefreshToken, this.admin = new Yse({
      url: o.url,
      headers: o.headers,
      fetch: o.fetch
    }), this.url = o.url, this.headers = o.headers, this.fetch = yU(o.fetch), this.lock = o.lock || l2, this.detectSessionInUrl = o.detectSessionInUrl, this.flowType = o.flowType, this.hasCustomAuthorizationHeader = o.hasCustomAuthorizationHeader, o.lock ? this.lock = o.lock : Ea() && (!((n = globalThis == null ? void 0 : globalThis.navigator) === null || n === void 0) && n.locks) ? this.lock = Qse : this.lock = l2, this.jwks || (this.jwks = { keys: [] }, this.jwks_cached_at = Number.MIN_SAFE_INTEGER), this.mfa = {
      verify: this._verify.bind(this),
      enroll: this._enroll.bind(this),
      unenroll: this._unenroll.bind(this),
      challenge: this._challenge.bind(this),
      listFactors: this._listFactors.bind(this),
      challengeAndVerify: this._challengeAndVerify.bind(this),
      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),
      webauthn: new gae(this)
    }, this.persistSession ? (o.storage ? this.storage = o.storage : vU() ? this.storage = globalThis.localStorage : (this.memoryStorage = {}, this.storage = s2(this.memoryStorage)), o.userStorage && (this.userStorage = o.userStorage)) : (this.memoryStorage = {}, this.storage = s2(this.memoryStorage)), Ea() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {
      try {
        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);
      } catch (s) {
        console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available", s);
      }
      (r = this.broadcastChannel) === null || r === void 0 || r.addEventListener("message", async (s) => {
        this._debug("received broadcast notification from other tab or client", s), await this._notifyAllSubscribers(s.data.event, s.data.session, !1);
      });
    }
    this.initialize();
  }
  _debug(...t) {
    return this.logDebugMessages && this.logger(`GoTrueClient@${this.instanceID} (${hU}) ${(/* @__PURE__ */ new Date()).toISOString()}`, ...t), this;
  }
  /**
   * Initializes the client session either from the url or from storage.
   * This method is automatically called when instantiating the client, but should also be called
   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).
   */
  async initialize() {
    return this.initializePromise ? await this.initializePromise : (this.initializePromise = (async () => await this._acquireLock(-1, async () => await this._initialize()))(), await this.initializePromise);
  }
  /**
   * IMPORTANT:
   * 1. Never throw in this method, as it is called from the constructor
   * 2. Never return a session from this method as it would be cached over
   *    the whole lifetime of the client
   */
  async _initialize() {
    var t;
    try {
      const n = Rse(window.location.href);
      let r = "none";
      if (this._isImplicitGrantCallback(n) ? r = "implicit" : await this._isPKCECallback(n) && (r = "pkce"), Ea() && this.detectSessionInUrl && r !== "none") {
        const { data: o, error: s } = await this._getSessionFromURL(n, r);
        if (s) {
          if (this._debug("#_initialize()", "error detecting session from URL", s), wse(s)) {
            const f = (t = s.details) === null || t === void 0 ? void 0 : t.code;
            if (f === "identity_already_exists" || f === "identity_not_found" || f === "single_identity_not_deletable")
              return { error: s };
          }
          return await this._removeSession(), { error: s };
        }
        const { session: a, redirectType: c } = o;
        return this._debug("#_initialize()", "detected session in URL", a, "redirect type", c), await this._saveSession(a), setTimeout(async () => {
          c === "recovery" ? await this._notifyAllSubscribers("PASSWORD_RECOVERY", a) : await this._notifyAllSubscribers("SIGNED_IN", a);
        }, 0), { error: null };
      }
      return await this._recoverAndRefresh(), { error: null };
    } catch (n) {
      return un(n) ? { error: n } : {
        error: new Vh("Unexpected error during initialization", n)
      };
    } finally {
      await this._handleVisibilityChange(), this._debug("#_initialize()", "end");
    }
  }
  /**
   * Creates a new anonymous user.
   *
   * @returns A session where the is_anonymous claim in the access token JWT set to true
   */
  async signInAnonymously(t) {
    var n, r, o;
    try {
      const s = await _n(this.fetch, "POST", `${this.url}/signup`, {
        headers: this.headers,
        body: {
          data: (r = (n = t == null ? void 0 : t.options) === null || n === void 0 ? void 0 : n.data) !== null && r !== void 0 ? r : {},
          gotrue_meta_security: { captcha_token: (o = t == null ? void 0 : t.options) === null || o === void 0 ? void 0 : o.captchaToken }
        },
        xform: ru
      }), { data: a, error: c } = s;
      if (c || !a)
        return { data: { user: null, session: null }, error: c };
      const f = a.session, m = a.user;
      return a.session && (await this._saveSession(a.session), await this._notifyAllSubscribers("SIGNED_IN", f)), { data: { user: m, session: f }, error: null };
    } catch (s) {
      if (un(s))
        return { data: { user: null, session: null }, error: s };
      throw s;
    }
  }
  /**
   * Creates a new user.
   *
   * Be aware that if a user account exists in the system you may get back an
   * error message that attempts to hide this information from the user.
   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.
   *
   * @returns A logged-in session if the server has "autoconfirm" ON
   * @returns A user if the server has "autoconfirm" OFF
   */
  async signUp(t) {
    var n, r, o;
    try {
      let s;
      if ("email" in t) {
        const { email: g, password: y, options: w } = t;
        let C = null, T = null;
        this.flowType === "pkce" && ([C, T] = await dv(this.storage, this.storageKey)), s = await _n(this.fetch, "POST", `${this.url}/signup`, {
          headers: this.headers,
          redirectTo: w == null ? void 0 : w.emailRedirectTo,
          body: {
            email: g,
            password: y,
            data: (n = w == null ? void 0 : w.data) !== null && n !== void 0 ? n : {},
            gotrue_meta_security: { captcha_token: w == null ? void 0 : w.captchaToken },
            code_challenge: C,
            code_challenge_method: T
          },
          xform: ru
        });
      } else if ("phone" in t) {
        const { phone: g, password: y, options: w } = t;
        s = await _n(this.fetch, "POST", `${this.url}/signup`, {
          headers: this.headers,
          body: {
            phone: g,
            password: y,
            data: (r = w == null ? void 0 : w.data) !== null && r !== void 0 ? r : {},
            channel: (o = w == null ? void 0 : w.channel) !== null && o !== void 0 ? o : "sms",
            gotrue_meta_security: { captcha_token: w == null ? void 0 : w.captchaToken }
          },
          xform: ru
        });
      } else
        throw new zE("You must provide either an email or phone number and a password");
      const { data: a, error: c } = s;
      if (c || !a)
        return { data: { user: null, session: null }, error: c };
      const f = a.session, m = a.user;
      return a.session && (await this._saveSession(a.session), await this._notifyAllSubscribers("SIGNED_IN", f)), { data: { user: m, session: f }, error: null };
    } catch (s) {
      if (un(s))
        return { data: { user: null, session: null }, error: s };
      throw s;
    }
  }
  /**
   * Log in an existing user with an email and password or phone and password.
   *
   * Be aware that you may get back an error message that will not distinguish
   * between the cases where the account does not exist or that the
   * email/phone and password combination is wrong or that the account can only
   * be accessed via social login.
   */
  async signInWithPassword(t) {
    try {
      let n;
      if ("email" in t) {
        const { email: s, password: a, options: c } = t;
        n = await _n(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
          headers: this.headers,
          body: {
            email: s,
            password: a,
            gotrue_meta_security: { captcha_token: c == null ? void 0 : c.captchaToken }
          },
          xform: o2
        });
      } else if ("phone" in t) {
        const { phone: s, password: a, options: c } = t;
        n = await _n(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
          headers: this.headers,
          body: {
            phone: s,
            password: a,
            gotrue_meta_security: { captcha_token: c == null ? void 0 : c.captchaToken }
          },
          xform: o2
        });
      } else
        throw new zE("You must provide either an email or phone number and a password");
      const { data: r, error: o } = n;
      return o ? { data: { user: null, session: null }, error: o } : !r || !r.session || !r.user ? { data: { user: null, session: null }, error: new cv() } : (r.session && (await this._saveSession(r.session), await this._notifyAllSubscribers("SIGNED_IN", r.session)), {
        data: Object.assign({ user: r.user, session: r.session }, r.weak_password ? { weakPassword: r.weak_password } : null),
        error: o
      });
    } catch (n) {
      if (un(n))
        return { data: { user: null, session: null }, error: n };
      throw n;
    }
  }
  /**
   * Log in an existing user via a third-party provider.
   * This method supports the PKCE flow.
   */
  async signInWithOAuth(t) {
    var n, r, o, s;
    return await this._handleProviderSignIn(t.provider, {
      redirectTo: (n = t.options) === null || n === void 0 ? void 0 : n.redirectTo,
      scopes: (r = t.options) === null || r === void 0 ? void 0 : r.scopes,
      queryParams: (o = t.options) === null || o === void 0 ? void 0 : o.queryParams,
      skipBrowserRedirect: (s = t.options) === null || s === void 0 ? void 0 : s.skipBrowserRedirect
    });
  }
  /**
   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.
   */
  async exchangeCodeForSession(t) {
    return await this.initializePromise, this._acquireLock(-1, async () => this._exchangeCodeForSession(t));
  }
  /**
   * Signs in a user by verifying a message signed by the user's private key.
   * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,
   * both of which derive from the EIP-4361 standard
   * With slight variation on Solana's side.
   * @reference https://eips.ethereum.org/EIPS/eip-4361
   */
  async signInWithWeb3(t) {
    const { chain: n } = t;
    switch (n) {
      case "ethereum":
        return await this.signInWithEthereum(t);
      case "solana":
        return await this.signInWithSolana(t);
      default:
        throw new Error(`@supabase/auth-js: Unsupported chain "${n}"`);
    }
  }
  async signInWithEthereum(t) {
    var n, r, o, s, a, c, f, m, g, y, w;
    let C, T;
    if ("message" in t)
      C = t.message, T = t.signature;
    else {
      const { chain: E, wallet: O, statement: k, options: I } = t;
      let M;
      if (Ea())
        if (typeof O == "object")
          M = O;
        else {
          const z = window;
          if ("ethereum" in z && typeof z.ethereum == "object" && "request" in z.ethereum && typeof z.ethereum.request == "function")
            M = z.ethereum;
          else
            throw new Error("@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.");
        }
      else {
        if (typeof O != "object" || !(I != null && I.url))
          throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");
        M = O;
      }
      const N = new URL((n = I == null ? void 0 : I.url) !== null && n !== void 0 ? n : window.location.href), P = await M.request({
        method: "eth_requestAccounts"
      }).then((z) => z).catch(() => {
        throw new Error("@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid");
      });
      if (!P || P.length === 0)
        throw new Error("@supabase/auth-js: No accounts available. Please ensure the wallet is connected.");
      const F = wU(P[0]);
      let H = (r = I == null ? void 0 : I.signInWithEthereum) === null || r === void 0 ? void 0 : r.chainId;
      if (!H) {
        const z = await M.request({
          method: "eth_chainId"
        });
        H = Zse(z);
      }
      const U = {
        domain: N.host,
        address: F,
        statement: k,
        uri: N.href,
        version: "1",
        chainId: H,
        nonce: (o = I == null ? void 0 : I.signInWithEthereum) === null || o === void 0 ? void 0 : o.nonce,
        issuedAt: (a = (s = I == null ? void 0 : I.signInWithEthereum) === null || s === void 0 ? void 0 : s.issuedAt) !== null && a !== void 0 ? a : /* @__PURE__ */ new Date(),
        expirationTime: (c = I == null ? void 0 : I.signInWithEthereum) === null || c === void 0 ? void 0 : c.expirationTime,
        notBefore: (f = I == null ? void 0 : I.signInWithEthereum) === null || f === void 0 ? void 0 : f.notBefore,
        requestId: (m = I == null ? void 0 : I.signInWithEthereum) === null || m === void 0 ? void 0 : m.requestId,
        resources: (g = I == null ? void 0 : I.signInWithEthereum) === null || g === void 0 ? void 0 : g.resources
      };
      C = tae(U), T = await M.request({
        method: "personal_sign",
        params: [eae(C), F]
      });
    }
    try {
      const { data: E, error: O } = await _n(this.fetch, "POST", `${this.url}/token?grant_type=web3`, {
        headers: this.headers,
        body: Object.assign({
          chain: "ethereum",
          message: C,
          signature: T
        }, !((y = t.options) === null || y === void 0) && y.captchaToken ? { gotrue_meta_security: { captcha_token: (w = t.options) === null || w === void 0 ? void 0 : w.captchaToken } } : null),
        xform: ru
      });
      if (O)
        throw O;
      return !E || !E.session || !E.user ? {
        data: { user: null, session: null },
        error: new cv()
      } : (E.session && (await this._saveSession(E.session), await this._notifyAllSubscribers("SIGNED_IN", E.session)), { data: Object.assign({}, E), error: O });
    } catch (E) {
      if (un(E))
        return { data: { user: null, session: null }, error: E };
      throw E;
    }
  }
  async signInWithSolana(t) {
    var n, r, o, s, a, c, f, m, g, y, w, C;
    let T, E;
    if ("message" in t)
      T = t.message, E = t.signature;
    else {
      const { chain: O, wallet: k, statement: I, options: M } = t;
      let N;
      if (Ea())
        if (typeof k == "object")
          N = k;
        else {
          const F = window;
          if ("solana" in F && typeof F.solana == "object" && ("signIn" in F.solana && typeof F.solana.signIn == "function" || "signMessage" in F.solana && typeof F.solana.signMessage == "function"))
            N = F.solana;
          else
            throw new Error("@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.");
        }
      else {
        if (typeof k != "object" || !(M != null && M.url))
          throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");
        N = k;
      }
      const P = new URL((n = M == null ? void 0 : M.url) !== null && n !== void 0 ? n : window.location.href);
      if ("signIn" in N && N.signIn) {
        const F = await N.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: (/* @__PURE__ */ new Date()).toISOString() }, M == null ? void 0 : M.signInWithSolana), {
          // non-overridable properties
          version: "1",
          domain: P.host,
          uri: P.href
        }), I ? { statement: I } : null));
        let H;
        if (Array.isArray(F) && F[0] && typeof F[0] == "object")
          H = F[0];
        else if (F && typeof F == "object" && "signedMessage" in F && "signature" in F)
          H = F;
        else
          throw new Error("@supabase/auth-js: Wallet method signIn() returned unrecognized value");
        if ("signedMessage" in H && "signature" in H && (typeof H.signedMessage == "string" || H.signedMessage instanceof Uint8Array) && H.signature instanceof Uint8Array)
          T = typeof H.signedMessage == "string" ? H.signedMessage : new TextDecoder().decode(H.signedMessage), E = H.signature;
        else
          throw new Error("@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields");
      } else {
        if (!("signMessage" in N) || typeof N.signMessage != "function" || !("publicKey" in N) || typeof N != "object" || !N.publicKey || !("toBase58" in N.publicKey) || typeof N.publicKey.toBase58 != "function")
          throw new Error("@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API");
        T = [
          `${P.host} wants you to sign in with your Solana account:`,
          N.publicKey.toBase58(),
          ...I ? ["", I, ""] : [""],
          "Version: 1",
          `URI: ${P.href}`,
          `Issued At: ${(o = (r = M == null ? void 0 : M.signInWithSolana) === null || r === void 0 ? void 0 : r.issuedAt) !== null && o !== void 0 ? o : (/* @__PURE__ */ new Date()).toISOString()}`,
          ...!((s = M == null ? void 0 : M.signInWithSolana) === null || s === void 0) && s.notBefore ? [`Not Before: ${M.signInWithSolana.notBefore}`] : [],
          ...!((a = M == null ? void 0 : M.signInWithSolana) === null || a === void 0) && a.expirationTime ? [`Expiration Time: ${M.signInWithSolana.expirationTime}`] : [],
          ...!((c = M == null ? void 0 : M.signInWithSolana) === null || c === void 0) && c.chainId ? [`Chain ID: ${M.signInWithSolana.chainId}`] : [],
          ...!((f = M == null ? void 0 : M.signInWithSolana) === null || f === void 0) && f.nonce ? [`Nonce: ${M.signInWithSolana.nonce}`] : [],
          ...!((m = M == null ? void 0 : M.signInWithSolana) === null || m === void 0) && m.requestId ? [`Request ID: ${M.signInWithSolana.requestId}`] : [],
          ...!((y = (g = M == null ? void 0 : M.signInWithSolana) === null || g === void 0 ? void 0 : g.resources) === null || y === void 0) && y.length ? [
            "Resources",
            ...M.signInWithSolana.resources.map((H) => `- ${H}`)
          ] : []
        ].join(`
`);
        const F = await N.signMessage(new TextEncoder().encode(T), "utf8");
        if (!F || !(F instanceof Uint8Array))
          throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");
        E = F;
      }
    }
    try {
      const { data: O, error: k } = await _n(this.fetch, "POST", `${this.url}/token?grant_type=web3`, {
        headers: this.headers,
        body: Object.assign({ chain: "solana", message: T, signature: Kh(E) }, !((w = t.options) === null || w === void 0) && w.captchaToken ? { gotrue_meta_security: { captcha_token: (C = t.options) === null || C === void 0 ? void 0 : C.captchaToken } } : null),
        xform: ru
      });
      if (k)
        throw k;
      return !O || !O.session || !O.user ? {
        data: { user: null, session: null },
        error: new cv()
      } : (O.session && (await this._saveSession(O.session), await this._notifyAllSubscribers("SIGNED_IN", O.session)), { data: Object.assign({}, O), error: k });
    } catch (O) {
      if (un(O))
        return { data: { user: null, session: null }, error: O };
      throw O;
    }
  }
  async _exchangeCodeForSession(t) {
    const n = await Ph(this.storage, `${this.storageKey}-code-verifier`), [r, o] = (n ?? "").split("/");
    try {
      const { data: s, error: a } = await _n(this.fetch, "POST", `${this.url}/token?grant_type=pkce`, {
        headers: this.headers,
        body: {
          auth_code: t,
          code_verifier: r
        },
        xform: ru
      });
      if (await Pf(this.storage, `${this.storageKey}-code-verifier`), a)
        throw a;
      return !s || !s.session || !s.user ? {
        data: { user: null, session: null, redirectType: null },
        error: new cv()
      } : (s.session && (await this._saveSession(s.session), await this._notifyAllSubscribers("SIGNED_IN", s.session)), { data: Object.assign(Object.assign({}, s), { redirectType: o ?? null }), error: a });
    } catch (s) {
      if (un(s))
        return { data: { user: null, session: null, redirectType: null }, error: s };
      throw s;
    }
  }
  /**
   * Allows signing in with an OIDC ID token. The authentication provider used
   * should be enabled and configured.
   */
  async signInWithIdToken(t) {
    try {
      const { options: n, provider: r, token: o, access_token: s, nonce: a } = t, c = await _n(this.fetch, "POST", `${this.url}/token?grant_type=id_token`, {
        headers: this.headers,
        body: {
          provider: r,
          id_token: o,
          access_token: s,
          nonce: a,
          gotrue_meta_security: { captcha_token: n == null ? void 0 : n.captchaToken }
        },
        xform: ru
      }), { data: f, error: m } = c;
      return m ? { data: { user: null, session: null }, error: m } : !f || !f.session || !f.user ? {
        data: { user: null, session: null },
        error: new cv()
      } : (f.session && (await this._saveSession(f.session), await this._notifyAllSubscribers("SIGNED_IN", f.session)), { data: f, error: m });
    } catch (n) {
      if (un(n))
        return { data: { user: null, session: null }, error: n };
      throw n;
    }
  }
  /**
   * Log in a user using magiclink or a one-time password (OTP).
   *
   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.
   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.
   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.
   *
   * Be aware that you may get back an error message that will not distinguish
   * between the cases where the account does not exist or, that the account
   * can only be accessed via social login.
   *
   * Do note that you will need to configure a Whatsapp sender on Twilio
   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp
   * channel is not supported on other providers
   * at this time.
   * This method supports PKCE when an email is passed.
   */
  async signInWithOtp(t) {
    var n, r, o, s, a;
    try {
      if ("email" in t) {
        const { email: c, options: f } = t;
        let m = null, g = null;
        this.flowType === "pkce" && ([m, g] = await dv(this.storage, this.storageKey));
        const { error: y } = await _n(this.fetch, "POST", `${this.url}/otp`, {
          headers: this.headers,
          body: {
            email: c,
            data: (n = f == null ? void 0 : f.data) !== null && n !== void 0 ? n : {},
            create_user: (r = f == null ? void 0 : f.shouldCreateUser) !== null && r !== void 0 ? r : !0,
            gotrue_meta_security: { captcha_token: f == null ? void 0 : f.captchaToken },
            code_challenge: m,
            code_challenge_method: g
          },
          redirectTo: f == null ? void 0 : f.emailRedirectTo
        });
        return { data: { user: null, session: null }, error: y };
      }
      if ("phone" in t) {
        const { phone: c, options: f } = t, { data: m, error: g } = await _n(this.fetch, "POST", `${this.url}/otp`, {
          headers: this.headers,
          body: {
            phone: c,
            data: (o = f == null ? void 0 : f.data) !== null && o !== void 0 ? o : {},
            create_user: (s = f == null ? void 0 : f.shouldCreateUser) !== null && s !== void 0 ? s : !0,
            gotrue_meta_security: { captcha_token: f == null ? void 0 : f.captchaToken },
            channel: (a = f == null ? void 0 : f.channel) !== null && a !== void 0 ? a : "sms"
          }
        });
        return { data: { user: null, session: null, messageId: m == null ? void 0 : m.message_id }, error: g };
      }
      throw new zE("You must provide either an email or phone number.");
    } catch (c) {
      if (un(c))
        return { data: { user: null, session: null }, error: c };
      throw c;
    }
  }
  /**
   * Log in a user given a User supplied OTP or TokenHash received through mobile or email.
   */
  async verifyOtp(t) {
    var n, r;
    try {
      let o, s;
      "options" in t && (o = (n = t.options) === null || n === void 0 ? void 0 : n.redirectTo, s = (r = t.options) === null || r === void 0 ? void 0 : r.captchaToken);
      const { data: a, error: c } = await _n(this.fetch, "POST", `${this.url}/verify`, {
        headers: this.headers,
        body: Object.assign(Object.assign({}, t), { gotrue_meta_security: { captcha_token: s } }),
        redirectTo: o,
        xform: ru
      });
      if (c)
        throw c;
      if (!a)
        throw new Error("An error occurred on token verification.");
      const f = a.session, m = a.user;
      return f != null && f.access_token && (await this._saveSession(f), await this._notifyAllSubscribers(t.type == "recovery" ? "PASSWORD_RECOVERY" : "SIGNED_IN", f)), { data: { user: m, session: f }, error: null };
    } catch (o) {
      if (un(o))
        return { data: { user: null, session: null }, error: o };
      throw o;
    }
  }
  /**
   * Attempts a single-sign on using an enterprise Identity Provider. A
   * successful SSO attempt will redirect the current page to the identity
   * provider authorization page. The redirect URL is implementation and SSO
   * protocol specific.
   *
   * You can use it by providing a SSO domain. Typically you can extract this
   * domain by asking users for their email address. If this domain is
   * registered on the Auth instance the redirect will use that organization's
   * currently active SSO Identity Provider for the login.
   *
   * If you have built an organization-specific login page, you can use the
   * organization's SSO Identity Provider UUID directly instead.
   */
  async signInWithSSO(t) {
    var n, r, o;
    try {
      let s = null, a = null;
      return this.flowType === "pkce" && ([s, a] = await dv(this.storage, this.storageKey)), await _n(this.fetch, "POST", `${this.url}/sso`, {
        body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, "providerId" in t ? { provider_id: t.providerId } : null), "domain" in t ? { domain: t.domain } : null), { redirect_to: (r = (n = t.options) === null || n === void 0 ? void 0 : n.redirectTo) !== null && r !== void 0 ? r : void 0 }), !((o = t == null ? void 0 : t.options) === null || o === void 0) && o.captchaToken ? { gotrue_meta_security: { captcha_token: t.options.captchaToken } } : null), { skip_http_redirect: !0, code_challenge: s, code_challenge_method: a }),
        headers: this.headers,
        xform: Wse
      });
    } catch (s) {
      if (un(s))
        return { data: null, error: s };
      throw s;
    }
  }
  /**
   * Sends a reauthentication OTP to the user's email or phone number.
   * Requires the user to be signed-in.
   */
  async reauthenticate() {
    return await this.initializePromise, await this._acquireLock(-1, async () => await this._reauthenticate());
  }
  async _reauthenticate() {
    try {
      return await this._useSession(async (t) => {
        const { data: { session: n }, error: r } = t;
        if (r)
          throw r;
        if (!n)
          throw new Mf();
        const { error: o } = await _n(this.fetch, "GET", `${this.url}/reauthenticate`, {
          headers: this.headers,
          jwt: n.access_token
        });
        return { data: { user: null, session: null }, error: o };
      });
    } catch (t) {
      if (un(t))
        return { data: { user: null, session: null }, error: t };
      throw t;
    }
  }
  /**
   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.
   */
  async resend(t) {
    try {
      const n = `${this.url}/resend`;
      if ("email" in t) {
        const { email: r, type: o, options: s } = t, { error: a } = await _n(this.fetch, "POST", n, {
          headers: this.headers,
          body: {
            email: r,
            type: o,
            gotrue_meta_security: { captcha_token: s == null ? void 0 : s.captchaToken }
          },
          redirectTo: s == null ? void 0 : s.emailRedirectTo
        });
        return { data: { user: null, session: null }, error: a };
      } else if ("phone" in t) {
        const { phone: r, type: o, options: s } = t, { data: a, error: c } = await _n(this.fetch, "POST", n, {
          headers: this.headers,
          body: {
            phone: r,
            type: o,
            gotrue_meta_security: { captcha_token: s == null ? void 0 : s.captchaToken }
          }
        });
        return { data: { user: null, session: null, messageId: a == null ? void 0 : a.message_id }, error: c };
      }
      throw new zE("You must provide either an email or phone number and a type");
    } catch (n) {
      if (un(n))
        return { data: { user: null, session: null }, error: n };
      throw n;
    }
  }
  /**
   * Returns the session, refreshing it if necessary.
   *
   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.
   *
   * **IMPORTANT:** This method loads values directly from the storage attached
   * to the client. If that storage is based on request cookies for example,
   * the values in it may not be authentic and therefore it's strongly advised
   * against using this method and its results in such circumstances. A warning
   * will be emitted if this is detected. Use {@link #getUser()} instead.
   */
  async getSession() {
    return await this.initializePromise, await this._acquireLock(-1, async () => this._useSession(async (n) => n));
  }
  /**
   * Acquires a global lock based on the storage key.
   */
  async _acquireLock(t, n) {
    this._debug("#_acquireLock", "begin", t);
    try {
      if (this.lockAcquired) {
        const r = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve(), o = (async () => (await r, await n()))();
        return this.pendingInLock.push((async () => {
          try {
            await o;
          } catch {
          }
        })()), o;
      }
      return await this.lock(`lock:${this.storageKey}`, t, async () => {
        this._debug("#_acquireLock", "lock acquired for storage key", this.storageKey);
        try {
          this.lockAcquired = !0;
          const r = n();
          for (this.pendingInLock.push((async () => {
            try {
              await r;
            } catch {
            }
          })()), await r; this.pendingInLock.length; ) {
            const o = [...this.pendingInLock];
            await Promise.all(o), this.pendingInLock.splice(0, o.length);
          }
          return await r;
        } finally {
          this._debug("#_acquireLock", "lock released for storage key", this.storageKey), this.lockAcquired = !1;
        }
      });
    } finally {
      this._debug("#_acquireLock", "end");
    }
  }
  /**
   * Use instead of {@link #getSession} inside the library. It is
   * semantically usually what you want, as getting a session involves some
   * processing afterwards that requires only one client operating on the
   * session at once across multiple tabs or processes.
   */
  async _useSession(t) {
    this._debug("#_useSession", "begin");
    try {
      const n = await this.__loadSession();
      return await t(n);
    } finally {
      this._debug("#_useSession", "end");
    }
  }
  /**
   * NEVER USE DIRECTLY!
   *
   * Always use {@link #_useSession}.
   */
  async __loadSession() {
    this._debug("#__loadSession()", "begin"), this.lockAcquired || this._debug("#__loadSession()", "used outside of an acquired lock!", new Error().stack);
    try {
      let t = null;
      const n = await Ph(this.storage, this.storageKey);
      if (this._debug("#getSession()", "session from storage", n), n !== null && (this._isValidSession(n) ? t = n : (this._debug("#getSession()", "session from storage is not valid"), await this._removeSession())), !t)
        return { data: { session: null }, error: null };
      const r = t.expires_at ? t.expires_at * 1e3 - Date.now() < mP : !1;
      if (this._debug("#__loadSession()", `session has${r ? "" : " not"} expired`, "expires_at", t.expires_at), !r) {
        if (this.userStorage) {
          const a = await Ph(this.userStorage, this.storageKey + "-user");
          a != null && a.user ? t.user = a.user : t.user = yP();
        }
        if (this.storage.isServer && t.user) {
          let a = this.suppressGetSessionWarning;
          t = new Proxy(t, {
            get: (f, m, g) => (!a && m === "user" && (console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."), a = !0, this.suppressGetSessionWarning = !0), Reflect.get(f, m, g))
          });
        }
        return { data: { session: t }, error: null };
      }
      const { data: o, error: s } = await this._callRefreshToken(t.refresh_token);
      return s ? { data: { session: null }, error: s } : { data: { session: o }, error: null };
    } finally {
      this._debug("#__loadSession()", "end");
    }
  }
  /**
   * Gets the current user details if there is an existing session. This method
   * performs a network request to the Supabase Auth server, so the returned
   * value is authentic and can be used to base authorization rules on.
   *
   * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.
   */
  async getUser(t) {
    return t ? await this._getUser(t) : (await this.initializePromise, await this._acquireLock(-1, async () => await this._getUser()));
  }
  async _getUser(t) {
    try {
      return t ? await _n(this.fetch, "GET", `${this.url}/user`, {
        headers: this.headers,
        jwt: t,
        xform: Lf
      }) : await this._useSession(async (n) => {
        var r, o, s;
        const { data: a, error: c } = n;
        if (c)
          throw c;
        return !(!((r = a.session) === null || r === void 0) && r.access_token) && !this.hasCustomAuthorizationHeader ? { data: { user: null }, error: new Mf() } : await _n(this.fetch, "GET", `${this.url}/user`, {
          headers: this.headers,
          jwt: (s = (o = a.session) === null || o === void 0 ? void 0 : o.access_token) !== null && s !== void 0 ? s : void 0,
          xform: Lf
        });
      });
    } catch (n) {
      if (un(n))
        return bse(n) && (await this._removeSession(), await Pf(this.storage, `${this.storageKey}-code-verifier`)), { data: { user: null }, error: n };
      throw n;
    }
  }
  /**
   * Updates user data for a logged in user.
   */
  async updateUser(t, n = {}) {
    return await this.initializePromise, await this._acquireLock(-1, async () => await this._updateUser(t, n));
  }
  async _updateUser(t, n = {}) {
    try {
      return await this._useSession(async (r) => {
        const { data: o, error: s } = r;
        if (s)
          throw s;
        if (!o.session)
          throw new Mf();
        const a = o.session;
        let c = null, f = null;
        this.flowType === "pkce" && t.email != null && ([c, f] = await dv(this.storage, this.storageKey));
        const { data: m, error: g } = await _n(this.fetch, "PUT", `${this.url}/user`, {
          headers: this.headers,
          redirectTo: n == null ? void 0 : n.emailRedirectTo,
          body: Object.assign(Object.assign({}, t), { code_challenge: c, code_challenge_method: f }),
          jwt: a.access_token,
          xform: Lf
        });
        if (g)
          throw g;
        return a.user = m.user, await this._saveSession(a), await this._notifyAllSubscribers("USER_UPDATED", a), { data: { user: a.user }, error: null };
      });
    } catch (r) {
      if (un(r))
        return { data: { user: null }, error: r };
      throw r;
    }
  }
  /**
   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.
   * If the refresh token or access token in the current session is invalid, an error will be thrown.
   * @param currentSession The current session that minimally contains an access token and refresh token.
   */
  async setSession(t) {
    return await this.initializePromise, await this._acquireLock(-1, async () => await this._setSession(t));
  }
  async _setSession(t) {
    try {
      if (!t.access_token || !t.refresh_token)
        throw new Mf();
      const n = Date.now() / 1e3;
      let r = n, o = !0, s = null;
      const { payload: a } = vP(t.access_token);
      if (a.exp && (r = a.exp, o = r <= n), o) {
        const { data: c, error: f } = await this._callRefreshToken(t.refresh_token);
        if (f)
          return { data: { user: null, session: null }, error: f };
        if (!c)
          return { data: { user: null, session: null }, error: null };
        s = c;
      } else {
        const { data: c, error: f } = await this._getUser(t.access_token);
        if (f)
          throw f;
        s = {
          access_token: t.access_token,
          refresh_token: t.refresh_token,
          user: c.user,
          token_type: "bearer",
          expires_in: r - n,
          expires_at: r
        }, await this._saveSession(s), await this._notifyAllSubscribers("SIGNED_IN", s);
      }
      return { data: { user: s.user, session: s }, error: null };
    } catch (n) {
      if (un(n))
        return { data: { session: null, user: null }, error: n };
      throw n;
    }
  }
  /**
   * Returns a new session, regardless of expiry status.
   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().
   * If the current session's refresh token is invalid, an error will be thrown.
   * @param currentSession The current session. If passed in, it must contain a refresh token.
   */
  async refreshSession(t) {
    return await this.initializePromise, await this._acquireLock(-1, async () => await this._refreshSession(t));
  }
  async _refreshSession(t) {
    try {
      return await this._useSession(async (n) => {
        var r;
        if (!t) {
          const { data: a, error: c } = n;
          if (c)
            throw c;
          t = (r = a.session) !== null && r !== void 0 ? r : void 0;
        }
        if (!(t != null && t.refresh_token))
          throw new Mf();
        const { data: o, error: s } = await this._callRefreshToken(t.refresh_token);
        return s ? { data: { user: null, session: null }, error: s } : o ? { data: { user: o.user, session: o }, error: null } : { data: { user: null, session: null }, error: null };
      });
    } catch (n) {
      if (un(n))
        return { data: { user: null, session: null }, error: n };
      throw n;
    }
  }
  /**
   * Gets the session data from a URL string
   */
  async _getSessionFromURL(t, n) {
    try {
      if (!Ea())
        throw new BE("No browser detected.");
      if (t.error || t.error_description || t.error_code)
        throw new BE(t.error_description || "Error in URL with unspecified error_description", {
          error: t.error || "unspecified_error",
          code: t.error_code || "unspecified_code"
        });
      switch (n) {
        case "implicit":
          if (this.flowType === "pkce")
            throw new QF("Not a valid PKCE flow url.");
          break;
        case "pkce":
          if (this.flowType === "implicit")
            throw new BE("Not a valid implicit grant flow url.");
          break;
        default:
      }
      if (n === "pkce") {
        if (this._debug("#_initialize()", "begin", "is PKCE flow", !0), !t.code)
          throw new QF("No code detected.");
        const { data: I, error: M } = await this._exchangeCodeForSession(t.code);
        if (M)
          throw M;
        const N = new URL(window.location.href);
        return N.searchParams.delete("code"), window.history.replaceState(window.history.state, "", N.toString()), { data: { session: I.session, redirectType: null }, error: null };
      }
      const { provider_token: r, provider_refresh_token: o, access_token: s, refresh_token: a, expires_in: c, expires_at: f, token_type: m } = t;
      if (!s || !c || !a || !m)
        throw new BE("No session defined in URL");
      const g = Math.round(Date.now() / 1e3), y = parseInt(c);
      let w = g + y;
      f && (w = parseInt(f));
      const C = w - g;
      C * 1e3 <= Sv && console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${C}s, should have been closer to ${y}s`);
      const T = w - y;
      g - T >= 120 ? console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale", T, w, g) : g - T < 0 && console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew", T, w, g);
      const { data: E, error: O } = await this._getUser(s);
      if (O)
        throw O;
      const k = {
        provider_token: r,
        provider_refresh_token: o,
        access_token: s,
        expires_in: y,
        expires_at: w,
        refresh_token: a,
        token_type: m,
        user: E.user
      };
      return window.location.hash = "", this._debug("#_getSessionFromURL()", "clearing window.location.hash"), { data: { session: k, redirectType: t.type }, error: null };
    } catch (r) {
      if (un(r))
        return { data: { session: null, redirectType: null }, error: r };
      throw r;
    }
  }
  /**
   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)
   */
  _isImplicitGrantCallback(t) {
    return !!(t.access_token || t.error_description);
  }
  /**
   * Checks if the current URL and backing storage contain parameters given by a PKCE flow
   */
  async _isPKCECallback(t) {
    const n = await Ph(this.storage, `${this.storageKey}-code-verifier`);
    return !!(t.code && n);
  }
  /**
   * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `"SIGNED_OUT"` event.
   *
   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.
   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.
   *
   * If using `others` scope, no `SIGNED_OUT` event is fired!
   */
  async signOut(t = { scope: "global" }) {
    return await this.initializePromise, await this._acquireLock(-1, async () => await this._signOut(t));
  }
  async _signOut({ scope: t } = { scope: "global" }) {
    return await this._useSession(async (n) => {
      var r;
      const { data: o, error: s } = n;
      if (s)
        return { error: s };
      const a = (r = o.session) === null || r === void 0 ? void 0 : r.access_token;
      if (a) {
        const { error: c } = await this.admin.signOut(a, t);
        if (c && !(yse(c) && (c.status === 404 || c.status === 401 || c.status === 403)))
          return { error: c };
      }
      return t !== "others" && (await this._removeSession(), await Pf(this.storage, `${this.storageKey}-code-verifier`)), { error: null };
    });
  }
  onAuthStateChange(t) {
    const n = Ose(), r = {
      id: n,
      callback: t,
      unsubscribe: () => {
        this._debug("#unsubscribe()", "state change callback with id removed", n), this.stateChangeEmitters.delete(n);
      }
    };
    return this._debug("#onAuthStateChange()", "registered callback with id", n), this.stateChangeEmitters.set(n, r), (async () => (await this.initializePromise, await this._acquireLock(-1, async () => {
      this._emitInitialSession(n);
    })))(), { data: { subscription: r } };
  }
  async _emitInitialSession(t) {
    return await this._useSession(async (n) => {
      var r, o;
      try {
        const { data: { session: s }, error: a } = n;
        if (a)
          throw a;
        await ((r = this.stateChangeEmitters.get(t)) === null || r === void 0 ? void 0 : r.callback("INITIAL_SESSION", s)), this._debug("INITIAL_SESSION", "callback id", t, "session", s);
      } catch (s) {
        await ((o = this.stateChangeEmitters.get(t)) === null || o === void 0 ? void 0 : o.callback("INITIAL_SESSION", null)), this._debug("INITIAL_SESSION", "callback id", t, "error", s), console.error(s);
      }
    });
  }
  /**
   * Sends a password reset request to an email address. This method supports the PKCE flow.
   *
   * @param email The email address of the user.
   * @param options.redirectTo The URL to send the user to after they click the password reset link.
   * @param options.captchaToken Verification token received when the user completes the captcha on the site.
   */
  async resetPasswordForEmail(t, n = {}) {
    let r = null, o = null;
    this.flowType === "pkce" && ([r, o] = await dv(
      this.storage,
      this.storageKey,
      !0
      // isPasswordRecovery
    ));
    try {
      return await _n(this.fetch, "POST", `${this.url}/recover`, {
        body: {
          email: t,
          code_challenge: r,
          code_challenge_method: o,
          gotrue_meta_security: { captcha_token: n.captchaToken }
        },
        headers: this.headers,
        redirectTo: n.redirectTo
      });
    } catch (s) {
      if (un(s))
        return { data: null, error: s };
      throw s;
    }
  }
  /**
   * Gets all the identities linked to a user.
   */
  async getUserIdentities() {
    var t;
    try {
      const { data: n, error: r } = await this.getUser();
      if (r)
        throw r;
      return { data: { identities: (t = n.user.identities) !== null && t !== void 0 ? t : [] }, error: null };
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  async linkIdentity(t) {
    return "token" in t ? this.linkIdentityIdToken(t) : this.linkIdentityOAuth(t);
  }
  async linkIdentityOAuth(t) {
    var n;
    try {
      const { data: r, error: o } = await this._useSession(async (s) => {
        var a, c, f, m, g;
        const { data: y, error: w } = s;
        if (w)
          throw w;
        const C = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, t.provider, {
          redirectTo: (a = t.options) === null || a === void 0 ? void 0 : a.redirectTo,
          scopes: (c = t.options) === null || c === void 0 ? void 0 : c.scopes,
          queryParams: (f = t.options) === null || f === void 0 ? void 0 : f.queryParams,
          skipBrowserRedirect: !0
        });
        return await _n(this.fetch, "GET", C, {
          headers: this.headers,
          jwt: (g = (m = y.session) === null || m === void 0 ? void 0 : m.access_token) !== null && g !== void 0 ? g : void 0
        });
      });
      if (o)
        throw o;
      return Ea() && !(!((n = t.options) === null || n === void 0) && n.skipBrowserRedirect) && window.location.assign(r == null ? void 0 : r.url), { data: { provider: t.provider, url: r == null ? void 0 : r.url }, error: null };
    } catch (r) {
      if (un(r))
        return { data: { provider: t.provider, url: null }, error: r };
      throw r;
    }
  }
  async linkIdentityIdToken(t) {
    return await this._useSession(async (n) => {
      var r;
      try {
        const { error: o, data: { session: s } } = n;
        if (o)
          throw o;
        const { options: a, provider: c, token: f, access_token: m, nonce: g } = t, y = await _n(this.fetch, "POST", `${this.url}/token?grant_type=id_token`, {
          headers: this.headers,
          jwt: (r = s == null ? void 0 : s.access_token) !== null && r !== void 0 ? r : void 0,
          body: {
            provider: c,
            id_token: f,
            access_token: m,
            nonce: g,
            link_identity: !0,
            gotrue_meta_security: { captcha_token: a == null ? void 0 : a.captchaToken }
          },
          xform: ru
        }), { data: w, error: C } = y;
        return C ? { data: { user: null, session: null }, error: C } : !w || !w.session || !w.user ? {
          data: { user: null, session: null },
          error: new cv()
        } : (w.session && (await this._saveSession(w.session), await this._notifyAllSubscribers("USER_UPDATED", w.session)), { data: w, error: C });
      } catch (o) {
        if (un(o))
          return { data: { user: null, session: null }, error: o };
        throw o;
      }
    });
  }
  /**
   * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.
   */
  async unlinkIdentity(t) {
    try {
      return await this._useSession(async (n) => {
        var r, o;
        const { data: s, error: a } = n;
        if (a)
          throw a;
        return await _n(this.fetch, "DELETE", `${this.url}/user/identities/${t.identity_id}`, {
          headers: this.headers,
          jwt: (o = (r = s.session) === null || r === void 0 ? void 0 : r.access_token) !== null && o !== void 0 ? o : void 0
        });
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  /**
   * Generates a new JWT.
   * @param refreshToken A valid refresh token that was returned on login.
   */
  async _refreshAccessToken(t) {
    const n = `#_refreshAccessToken(${t.substring(0, 5)}...)`;
    this._debug(n, "begin");
    try {
      const r = Date.now();
      return await Mse(async (o) => (o > 0 && await Pse(200 * Math.pow(2, o - 1)), this._debug(n, "refreshing attempt", o), await _n(this.fetch, "POST", `${this.url}/token?grant_type=refresh_token`, {
        body: { refresh_token: t },
        headers: this.headers,
        xform: ru
      })), (o, s) => {
        const a = 200 * Math.pow(2, o);
        return s && gP(s) && // retryable only if the request can be sent before the backoff overflows the tick duration
        Date.now() + a - r < Sv;
      });
    } catch (r) {
      if (this._debug(n, "error", r), un(r))
        return { data: { session: null, user: null }, error: r };
      throw r;
    } finally {
      this._debug(n, "end");
    }
  }
  _isValidSession(t) {
    return typeof t == "object" && t !== null && "access_token" in t && "refresh_token" in t && "expires_at" in t;
  }
  async _handleProviderSignIn(t, n) {
    const r = await this._getUrlForProvider(`${this.url}/authorize`, t, {
      redirectTo: n.redirectTo,
      scopes: n.scopes,
      queryParams: n.queryParams
    });
    return this._debug("#_handleProviderSignIn()", "provider", t, "options", n, "url", r), Ea() && !n.skipBrowserRedirect && window.location.assign(r), { data: { provider: t, url: r }, error: null };
  }
  /**
   * Recovers the session from LocalStorage and refreshes the token
   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.
   */
  async _recoverAndRefresh() {
    var t, n;
    const r = "#_recoverAndRefresh()";
    this._debug(r, "begin");
    try {
      const o = await Ph(this.storage, this.storageKey);
      if (o && this.userStorage) {
        let a = await Ph(this.userStorage, this.storageKey + "-user");
        !this.storage.isServer && Object.is(this.storage, this.userStorage) && !a && (a = { user: o.user }, await Cv(this.userStorage, this.storageKey + "-user", a)), o.user = (t = a == null ? void 0 : a.user) !== null && t !== void 0 ? t : yP();
      } else if (o && !o.user && !o.user) {
        const a = await Ph(this.storage, this.storageKey + "-user");
        a && (a != null && a.user) ? (o.user = a.user, await Pf(this.storage, this.storageKey + "-user"), await Cv(this.storage, this.storageKey, o)) : o.user = yP();
      }
      if (this._debug(r, "session from storage", o), !this._isValidSession(o)) {
        this._debug(r, "session is not valid"), o !== null && await this._removeSession();
        return;
      }
      const s = ((n = o.expires_at) !== null && n !== void 0 ? n : 1 / 0) * 1e3 - Date.now() < mP;
      if (this._debug(r, `session has${s ? "" : " not"} expired with margin of ${mP}s`), s) {
        if (this.autoRefreshToken && o.refresh_token) {
          const { error: a } = await this._callRefreshToken(o.refresh_token);
          a && (console.error(a), gP(a) || (this._debug(r, "refresh failed with a non-retryable error, removing the session", a), await this._removeSession()));
        }
      } else if (o.user && o.user.__isUserNotAvailableProxy === !0)
        try {
          const { data: a, error: c } = await this._getUser(o.access_token);
          !c && (a != null && a.user) ? (o.user = a.user, await this._saveSession(o), await this._notifyAllSubscribers("SIGNED_IN", o)) : this._debug(r, "could not get user data, skipping SIGNED_IN notification");
        } catch (a) {
          console.error("Error getting user data:", a), this._debug(r, "error getting user data, skipping SIGNED_IN notification", a);
        }
      else
        await this._notifyAllSubscribers("SIGNED_IN", o);
    } catch (o) {
      this._debug(r, "error", o), console.error(o);
      return;
    } finally {
      this._debug(r, "end");
    }
  }
  async _callRefreshToken(t) {
    var n, r;
    if (!t)
      throw new Mf();
    if (this.refreshingDeferred)
      return this.refreshingDeferred.promise;
    const o = `#_callRefreshToken(${t.substring(0, 5)}...)`;
    this._debug(o, "begin");
    try {
      this.refreshingDeferred = new J_();
      const { data: s, error: a } = await this._refreshAccessToken(t);
      if (a)
        throw a;
      if (!s.session)
        throw new Mf();
      await this._saveSession(s.session), await this._notifyAllSubscribers("TOKEN_REFRESHED", s.session);
      const c = { data: s.session, error: null };
      return this.refreshingDeferred.resolve(c), c;
    } catch (s) {
      if (this._debug(o, "error", s), un(s)) {
        const a = { data: null, error: s };
        return gP(s) || await this._removeSession(), (n = this.refreshingDeferred) === null || n === void 0 || n.resolve(a), a;
      }
      throw (r = this.refreshingDeferred) === null || r === void 0 || r.reject(s), s;
    } finally {
      this.refreshingDeferred = null, this._debug(o, "end");
    }
  }
  async _notifyAllSubscribers(t, n, r = !0) {
    const o = `#_notifyAllSubscribers(${t})`;
    this._debug(o, "begin", n, `broadcast = ${r}`);
    try {
      this.broadcastChannel && r && this.broadcastChannel.postMessage({ event: t, session: n });
      const s = [], a = Array.from(this.stateChangeEmitters.values()).map(async (c) => {
        try {
          await c.callback(t, n);
        } catch (f) {
          s.push(f);
        }
      });
      if (await Promise.all(a), s.length > 0) {
        for (let c = 0; c < s.length; c += 1)
          console.error(s[c]);
        throw s[0];
      }
    } finally {
      this._debug(o, "end");
    }
  }
  /**
   * set currentSession and currentUser
   * process to _startAutoRefreshToken if possible
   */
  async _saveSession(t) {
    this._debug("#_saveSession()", t), this.suppressGetSessionWarning = !0;
    const n = Object.assign({}, t), r = n.user && n.user.__isUserNotAvailableProxy === !0;
    if (this.userStorage) {
      !r && n.user && await Cv(this.userStorage, this.storageKey + "-user", {
        user: n.user
      });
      const o = Object.assign({}, n);
      delete o.user;
      const s = n2(o);
      await Cv(this.storage, this.storageKey, s);
    } else {
      const o = n2(n);
      await Cv(this.storage, this.storageKey, o);
    }
  }
  async _removeSession() {
    this._debug("#_removeSession()"), await Pf(this.storage, this.storageKey), await Pf(this.storage, this.storageKey + "-code-verifier"), await Pf(this.storage, this.storageKey + "-user"), this.userStorage && await Pf(this.userStorage, this.storageKey + "-user"), await this._notifyAllSubscribers("SIGNED_OUT", null);
  }
  /**
   * Removes any registered visibilitychange callback.
   *
   * {@see #startAutoRefresh}
   * {@see #stopAutoRefresh}
   */
  _removeVisibilityChangedCallback() {
    this._debug("#_removeVisibilityChangedCallback()");
    const t = this.visibilityChangedCallback;
    this.visibilityChangedCallback = null;
    try {
      t && Ea() && (window != null && window.removeEventListener) && window.removeEventListener("visibilitychange", t);
    } catch (n) {
      console.error("removing visibilitychange callback failed", n);
    }
  }
  /**
   * This is the private implementation of {@link #startAutoRefresh}. Use this
   * within the library.
   */
  async _startAutoRefresh() {
    await this._stopAutoRefresh(), this._debug("#_startAutoRefresh()");
    const t = setInterval(() => this._autoRefreshTokenTick(), Sv);
    this.autoRefreshTicker = t, t && typeof t == "object" && typeof t.unref == "function" ? t.unref() : typeof Deno < "u" && typeof Deno.unrefTimer == "function" && Deno.unrefTimer(t), setTimeout(async () => {
      await this.initializePromise, await this._autoRefreshTokenTick();
    }, 0);
  }
  /**
   * This is the private implementation of {@link #stopAutoRefresh}. Use this
   * within the library.
   */
  async _stopAutoRefresh() {
    this._debug("#_stopAutoRefresh()");
    const t = this.autoRefreshTicker;
    this.autoRefreshTicker = null, t && clearInterval(t);
  }
  /**
   * Starts an auto-refresh process in the background. The session is checked
   * every few seconds. Close to the time of expiration a process is started to
   * refresh the session. If refreshing fails it will be retried for as long as
   * necessary.
   *
   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need
   * to call this function, it will be called for you.
   *
   * On browsers the refresh process works only when the tab/window is in the
   * foreground to conserve resources as well as prevent race conditions and
   * flooding auth with requests. If you call this method any managed
   * visibility change callback will be removed and you must manage visibility
   * changes on your own.
   *
   * On non-browser platforms the refresh process works *continuously* in the
   * background, which may not be desirable. You should hook into your
   * platform's foreground indication mechanism and call these methods
   * appropriately to conserve resources.
   *
   * {@see #stopAutoRefresh}
   */
  async startAutoRefresh() {
    this._removeVisibilityChangedCallback(), await this._startAutoRefresh();
  }
  /**
   * Stops an active auto refresh process running in the background (if any).
   *
   * If you call this method any managed visibility change callback will be
   * removed and you must manage visibility changes on your own.
   *
   * See {@link #startAutoRefresh} for more details.
   */
  async stopAutoRefresh() {
    this._removeVisibilityChangedCallback(), await this._stopAutoRefresh();
  }
  /**
   * Runs the auto refresh token tick.
   */
  async _autoRefreshTokenTick() {
    this._debug("#_autoRefreshTokenTick()", "begin");
    try {
      await this._acquireLock(0, async () => {
        try {
          const t = Date.now();
          try {
            return await this._useSession(async (n) => {
              const { data: { session: r } } = n;
              if (!r || !r.refresh_token || !r.expires_at) {
                this._debug("#_autoRefreshTokenTick()", "no session");
                return;
              }
              const o = Math.floor((r.expires_at * 1e3 - t) / Sv);
              this._debug("#_autoRefreshTokenTick()", `access token expires in ${o} ticks, a tick lasts ${Sv}ms, refresh threshold is ${DM} ticks`), o <= DM && await this._callRefreshToken(r.refresh_token);
            });
          } catch (n) {
            console.error("Auto refresh tick failed with error. This is likely a transient error.", n);
          }
        } finally {
          this._debug("#_autoRefreshTokenTick()", "end");
        }
      });
    } catch (t) {
      if (t.isAcquireTimeout || t instanceof bU)
        this._debug("auto refresh token tick lock not available");
      else
        throw t;
    }
  }
  /**
   * Registers callbacks on the browser / platform, which in-turn run
   * algorithms when the browser window/tab are in foreground. On non-browser
   * platforms it assumes always foreground.
   */
  async _handleVisibilityChange() {
    if (this._debug("#_handleVisibilityChange()"), !Ea() || !(window != null && window.addEventListener))
      return this.autoRefreshToken && this.startAutoRefresh(), !1;
    try {
      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(!1), window == null || window.addEventListener("visibilitychange", this.visibilityChangedCallback), await this._onVisibilityChanged(!0);
    } catch (t) {
      console.error("_handleVisibilityChange", t);
    }
  }
  /**
   * Callback registered with `window.addEventListener('visibilitychange')`.
   */
  async _onVisibilityChanged(t) {
    const n = `#_onVisibilityChanged(${t})`;
    this._debug(n, "visibilityState", document.visibilityState), document.visibilityState === "visible" ? (this.autoRefreshToken && this._startAutoRefresh(), t || (await this.initializePromise, await this._acquireLock(-1, async () => {
      if (document.visibilityState !== "visible") {
        this._debug(n, "acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting");
        return;
      }
      await this._recoverAndRefresh();
    }))) : document.visibilityState === "hidden" && this.autoRefreshToken && this._stopAutoRefresh();
  }
  /**
   * Generates the relevant login URL for a third-party provider.
   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.
   * @param options.scopes A space-separated list of scopes granted to the OAuth application.
   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.
   */
  async _getUrlForProvider(t, n, r) {
    const o = [`provider=${encodeURIComponent(n)}`];
    if (r != null && r.redirectTo && o.push(`redirect_to=${encodeURIComponent(r.redirectTo)}`), r != null && r.scopes && o.push(`scopes=${encodeURIComponent(r.scopes)}`), this.flowType === "pkce") {
      const [s, a] = await dv(this.storage, this.storageKey), c = new URLSearchParams({
        code_challenge: `${encodeURIComponent(s)}`,
        code_challenge_method: `${encodeURIComponent(a)}`
      });
      o.push(c.toString());
    }
    if (r != null && r.queryParams) {
      const s = new URLSearchParams(r.queryParams);
      o.push(s.toString());
    }
    return r != null && r.skipBrowserRedirect && o.push(`skip_http_redirect=${r.skipBrowserRedirect}`), `${t}?${o.join("&")}`;
  }
  async _unenroll(t) {
    try {
      return await this._useSession(async (n) => {
        var r;
        const { data: o, error: s } = n;
        return s ? { data: null, error: s } : await _n(this.fetch, "DELETE", `${this.url}/factors/${t.factorId}`, {
          headers: this.headers,
          jwt: (r = o == null ? void 0 : o.session) === null || r === void 0 ? void 0 : r.access_token
        });
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  async _enroll(t) {
    try {
      return await this._useSession(async (n) => {
        var r, o;
        const { data: s, error: a } = n;
        if (a)
          return { data: null, error: a };
        const c = Object.assign({ friendly_name: t.friendlyName, factor_type: t.factorType }, t.factorType === "phone" ? { phone: t.phone } : t.factorType === "totp" ? { issuer: t.issuer } : {}), { data: f, error: m } = await _n(this.fetch, "POST", `${this.url}/factors`, {
          body: c,
          headers: this.headers,
          jwt: (r = s == null ? void 0 : s.session) === null || r === void 0 ? void 0 : r.access_token
        });
        return m ? { data: null, error: m } : (t.factorType === "totp" && f.type === "totp" && (!((o = f == null ? void 0 : f.totp) === null || o === void 0) && o.qr_code) && (f.totp.qr_code = `data:image/svg+xml;utf-8,${f.totp.qr_code}`), { data: f, error: null });
      });
    } catch (n) {
      if (un(n))
        return { data: null, error: n };
      throw n;
    }
  }
  async _verify(t) {
    return this._acquireLock(-1, async () => {
      try {
        return await this._useSession(async (n) => {
          var r;
          const { data: o, error: s } = n;
          if (s)
            return { data: null, error: s };
          const a = Object.assign({ challenge_id: t.challengeId }, "webauthn" in t ? {
            webauthn: Object.assign(Object.assign({}, t.webauthn), { credential_response: t.webauthn.type === "create" ? lae(t.webauthn.credential_response) : uae(t.webauthn.credential_response) })
          } : { code: t.code }), { data: c, error: f } = await _n(this.fetch, "POST", `${this.url}/factors/${t.factorId}/verify`, {
            body: a,
            headers: this.headers,
            jwt: (r = o == null ? void 0 : o.session) === null || r === void 0 ? void 0 : r.access_token
          });
          return f ? { data: null, error: f } : (await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1e3) + c.expires_in }, c)), await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED", c), { data: c, error: f });
        });
      } catch (n) {
        if (un(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
  async _challenge(t) {
    return this._acquireLock(-1, async () => {
      try {
        return await this._useSession(async (n) => {
          var r;
          const { data: o, error: s } = n;
          if (s)
            return { data: null, error: s };
          const a = await _n(this.fetch, "POST", `${this.url}/factors/${t.factorId}/challenge`, {
            body: t,
            headers: this.headers,
            jwt: (r = o == null ? void 0 : o.session) === null || r === void 0 ? void 0 : r.access_token
          });
          if (a.error)
            return a;
          const { data: c } = a;
          if (c.type !== "webauthn")
            return { data: c, error: null };
          switch (c.webauthn.type) {
            case "create":
              return {
                data: Object.assign(Object.assign({}, c), { webauthn: Object.assign(Object.assign({}, c.webauthn), { credential_options: Object.assign(Object.assign({}, c.webauthn.credential_options), { publicKey: sae(c.webauthn.credential_options.publicKey) }) }) }),
                error: null
              };
            case "request":
              return {
                data: Object.assign(Object.assign({}, c), { webauthn: Object.assign(Object.assign({}, c.webauthn), { credential_options: Object.assign(Object.assign({}, c.webauthn.credential_options), { publicKey: aae(c.webauthn.credential_options.publicKey) }) }) }),
                error: null
              };
          }
        });
      } catch (n) {
        if (un(n))
          return { data: null, error: n };
        throw n;
      }
    });
  }
  /**
   * {@see GoTrueMFAApi#challengeAndVerify}
   */
  async _challengeAndVerify(t) {
    const { data: n, error: r } = await this._challenge({
      factorId: t.factorId
    });
    return r ? { data: null, error: r } : await this._verify({
      factorId: t.factorId,
      challengeId: n.id,
      code: t.code
    });
  }
  /**
   * {@see GoTrueMFAApi#listFactors}
   */
  async _listFactors() {
    var t;
    const { data: { user: n }, error: r } = await this.getUser();
    if (r)
      return { data: null, error: r };
    const o = {
      all: [],
      phone: [],
      totp: [],
      webauthn: []
    };
    for (const s of (t = n == null ? void 0 : n.factors) !== null && t !== void 0 ? t : [])
      o.all.push(s), s.status === "verified" && o[s.factor_type].push(s);
    return {
      data: o,
      error: null
    };
  }
  /**
   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}
   */
  async _getAuthenticatorAssuranceLevel() {
    return this._acquireLock(-1, async () => await this._useSession(async (t) => {
      var n, r;
      const { data: { session: o }, error: s } = t;
      if (s)
        return { data: null, error: s };
      if (!o)
        return {
          data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },
          error: null
        };
      const { payload: a } = vP(o.access_token);
      let c = null;
      a.aal && (c = a.aal);
      let f = c;
      ((r = (n = o.user.factors) === null || n === void 0 ? void 0 : n.filter((y) => y.status === "verified")) !== null && r !== void 0 ? r : []).length > 0 && (f = "aal2");
      const g = a.amr || [];
      return { data: { currentLevel: c, nextLevel: f, currentAuthenticationMethods: g }, error: null };
    }));
  }
  async fetchJwk(t, n = { keys: [] }) {
    let r = n.keys.find((c) => c.kid === t);
    if (r)
      return r;
    const o = Date.now();
    if (r = this.jwks.keys.find((c) => c.kid === t), r && this.jwks_cached_at + gse > o)
      return r;
    const { data: s, error: a } = await _n(this.fetch, "GET", `${this.url}/.well-known/jwks.json`, {
      headers: this.headers
    });
    if (a)
      throw a;
    return !s.keys || s.keys.length === 0 || (this.jwks = s, this.jwks_cached_at = o, r = s.keys.find((c) => c.kid === t), !r) ? null : r;
  }
  /**
   * Extracts the JWT claims present in the access token by first verifying the
   * JWT against the server's JSON Web Key Set endpoint
   * `/.well-known/jwks.json` which is often cached, resulting in significantly
   * faster responses. Prefer this method over {@link #getUser} which always
   * sends a request to the Auth server for each JWT.
   *
   * If the project is not using an asymmetric JWT signing key (like ECC or
   * RSA) it always sends a request to the Auth server (similar to {@link
   * #getUser}) to verify the JWT.
   *
   * @param jwt An optional specific JWT you wish to verify, not the one you
   *            can obtain from {@link #getSession}.
   * @param options Various additional options that allow you to customize the
   *                behavior of this method.
   */
  async getClaims(t, n = {}) {
    try {
      let r = t;
      if (!r) {
        const { data: C, error: T } = await this.getSession();
        if (T || !C.session)
          return { data: null, error: T };
        r = C.session.access_token;
      }
      const { header: o, payload: s, signature: a, raw: { header: c, payload: f } } = vP(r);
      n != null && n.allowExpired || jse(s.exp);
      const m = !o.alg || o.alg.startsWith("HS") || !o.kid || !("crypto" in globalThis && "subtle" in globalThis.crypto) ? null : await this.fetchJwk(o.kid, n != null && n.keys ? { keys: n.keys } : n == null ? void 0 : n.jwks);
      if (!m) {
        const { error: C } = await this.getUser(r);
        if (C)
          throw C;
        return {
          data: {
            claims: s,
            header: o,
            signature: a
          },
          error: null
        };
      }
      const g = Fse(o.alg), y = await crypto.subtle.importKey("jwk", m, g, !0, [
        "verify"
      ]);
      if (!await crypto.subtle.verify(g, y, a, Tse(`${c}.${f}`)))
        throw new LM("Invalid JWT signature");
      return {
        data: {
          claims: s,
          header: o,
          signature: a
        },
        error: null
      };
    } catch (r) {
      if (un(r))
        return { data: null, error: r };
      throw r;
    }
  }
}
US.nextInstanceID = 0;
const yae = US;
class bae extends yae {
  constructor(t) {
    super(t);
  }
}
var wae = function(e, t, n, r) {
  function o(s) {
    return s instanceof n ? s : new n(function(a) {
      a(s);
    });
  }
  return new (n || (n = Promise))(function(s, a) {
    function c(g) {
      try {
        m(r.next(g));
      } catch (y) {
        a(y);
      }
    }
    function f(g) {
      try {
        m(r.throw(g));
      } catch (y) {
        a(y);
      }
    }
    function m(g) {
      g.done ? s(g.value) : o(g.value).then(c, f);
    }
    m((r = r.apply(e, t || [])).next());
  });
};
class Sae {
  /**
   * Create a new client for use in the browser.
   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.
   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.
   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.
   * @param options.auth.autoRefreshToken Set to "true" if you want to automatically refresh the token before expiring.
   * @param options.auth.persistSession Set to "true" if you want to automatically save the user session into local storage.
   * @param options.auth.detectSessionInUrl Set to "true" if you want to automatically detects OAuth grants in the URL and signs in the user.
   * @param options.realtime Options passed along to realtime-js constructor.
   * @param options.storage Options passed along to the storage-js constructor.
   * @param options.global.fetch A custom fetch implementation.
   * @param options.global.headers Any additional headers to send with each network request.
   */
  constructor(t, n, r) {
    var o, s, a;
    this.supabaseUrl = t, this.supabaseKey = n;
    const c = dse(t);
    if (!n)
      throw new Error("supabaseKey is required.");
    this.realtimeUrl = new URL("realtime/v1", c), this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace("http", "ws"), this.authUrl = new URL("auth/v1", c), this.storageUrl = new URL("storage/v1", c), this.functionsUrl = new URL("functions/v1", c);
    const f = `sb-${c.hostname.split(".")[0]}-auth-token`, m = {
      db: tse,
      realtime: rse,
      auth: Object.assign(Object.assign({}, nse), { storageKey: f }),
      global: ese
    }, g = cse(r ?? {}, m);
    this.storageKey = (o = g.auth.storageKey) !== null && o !== void 0 ? o : "", this.headers = (s = g.global.headers) !== null && s !== void 0 ? s : {}, g.accessToken ? (this.accessToken = g.accessToken, this.auth = new Proxy({}, {
      get: (y, w) => {
        throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(w)} is not possible`);
      }
    })) : this.auth = this._initSupabaseAuthClient((a = g.auth) !== null && a !== void 0 ? a : {}, this.headers, g.global.fetch), this.fetch = ase(n, this._getAccessToken.bind(this), g.global.fetch), this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, g.realtime)), this.rest = new vie(new URL("rest/v1", c).href, {
      headers: this.headers,
      schema: g.db.schema,
      fetch: this.fetch
    }), this.storage = new Qie(this.storageUrl.href, this.headers, this.fetch, r == null ? void 0 : r.storage), g.accessToken || this._listenForAuthEvents();
  }
  /**
   * Supabase Functions allows you to deploy and invoke edge functions.
   */
  get functions() {
    return new Yoe(this.functionsUrl.href, {
      headers: this.headers,
      customFetch: this.fetch
    });
  }
  /**
   * Perform a query on a table or a view.
   *
   * @param relation - The table or view name to query
   */
  from(t) {
    return this.rest.from(t);
  }
  // NOTE: signatures must be kept in sync with PostgrestClient.schema
  /**
   * Select a schema to query or perform an function (rpc) call.
   *
   * The schema needs to be on the list of exposed schemas inside Supabase.
   *
   * @param schema - The schema to query
   */
  schema(t) {
    return this.rest.schema(t);
  }
  // NOTE: signatures must be kept in sync with PostgrestClient.rpc
  /**
   * Perform a function call.
   *
   * @param fn - The function name to call
   * @param args - The arguments to pass to the function call
   * @param options - Named parameters
   * @param options.head - When set to `true`, `data` will not be returned.
   * Useful if you only need the count.
   * @param options.get - When set to `true`, the function will be called with
   * read-only access mode.
   * @param options.count - Count algorithm to use to count rows returned by the
   * function. Only applicable for [set-returning
   * functions](https://www.postgresql.org/docs/current/functions-srf.html).
   *
   * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
   * hood.
   *
   * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
   * statistics under the hood.
   *
   * `"estimated"`: Uses exact count for low numbers and planned count for high
   * numbers.
   */
  rpc(t, n = {}, r = {
    head: !1,
    get: !1,
    count: void 0
  }) {
    return this.rest.rpc(t, n, r);
  }
  /**
   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.
   *
   * @param {string} name - The name of the Realtime channel.
   * @param {Object} opts - The options to pass to the Realtime channel.
   *
   */
  channel(t, n = { config: {} }) {
    return this.realtime.channel(t, n);
  }
  /**
   * Returns all Realtime channels.
   */
  getChannels() {
    return this.realtime.getChannels();
  }
  /**
   * Unsubscribes and removes Realtime channel from Realtime client.
   *
   * @param {RealtimeChannel} channel - The name of the Realtime channel.
   *
   */
  removeChannel(t) {
    return this.realtime.removeChannel(t);
  }
  /**
   * Unsubscribes and removes all Realtime channels from Realtime client.
   */
  removeAllChannels() {
    return this.realtime.removeAllChannels();
  }
  _getAccessToken() {
    return wae(this, void 0, void 0, function* () {
      var t, n;
      if (this.accessToken)
        return yield this.accessToken();
      const { data: r } = yield this.auth.getSession();
      return (n = (t = r.session) === null || t === void 0 ? void 0 : t.access_token) !== null && n !== void 0 ? n : this.supabaseKey;
    });
  }
  _initSupabaseAuthClient({ autoRefreshToken: t, persistSession: n, detectSessionInUrl: r, storage: o, userStorage: s, storageKey: a, flowType: c, lock: f, debug: m }, g, y) {
    const w = {
      Authorization: `Bearer ${this.supabaseKey}`,
      apikey: `${this.supabaseKey}`
    };
    return new bae({
      url: this.authUrl.href,
      headers: Object.assign(Object.assign({}, w), g),
      storageKey: a,
      autoRefreshToken: t,
      persistSession: n,
      detectSessionInUrl: r,
      storage: o,
      userStorage: s,
      flowType: c,
      lock: f,
      debug: m,
      fetch: y,
      // auth checks if there is a custom authorizaiton header using this flag
      // so it knows whether to return an error when getUser is called with no session
      hasCustomAuthorizationHeader: Object.keys(this.headers).some((C) => C.toLowerCase() === "authorization")
    });
  }
  _initRealtimeClient(t) {
    return new Aie(this.realtimeUrl.href, Object.assign(Object.assign({}, t), { params: Object.assign({ apikey: this.supabaseKey }, t == null ? void 0 : t.params) }));
  }
  _listenForAuthEvents() {
    return this.auth.onAuthStateChange((n, r) => {
      this._handleTokenChanged(n, "CLIENT", r == null ? void 0 : r.access_token);
    });
  }
  _handleTokenChanged(t, n, r) {
    (t === "TOKEN_REFRESHED" || t === "SIGNED_IN") && this.changedAccessToken !== r ? (this.changedAccessToken = r, this.realtime.setAuth(r)) : t === "SIGNED_OUT" && (this.realtime.setAuth(), n == "STORAGE" && this.auth.signOut(), this.changedAccessToken = void 0);
  }
}
const Cae = (e, t, n) => new Sae(e, t, n);
function xae() {
  if (typeof window < "u" || typeof process > "u")
    return !1;
  const e = process.version;
  if (e == null)
    return !1;
  const t = e.match(/^v(\d+)\./);
  return t ? parseInt(t[1], 10) <= 18 : !1;
}
xae() && console.warn("⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. Please upgrade to Node.js 20 or later. For more information, visit: https://github.com/orgs/supabase/discussions/37217");
const Eae = { BASE_URL: "/admin/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, Tae = "https://jvjmmzbibpnlzhzzyncx.supabase.co", _ae = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2am1temJpYnBubHpoenp5bmN4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjA1MjYyMzksImV4cCI6MjA3NjEwMjIzOX0.JyaY7kJbbZKKBCj_UX6M-t-eKoK9WJibcJjlLZnSvWA", Oae = /* @__PURE__ */ new Set(["admin", "administrator", "owner", "superuser"]);
function bC(...e) {
  for (const t of e)
    if (typeof t == "string") {
      const n = t.trim();
      if (n)
        return n;
    }
}
function ko(e, ...t) {
  return t.reduce((n, r) => {
    if (n && typeof n == "object" && r in n)
      return n[r];
  }, e);
}
function Xv(e) {
  if (typeof document > "u") return;
  const t = document.querySelector(`meta[name="${e}"]`), n = t == null ? void 0 : t.content;
  return typeof n == "string" && n.trim() ? n.trim() : void 0;
}
function xd(e) {
  const t = typeof import.meta < "u" ? Eae[e] : void 0, n = typeof process < "u" && (process != null && process.env) ? process.env[e] : void 0, r = ko(globalThis, "process", "env", e);
  return bC(t, n, r);
}
const Qv = ko(globalThis, "HarmonySheetsSupabase") ?? ko(globalThis, "harmonySheetsSupabase") ?? ko(globalThis, "SUPABASE_CONFIG") ?? ko(globalThis, "env") ?? ko(globalThis, "__env") ?? {}, Rae = bC(
  ko(globalThis, "SUPABASE_URL"),
  ko(globalThis, "Supabase", "url"),
  ko(globalThis, "HarmonySheetsSupabase", "url"),
  ko(globalThis, "__SUPABASE__", "url"),
  ko(Qv, "SUPABASE_URL"),
  ko(Qv, "supabaseUrl"),
  xd("SUPABASE_URL"),
  xd("VITE_SUPABASE_URL"),
  xd("PUBLIC_SUPABASE_URL"),
  Xv("supabase-url"),
  Xv("harmony-sheets-supabase-url")
) ?? Tae, kae = bC(
  ko(globalThis, "SUPABASE_ANON_KEY"),
  ko(globalThis, "Supabase", "anonKey"),
  ko(globalThis, "HarmonySheetsSupabase", "anonKey"),
  ko(globalThis, "__SUPABASE__", "anonKey"),
  ko(Qv, "SUPABASE_ANON_KEY"),
  ko(Qv, "supabaseAnonKey"),
  xd("SUPABASE_ANON_KEY"),
  xd("VITE_SUPABASE_ANON_KEY"),
  xd("PUBLIC_SUPABASE_ANON_KEY"),
  Xv("supabase-anon-key"),
  Xv("harmony-sheets-supabase-anon-key")
) ?? _ae, xU = bC(
  ko(globalThis, "SUPABASE_ADMIN_EMAIL"),
  ko(globalThis, "HarmonySheetsSupabase", "adminEmail"),
  ko(Qv, "SUPABASE_ADMIN_EMAIL"),
  ko(Qv, "adminEmail"),
  xd("SUPABASE_ADMIN_EMAIL"),
  xd("VITE_SUPABASE_ADMIN_EMAIL"),
  xd("PUBLIC_SUPABASE_ADMIN_EMAIL"),
  Xv("supabase-admin-email"),
  Xv("harmony-sheets-supabase-admin-email")
);
function iS(e) {
  return typeof e == "string" ? e.trim().toLowerCase() : "";
}
const jh = iS(xU);
function ta(e, t) {
  return t.reduce((n, r) => {
    if (n && typeof n == "object" && r in n)
      return n[r];
  }, e);
}
function Pae(e) {
  if (e === !0) return !0;
  if (typeof e == "number")
    return Number.isFinite(e) && e !== 0;
  if (typeof e == "string") {
    const t = e.trim().toLowerCase();
    return t ? ["true", "1", "yes", "y", "on", "enabled", "admin", "owner"].includes(t) : !1;
  }
  return !1;
}
function $M(e) {
  if (!e) return !1;
  if (Array.isArray(e))
    return e.some($M);
  if (typeof e == "string") {
    const t = e.trim().toLowerCase();
    return t ? Oae.has(t) : !1;
  }
  return typeof e == "object" ? Object.values(e).some($M) : !1;
}
function Mae() {
  return { url: Rae, anonKey: kae };
}
function Iae() {
  return xU ?? null;
}
function Dae() {
  return jh || null;
}
function u2(e) {
  if (!e || typeof e != "object") return !1;
  const t = iS(e.email);
  if (jh && t && t === jh)
    return !0;
  if (jh) {
    const s = [
      ta(e, ["user_metadata", "adminEmail"]),
      ta(e, ["user_metadata", "admin_email"]),
      ta(e, ["user_metadata", "email"]),
      ta(e, ["app_metadata", "adminEmail"]),
      ta(e, ["app_metadata", "admin_email"])
    ];
    for (const c of s)
      if (iS(c) === jh)
        return !0;
    const a = [
      ta(e, ["user_metadata", "adminEmails"]),
      ta(e, ["user_metadata", "admin_emails"]),
      ta(e, ["app_metadata", "adminEmails"]),
      ta(e, ["app_metadata", "admin_emails"])
    ];
    for (const c of a)
      if (c) {
        if (Array.isArray(c)) {
          if (c.some((f) => iS(f) === jh))
            return !0;
        } else if (typeof c == "string" && c.split(/[\s,;]+/).map((m) => iS(m)).filter(Boolean).includes(jh))
          return !0;
      }
  }
  if (typeof e.role == "string" && e.role.trim().toLowerCase() === "admin")
    return !0;
  const n = [
    ta(e, ["app_metadata", "roles"]),
    ta(e, ["user_metadata", "roles"])
  ];
  for (const s of n)
    if (Array.isArray(s)) {
      if (s.some((a) => typeof a == "string" && a.trim().toLowerCase() === "admin"))
        return !0;
    } else if (typeof s == "string" && s.trim().toLowerCase() === "admin")
      return !0;
  const r = bC(
    ta(e, ["app_metadata", "role"]),
    ta(e, ["user_metadata", "role"])
  );
  if (r && r.trim().toLowerCase() === "admin")
    return !0;
  const o = [
    ["app_metadata", "is_admin"],
    ["user_metadata", "is_admin"],
    ["app_metadata", "admin"],
    ["user_metadata", "admin"],
    ["app_metadata", "isAdmin"],
    ["user_metadata", "isAdmin"],
    ["app_metadata", "adminUser"],
    ["user_metadata", "adminUser"],
    ["app_metadata", "admin_user"],
    ["user_metadata", "admin_user"],
    ["app_metadata", "is_owner"],
    ["user_metadata", "is_owner"],
    ["app_metadata", "owner"],
    ["user_metadata", "owner"],
    ["app_metadata", "claims", "admin"],
    ["user_metadata", "claims", "admin"],
    ["app_metadata", "claims_admin"],
    ["user_metadata", "claims_admin"],
    ["app_metadata", "permissions"],
    ["user_metadata", "permissions"],
    ["app_metadata", "features"],
    ["user_metadata", "features"],
    ["app_metadata", "flags"],
    ["user_metadata", "flags"]
  ];
  for (const s of o) {
    const a = ta(e, s);
    if (Pae(a) || $M(a))
      return !0;
  }
  return !1;
}
const { url: Aae, anonKey: Nae } = Mae(), Jf = Cae(Aae, Nae);
function Lae() {
  const [e, t] = x.useState(""), [n, r] = x.useState(!1), [o, s] = x.useState(null), [a, c] = x.useState(null), f = rC(), m = Iae(), g = Dae(), y = !!g, w = async (T) => {
    T.preventDefault(), r(!0), c(null), s(null);
    try {
      const E = e.trim().toLowerCase();
      if (!E) {
        c("Enter the email address you use for the admin account.");
        return;
      }
      if (y && E !== g) {
        c("Only the designated admin email can access this dashboard.");
        return;
      }
      const { error: O } = await Jf.auth.signInWithOtp({ email: E });
      if (O) {
        c(O.message);
        return;
      }
      s("Check your inbox for the magic link to sign in.");
    } finally {
      r(!1);
    }
  };
  async function C() {
    if (!y || !g) {
      c("Demo sign in requires an admin email to be configured.");
      return;
    }
    c(null), s(null), r(!0);
    try {
      const { data: T, error: E } = await Jf.auth.signInWithPassword({
        email: g,
        password: "password"
      });
      if (E) {
        c(E.message);
        return;
      }
      T != null && T.session && f("/products");
    } finally {
      r(!1);
    }
  }
  return /* @__PURE__ */ $.jsx(iD, { maxWidth: "sm", sx: { display: "grid", minHeight: "100vh", placeItems: "center" }, children: /* @__PURE__ */ $.jsx(bu, { elevation: 6, sx: { p: 5, width: "100%" }, children: /* @__PURE__ */ $.jsxs(ra, { spacing: 3, component: "form", onSubmit: w, children: [
    /* @__PURE__ */ $.jsxs(ra, { spacing: 1, children: [
      /* @__PURE__ */ $.jsx(Po, { variant: "h4", fontWeight: 600, textAlign: "center", children: "Harmony Sheets Admin" }),
      /* @__PURE__ */ $.jsx(Po, { variant: "body2", color: "text.secondary", textAlign: "center", children: "Sign in with the admin email to manage products and pricing." }),
      m && /* @__PURE__ */ $.jsxs(Po, { variant: "body2", color: "text.secondary", textAlign: "center", children: [
        "Admin access is limited to ",
        /* @__PURE__ */ $.jsx("strong", { children: m }),
        "."
      ] })
    ] }),
    /* @__PURE__ */ $.jsx(
      jf,
      {
        label: "Admin email",
        type: "email",
        value: e,
        onChange: (T) => t(T.target.value),
        fullWidth: !0,
        required: !0
      }
    ),
    /* @__PURE__ */ $.jsx(lm, { type: "submit", variant: "contained", size: "large", disabled: n, children: "Send magic link" }),
    /* @__PURE__ */ $.jsx(
      lm,
      {
        variant: "outlined",
        size: "large",
        disabled: n || !y,
        onClick: C,
        children: "Demo sign in"
      }
    ),
    o && /* @__PURE__ */ $.jsx(LS, { severity: "success", children: o }),
    a && /* @__PURE__ */ $.jsx(LS, { severity: "error", children: a })
  ] }) }) });
}
const $ae = xn(/* @__PURE__ */ $.jsx("path", {
  d: "m17 7-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z"
}), "Logout"), jae = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z"
}), "Add");
async function Fae() {
  const { data: e, error: t } = await Jf.from("products_with_prices").select("*").order("created_at", { ascending: !1 });
  if (t) throw t;
  return e ?? [];
}
async function zae(e) {
  const { data: t, error: n } = await Jf.functions.invoke("create_stripe_product", {
    body: e
  });
  if (n) throw n;
  return t;
}
async function Bae(e) {
  const { data: t, error: n } = await Jf.functions.invoke("update_stripe_price", {
    body: e
  });
  if (n) throw n;
  return t;
}
const Hae = xn(/* @__PURE__ */ $.jsx("path", {
  d: "m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z"
}), "TrendingUp"), Vae = xn(/* @__PURE__ */ $.jsx("path", {
  d: "m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z"
}), "TrendingDown");
function Uae({ kpis: e }) {
  return /* @__PURE__ */ $.jsx(jT, { container: !0, spacing: 3, columns: { xs: 1, md: 12 }, children: e.map((t) => {
    const n = t.change >= 0;
    return /* @__PURE__ */ $.jsx(jT, { size: { xs: 12, md: 4 }, children: /* @__PURE__ */ $.jsx(rD, { elevation: 2, children: /* @__PURE__ */ $.jsx(oD, { children: /* @__PURE__ */ $.jsxs(ra, { spacing: 1, children: [
      /* @__PURE__ */ $.jsx(Po, { variant: "overline", color: "text.secondary", children: t.label }),
      /* @__PURE__ */ $.jsx(Po, { variant: "h5", fontWeight: 600, children: t.value }),
      /* @__PURE__ */ $.jsxs(ra, { direction: "row", spacing: 1, alignItems: "center", children: [
        n ? /* @__PURE__ */ $.jsx(Hae, { fontSize: "small", color: "success" }) : /* @__PURE__ */ $.jsx(Vae, { fontSize: "small", color: "error" }),
        /* @__PURE__ */ $.jsxs(Po, { variant: "body2", color: n ? "success.main" : "error.main", children: [
          n ? "+" : "",
          t.change,
          "% vs last month"
        ] })
      ] })
    ] }) }) }) }, t.label);
  }) });
}
/*!
 * @kurkle/color v0.3.4
 * https://github.com/kurkle/color#readme
 * (c) 2024 Jukka Kurkela
 * Released under the MIT License
 */
function wC(e) {
  return e + 0.5 | 0;
}
const Ff = (e, t, n) => Math.max(Math.min(e, n), t);
function sS(e) {
  return Ff(wC(e * 2.55), 0, 255);
}
function Uf(e) {
  return Ff(wC(e * 255), 0, 255);
}
function wd(e) {
  return Ff(wC(e / 2.55) / 100, 0, 1);
}
function c2(e) {
  return Ff(wC(e * 100), 0, 100);
}
const ll = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15 }, jM = [..."0123456789ABCDEF"], Wae = (e) => jM[e & 15], Gae = (e) => jM[(e & 240) >> 4] + jM[e & 15], HE = (e) => (e & 240) >> 4 === (e & 15), qae = (e) => HE(e.r) && HE(e.g) && HE(e.b) && HE(e.a);
function Kae(e) {
  var t = e.length, n;
  return e[0] === "#" && (t === 4 || t === 5 ? n = {
    r: 255 & ll[e[1]] * 17,
    g: 255 & ll[e[2]] * 17,
    b: 255 & ll[e[3]] * 17,
    a: t === 5 ? ll[e[4]] * 17 : 255
  } : (t === 7 || t === 9) && (n = {
    r: ll[e[1]] << 4 | ll[e[2]],
    g: ll[e[3]] << 4 | ll[e[4]],
    b: ll[e[5]] << 4 | ll[e[6]],
    a: t === 9 ? ll[e[7]] << 4 | ll[e[8]] : 255
  })), n;
}
const Yae = (e, t) => e < 255 ? t(e) : "";
function Xae(e) {
  var t = qae(e) ? Wae : Gae;
  return e ? "#" + t(e.r) + t(e.g) + t(e.b) + Yae(e.a, t) : void 0;
}
const Qae = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function EU(e, t, n) {
  const r = t * Math.min(n, 1 - n), o = (s, a = (s + e / 30) % 12) => n - r * Math.max(Math.min(a - 3, 9 - a, 1), -1);
  return [o(0), o(8), o(4)];
}
function Jae(e, t, n) {
  const r = (o, s = (o + e / 60) % 6) => n - n * t * Math.max(Math.min(s, 4 - s, 1), 0);
  return [r(5), r(3), r(1)];
}
function Zae(e, t, n) {
  const r = EU(e, 1, 0.5);
  let o;
  for (t + n > 1 && (o = 1 / (t + n), t *= o, n *= o), o = 0; o < 3; o++)
    r[o] *= 1 - t - n, r[o] += t;
  return r;
}
function ele(e, t, n, r, o) {
  return e === o ? (t - n) / r + (t < n ? 6 : 0) : t === o ? (n - e) / r + 2 : (e - t) / r + 4;
}
function gD(e) {
  const n = e.r / 255, r = e.g / 255, o = e.b / 255, s = Math.max(n, r, o), a = Math.min(n, r, o), c = (s + a) / 2;
  let f, m, g;
  return s !== a && (g = s - a, m = c > 0.5 ? g / (2 - s - a) : g / (s + a), f = ele(n, r, o, g, s), f = f * 60 + 0.5), [f | 0, m || 0, c];
}
function vD(e, t, n, r) {
  return (Array.isArray(t) ? e(t[0], t[1], t[2]) : e(t, n, r)).map(Uf);
}
function yD(e, t, n) {
  return vD(EU, e, t, n);
}
function tle(e, t, n) {
  return vD(Zae, e, t, n);
}
function nle(e, t, n) {
  return vD(Jae, e, t, n);
}
function TU(e) {
  return (e % 360 + 360) % 360;
}
function rle(e) {
  const t = Qae.exec(e);
  let n = 255, r;
  if (!t)
    return;
  t[5] !== r && (n = t[6] ? sS(+t[5]) : Uf(+t[5]));
  const o = TU(+t[2]), s = +t[3] / 100, a = +t[4] / 100;
  return t[1] === "hwb" ? r = tle(o, s, a) : t[1] === "hsv" ? r = nle(o, s, a) : r = yD(o, s, a), {
    r: r[0],
    g: r[1],
    b: r[2],
    a: n
  };
}
function ole(e, t) {
  var n = gD(e);
  n[0] = TU(n[0] + t), n = yD(n), e.r = n[0], e.g = n[1], e.b = n[2];
}
function ile(e) {
  if (!e)
    return;
  const t = gD(e), n = t[0], r = c2(t[1]), o = c2(t[2]);
  return e.a < 255 ? `hsla(${n}, ${r}%, ${o}%, ${wd(e.a)})` : `hsl(${n}, ${r}%, ${o}%)`;
}
const d2 = {
  x: "dark",
  Z: "light",
  Y: "re",
  X: "blu",
  W: "gr",
  V: "medium",
  U: "slate",
  A: "ee",
  T: "ol",
  S: "or",
  B: "ra",
  C: "lateg",
  D: "ights",
  R: "in",
  Q: "turquois",
  E: "hi",
  P: "ro",
  O: "al",
  N: "le",
  M: "de",
  L: "yello",
  F: "en",
  K: "ch",
  G: "arks",
  H: "ea",
  I: "ightg",
  J: "wh"
}, f2 = {
  OiceXe: "f0f8ff",
  antiquewEte: "faebd7",
  aqua: "ffff",
  aquamarRe: "7fffd4",
  azuY: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "0",
  blanKedOmond: "ffebcd",
  Xe: "ff",
  XeviTet: "8a2be2",
  bPwn: "a52a2a",
  burlywood: "deb887",
  caMtXe: "5f9ea0",
  KartYuse: "7fff00",
  KocTate: "d2691e",
  cSO: "ff7f50",
  cSnflowerXe: "6495ed",
  cSnsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "ffff",
  xXe: "8b",
  xcyan: "8b8b",
  xgTMnPd: "b8860b",
  xWay: "a9a9a9",
  xgYF: "6400",
  xgYy: "a9a9a9",
  xkhaki: "bdb76b",
  xmagFta: "8b008b",
  xTivegYF: "556b2f",
  xSange: "ff8c00",
  xScEd: "9932cc",
  xYd: "8b0000",
  xsOmon: "e9967a",
  xsHgYF: "8fbc8f",
  xUXe: "483d8b",
  xUWay: "2f4f4f",
  xUgYy: "2f4f4f",
  xQe: "ced1",
  xviTet: "9400d3",
  dAppRk: "ff1493",
  dApskyXe: "bfff",
  dimWay: "696969",
  dimgYy: "696969",
  dodgerXe: "1e90ff",
  fiYbrick: "b22222",
  flSOwEte: "fffaf0",
  foYstWAn: "228b22",
  fuKsia: "ff00ff",
  gaRsbSo: "dcdcdc",
  ghostwEte: "f8f8ff",
  gTd: "ffd700",
  gTMnPd: "daa520",
  Way: "808080",
  gYF: "8000",
  gYFLw: "adff2f",
  gYy: "808080",
  honeyMw: "f0fff0",
  hotpRk: "ff69b4",
  RdianYd: "cd5c5c",
  Rdigo: "4b0082",
  ivSy: "fffff0",
  khaki: "f0e68c",
  lavFMr: "e6e6fa",
  lavFMrXsh: "fff0f5",
  lawngYF: "7cfc00",
  NmoncEffon: "fffacd",
  ZXe: "add8e6",
  ZcSO: "f08080",
  Zcyan: "e0ffff",
  ZgTMnPdLw: "fafad2",
  ZWay: "d3d3d3",
  ZgYF: "90ee90",
  ZgYy: "d3d3d3",
  ZpRk: "ffb6c1",
  ZsOmon: "ffa07a",
  ZsHgYF: "20b2aa",
  ZskyXe: "87cefa",
  ZUWay: "778899",
  ZUgYy: "778899",
  ZstAlXe: "b0c4de",
  ZLw: "ffffe0",
  lime: "ff00",
  limegYF: "32cd32",
  lRF: "faf0e6",
  magFta: "ff00ff",
  maPon: "800000",
  VaquamarRe: "66cdaa",
  VXe: "cd",
  VScEd: "ba55d3",
  VpurpN: "9370db",
  VsHgYF: "3cb371",
  VUXe: "7b68ee",
  VsprRggYF: "fa9a",
  VQe: "48d1cc",
  VviTetYd: "c71585",
  midnightXe: "191970",
  mRtcYam: "f5fffa",
  mistyPse: "ffe4e1",
  moccasR: "ffe4b5",
  navajowEte: "ffdead",
  navy: "80",
  Tdlace: "fdf5e6",
  Tive: "808000",
  TivedBb: "6b8e23",
  Sange: "ffa500",
  SangeYd: "ff4500",
  ScEd: "da70d6",
  pOegTMnPd: "eee8aa",
  pOegYF: "98fb98",
  pOeQe: "afeeee",
  pOeviTetYd: "db7093",
  papayawEp: "ffefd5",
  pHKpuff: "ffdab9",
  peru: "cd853f",
  pRk: "ffc0cb",
  plum: "dda0dd",
  powMrXe: "b0e0e6",
  purpN: "800080",
  YbeccapurpN: "663399",
  Yd: "ff0000",
  Psybrown: "bc8f8f",
  PyOXe: "4169e1",
  saddNbPwn: "8b4513",
  sOmon: "fa8072",
  sandybPwn: "f4a460",
  sHgYF: "2e8b57",
  sHshell: "fff5ee",
  siFna: "a0522d",
  silver: "c0c0c0",
  skyXe: "87ceeb",
  UXe: "6a5acd",
  UWay: "708090",
  UgYy: "708090",
  snow: "fffafa",
  sprRggYF: "ff7f",
  stAlXe: "4682b4",
  tan: "d2b48c",
  teO: "8080",
  tEstN: "d8bfd8",
  tomato: "ff6347",
  Qe: "40e0d0",
  viTet: "ee82ee",
  JHt: "f5deb3",
  wEte: "ffffff",
  wEtesmoke: "f5f5f5",
  Lw: "ffff00",
  LwgYF: "9acd32"
};
function sle() {
  const e = {}, t = Object.keys(f2), n = Object.keys(d2);
  let r, o, s, a, c;
  for (r = 0; r < t.length; r++) {
    for (a = c = t[r], o = 0; o < n.length; o++)
      s = n[o], c = c.replace(s, d2[s]);
    s = parseInt(f2[a], 16), e[c] = [s >> 16 & 255, s >> 8 & 255, s & 255];
  }
  return e;
}
let VE;
function ale(e) {
  VE || (VE = sle(), VE.transparent = [0, 0, 0, 0]);
  const t = VE[e.toLowerCase()];
  return t && {
    r: t[0],
    g: t[1],
    b: t[2],
    a: t.length === 4 ? t[3] : 255
  };
}
const lle = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function ule(e) {
  const t = lle.exec(e);
  let n = 255, r, o, s;
  if (t) {
    if (t[7] !== r) {
      const a = +t[7];
      n = t[8] ? sS(a) : Ff(a * 255, 0, 255);
    }
    return r = +t[1], o = +t[3], s = +t[5], r = 255 & (t[2] ? sS(r) : Ff(r, 0, 255)), o = 255 & (t[4] ? sS(o) : Ff(o, 0, 255)), s = 255 & (t[6] ? sS(s) : Ff(s, 0, 255)), {
      r,
      g: o,
      b: s,
      a: n
    };
  }
}
function cle(e) {
  return e && (e.a < 255 ? `rgba(${e.r}, ${e.g}, ${e.b}, ${wd(e.a)})` : `rgb(${e.r}, ${e.g}, ${e.b})`);
}
const wP = (e) => e <= 31308e-7 ? e * 12.92 : Math.pow(e, 1 / 2.4) * 1.055 - 0.055, mv = (e) => e <= 0.04045 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4);
function dle(e, t, n) {
  const r = mv(wd(e.r)), o = mv(wd(e.g)), s = mv(wd(e.b));
  return {
    r: Uf(wP(r + n * (mv(wd(t.r)) - r))),
    g: Uf(wP(o + n * (mv(wd(t.g)) - o))),
    b: Uf(wP(s + n * (mv(wd(t.b)) - s))),
    a: e.a + n * (t.a - e.a)
  };
}
function UE(e, t, n) {
  if (e) {
    let r = gD(e);
    r[t] = Math.max(0, Math.min(r[t] + r[t] * n, t === 0 ? 360 : 1)), r = yD(r), e.r = r[0], e.g = r[1], e.b = r[2];
  }
}
function _U(e, t) {
  return e && Object.assign(t || {}, e);
}
function p2(e) {
  var t = { r: 0, g: 0, b: 0, a: 255 };
  return Array.isArray(e) ? e.length >= 3 && (t = { r: e[0], g: e[1], b: e[2], a: 255 }, e.length > 3 && (t.a = Uf(e[3]))) : (t = _U(e, { r: 0, g: 0, b: 0, a: 1 }), t.a = Uf(t.a)), t;
}
function fle(e) {
  return e.charAt(0) === "r" ? ule(e) : rle(e);
}
class WS {
  constructor(t) {
    if (t instanceof WS)
      return t;
    const n = typeof t;
    let r;
    n === "object" ? r = p2(t) : n === "string" && (r = Kae(t) || ale(t) || fle(t)), this._rgb = r, this._valid = !!r;
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var t = _U(this._rgb);
    return t && (t.a = wd(t.a)), t;
  }
  set rgb(t) {
    this._rgb = p2(t);
  }
  rgbString() {
    return this._valid ? cle(this._rgb) : void 0;
  }
  hexString() {
    return this._valid ? Xae(this._rgb) : void 0;
  }
  hslString() {
    return this._valid ? ile(this._rgb) : void 0;
  }
  mix(t, n) {
    if (t) {
      const r = this.rgb, o = t.rgb;
      let s;
      const a = n === s ? 0.5 : n, c = 2 * a - 1, f = r.a - o.a, m = ((c * f === -1 ? c : (c + f) / (1 + c * f)) + 1) / 2;
      s = 1 - m, r.r = 255 & m * r.r + s * o.r + 0.5, r.g = 255 & m * r.g + s * o.g + 0.5, r.b = 255 & m * r.b + s * o.b + 0.5, r.a = a * r.a + (1 - a) * o.a, this.rgb = r;
    }
    return this;
  }
  interpolate(t, n) {
    return t && (this._rgb = dle(this._rgb, t._rgb, n)), this;
  }
  clone() {
    return new WS(this.rgb);
  }
  alpha(t) {
    return this._rgb.a = Uf(t), this;
  }
  clearer(t) {
    const n = this._rgb;
    return n.a *= 1 - t, this;
  }
  greyscale() {
    const t = this._rgb, n = wC(t.r * 0.3 + t.g * 0.59 + t.b * 0.11);
    return t.r = t.g = t.b = n, this;
  }
  opaquer(t) {
    const n = this._rgb;
    return n.a *= 1 + t, this;
  }
  negate() {
    const t = this._rgb;
    return t.r = 255 - t.r, t.g = 255 - t.g, t.b = 255 - t.b, this;
  }
  lighten(t) {
    return UE(this._rgb, 2, t), this;
  }
  darken(t) {
    return UE(this._rgb, 2, -t), this;
  }
  saturate(t) {
    return UE(this._rgb, 1, t), this;
  }
  desaturate(t) {
    return UE(this._rgb, 1, -t), this;
  }
  rotate(t) {
    return ole(this._rgb, t), this;
  }
}
/*!
 * Chart.js v4.5.1
 * https://www.chartjs.org
 * (c) 2025 Chart.js Contributors
 * Released under the MIT License
 */
function md() {
}
const ple = /* @__PURE__ */ (() => {
  let e = 0;
  return () => e++;
})();
function fo(e) {
  return e == null;
}
function _i(e) {
  if (Array.isArray && Array.isArray(e))
    return !0;
  const t = Object.prototype.toString.call(e);
  return t.slice(0, 7) === "[object" && t.slice(-6) === "Array]";
}
function or(e) {
  return e !== null && Object.prototype.toString.call(e) === "[object Object]";
}
function vs(e) {
  return (typeof e == "number" || e instanceof Number) && isFinite(+e);
}
function rc(e, t) {
  return vs(e) ? e : t;
}
function Qn(e, t) {
  return typeof e > "u" ? t : e;
}
const hle = (e, t) => typeof e == "string" && e.endsWith("%") ? parseFloat(e) / 100 * t : +e;
function Zr(e, t, n) {
  if (e && typeof e.call == "function")
    return e.apply(n, t);
}
function kr(e, t, n, r) {
  let o, s, a;
  if (_i(e))
    for (s = e.length, o = 0; o < s; o++)
      t.call(n, e[o], o);
  else if (or(e))
    for (a = Object.keys(e), s = a.length, o = 0; o < s; o++)
      t.call(n, e[a[o]], a[o]);
}
function UT(e, t) {
  let n, r, o, s;
  if (!e || !t || e.length !== t.length)
    return !1;
  for (n = 0, r = e.length; n < r; ++n)
    if (o = e[n], s = t[n], o.datasetIndex !== s.datasetIndex || o.index !== s.index)
      return !1;
  return !0;
}
function WT(e) {
  if (_i(e))
    return e.map(WT);
  if (or(e)) {
    const t = /* @__PURE__ */ Object.create(null), n = Object.keys(e), r = n.length;
    let o = 0;
    for (; o < r; ++o)
      t[n[o]] = WT(e[n[o]]);
    return t;
  }
  return e;
}
function OU(e) {
  return [
    "__proto__",
    "prototype",
    "constructor"
  ].indexOf(e) === -1;
}
function mle(e, t, n, r) {
  if (!OU(e))
    return;
  const o = t[e], s = n[e];
  or(o) && or(s) ? GS(o, s, r) : t[e] = WT(s);
}
function GS(e, t, n) {
  const r = _i(t) ? t : [
    t
  ], o = r.length;
  if (!or(e))
    return e;
  n = n || {};
  const s = n.merger || mle;
  let a;
  for (let c = 0; c < o; ++c) {
    if (a = r[c], !or(a))
      continue;
    const f = Object.keys(a);
    for (let m = 0, g = f.length; m < g; ++m)
      s(f[m], e, a, n);
  }
  return e;
}
function wS(e, t) {
  return GS(e, t, {
    merger: gle
  });
}
function gle(e, t, n) {
  if (!OU(e))
    return;
  const r = t[e], o = n[e];
  or(r) && or(o) ? wS(r, o) : Object.prototype.hasOwnProperty.call(t, e) || (t[e] = WT(o));
}
const h2 = {
  // Chart.helpers.core resolveObjectKey should resolve empty key to root object
  "": (e) => e,
  // default resolvers
  x: (e) => e.x,
  y: (e) => e.y
};
function vle(e) {
  const t = e.split("."), n = [];
  let r = "";
  for (const o of t)
    r += o, r.endsWith("\\") ? r = r.slice(0, -1) + "." : (n.push(r), r = "");
  return n;
}
function yle(e) {
  const t = vle(e);
  return (n) => {
    for (const r of t) {
      if (r === "")
        break;
      n = n && n[r];
    }
    return n;
  };
}
function GT(e, t) {
  return (h2[t] || (h2[t] = yle(t)))(e);
}
function bD(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
const qT = (e) => typeof e < "u", Zf = (e) => typeof e == "function", m2 = (e, t) => {
  if (e.size !== t.size)
    return !1;
  for (const n of e)
    if (!t.has(n))
      return !1;
  return !0;
};
function ble(e) {
  return e.type === "mouseup" || e.type === "click" || e.type === "contextmenu";
}
const gs = Math.PI, fu = 2 * gs, wle = fu + gs, KT = Number.POSITIVE_INFINITY, Sle = gs / 180, du = gs / 2, Mh = gs / 4, g2 = gs * 2 / 3, RU = Math.log10, Jv = Math.sign;
function SS(e, t, n) {
  return Math.abs(e - t) < n;
}
function v2(e) {
  const t = Math.round(e);
  e = SS(e, t, e / 1e3) ? t : e;
  const n = Math.pow(10, Math.floor(RU(e))), r = e / n;
  return (r <= 1 ? 1 : r <= 2 ? 2 : r <= 5 ? 5 : 10) * n;
}
function Cle(e) {
  const t = [], n = Math.sqrt(e);
  let r;
  for (r = 1; r < n; r++)
    e % r === 0 && (t.push(r), t.push(e / r));
  return n === (n | 0) && t.push(n), t.sort((o, s) => o - s).pop(), t;
}
function xle(e) {
  return typeof e == "symbol" || typeof e == "object" && e !== null && !(Symbol.toPrimitive in e || "toString" in e || "valueOf" in e);
}
function YT(e) {
  return !xle(e) && !isNaN(parseFloat(e)) && isFinite(e);
}
function Ele(e, t) {
  const n = Math.round(e);
  return n - t <= e && n + t >= e;
}
function Tle(e, t, n) {
  let r, o, s;
  for (r = 0, o = e.length; r < o; r++)
    s = e[r][n], isNaN(s) || (t.min = Math.min(t.min, s), t.max = Math.max(t.max, s));
}
function Yh(e) {
  return e * (gs / 180);
}
function _le(e) {
  return e * (180 / gs);
}
function y2(e) {
  if (!vs(e))
    return;
  let t = 1, n = 0;
  for (; Math.round(e * t) / t !== e; )
    t *= 10, n++;
  return n;
}
function Ole(e, t) {
  const n = t.x - e.x, r = t.y - e.y, o = Math.sqrt(n * n + r * r);
  let s = Math.atan2(r, n);
  return s < -0.5 * gs && (s += fu), {
    angle: s,
    distance: o
  };
}
function FM(e, t) {
  return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
}
function Rle(e, t) {
  return (e - t + wle) % fu - gs;
}
function lc(e) {
  return (e % fu + fu) % fu;
}
function kU(e, t, n, r) {
  const o = lc(e), s = lc(t), a = lc(n), c = lc(s - o), f = lc(a - o), m = lc(o - s), g = lc(o - a);
  return o === s || o === a || r && s === a || c > f && m < g;
}
function fc(e, t, n) {
  return Math.max(t, Math.min(n, e));
}
function kle(e) {
  return fc(e, -32768, 32767);
}
function _v(e, t, n, r = 1e-6) {
  return e >= Math.min(t, n) - r && e <= Math.max(t, n) + r;
}
function wD(e, t, n) {
  n = n || ((a) => e[a] < t);
  let r = e.length - 1, o = 0, s;
  for (; r - o > 1; )
    s = o + r >> 1, n(s) ? o = s : r = s;
  return {
    lo: o,
    hi: r
  };
}
const zM = (e, t, n, r) => wD(e, n, r ? (o) => {
  const s = e[o][t];
  return s < n || s === n && e[o + 1][t] === n;
} : (o) => e[o][t] < n), Ple = (e, t, n) => wD(e, n, (r) => e[r][t] >= n);
function Mle(e, t, n) {
  let r = 0, o = e.length;
  for (; r < o && e[r] < t; )
    r++;
  for (; o > r && e[o - 1] > n; )
    o--;
  return r > 0 || o < e.length ? e.slice(r, o) : e;
}
const PU = [
  "push",
  "pop",
  "shift",
  "splice",
  "unshift"
];
function Ile(e, t) {
  if (e._chartjs) {
    e._chartjs.listeners.push(t);
    return;
  }
  Object.defineProperty(e, "_chartjs", {
    configurable: !0,
    enumerable: !1,
    value: {
      listeners: [
        t
      ]
    }
  }), PU.forEach((n) => {
    const r = "_onData" + bD(n), o = e[n];
    Object.defineProperty(e, n, {
      configurable: !0,
      enumerable: !1,
      value(...s) {
        const a = o.apply(this, s);
        return e._chartjs.listeners.forEach((c) => {
          typeof c[r] == "function" && c[r](...s);
        }), a;
      }
    });
  });
}
function b2(e, t) {
  const n = e._chartjs;
  if (!n)
    return;
  const r = n.listeners, o = r.indexOf(t);
  o !== -1 && r.splice(o, 1), !(r.length > 0) && (PU.forEach((s) => {
    delete e[s];
  }), delete e._chartjs);
}
function Dle(e) {
  const t = new Set(e);
  return t.size === e.length ? e : Array.from(t);
}
const MU = function() {
  return typeof window > "u" ? function(e) {
    return e();
  } : window.requestAnimationFrame;
}();
function IU(e, t) {
  let n = [], r = !1;
  return function(...o) {
    n = o, r || (r = !0, MU.call(window, () => {
      r = !1, e.apply(t, n);
    }));
  };
}
function Ale(e, t) {
  let n;
  return function(...r) {
    return t ? (clearTimeout(n), n = setTimeout(e, t, r)) : e.apply(this, r), t;
  };
}
const DU = (e) => e === "start" ? "left" : e === "end" ? "right" : "center", Ta = (e, t, n) => e === "start" ? t : e === "end" ? n : (t + n) / 2, Nle = (e, t, n, r) => e === (r ? "left" : "right") ? n : e === "center" ? (t + n) / 2 : t, WE = (e) => e === 0 || e === 1, w2 = (e, t, n) => -(Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * fu / n)), S2 = (e, t, n) => Math.pow(2, -10 * e) * Math.sin((e - t) * fu / n) + 1, CS = {
  linear: (e) => e,
  easeInQuad: (e) => e * e,
  easeOutQuad: (e) => -e * (e - 2),
  easeInOutQuad: (e) => (e /= 0.5) < 1 ? 0.5 * e * e : -0.5 * (--e * (e - 2) - 1),
  easeInCubic: (e) => e * e * e,
  easeOutCubic: (e) => (e -= 1) * e * e + 1,
  easeInOutCubic: (e) => (e /= 0.5) < 1 ? 0.5 * e * e * e : 0.5 * ((e -= 2) * e * e + 2),
  easeInQuart: (e) => e * e * e * e,
  easeOutQuart: (e) => -((e -= 1) * e * e * e - 1),
  easeInOutQuart: (e) => (e /= 0.5) < 1 ? 0.5 * e * e * e * e : -0.5 * ((e -= 2) * e * e * e - 2),
  easeInQuint: (e) => e * e * e * e * e,
  easeOutQuint: (e) => (e -= 1) * e * e * e * e + 1,
  easeInOutQuint: (e) => (e /= 0.5) < 1 ? 0.5 * e * e * e * e * e : 0.5 * ((e -= 2) * e * e * e * e + 2),
  easeInSine: (e) => -Math.cos(e * du) + 1,
  easeOutSine: (e) => Math.sin(e * du),
  easeInOutSine: (e) => -0.5 * (Math.cos(gs * e) - 1),
  easeInExpo: (e) => e === 0 ? 0 : Math.pow(2, 10 * (e - 1)),
  easeOutExpo: (e) => e === 1 ? 1 : -Math.pow(2, -10 * e) + 1,
  easeInOutExpo: (e) => WE(e) ? e : e < 0.5 ? 0.5 * Math.pow(2, 10 * (e * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (e * 2 - 1)) + 2),
  easeInCirc: (e) => e >= 1 ? e : -(Math.sqrt(1 - e * e) - 1),
  easeOutCirc: (e) => Math.sqrt(1 - (e -= 1) * e),
  easeInOutCirc: (e) => (e /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - e * e) - 1) : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1),
  easeInElastic: (e) => WE(e) ? e : w2(e, 0.075, 0.3),
  easeOutElastic: (e) => WE(e) ? e : S2(e, 0.075, 0.3),
  easeInOutElastic(e) {
    return WE(e) ? e : e < 0.5 ? 0.5 * w2(e * 2, 0.1125, 0.45) : 0.5 + 0.5 * S2(e * 2 - 1, 0.1125, 0.45);
  },
  easeInBack(e) {
    return e * e * ((1.70158 + 1) * e - 1.70158);
  },
  easeOutBack(e) {
    return (e -= 1) * e * ((1.70158 + 1) * e + 1.70158) + 1;
  },
  easeInOutBack(e) {
    let t = 1.70158;
    return (e /= 0.5) < 1 ? 0.5 * (e * e * (((t *= 1.525) + 1) * e - t)) : 0.5 * ((e -= 2) * e * (((t *= 1.525) + 1) * e + t) + 2);
  },
  easeInBounce: (e) => 1 - CS.easeOutBounce(1 - e),
  easeOutBounce(e) {
    return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375 : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375;
  },
  easeInOutBounce: (e) => e < 0.5 ? CS.easeInBounce(e * 2) * 0.5 : CS.easeOutBounce(e * 2 - 1) * 0.5 + 0.5
};
function SD(e) {
  if (e && typeof e == "object") {
    const t = e.toString();
    return t === "[object CanvasPattern]" || t === "[object CanvasGradient]";
  }
  return !1;
}
function C2(e) {
  return SD(e) ? e : new WS(e);
}
function SP(e) {
  return SD(e) ? e : new WS(e).saturate(0.5).darken(0.1).hexString();
}
const Lle = [
  "x",
  "y",
  "borderWidth",
  "radius",
  "tension"
], $le = [
  "color",
  "borderColor",
  "backgroundColor"
];
function jle(e) {
  e.set("animation", {
    delay: void 0,
    duration: 1e3,
    easing: "easeOutQuart",
    fn: void 0,
    from: void 0,
    loop: void 0,
    to: void 0,
    type: void 0
  }), e.describe("animation", {
    _fallback: !1,
    _indexable: !1,
    _scriptable: (t) => t !== "onProgress" && t !== "onComplete" && t !== "fn"
  }), e.set("animations", {
    colors: {
      type: "color",
      properties: $le
    },
    numbers: {
      type: "number",
      properties: Lle
    }
  }), e.describe("animations", {
    _fallback: "animation"
  }), e.set("transitions", {
    active: {
      animation: {
        duration: 400
      }
    },
    resize: {
      animation: {
        duration: 0
      }
    },
    show: {
      animations: {
        colors: {
          from: "transparent"
        },
        visible: {
          type: "boolean",
          duration: 0
        }
      }
    },
    hide: {
      animations: {
        colors: {
          to: "transparent"
        },
        visible: {
          type: "boolean",
          easing: "linear",
          fn: (t) => t | 0
        }
      }
    }
  });
}
function Fle(e) {
  e.set("layout", {
    autoPadding: !0,
    padding: {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  });
}
const x2 = /* @__PURE__ */ new Map();
function zle(e, t) {
  t = t || {};
  const n = e + JSON.stringify(t);
  let r = x2.get(n);
  return r || (r = new Intl.NumberFormat(e, t), x2.set(n, r)), r;
}
function AU(e, t, n) {
  return zle(t, n).format(e);
}
const Ble = {
  values(e) {
    return _i(e) ? e : "" + e;
  },
  numeric(e, t, n) {
    if (e === 0)
      return "0";
    const r = this.chart.options.locale;
    let o, s = e;
    if (n.length > 1) {
      const m = Math.max(Math.abs(n[0].value), Math.abs(n[n.length - 1].value));
      (m < 1e-4 || m > 1e15) && (o = "scientific"), s = Hle(e, n);
    }
    const a = RU(Math.abs(s)), c = isNaN(a) ? 1 : Math.max(Math.min(-1 * Math.floor(a), 20), 0), f = {
      notation: o,
      minimumFractionDigits: c,
      maximumFractionDigits: c
    };
    return Object.assign(f, this.options.ticks.format), AU(e, r, f);
  }
};
function Hle(e, t) {
  let n = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;
  return Math.abs(n) >= 1 && e !== Math.floor(e) && (n = e - Math.floor(e)), n;
}
var NU = {
  formatters: Ble
};
function Vle(e) {
  e.set("scale", {
    display: !0,
    offset: !1,
    reverse: !1,
    beginAtZero: !1,
    bounds: "ticks",
    clip: !0,
    grace: 0,
    grid: {
      display: !0,
      lineWidth: 1,
      drawOnChartArea: !0,
      drawTicks: !0,
      tickLength: 8,
      tickWidth: (t, n) => n.lineWidth,
      tickColor: (t, n) => n.color,
      offset: !1
    },
    border: {
      display: !0,
      dash: [],
      dashOffset: 0,
      width: 1
    },
    title: {
      display: !1,
      text: "",
      padding: {
        top: 4,
        bottom: 4
      }
    },
    ticks: {
      minRotation: 0,
      maxRotation: 50,
      mirror: !1,
      textStrokeWidth: 0,
      textStrokeColor: "",
      padding: 3,
      display: !0,
      autoSkip: !0,
      autoSkipPadding: 3,
      labelOffset: 0,
      callback: NU.formatters.values,
      minor: {},
      major: {},
      align: "center",
      crossAlign: "near",
      showLabelBackdrop: !1,
      backdropColor: "rgba(255, 255, 255, 0.75)",
      backdropPadding: 2
    }
  }), e.route("scale.ticks", "color", "", "color"), e.route("scale.grid", "color", "", "borderColor"), e.route("scale.border", "color", "", "borderColor"), e.route("scale.title", "color", "", "color"), e.describe("scale", {
    _fallback: !1,
    _scriptable: (t) => !t.startsWith("before") && !t.startsWith("after") && t !== "callback" && t !== "parser",
    _indexable: (t) => t !== "borderDash" && t !== "tickBorderDash" && t !== "dash"
  }), e.describe("scales", {
    _fallback: "scale"
  }), e.describe("scale.ticks", {
    _scriptable: (t) => t !== "backdropPadding" && t !== "callback",
    _indexable: (t) => t !== "backdropPadding"
  });
}
const um = /* @__PURE__ */ Object.create(null), BM = /* @__PURE__ */ Object.create(null);
function xS(e, t) {
  if (!t)
    return e;
  const n = t.split(".");
  for (let r = 0, o = n.length; r < o; ++r) {
    const s = n[r];
    e = e[s] || (e[s] = /* @__PURE__ */ Object.create(null));
  }
  return e;
}
function CP(e, t, n) {
  return typeof t == "string" ? GS(xS(e, t), n) : GS(xS(e, ""), t);
}
class Ule {
  constructor(t, n) {
    this.animation = void 0, this.backgroundColor = "rgba(0,0,0,0.1)", this.borderColor = "rgba(0,0,0,0.1)", this.color = "#666", this.datasets = {}, this.devicePixelRatio = (r) => r.chart.platform.getDevicePixelRatio(), this.elements = {}, this.events = [
      "mousemove",
      "mouseout",
      "click",
      "touchstart",
      "touchmove"
    ], this.font = {
      family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
      size: 12,
      style: "normal",
      lineHeight: 1.2,
      weight: null
    }, this.hover = {}, this.hoverBackgroundColor = (r, o) => SP(o.backgroundColor), this.hoverBorderColor = (r, o) => SP(o.borderColor), this.hoverColor = (r, o) => SP(o.color), this.indexAxis = "x", this.interaction = {
      mode: "nearest",
      intersect: !0,
      includeInvisible: !1
    }, this.maintainAspectRatio = !0, this.onHover = null, this.onClick = null, this.parsing = !0, this.plugins = {}, this.responsive = !0, this.scale = void 0, this.scales = {}, this.showLine = !0, this.drawActiveElementsOnTop = !0, this.describe(t), this.apply(n);
  }
  set(t, n) {
    return CP(this, t, n);
  }
  get(t) {
    return xS(this, t);
  }
  describe(t, n) {
    return CP(BM, t, n);
  }
  override(t, n) {
    return CP(um, t, n);
  }
  route(t, n, r, o) {
    const s = xS(this, t), a = xS(this, r), c = "_" + n;
    Object.defineProperties(s, {
      [c]: {
        value: s[n],
        writable: !0
      },
      [n]: {
        enumerable: !0,
        get() {
          const f = this[c], m = a[o];
          return or(f) ? Object.assign({}, m, f) : Qn(f, m);
        },
        set(f) {
          this[c] = f;
        }
      }
    });
  }
  apply(t) {
    t.forEach((n) => n(this));
  }
}
var jo = /* @__PURE__ */ new Ule({
  _scriptable: (e) => !e.startsWith("on"),
  _indexable: (e) => e !== "events",
  hover: {
    _fallback: "interaction"
  },
  interaction: {
    _scriptable: !1,
    _indexable: !1
  }
}, [
  jle,
  Fle,
  Vle
]);
function Wle(e) {
  return !e || fo(e.size) || fo(e.family) ? null : (e.style ? e.style + " " : "") + (e.weight ? e.weight + " " : "") + e.size + "px " + e.family;
}
function E2(e, t, n, r, o) {
  let s = t[o];
  return s || (s = t[o] = e.measureText(o).width, n.push(o)), s > r && (r = s), r;
}
function Ih(e, t, n) {
  const r = e.currentDevicePixelRatio, o = n !== 0 ? Math.max(n / 2, 0.5) : 0;
  return Math.round((t - o) * r) / r + o;
}
function T2(e, t) {
  !t && !e || (t = t || e.getContext("2d"), t.save(), t.resetTransform(), t.clearRect(0, 0, e.width, e.height), t.restore());
}
function HM(e, t, n, r) {
  LU(e, t, n, r, null);
}
function LU(e, t, n, r, o) {
  let s, a, c, f, m, g, y, w;
  const C = t.pointStyle, T = t.rotation, E = t.radius;
  let O = (T || 0) * Sle;
  if (C && typeof C == "object" && (s = C.toString(), s === "[object HTMLImageElement]" || s === "[object HTMLCanvasElement]")) {
    e.save(), e.translate(n, r), e.rotate(O), e.drawImage(C, -C.width / 2, -C.height / 2, C.width, C.height), e.restore();
    return;
  }
  if (!(isNaN(E) || E <= 0)) {
    switch (e.beginPath(), C) {
      default:
        o ? e.ellipse(n, r, o / 2, E, 0, 0, fu) : e.arc(n, r, E, 0, fu), e.closePath();
        break;
      case "triangle":
        g = o ? o / 2 : E, e.moveTo(n + Math.sin(O) * g, r - Math.cos(O) * E), O += g2, e.lineTo(n + Math.sin(O) * g, r - Math.cos(O) * E), O += g2, e.lineTo(n + Math.sin(O) * g, r - Math.cos(O) * E), e.closePath();
        break;
      case "rectRounded":
        m = E * 0.516, f = E - m, a = Math.cos(O + Mh) * f, y = Math.cos(O + Mh) * (o ? o / 2 - m : f), c = Math.sin(O + Mh) * f, w = Math.sin(O + Mh) * (o ? o / 2 - m : f), e.arc(n - y, r - c, m, O - gs, O - du), e.arc(n + w, r - a, m, O - du, O), e.arc(n + y, r + c, m, O, O + du), e.arc(n - w, r + a, m, O + du, O + gs), e.closePath();
        break;
      case "rect":
        if (!T) {
          f = Math.SQRT1_2 * E, g = o ? o / 2 : f, e.rect(n - g, r - f, 2 * g, 2 * f);
          break;
        }
        O += Mh;
      case "rectRot":
        y = Math.cos(O) * (o ? o / 2 : E), a = Math.cos(O) * E, c = Math.sin(O) * E, w = Math.sin(O) * (o ? o / 2 : E), e.moveTo(n - y, r - c), e.lineTo(n + w, r - a), e.lineTo(n + y, r + c), e.lineTo(n - w, r + a), e.closePath();
        break;
      case "crossRot":
        O += Mh;
      case "cross":
        y = Math.cos(O) * (o ? o / 2 : E), a = Math.cos(O) * E, c = Math.sin(O) * E, w = Math.sin(O) * (o ? o / 2 : E), e.moveTo(n - y, r - c), e.lineTo(n + y, r + c), e.moveTo(n + w, r - a), e.lineTo(n - w, r + a);
        break;
      case "star":
        y = Math.cos(O) * (o ? o / 2 : E), a = Math.cos(O) * E, c = Math.sin(O) * E, w = Math.sin(O) * (o ? o / 2 : E), e.moveTo(n - y, r - c), e.lineTo(n + y, r + c), e.moveTo(n + w, r - a), e.lineTo(n - w, r + a), O += Mh, y = Math.cos(O) * (o ? o / 2 : E), a = Math.cos(O) * E, c = Math.sin(O) * E, w = Math.sin(O) * (o ? o / 2 : E), e.moveTo(n - y, r - c), e.lineTo(n + y, r + c), e.moveTo(n + w, r - a), e.lineTo(n - w, r + a);
        break;
      case "line":
        a = o ? o / 2 : Math.cos(O) * E, c = Math.sin(O) * E, e.moveTo(n - a, r - c), e.lineTo(n + a, r + c);
        break;
      case "dash":
        e.moveTo(n, r), e.lineTo(n + Math.cos(O) * (o ? o / 2 : E), r + Math.sin(O) * E);
        break;
      case !1:
        e.closePath();
        break;
    }
    e.fill(), t.borderWidth > 0 && e.stroke();
  }
}
function qS(e, t, n) {
  return n = n || 0.5, !t || e && e.x > t.left - n && e.x < t.right + n && e.y > t.top - n && e.y < t.bottom + n;
}
function Z_(e, t) {
  e.save(), e.beginPath(), e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top), e.clip();
}
function eO(e) {
  e.restore();
}
function Gle(e, t, n, r, o) {
  if (!t)
    return e.lineTo(n.x, n.y);
  if (o === "middle") {
    const s = (t.x + n.x) / 2;
    e.lineTo(s, t.y), e.lineTo(s, n.y);
  } else o === "after" != !!r ? e.lineTo(t.x, n.y) : e.lineTo(n.x, t.y);
  e.lineTo(n.x, n.y);
}
function qle(e, t, n, r) {
  if (!t)
    return e.lineTo(n.x, n.y);
  e.bezierCurveTo(r ? t.cp1x : t.cp2x, r ? t.cp1y : t.cp2y, r ? n.cp2x : n.cp1x, r ? n.cp2y : n.cp1y, n.x, n.y);
}
function Kle(e, t) {
  t.translation && e.translate(t.translation[0], t.translation[1]), fo(t.rotation) || e.rotate(t.rotation), t.color && (e.fillStyle = t.color), t.textAlign && (e.textAlign = t.textAlign), t.textBaseline && (e.textBaseline = t.textBaseline);
}
function Yle(e, t, n, r, o) {
  if (o.strikethrough || o.underline) {
    const s = e.measureText(r), a = t - s.actualBoundingBoxLeft, c = t + s.actualBoundingBoxRight, f = n - s.actualBoundingBoxAscent, m = n + s.actualBoundingBoxDescent, g = o.strikethrough ? (f + m) / 2 : m;
    e.strokeStyle = e.fillStyle, e.beginPath(), e.lineWidth = o.decorationWidth || 2, e.moveTo(a, g), e.lineTo(c, g), e.stroke();
  }
}
function Xle(e, t) {
  const n = e.fillStyle;
  e.fillStyle = t.color, e.fillRect(t.left, t.top, t.width, t.height), e.fillStyle = n;
}
function XT(e, t, n, r, o, s = {}) {
  const a = _i(t) ? t : [
    t
  ], c = s.strokeWidth > 0 && s.strokeColor !== "";
  let f, m;
  for (e.save(), e.font = o.string, Kle(e, s), f = 0; f < a.length; ++f)
    m = a[f], s.backdrop && Xle(e, s.backdrop), c && (s.strokeColor && (e.strokeStyle = s.strokeColor), fo(s.strokeWidth) || (e.lineWidth = s.strokeWidth), e.strokeText(m, n, r, s.maxWidth)), e.fillText(m, n, r, s.maxWidth), Yle(e, n, r, m, s), r += Number(o.lineHeight);
  e.restore();
}
function VM(e, t) {
  const { x: n, y: r, w: o, h: s, radius: a } = t;
  e.arc(n + a.topLeft, r + a.topLeft, a.topLeft, 1.5 * gs, gs, !0), e.lineTo(n, r + s - a.bottomLeft), e.arc(n + a.bottomLeft, r + s - a.bottomLeft, a.bottomLeft, gs, du, !0), e.lineTo(n + o - a.bottomRight, r + s), e.arc(n + o - a.bottomRight, r + s - a.bottomRight, a.bottomRight, du, 0, !0), e.lineTo(n + o, r + a.topRight), e.arc(n + o - a.topRight, r + a.topRight, a.topRight, 0, -du, !0), e.lineTo(n + a.topLeft, r);
}
const Qle = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/, Jle = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
function Zle(e, t) {
  const n = ("" + e).match(Qle);
  if (!n || n[1] === "normal")
    return t * 1.2;
  switch (e = +n[2], n[3]) {
    case "px":
      return e;
    case "%":
      e /= 100;
      break;
  }
  return t * e;
}
const eue = (e) => +e || 0;
function $U(e, t) {
  const n = {}, r = or(t), o = r ? Object.keys(t) : t, s = or(e) ? r ? (a) => Qn(e[a], e[t[a]]) : (a) => e[a] : () => e;
  for (const a of o)
    n[a] = eue(s(a));
  return n;
}
function tue(e) {
  return $U(e, {
    top: "y",
    right: "x",
    bottom: "y",
    left: "x"
  });
}
function ES(e) {
  return $U(e, [
    "topLeft",
    "topRight",
    "bottomLeft",
    "bottomRight"
  ]);
}
function vu(e) {
  const t = tue(e);
  return t.width = t.left + t.right, t.height = t.top + t.bottom, t;
}
function sa(e, t) {
  e = e || {}, t = t || jo.font;
  let n = Qn(e.size, t.size);
  typeof n == "string" && (n = parseInt(n, 10));
  let r = Qn(e.style, t.style);
  r && !("" + r).match(Jle) && (console.warn('Invalid font style specified: "' + r + '"'), r = void 0);
  const o = {
    family: Qn(e.family, t.family),
    lineHeight: Zle(Qn(e.lineHeight, t.lineHeight), n),
    size: n,
    style: r,
    weight: Qn(e.weight, t.weight),
    string: ""
  };
  return o.string = Wle(o), o;
}
function GE(e, t, n, r) {
  let o, s, a;
  for (o = 0, s = e.length; o < s; ++o)
    if (a = e[o], a !== void 0 && a !== void 0)
      return a;
}
function nue(e, t, n) {
  const { min: r, max: o } = e, s = hle(t, (o - r) / 2), a = (c, f) => n && c === 0 ? 0 : c + f;
  return {
    min: a(r, -Math.abs(s)),
    max: a(o, s)
  };
}
function gm(e, t) {
  return Object.assign(Object.create(e), t);
}
function CD(e, t = [
  ""
], n, r, o = () => e[0]) {
  const s = n || e;
  typeof r > "u" && (r = BU("_fallback", e));
  const a = {
    [Symbol.toStringTag]: "Object",
    _cacheable: !0,
    _scopes: e,
    _rootScopes: s,
    _fallback: r,
    _getTarget: o,
    override: (c) => CD([
      c,
      ...e
    ], t, s, r)
  };
  return new Proxy(a, {
    /**
    * A trap for the delete operator.
    */
    deleteProperty(c, f) {
      return delete c[f], delete c._keys, delete e[0][f], !0;
    },
    /**
    * A trap for getting property values.
    */
    get(c, f) {
      return FU(c, f, () => cue(f, t, e, c));
    },
    /**
    * A trap for Object.getOwnPropertyDescriptor.
    * Also used by Object.hasOwnProperty.
    */
    getOwnPropertyDescriptor(c, f) {
      return Reflect.getOwnPropertyDescriptor(c._scopes[0], f);
    },
    /**
    * A trap for Object.getPrototypeOf.
    */
    getPrototypeOf() {
      return Reflect.getPrototypeOf(e[0]);
    },
    /**
    * A trap for the in operator.
    */
    has(c, f) {
      return O2(c).includes(f);
    },
    /**
    * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.
    */
    ownKeys(c) {
      return O2(c);
    },
    /**
    * A trap for setting property values.
    */
    set(c, f, m) {
      const g = c._storage || (c._storage = o());
      return c[f] = g[f] = m, delete c._keys, !0;
    }
  });
}
function Zv(e, t, n, r) {
  const o = {
    _cacheable: !1,
    _proxy: e,
    _context: t,
    _subProxy: n,
    _stack: /* @__PURE__ */ new Set(),
    _descriptors: jU(e, r),
    setContext: (s) => Zv(e, s, n, r),
    override: (s) => Zv(e.override(s), t, n, r)
  };
  return new Proxy(o, {
    /**
    * A trap for the delete operator.
    */
    deleteProperty(s, a) {
      return delete s[a], delete e[a], !0;
    },
    /**
    * A trap for getting property values.
    */
    get(s, a, c) {
      return FU(s, a, () => oue(s, a, c));
    },
    /**
    * A trap for Object.getOwnPropertyDescriptor.
    * Also used by Object.hasOwnProperty.
    */
    getOwnPropertyDescriptor(s, a) {
      return s._descriptors.allKeys ? Reflect.has(e, a) ? {
        enumerable: !0,
        configurable: !0
      } : void 0 : Reflect.getOwnPropertyDescriptor(e, a);
    },
    /**
    * A trap for Object.getPrototypeOf.
    */
    getPrototypeOf() {
      return Reflect.getPrototypeOf(e);
    },
    /**
    * A trap for the in operator.
    */
    has(s, a) {
      return Reflect.has(e, a);
    },
    /**
    * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.
    */
    ownKeys() {
      return Reflect.ownKeys(e);
    },
    /**
    * A trap for setting property values.
    */
    set(s, a, c) {
      return e[a] = c, delete s[a], !0;
    }
  });
}
function jU(e, t = {
  scriptable: !0,
  indexable: !0
}) {
  const { _scriptable: n = t.scriptable, _indexable: r = t.indexable, _allKeys: o = t.allKeys } = e;
  return {
    allKeys: o,
    scriptable: n,
    indexable: r,
    isScriptable: Zf(n) ? n : () => n,
    isIndexable: Zf(r) ? r : () => r
  };
}
const rue = (e, t) => e ? e + bD(t) : t, xD = (e, t) => or(t) && e !== "adapters" && (Object.getPrototypeOf(t) === null || t.constructor === Object);
function FU(e, t, n) {
  if (Object.prototype.hasOwnProperty.call(e, t) || t === "constructor")
    return e[t];
  const r = n();
  return e[t] = r, r;
}
function oue(e, t, n) {
  const { _proxy: r, _context: o, _subProxy: s, _descriptors: a } = e;
  let c = r[t];
  return Zf(c) && a.isScriptable(t) && (c = iue(t, c, e, n)), _i(c) && c.length && (c = sue(t, c, e, a.isIndexable)), xD(t, c) && (c = Zv(c, o, s && s[t], a)), c;
}
function iue(e, t, n, r) {
  const { _proxy: o, _context: s, _subProxy: a, _stack: c } = n;
  if (c.has(e))
    throw new Error("Recursion detected: " + Array.from(c).join("->") + "->" + e);
  c.add(e);
  let f = t(s, a || r);
  return c.delete(e), xD(e, f) && (f = ED(o._scopes, o, e, f)), f;
}
function sue(e, t, n, r) {
  const { _proxy: o, _context: s, _subProxy: a, _descriptors: c } = n;
  if (typeof s.index < "u" && r(e))
    return t[s.index % t.length];
  if (or(t[0])) {
    const f = t, m = o._scopes.filter((g) => g !== f);
    t = [];
    for (const g of f) {
      const y = ED(m, o, e, g);
      t.push(Zv(y, s, a && a[e], c));
    }
  }
  return t;
}
function zU(e, t, n) {
  return Zf(e) ? e(t, n) : e;
}
const aue = (e, t) => e === !0 ? t : typeof e == "string" ? GT(t, e) : void 0;
function lue(e, t, n, r, o) {
  for (const s of t) {
    const a = aue(n, s);
    if (a) {
      e.add(a);
      const c = zU(a._fallback, n, o);
      if (typeof c < "u" && c !== n && c !== r)
        return c;
    } else if (a === !1 && typeof r < "u" && n !== r)
      return null;
  }
  return !1;
}
function ED(e, t, n, r) {
  const o = t._rootScopes, s = zU(t._fallback, n, r), a = [
    ...e,
    ...o
  ], c = /* @__PURE__ */ new Set();
  c.add(r);
  let f = _2(c, a, n, s || n, r);
  return f === null || typeof s < "u" && s !== n && (f = _2(c, a, s, f, r), f === null) ? !1 : CD(Array.from(c), [
    ""
  ], o, s, () => uue(t, n, r));
}
function _2(e, t, n, r, o) {
  for (; n; )
    n = lue(e, t, n, r, o);
  return n;
}
function uue(e, t, n) {
  const r = e._getTarget();
  t in r || (r[t] = {});
  const o = r[t];
  return _i(o) && or(n) ? n : o || {};
}
function cue(e, t, n, r) {
  let o;
  for (const s of t)
    if (o = BU(rue(s, e), n), typeof o < "u")
      return xD(e, o) ? ED(n, r, e, o) : o;
}
function BU(e, t) {
  for (const n of t) {
    if (!n)
      continue;
    const r = n[e];
    if (typeof r < "u")
      return r;
  }
}
function O2(e) {
  let t = e._keys;
  return t || (t = e._keys = due(e._scopes)), t;
}
function due(e) {
  const t = /* @__PURE__ */ new Set();
  for (const n of e)
    for (const r of Object.keys(n).filter((o) => !o.startsWith("_")))
      t.add(r);
  return Array.from(t);
}
const fue = Number.EPSILON || 1e-14, ey = (e, t) => t < e.length && !e[t].skip && e[t], HU = (e) => e === "x" ? "y" : "x";
function pue(e, t, n, r) {
  const o = e.skip ? t : e, s = t, a = n.skip ? t : n, c = FM(s, o), f = FM(a, s);
  let m = c / (c + f), g = f / (c + f);
  m = isNaN(m) ? 0 : m, g = isNaN(g) ? 0 : g;
  const y = r * m, w = r * g;
  return {
    previous: {
      x: s.x - y * (a.x - o.x),
      y: s.y - y * (a.y - o.y)
    },
    next: {
      x: s.x + w * (a.x - o.x),
      y: s.y + w * (a.y - o.y)
    }
  };
}
function hue(e, t, n) {
  const r = e.length;
  let o, s, a, c, f, m = ey(e, 0);
  for (let g = 0; g < r - 1; ++g)
    if (f = m, m = ey(e, g + 1), !(!f || !m)) {
      if (SS(t[g], 0, fue)) {
        n[g] = n[g + 1] = 0;
        continue;
      }
      o = n[g] / t[g], s = n[g + 1] / t[g], c = Math.pow(o, 2) + Math.pow(s, 2), !(c <= 9) && (a = 3 / Math.sqrt(c), n[g] = o * a * t[g], n[g + 1] = s * a * t[g]);
    }
}
function mue(e, t, n = "x") {
  const r = HU(n), o = e.length;
  let s, a, c, f = ey(e, 0);
  for (let m = 0; m < o; ++m) {
    if (a = c, c = f, f = ey(e, m + 1), !c)
      continue;
    const g = c[n], y = c[r];
    a && (s = (g - a[n]) / 3, c[`cp1${n}`] = g - s, c[`cp1${r}`] = y - s * t[m]), f && (s = (f[n] - g) / 3, c[`cp2${n}`] = g + s, c[`cp2${r}`] = y + s * t[m]);
  }
}
function gue(e, t = "x") {
  const n = HU(t), r = e.length, o = Array(r).fill(0), s = Array(r);
  let a, c, f, m = ey(e, 0);
  for (a = 0; a < r; ++a)
    if (c = f, f = m, m = ey(e, a + 1), !!f) {
      if (m) {
        const g = m[t] - f[t];
        o[a] = g !== 0 ? (m[n] - f[n]) / g : 0;
      }
      s[a] = c ? m ? Jv(o[a - 1]) !== Jv(o[a]) ? 0 : (o[a - 1] + o[a]) / 2 : o[a - 1] : o[a];
    }
  hue(e, o, s), mue(e, s, t);
}
function qE(e, t, n) {
  return Math.max(Math.min(e, n), t);
}
function vue(e, t) {
  let n, r, o, s, a, c = qS(e[0], t);
  for (n = 0, r = e.length; n < r; ++n)
    a = s, s = c, c = n < r - 1 && qS(e[n + 1], t), s && (o = e[n], a && (o.cp1x = qE(o.cp1x, t.left, t.right), o.cp1y = qE(o.cp1y, t.top, t.bottom)), c && (o.cp2x = qE(o.cp2x, t.left, t.right), o.cp2y = qE(o.cp2y, t.top, t.bottom)));
}
function yue(e, t, n, r, o) {
  let s, a, c, f;
  if (t.spanGaps && (e = e.filter((m) => !m.skip)), t.cubicInterpolationMode === "monotone")
    gue(e, o);
  else {
    let m = r ? e[e.length - 1] : e[0];
    for (s = 0, a = e.length; s < a; ++s)
      c = e[s], f = pue(m, c, e[Math.min(s + 1, a - (r ? 0 : 1)) % a], t.tension), c.cp1x = f.previous.x, c.cp1y = f.previous.y, c.cp2x = f.next.x, c.cp2y = f.next.y, m = c;
  }
  t.capBezierPoints && vue(e, n);
}
function TD() {
  return typeof window < "u" && typeof document < "u";
}
function _D(e) {
  let t = e.parentNode;
  return t && t.toString() === "[object ShadowRoot]" && (t = t.host), t;
}
function QT(e, t, n) {
  let r;
  return typeof e == "string" ? (r = parseInt(e, 10), e.indexOf("%") !== -1 && (r = r / 100 * t.parentNode[n])) : r = e, r;
}
const tO = (e) => e.ownerDocument.defaultView.getComputedStyle(e, null);
function bue(e, t) {
  return tO(e).getPropertyValue(t);
}
const wue = [
  "top",
  "right",
  "bottom",
  "left"
];
function rm(e, t, n) {
  const r = {};
  n = n ? "-" + n : "";
  for (let o = 0; o < 4; o++) {
    const s = wue[o];
    r[s] = parseFloat(e[t + "-" + s + n]) || 0;
  }
  return r.width = r.left + r.right, r.height = r.top + r.bottom, r;
}
const Sue = (e, t, n) => (e > 0 || t > 0) && (!n || !n.shadowRoot);
function Cue(e, t) {
  const n = e.touches, r = n && n.length ? n[0] : e, { offsetX: o, offsetY: s } = r;
  let a = !1, c, f;
  if (Sue(o, s, e.target))
    c = o, f = s;
  else {
    const m = t.getBoundingClientRect();
    c = r.clientX - m.left, f = r.clientY - m.top, a = !0;
  }
  return {
    x: c,
    y: f,
    box: a
  };
}
function Fh(e, t) {
  if ("native" in e)
    return e;
  const { canvas: n, currentDevicePixelRatio: r } = t, o = tO(n), s = o.boxSizing === "border-box", a = rm(o, "padding"), c = rm(o, "border", "width"), { x: f, y: m, box: g } = Cue(e, n), y = a.left + (g && c.left), w = a.top + (g && c.top);
  let { width: C, height: T } = t;
  return s && (C -= a.width + c.width, T -= a.height + c.height), {
    x: Math.round((f - y) / C * n.width / r),
    y: Math.round((m - w) / T * n.height / r)
  };
}
function xue(e, t, n) {
  let r, o;
  if (t === void 0 || n === void 0) {
    const s = e && _D(e);
    if (!s)
      t = e.clientWidth, n = e.clientHeight;
    else {
      const a = s.getBoundingClientRect(), c = tO(s), f = rm(c, "border", "width"), m = rm(c, "padding");
      t = a.width - m.width - f.width, n = a.height - m.height - f.height, r = QT(c.maxWidth, s, "clientWidth"), o = QT(c.maxHeight, s, "clientHeight");
    }
  }
  return {
    width: t,
    height: n,
    maxWidth: r || KT,
    maxHeight: o || KT
  };
}
const zf = (e) => Math.round(e * 10) / 10;
function Eue(e, t, n, r) {
  const o = tO(e), s = rm(o, "margin"), a = QT(o.maxWidth, e, "clientWidth") || KT, c = QT(o.maxHeight, e, "clientHeight") || KT, f = xue(e, t, n);
  let { width: m, height: g } = f;
  if (o.boxSizing === "content-box") {
    const w = rm(o, "border", "width"), C = rm(o, "padding");
    m -= C.width + w.width, g -= C.height + w.height;
  }
  return m = Math.max(0, m - s.width), g = Math.max(0, r ? m / r : g - s.height), m = zf(Math.min(m, a, f.maxWidth)), g = zf(Math.min(g, c, f.maxHeight)), m && !g && (g = zf(m / 2)), (t !== void 0 || n !== void 0) && r && f.height && g > f.height && (g = f.height, m = zf(Math.floor(g * r))), {
    width: m,
    height: g
  };
}
function R2(e, t, n) {
  const r = t || 1, o = zf(e.height * r), s = zf(e.width * r);
  e.height = zf(e.height), e.width = zf(e.width);
  const a = e.canvas;
  return a.style && (n || !a.style.height && !a.style.width) && (a.style.height = `${e.height}px`, a.style.width = `${e.width}px`), e.currentDevicePixelRatio !== r || a.height !== o || a.width !== s ? (e.currentDevicePixelRatio = r, a.height = o, a.width = s, e.ctx.setTransform(r, 0, 0, r, 0, 0), !0) : !1;
}
const Tue = function() {
  let e = !1;
  try {
    const t = {
      get passive() {
        return e = !0, !1;
      }
    };
    TD() && (window.addEventListener("test", null, t), window.removeEventListener("test", null, t));
  } catch {
  }
  return e;
}();
function k2(e, t) {
  const n = bue(e, t), r = n && n.match(/^(\d+)(\.\d+)?px$/);
  return r ? +r[1] : void 0;
}
function zh(e, t, n, r) {
  return {
    x: e.x + n * (t.x - e.x),
    y: e.y + n * (t.y - e.y)
  };
}
function _ue(e, t, n, r) {
  return {
    x: e.x + n * (t.x - e.x),
    y: r === "middle" ? n < 0.5 ? e.y : t.y : r === "after" ? n < 1 ? e.y : t.y : n > 0 ? t.y : e.y
  };
}
function Oue(e, t, n, r) {
  const o = {
    x: e.cp2x,
    y: e.cp2y
  }, s = {
    x: t.cp1x,
    y: t.cp1y
  }, a = zh(e, o, n), c = zh(o, s, n), f = zh(s, t, n), m = zh(a, c, n), g = zh(c, f, n);
  return zh(m, g, n);
}
const Rue = function(e, t) {
  return {
    x(n) {
      return e + e + t - n;
    },
    setWidth(n) {
      t = n;
    },
    textAlign(n) {
      return n === "center" ? n : n === "right" ? "left" : "right";
    },
    xPlus(n, r) {
      return n - r;
    },
    leftForLtr(n, r) {
      return n - r;
    }
  };
}, kue = function() {
  return {
    x(e) {
      return e;
    },
    setWidth(e) {
    },
    textAlign(e) {
      return e;
    },
    xPlus(e, t) {
      return e + t;
    },
    leftForLtr(e, t) {
      return e;
    }
  };
};
function Lv(e, t, n) {
  return e ? Rue(t, n) : kue();
}
function VU(e, t) {
  let n, r;
  (t === "ltr" || t === "rtl") && (n = e.canvas.style, r = [
    n.getPropertyValue("direction"),
    n.getPropertyPriority("direction")
  ], n.setProperty("direction", t, "important"), e.prevTextDirection = r);
}
function UU(e, t) {
  t !== void 0 && (delete e.prevTextDirection, e.canvas.style.setProperty("direction", t[0], t[1]));
}
function WU(e) {
  return e === "angle" ? {
    between: kU,
    compare: Rle,
    normalize: lc
  } : {
    between: _v,
    compare: (t, n) => t - n,
    normalize: (t) => t
  };
}
function P2({ start: e, end: t, count: n, loop: r, style: o }) {
  return {
    start: e % n,
    end: t % n,
    loop: r && (t - e + 1) % n === 0,
    style: o
  };
}
function Pue(e, t, n) {
  const { property: r, start: o, end: s } = n, { between: a, normalize: c } = WU(r), f = t.length;
  let { start: m, end: g, loop: y } = e, w, C;
  if (y) {
    for (m += f, g += f, w = 0, C = f; w < C && a(c(t[m % f][r]), o, s); ++w)
      m--, g--;
    m %= f, g %= f;
  }
  return g < m && (g += f), {
    start: m,
    end: g,
    loop: y,
    style: e.style
  };
}
function GU(e, t, n) {
  if (!n)
    return [
      e
    ];
  const { property: r, start: o, end: s } = n, a = t.length, { compare: c, between: f, normalize: m } = WU(r), { start: g, end: y, loop: w, style: C } = Pue(e, t, n), T = [];
  let E = !1, O = null, k, I, M;
  const N = () => f(o, M, k) && c(o, M) !== 0, P = () => c(s, k) === 0 || f(s, M, k), F = () => E || N(), H = () => !E || P();
  for (let U = g, z = g; U <= y; ++U)
    I = t[U % a], !I.skip && (k = m(I[r]), k !== M && (E = f(k, o, s), O === null && F() && (O = c(k, o) === 0 ? U : z), O !== null && H() && (T.push(P2({
      start: O,
      end: U,
      loop: w,
      count: a,
      style: C
    })), O = null), z = U, M = k));
  return O !== null && T.push(P2({
    start: O,
    end: y,
    loop: w,
    count: a,
    style: C
  })), T;
}
function qU(e, t) {
  const n = [], r = e.segments;
  for (let o = 0; o < r.length; o++) {
    const s = GU(r[o], e.points, t);
    s.length && n.push(...s);
  }
  return n;
}
function Mue(e, t, n, r) {
  let o = 0, s = t - 1;
  if (n && !r)
    for (; o < t && !e[o].skip; )
      o++;
  for (; o < t && e[o].skip; )
    o++;
  for (o %= t, n && (s += o); s > o && e[s % t].skip; )
    s--;
  return s %= t, {
    start: o,
    end: s
  };
}
function Iue(e, t, n, r) {
  const o = e.length, s = [];
  let a = t, c = e[t], f;
  for (f = t + 1; f <= n; ++f) {
    const m = e[f % o];
    m.skip || m.stop ? c.skip || (r = !1, s.push({
      start: t % o,
      end: (f - 1) % o,
      loop: r
    }), t = a = m.stop ? f : null) : (a = f, c.skip && (t = f)), c = m;
  }
  return a !== null && s.push({
    start: t % o,
    end: a % o,
    loop: r
  }), s;
}
function Due(e, t) {
  const n = e.points, r = e.options.spanGaps, o = n.length;
  if (!o)
    return [];
  const s = !!e._loop, { start: a, end: c } = Mue(n, o, s, r);
  if (r === !0)
    return M2(e, [
      {
        start: a,
        end: c,
        loop: s
      }
    ], n, t);
  const f = c < a ? c + o : c, m = !!e._fullLoop && a === 0 && c === o - 1;
  return M2(e, Iue(n, a, f, m), n, t);
}
function M2(e, t, n, r) {
  return !r || !r.setContext || !n ? t : Aue(e, t, n, r);
}
function Aue(e, t, n, r) {
  const o = e._chart.getContext(), s = I2(e.options), { _datasetIndex: a, options: { spanGaps: c } } = e, f = n.length, m = [];
  let g = s, y = t[0].start, w = y;
  function C(T, E, O, k) {
    const I = c ? -1 : 1;
    if (T !== E) {
      for (T += f; n[T % f].skip; )
        T -= I;
      for (; n[E % f].skip; )
        E += I;
      T % f !== E % f && (m.push({
        start: T % f,
        end: E % f,
        loop: O,
        style: k
      }), g = k, y = E % f);
    }
  }
  for (const T of t) {
    y = c ? y : T.start;
    let E = n[y % f], O;
    for (w = y + 1; w <= T.end; w++) {
      const k = n[w % f];
      O = I2(r.setContext(gm(o, {
        type: "segment",
        p0: E,
        p1: k,
        p0DataIndex: (w - 1) % f,
        p1DataIndex: w % f,
        datasetIndex: a
      }))), Nue(O, g) && C(y, w - 1, T.loop, g), E = k, g = O;
    }
    y < w - 1 && C(y, w - 1, T.loop, g);
  }
  return m;
}
function I2(e) {
  return {
    backgroundColor: e.backgroundColor,
    borderCapStyle: e.borderCapStyle,
    borderDash: e.borderDash,
    borderDashOffset: e.borderDashOffset,
    borderJoinStyle: e.borderJoinStyle,
    borderWidth: e.borderWidth,
    borderColor: e.borderColor
  };
}
function Nue(e, t) {
  if (!t)
    return !1;
  const n = [], r = function(o, s) {
    return SD(s) ? (n.includes(s) || n.push(s), n.indexOf(s)) : s;
  };
  return JSON.stringify(e, r) !== JSON.stringify(t, r);
}
function KE(e, t, n) {
  return e.options.clip ? e[n] : t[n];
}
function Lue(e, t) {
  const { xScale: n, yScale: r } = e;
  return n && r ? {
    left: KE(n, t, "left"),
    right: KE(n, t, "right"),
    top: KE(r, t, "top"),
    bottom: KE(r, t, "bottom")
  } : t;
}
function KU(e, t) {
  const n = t._clip;
  if (n.disabled)
    return !1;
  const r = Lue(t, e.chartArea);
  return {
    left: n.left === !1 ? 0 : r.left - (n.left === !0 ? 0 : n.left),
    right: n.right === !1 ? e.width : r.right + (n.right === !0 ? 0 : n.right),
    top: n.top === !1 ? 0 : r.top - (n.top === !0 ? 0 : n.top),
    bottom: n.bottom === !1 ? e.height : r.bottom + (n.bottom === !0 ? 0 : n.bottom)
  };
}
/*!
 * Chart.js v4.5.1
 * https://www.chartjs.org
 * (c) 2025 Chart.js Contributors
 * Released under the MIT License
 */
class $ue {
  constructor() {
    this._request = null, this._charts = /* @__PURE__ */ new Map(), this._running = !1, this._lastDate = void 0;
  }
  _notify(t, n, r, o) {
    const s = n.listeners[o], a = n.duration;
    s.forEach((c) => c({
      chart: t,
      initial: n.initial,
      numSteps: a,
      currentStep: Math.min(r - n.start, a)
    }));
  }
  _refresh() {
    this._request || (this._running = !0, this._request = MU.call(window, () => {
      this._update(), this._request = null, this._running && this._refresh();
    }));
  }
  _update(t = Date.now()) {
    let n = 0;
    this._charts.forEach((r, o) => {
      if (!r.running || !r.items.length)
        return;
      const s = r.items;
      let a = s.length - 1, c = !1, f;
      for (; a >= 0; --a)
        f = s[a], f._active ? (f._total > r.duration && (r.duration = f._total), f.tick(t), c = !0) : (s[a] = s[s.length - 1], s.pop());
      c && (o.draw(), this._notify(o, r, t, "progress")), s.length || (r.running = !1, this._notify(o, r, t, "complete"), r.initial = !1), n += s.length;
    }), this._lastDate = t, n === 0 && (this._running = !1);
  }
  _getAnims(t) {
    const n = this._charts;
    let r = n.get(t);
    return r || (r = {
      running: !1,
      initial: !0,
      items: [],
      listeners: {
        complete: [],
        progress: []
      }
    }, n.set(t, r)), r;
  }
  listen(t, n, r) {
    this._getAnims(t).listeners[n].push(r);
  }
  add(t, n) {
    !n || !n.length || this._getAnims(t).items.push(...n);
  }
  has(t) {
    return this._getAnims(t).items.length > 0;
  }
  start(t) {
    const n = this._charts.get(t);
    n && (n.running = !0, n.start = Date.now(), n.duration = n.items.reduce((r, o) => Math.max(r, o._duration), 0), this._refresh());
  }
  running(t) {
    if (!this._running)
      return !1;
    const n = this._charts.get(t);
    return !(!n || !n.running || !n.items.length);
  }
  stop(t) {
    const n = this._charts.get(t);
    if (!n || !n.items.length)
      return;
    const r = n.items;
    let o = r.length - 1;
    for (; o >= 0; --o)
      r[o].cancel();
    n.items = [], this._notify(t, n, Date.now(), "complete");
  }
  remove(t) {
    return this._charts.delete(t);
  }
}
var gd = /* @__PURE__ */ new $ue();
const D2 = "transparent", jue = {
  boolean(e, t, n) {
    return n > 0.5 ? t : e;
  },
  color(e, t, n) {
    const r = C2(e || D2), o = r.valid && C2(t || D2);
    return o && o.valid ? o.mix(r, n).hexString() : t;
  },
  number(e, t, n) {
    return e + (t - e) * n;
  }
};
class Fue {
  constructor(t, n, r, o) {
    const s = n[r];
    o = GE([
      t.to,
      o,
      s,
      t.from
    ]);
    const a = GE([
      t.from,
      s,
      o
    ]);
    this._active = !0, this._fn = t.fn || jue[t.type || typeof a], this._easing = CS[t.easing] || CS.linear, this._start = Math.floor(Date.now() + (t.delay || 0)), this._duration = this._total = Math.floor(t.duration), this._loop = !!t.loop, this._target = n, this._prop = r, this._from = a, this._to = o, this._promises = void 0;
  }
  active() {
    return this._active;
  }
  update(t, n, r) {
    if (this._active) {
      this._notify(!1);
      const o = this._target[this._prop], s = r - this._start, a = this._duration - s;
      this._start = r, this._duration = Math.floor(Math.max(a, t.duration)), this._total += s, this._loop = !!t.loop, this._to = GE([
        t.to,
        n,
        o,
        t.from
      ]), this._from = GE([
        t.from,
        o,
        n
      ]);
    }
  }
  cancel() {
    this._active && (this.tick(Date.now()), this._active = !1, this._notify(!1));
  }
  tick(t) {
    const n = t - this._start, r = this._duration, o = this._prop, s = this._from, a = this._loop, c = this._to;
    let f;
    if (this._active = s !== c && (a || n < r), !this._active) {
      this._target[o] = c, this._notify(!0);
      return;
    }
    if (n < 0) {
      this._target[o] = s;
      return;
    }
    f = n / r % 2, f = a && f > 1 ? 2 - f : f, f = this._easing(Math.min(1, Math.max(0, f))), this._target[o] = this._fn(s, c, f);
  }
  wait() {
    const t = this._promises || (this._promises = []);
    return new Promise((n, r) => {
      t.push({
        res: n,
        rej: r
      });
    });
  }
  _notify(t) {
    const n = t ? "res" : "rej", r = this._promises || [];
    for (let o = 0; o < r.length; o++)
      r[o][n]();
  }
}
class YU {
  constructor(t, n) {
    this._chart = t, this._properties = /* @__PURE__ */ new Map(), this.configure(n);
  }
  configure(t) {
    if (!or(t))
      return;
    const n = Object.keys(jo.animation), r = this._properties;
    Object.getOwnPropertyNames(t).forEach((o) => {
      const s = t[o];
      if (!or(s))
        return;
      const a = {};
      for (const c of n)
        a[c] = s[c];
      (_i(s.properties) && s.properties || [
        o
      ]).forEach((c) => {
        (c === o || !r.has(c)) && r.set(c, a);
      });
    });
  }
  _animateOptions(t, n) {
    const r = n.options, o = Bue(t, r);
    if (!o)
      return [];
    const s = this._createAnimations(o, r);
    return r.$shared && zue(t.options.$animations, r).then(() => {
      t.options = r;
    }, () => {
    }), s;
  }
  _createAnimations(t, n) {
    const r = this._properties, o = [], s = t.$animations || (t.$animations = {}), a = Object.keys(n), c = Date.now();
    let f;
    for (f = a.length - 1; f >= 0; --f) {
      const m = a[f];
      if (m.charAt(0) === "$")
        continue;
      if (m === "options") {
        o.push(...this._animateOptions(t, n));
        continue;
      }
      const g = n[m];
      let y = s[m];
      const w = r.get(m);
      if (y)
        if (w && y.active()) {
          y.update(w, g, c);
          continue;
        } else
          y.cancel();
      if (!w || !w.duration) {
        t[m] = g;
        continue;
      }
      s[m] = y = new Fue(w, t, m, g), o.push(y);
    }
    return o;
  }
  update(t, n) {
    if (this._properties.size === 0) {
      Object.assign(t, n);
      return;
    }
    const r = this._createAnimations(t, n);
    if (r.length)
      return gd.add(this._chart, r), !0;
  }
}
function zue(e, t) {
  const n = [], r = Object.keys(t);
  for (let o = 0; o < r.length; o++) {
    const s = e[r[o]];
    s && s.active() && n.push(s.wait());
  }
  return Promise.all(n);
}
function Bue(e, t) {
  if (!t)
    return;
  let n = e.options;
  if (!n) {
    e.options = t;
    return;
  }
  return n.$shared && (e.options = n = Object.assign({}, n, {
    $shared: !1,
    $animations: {}
  })), n;
}
function A2(e, t) {
  const n = e && e.options || {}, r = n.reverse, o = n.min === void 0 ? t : 0, s = n.max === void 0 ? t : 0;
  return {
    start: r ? s : o,
    end: r ? o : s
  };
}
function Hue(e, t, n) {
  if (n === !1)
    return !1;
  const r = A2(e, n), o = A2(t, n);
  return {
    top: o.end,
    right: r.end,
    bottom: o.start,
    left: r.start
  };
}
function Vue(e) {
  let t, n, r, o;
  return or(e) ? (t = e.top, n = e.right, r = e.bottom, o = e.left) : t = n = r = o = e, {
    top: t,
    right: n,
    bottom: r,
    left: o,
    disabled: e === !1
  };
}
function XU(e, t) {
  const n = [], r = e._getSortedDatasetMetas(t);
  let o, s;
  for (o = 0, s = r.length; o < s; ++o)
    n.push(r[o].index);
  return n;
}
function N2(e, t, n, r = {}) {
  const o = e.keys, s = r.mode === "single";
  let a, c, f, m;
  if (t === null)
    return;
  let g = !1;
  for (a = 0, c = o.length; a < c; ++a) {
    if (f = +o[a], f === n) {
      if (g = !0, r.all)
        continue;
      break;
    }
    m = e.values[f], vs(m) && (s || t === 0 || Jv(t) === Jv(m)) && (t += m);
  }
  return !g && !r.all ? 0 : t;
}
function Uue(e, t) {
  const { iScale: n, vScale: r } = t, o = n.axis === "x" ? "x" : "y", s = r.axis === "x" ? "x" : "y", a = Object.keys(e), c = new Array(a.length);
  let f, m, g;
  for (f = 0, m = a.length; f < m; ++f)
    g = a[f], c[f] = {
      [o]: g,
      [s]: e[g]
    };
  return c;
}
function xP(e, t) {
  const n = e && e.options.stacked;
  return n || n === void 0 && t.stack !== void 0;
}
function Wue(e, t, n) {
  return `${e.id}.${t.id}.${n.stack || n.type}`;
}
function Gue(e) {
  const { min: t, max: n, minDefined: r, maxDefined: o } = e.getUserBounds();
  return {
    min: r ? t : Number.NEGATIVE_INFINITY,
    max: o ? n : Number.POSITIVE_INFINITY
  };
}
function que(e, t, n) {
  const r = e[t] || (e[t] = {});
  return r[n] || (r[n] = {});
}
function L2(e, t, n, r) {
  for (const o of t.getMatchingVisibleMetas(r).reverse()) {
    const s = e[o.index];
    if (n && s > 0 || !n && s < 0)
      return o.index;
  }
  return null;
}
function $2(e, t) {
  const { chart: n, _cachedMeta: r } = e, o = n._stacks || (n._stacks = {}), { iScale: s, vScale: a, index: c } = r, f = s.axis, m = a.axis, g = Wue(s, a, r), y = t.length;
  let w;
  for (let C = 0; C < y; ++C) {
    const T = t[C], { [f]: E, [m]: O } = T, k = T._stacks || (T._stacks = {});
    w = k[m] = que(o, g, E), w[c] = O, w._top = L2(w, a, !0, r.type), w._bottom = L2(w, a, !1, r.type);
    const I = w._visualValues || (w._visualValues = {});
    I[c] = O;
  }
}
function EP(e, t) {
  const n = e.scales;
  return Object.keys(n).filter((r) => n[r].axis === t).shift();
}
function Kue(e, t) {
  return gm(e, {
    active: !1,
    dataset: void 0,
    datasetIndex: t,
    index: t,
    mode: "default",
    type: "dataset"
  });
}
function Yue(e, t, n) {
  return gm(e, {
    active: !1,
    dataIndex: t,
    parsed: void 0,
    raw: void 0,
    element: n,
    index: t,
    mode: "default",
    type: "data"
  });
}
function Hw(e, t) {
  const n = e.controller.index, r = e.vScale && e.vScale.axis;
  if (r) {
    t = t || e._parsed;
    for (const o of t) {
      const s = o._stacks;
      if (!s || s[r] === void 0 || s[r][n] === void 0)
        return;
      delete s[r][n], s[r]._visualValues !== void 0 && s[r]._visualValues[n] !== void 0 && delete s[r]._visualValues[n];
    }
  }
}
const TP = (e) => e === "reset" || e === "none", j2 = (e, t) => t ? e : Object.assign({}, e), Xue = (e, t, n) => e && !t.hidden && t._stacked && {
  keys: XU(n, !0),
  values: null
};
class hT {
  constructor(t, n) {
    this.chart = t, this._ctx = t.ctx, this.index = n, this._cachedDataOpts = {}, this._cachedMeta = this.getMeta(), this._type = this._cachedMeta.type, this.options = void 0, this._parsing = !1, this._data = void 0, this._objectData = void 0, this._sharedOptions = void 0, this._drawStart = void 0, this._drawCount = void 0, this.enableOptionSharing = !1, this.supportsDecimation = !1, this.$context = void 0, this._syncList = [], this.datasetElementType = new.target.datasetElementType, this.dataElementType = new.target.dataElementType, this.initialize();
  }
  initialize() {
    const t = this._cachedMeta;
    this.configure(), this.linkScales(), t._stacked = xP(t.vScale, t), this.addElements(), this.options.fill && !this.chart.isPluginEnabled("filler") && console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options");
  }
  updateIndex(t) {
    this.index !== t && Hw(this._cachedMeta), this.index = t;
  }
  linkScales() {
    const t = this.chart, n = this._cachedMeta, r = this.getDataset(), o = (y, w, C, T) => y === "x" ? w : y === "r" ? T : C, s = n.xAxisID = Qn(r.xAxisID, EP(t, "x")), a = n.yAxisID = Qn(r.yAxisID, EP(t, "y")), c = n.rAxisID = Qn(r.rAxisID, EP(t, "r")), f = n.indexAxis, m = n.iAxisID = o(f, s, a, c), g = n.vAxisID = o(f, a, s, c);
    n.xScale = this.getScaleForId(s), n.yScale = this.getScaleForId(a), n.rScale = this.getScaleForId(c), n.iScale = this.getScaleForId(m), n.vScale = this.getScaleForId(g);
  }
  getDataset() {
    return this.chart.data.datasets[this.index];
  }
  getMeta() {
    return this.chart.getDatasetMeta(this.index);
  }
  getScaleForId(t) {
    return this.chart.scales[t];
  }
  _getOtherScale(t) {
    const n = this._cachedMeta;
    return t === n.iScale ? n.vScale : n.iScale;
  }
  reset() {
    this._update("reset");
  }
  _destroy() {
    const t = this._cachedMeta;
    this._data && b2(this._data, this), t._stacked && Hw(t);
  }
  _dataCheck() {
    const t = this.getDataset(), n = t.data || (t.data = []), r = this._data;
    if (or(n)) {
      const o = this._cachedMeta;
      this._data = Uue(n, o);
    } else if (r !== n) {
      if (r) {
        b2(r, this);
        const o = this._cachedMeta;
        Hw(o), o._parsed = [];
      }
      n && Object.isExtensible(n) && Ile(n, this), this._syncList = [], this._data = n;
    }
  }
  addElements() {
    const t = this._cachedMeta;
    this._dataCheck(), this.datasetElementType && (t.dataset = new this.datasetElementType());
  }
  buildOrUpdateElements(t) {
    const n = this._cachedMeta, r = this.getDataset();
    let o = !1;
    this._dataCheck();
    const s = n._stacked;
    n._stacked = xP(n.vScale, n), n.stack !== r.stack && (o = !0, Hw(n), n.stack = r.stack), this._resyncElements(t), (o || s !== n._stacked) && ($2(this, n._parsed), n._stacked = xP(n.vScale, n));
  }
  configure() {
    const t = this.chart.config, n = t.datasetScopeKeys(this._type), r = t.getOptionScopes(this.getDataset(), n, !0);
    this.options = t.createResolver(r, this.getContext()), this._parsing = this.options.parsing, this._cachedDataOpts = {};
  }
  parse(t, n) {
    const { _cachedMeta: r, _data: o } = this, { iScale: s, _stacked: a } = r, c = s.axis;
    let f = t === 0 && n === o.length ? !0 : r._sorted, m = t > 0 && r._parsed[t - 1], g, y, w;
    if (this._parsing === !1)
      r._parsed = o, r._sorted = !0, w = o;
    else {
      _i(o[t]) ? w = this.parseArrayData(r, o, t, n) : or(o[t]) ? w = this.parseObjectData(r, o, t, n) : w = this.parsePrimitiveData(r, o, t, n);
      const C = () => y[c] === null || m && y[c] < m[c];
      for (g = 0; g < n; ++g)
        r._parsed[g + t] = y = w[g], f && (C() && (f = !1), m = y);
      r._sorted = f;
    }
    a && $2(this, w);
  }
  parsePrimitiveData(t, n, r, o) {
    const { iScale: s, vScale: a } = t, c = s.axis, f = a.axis, m = s.getLabels(), g = s === a, y = new Array(o);
    let w, C, T;
    for (w = 0, C = o; w < C; ++w)
      T = w + r, y[w] = {
        [c]: g || s.parse(m[T], T),
        [f]: a.parse(n[T], T)
      };
    return y;
  }
  parseArrayData(t, n, r, o) {
    const { xScale: s, yScale: a } = t, c = new Array(o);
    let f, m, g, y;
    for (f = 0, m = o; f < m; ++f)
      g = f + r, y = n[g], c[f] = {
        x: s.parse(y[0], g),
        y: a.parse(y[1], g)
      };
    return c;
  }
  parseObjectData(t, n, r, o) {
    const { xScale: s, yScale: a } = t, { xAxisKey: c = "x", yAxisKey: f = "y" } = this._parsing, m = new Array(o);
    let g, y, w, C;
    for (g = 0, y = o; g < y; ++g)
      w = g + r, C = n[w], m[g] = {
        x: s.parse(GT(C, c), w),
        y: a.parse(GT(C, f), w)
      };
    return m;
  }
  getParsed(t) {
    return this._cachedMeta._parsed[t];
  }
  getDataElement(t) {
    return this._cachedMeta.data[t];
  }
  applyStack(t, n, r) {
    const o = this.chart, s = this._cachedMeta, a = n[t.axis], c = {
      keys: XU(o, !0),
      values: n._stacks[t.axis]._visualValues
    };
    return N2(c, a, s.index, {
      mode: r
    });
  }
  updateRangeFromParsed(t, n, r, o) {
    const s = r[n.axis];
    let a = s === null ? NaN : s;
    const c = o && r._stacks[n.axis];
    o && c && (o.values = c, a = N2(o, s, this._cachedMeta.index)), t.min = Math.min(t.min, a), t.max = Math.max(t.max, a);
  }
  getMinMax(t, n) {
    const r = this._cachedMeta, o = r._parsed, s = r._sorted && t === r.iScale, a = o.length, c = this._getOtherScale(t), f = Xue(n, r, this.chart), m = {
      min: Number.POSITIVE_INFINITY,
      max: Number.NEGATIVE_INFINITY
    }, { min: g, max: y } = Gue(c);
    let w, C;
    function T() {
      C = o[w];
      const E = C[c.axis];
      return !vs(C[t.axis]) || g > E || y < E;
    }
    for (w = 0; w < a && !(!T() && (this.updateRangeFromParsed(m, t, C, f), s)); ++w)
      ;
    if (s) {
      for (w = a - 1; w >= 0; --w)
        if (!T()) {
          this.updateRangeFromParsed(m, t, C, f);
          break;
        }
    }
    return m;
  }
  getAllParsedValues(t) {
    const n = this._cachedMeta._parsed, r = [];
    let o, s, a;
    for (o = 0, s = n.length; o < s; ++o)
      a = n[o][t.axis], vs(a) && r.push(a);
    return r;
  }
  getMaxOverflow() {
    return !1;
  }
  getLabelAndValue(t) {
    const n = this._cachedMeta, r = n.iScale, o = n.vScale, s = this.getParsed(t);
    return {
      label: r ? "" + r.getLabelForValue(s[r.axis]) : "",
      value: o ? "" + o.getLabelForValue(s[o.axis]) : ""
    };
  }
  _update(t) {
    const n = this._cachedMeta;
    this.update(t || "default"), n._clip = Vue(Qn(this.options.clip, Hue(n.xScale, n.yScale, this.getMaxOverflow())));
  }
  update(t) {
  }
  draw() {
    const t = this._ctx, n = this.chart, r = this._cachedMeta, o = r.data || [], s = n.chartArea, a = [], c = this._drawStart || 0, f = this._drawCount || o.length - c, m = this.options.drawActiveElementsOnTop;
    let g;
    for (r.dataset && r.dataset.draw(t, s, c, f), g = c; g < c + f; ++g) {
      const y = o[g];
      y.hidden || (y.active && m ? a.push(y) : y.draw(t, s));
    }
    for (g = 0; g < a.length; ++g)
      a[g].draw(t, s);
  }
  getStyle(t, n) {
    const r = n ? "active" : "default";
    return t === void 0 && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(r) : this.resolveDataElementOptions(t || 0, r);
  }
  getContext(t, n, r) {
    const o = this.getDataset();
    let s;
    if (t >= 0 && t < this._cachedMeta.data.length) {
      const a = this._cachedMeta.data[t];
      s = a.$context || (a.$context = Yue(this.getContext(), t, a)), s.parsed = this.getParsed(t), s.raw = o.data[t], s.index = s.dataIndex = t;
    } else
      s = this.$context || (this.$context = Kue(this.chart.getContext(), this.index)), s.dataset = o, s.index = s.datasetIndex = this.index;
    return s.active = !!n, s.mode = r, s;
  }
  resolveDatasetElementOptions(t) {
    return this._resolveElementOptions(this.datasetElementType.id, t);
  }
  resolveDataElementOptions(t, n) {
    return this._resolveElementOptions(this.dataElementType.id, n, t);
  }
  _resolveElementOptions(t, n = "default", r) {
    const o = n === "active", s = this._cachedDataOpts, a = t + "-" + n, c = s[a], f = this.enableOptionSharing && qT(r);
    if (c)
      return j2(c, f);
    const m = this.chart.config, g = m.datasetElementScopeKeys(this._type, t), y = o ? [
      `${t}Hover`,
      "hover",
      t,
      ""
    ] : [
      t,
      ""
    ], w = m.getOptionScopes(this.getDataset(), g), C = Object.keys(jo.elements[t]), T = () => this.getContext(r, o, n), E = m.resolveNamedOptions(w, C, T, y);
    return E.$shared && (E.$shared = f, s[a] = Object.freeze(j2(E, f))), E;
  }
  _resolveAnimations(t, n, r) {
    const o = this.chart, s = this._cachedDataOpts, a = `animation-${n}`, c = s[a];
    if (c)
      return c;
    let f;
    if (o.options.animation !== !1) {
      const g = this.chart.config, y = g.datasetAnimationScopeKeys(this._type, n), w = g.getOptionScopes(this.getDataset(), y);
      f = g.createResolver(w, this.getContext(t, r, n));
    }
    const m = new YU(o, f && f.animations);
    return f && f._cacheable && (s[a] = Object.freeze(m)), m;
  }
  getSharedOptions(t) {
    if (t.$shared)
      return this._sharedOptions || (this._sharedOptions = Object.assign({}, t));
  }
  includeOptions(t, n) {
    return !n || TP(t) || this.chart._animationsDisabled;
  }
  _getSharedOptions(t, n) {
    const r = this.resolveDataElementOptions(t, n), o = this._sharedOptions, s = this.getSharedOptions(r), a = this.includeOptions(n, s) || s !== o;
    return this.updateSharedOptions(s, n, r), {
      sharedOptions: s,
      includeOptions: a
    };
  }
  updateElement(t, n, r, o) {
    TP(o) ? Object.assign(t, r) : this._resolveAnimations(n, o).update(t, r);
  }
  updateSharedOptions(t, n, r) {
    t && !TP(n) && this._resolveAnimations(void 0, n).update(t, r);
  }
  _setStyle(t, n, r, o) {
    t.active = o;
    const s = this.getStyle(n, o);
    this._resolveAnimations(n, r, o).update(t, {
      options: !o && this.getSharedOptions(s) || s
    });
  }
  removeHoverStyle(t, n, r) {
    this._setStyle(t, r, "active", !1);
  }
  setHoverStyle(t, n, r) {
    this._setStyle(t, r, "active", !0);
  }
  _removeDatasetHoverStyle() {
    const t = this._cachedMeta.dataset;
    t && this._setStyle(t, void 0, "active", !1);
  }
  _setDatasetHoverStyle() {
    const t = this._cachedMeta.dataset;
    t && this._setStyle(t, void 0, "active", !0);
  }
  _resyncElements(t) {
    const n = this._data, r = this._cachedMeta.data;
    for (const [c, f, m] of this._syncList)
      this[c](f, m);
    this._syncList = [];
    const o = r.length, s = n.length, a = Math.min(s, o);
    a && this.parse(0, a), s > o ? this._insertElements(o, s - o, t) : s < o && this._removeElements(s, o - s);
  }
  _insertElements(t, n, r = !0) {
    const o = this._cachedMeta, s = o.data, a = t + n;
    let c;
    const f = (m) => {
      for (m.length += n, c = m.length - 1; c >= a; c--)
        m[c] = m[c - n];
    };
    for (f(s), c = t; c < a; ++c)
      s[c] = new this.dataElementType();
    this._parsing && f(o._parsed), this.parse(t, n), r && this.updateElements(s, t, n, "reset");
  }
  updateElements(t, n, r, o) {
  }
  _removeElements(t, n) {
    const r = this._cachedMeta;
    if (this._parsing) {
      const o = r._parsed.splice(t, n);
      r._stacked && Hw(r, o);
    }
    r.data.splice(t, n);
  }
  _sync(t) {
    if (this._parsing)
      this._syncList.push(t);
    else {
      const [n, r, o] = t;
      this[n](r, o);
    }
    this.chart._dataChanges.push([
      this.index,
      ...t
    ]);
  }
  _onDataPush() {
    const t = arguments.length;
    this._sync([
      "_insertElements",
      this.getDataset().data.length - t,
      t
    ]);
  }
  _onDataPop() {
    this._sync([
      "_removeElements",
      this._cachedMeta.data.length - 1,
      1
    ]);
  }
  _onDataShift() {
    this._sync([
      "_removeElements",
      0,
      1
    ]);
  }
  _onDataSplice(t, n) {
    n && this._sync([
      "_removeElements",
      t,
      n
    ]);
    const r = arguments.length - 2;
    r && this._sync([
      "_insertElements",
      t,
      r
    ]);
  }
  _onDataUnshift() {
    this._sync([
      "_insertElements",
      0,
      arguments.length
    ]);
  }
}
Dn(hT, "defaults", {}), Dn(hT, "datasetElementType", null), Dn(hT, "dataElementType", null);
function Dh() {
  throw new Error("This method is not implemented: Check that a complete date adapter is provided.");
}
class OD {
  constructor(t) {
    Dn(this, "options");
    this.options = t || {};
  }
  /**
  * Override default date adapter methods.
  * Accepts type parameter to define options type.
  * @example
  * Chart._adapters._date.override<{myAdapterOption: string}>({
  *   init() {
  *     console.log(this.options.myAdapterOption);
  *   }
  * })
  */
  static override(t) {
    Object.assign(OD.prototype, t);
  }
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  init() {
  }
  formats() {
    return Dh();
  }
  parse() {
    return Dh();
  }
  format() {
    return Dh();
  }
  add() {
    return Dh();
  }
  diff() {
    return Dh();
  }
  startOf() {
    return Dh();
  }
  endOf() {
    return Dh();
  }
}
var Que = {
  _date: OD
};
function Jue(e, t, n, r) {
  const { controller: o, data: s, _sorted: a } = e, c = o._cachedMeta.iScale, f = e.dataset && e.dataset.options ? e.dataset.options.spanGaps : null;
  if (c && t === c.axis && t !== "r" && a && s.length) {
    const m = c._reversePixels ? Ple : zM;
    if (r) {
      if (o._sharedOptions) {
        const g = s[0], y = typeof g.getRange == "function" && g.getRange(t);
        if (y) {
          const w = m(s, t, n - y), C = m(s, t, n + y);
          return {
            lo: w.lo,
            hi: C.hi
          };
        }
      }
    } else {
      const g = m(s, t, n);
      if (f) {
        const { vScale: y } = o._cachedMeta, { _parsed: w } = e, C = w.slice(0, g.lo + 1).reverse().findIndex((E) => !fo(E[y.axis]));
        g.lo -= Math.max(0, C);
        const T = w.slice(g.hi).findIndex((E) => !fo(E[y.axis]));
        g.hi += Math.max(0, T);
      }
      return g;
    }
  }
  return {
    lo: 0,
    hi: s.length - 1
  };
}
function nO(e, t, n, r, o) {
  const s = e.getSortedVisibleDatasetMetas(), a = n[t];
  for (let c = 0, f = s.length; c < f; ++c) {
    const { index: m, data: g } = s[c], { lo: y, hi: w } = Jue(s[c], t, a, o);
    for (let C = y; C <= w; ++C) {
      const T = g[C];
      T.skip || r(T, m, C);
    }
  }
}
function Zue(e) {
  const t = e.indexOf("x") !== -1, n = e.indexOf("y") !== -1;
  return function(r, o) {
    const s = t ? Math.abs(r.x - o.x) : 0, a = n ? Math.abs(r.y - o.y) : 0;
    return Math.sqrt(Math.pow(s, 2) + Math.pow(a, 2));
  };
}
function _P(e, t, n, r, o) {
  const s = [];
  return !o && !e.isPointInArea(t) || nO(e, n, t, function(c, f, m) {
    !o && !qS(c, e.chartArea, 0) || c.inRange(t.x, t.y, r) && s.push({
      element: c,
      datasetIndex: f,
      index: m
    });
  }, !0), s;
}
function ece(e, t, n, r) {
  let o = [];
  function s(a, c, f) {
    const { startAngle: m, endAngle: g } = a.getProps([
      "startAngle",
      "endAngle"
    ], r), { angle: y } = Ole(a, {
      x: t.x,
      y: t.y
    });
    kU(y, m, g) && o.push({
      element: a,
      datasetIndex: c,
      index: f
    });
  }
  return nO(e, n, t, s), o;
}
function tce(e, t, n, r, o, s) {
  let a = [];
  const c = Zue(n);
  let f = Number.POSITIVE_INFINITY;
  function m(g, y, w) {
    const C = g.inRange(t.x, t.y, o);
    if (r && !C)
      return;
    const T = g.getCenterPoint(o);
    if (!(!!s || e.isPointInArea(T)) && !C)
      return;
    const O = c(t, T);
    O < f ? (a = [
      {
        element: g,
        datasetIndex: y,
        index: w
      }
    ], f = O) : O === f && a.push({
      element: g,
      datasetIndex: y,
      index: w
    });
  }
  return nO(e, n, t, m), a;
}
function OP(e, t, n, r, o, s) {
  return !s && !e.isPointInArea(t) ? [] : n === "r" && !r ? ece(e, t, n, o) : tce(e, t, n, r, o, s);
}
function F2(e, t, n, r, o) {
  const s = [], a = n === "x" ? "inXRange" : "inYRange";
  let c = !1;
  return nO(e, n, t, (f, m, g) => {
    f[a] && f[a](t[n], o) && (s.push({
      element: f,
      datasetIndex: m,
      index: g
    }), c = c || f.inRange(t.x, t.y, o));
  }), r && !c ? [] : s;
}
var nce = {
  modes: {
    index(e, t, n, r) {
      const o = Fh(t, e), s = n.axis || "x", a = n.includeInvisible || !1, c = n.intersect ? _P(e, o, s, r, a) : OP(e, o, s, !1, r, a), f = [];
      return c.length ? (e.getSortedVisibleDatasetMetas().forEach((m) => {
        const g = c[0].index, y = m.data[g];
        y && !y.skip && f.push({
          element: y,
          datasetIndex: m.index,
          index: g
        });
      }), f) : [];
    },
    dataset(e, t, n, r) {
      const o = Fh(t, e), s = n.axis || "xy", a = n.includeInvisible || !1;
      let c = n.intersect ? _P(e, o, s, r, a) : OP(e, o, s, !1, r, a);
      if (c.length > 0) {
        const f = c[0].datasetIndex, m = e.getDatasetMeta(f).data;
        c = [];
        for (let g = 0; g < m.length; ++g)
          c.push({
            element: m[g],
            datasetIndex: f,
            index: g
          });
      }
      return c;
    },
    point(e, t, n, r) {
      const o = Fh(t, e), s = n.axis || "xy", a = n.includeInvisible || !1;
      return _P(e, o, s, r, a);
    },
    nearest(e, t, n, r) {
      const o = Fh(t, e), s = n.axis || "xy", a = n.includeInvisible || !1;
      return OP(e, o, s, n.intersect, r, a);
    },
    x(e, t, n, r) {
      const o = Fh(t, e);
      return F2(e, o, "x", n.intersect, r);
    },
    y(e, t, n, r) {
      const o = Fh(t, e);
      return F2(e, o, "y", n.intersect, r);
    }
  }
};
const QU = [
  "left",
  "top",
  "right",
  "bottom"
];
function Vw(e, t) {
  return e.filter((n) => n.pos === t);
}
function z2(e, t) {
  return e.filter((n) => QU.indexOf(n.pos) === -1 && n.box.axis === t);
}
function Uw(e, t) {
  return e.sort((n, r) => {
    const o = t ? r : n, s = t ? n : r;
    return o.weight === s.weight ? o.index - s.index : o.weight - s.weight;
  });
}
function rce(e) {
  const t = [];
  let n, r, o, s, a, c;
  for (n = 0, r = (e || []).length; n < r; ++n)
    o = e[n], { position: s, options: { stack: a, stackWeight: c = 1 } } = o, t.push({
      index: n,
      box: o,
      pos: s,
      horizontal: o.isHorizontal(),
      weight: o.weight,
      stack: a && s + a,
      stackWeight: c
    });
  return t;
}
function oce(e) {
  const t = {};
  for (const n of e) {
    const { stack: r, pos: o, stackWeight: s } = n;
    if (!r || !QU.includes(o))
      continue;
    const a = t[r] || (t[r] = {
      count: 0,
      placed: 0,
      weight: 0,
      size: 0
    });
    a.count++, a.weight += s;
  }
  return t;
}
function ice(e, t) {
  const n = oce(e), { vBoxMaxWidth: r, hBoxMaxHeight: o } = t;
  let s, a, c;
  for (s = 0, a = e.length; s < a; ++s) {
    c = e[s];
    const { fullSize: f } = c.box, m = n[c.stack], g = m && c.stackWeight / m.weight;
    c.horizontal ? (c.width = g ? g * r : f && t.availableWidth, c.height = o) : (c.width = r, c.height = g ? g * o : f && t.availableHeight);
  }
  return n;
}
function sce(e) {
  const t = rce(e), n = Uw(t.filter((m) => m.box.fullSize), !0), r = Uw(Vw(t, "left"), !0), o = Uw(Vw(t, "right")), s = Uw(Vw(t, "top"), !0), a = Uw(Vw(t, "bottom")), c = z2(t, "x"), f = z2(t, "y");
  return {
    fullSize: n,
    leftAndTop: r.concat(s),
    rightAndBottom: o.concat(f).concat(a).concat(c),
    chartArea: Vw(t, "chartArea"),
    vertical: r.concat(o).concat(f),
    horizontal: s.concat(a).concat(c)
  };
}
function B2(e, t, n, r) {
  return Math.max(e[n], t[n]) + Math.max(e[r], t[r]);
}
function JU(e, t) {
  e.top = Math.max(e.top, t.top), e.left = Math.max(e.left, t.left), e.bottom = Math.max(e.bottom, t.bottom), e.right = Math.max(e.right, t.right);
}
function ace(e, t, n, r) {
  const { pos: o, box: s } = n, a = e.maxPadding;
  if (!or(o)) {
    n.size && (e[o] -= n.size);
    const y = r[n.stack] || {
      size: 0,
      count: 1
    };
    y.size = Math.max(y.size, n.horizontal ? s.height : s.width), n.size = y.size / y.count, e[o] += n.size;
  }
  s.getPadding && JU(a, s.getPadding());
  const c = Math.max(0, t.outerWidth - B2(a, e, "left", "right")), f = Math.max(0, t.outerHeight - B2(a, e, "top", "bottom")), m = c !== e.w, g = f !== e.h;
  return e.w = c, e.h = f, n.horizontal ? {
    same: m,
    other: g
  } : {
    same: g,
    other: m
  };
}
function lce(e) {
  const t = e.maxPadding;
  function n(r) {
    const o = Math.max(t[r] - e[r], 0);
    return e[r] += o, o;
  }
  e.y += n("top"), e.x += n("left"), n("right"), n("bottom");
}
function uce(e, t) {
  const n = t.maxPadding;
  function r(o) {
    const s = {
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    };
    return o.forEach((a) => {
      s[a] = Math.max(t[a], n[a]);
    }), s;
  }
  return r(e ? [
    "left",
    "right"
  ] : [
    "top",
    "bottom"
  ]);
}
function aS(e, t, n, r) {
  const o = [];
  let s, a, c, f, m, g;
  for (s = 0, a = e.length, m = 0; s < a; ++s) {
    c = e[s], f = c.box, f.update(c.width || t.w, c.height || t.h, uce(c.horizontal, t));
    const { same: y, other: w } = ace(t, n, c, r);
    m |= y && o.length, g = g || w, f.fullSize || o.push(c);
  }
  return m && aS(o, t, n, r) || g;
}
function YE(e, t, n, r, o) {
  e.top = n, e.left = t, e.right = t + r, e.bottom = n + o, e.width = r, e.height = o;
}
function H2(e, t, n, r) {
  const o = n.padding;
  let { x: s, y: a } = t;
  for (const c of e) {
    const f = c.box, m = r[c.stack] || {
      placed: 0,
      weight: 1
    }, g = c.stackWeight / m.weight || 1;
    if (c.horizontal) {
      const y = t.w * g, w = m.size || f.height;
      qT(m.start) && (a = m.start), f.fullSize ? YE(f, o.left, a, n.outerWidth - o.right - o.left, w) : YE(f, t.left + m.placed, a, y, w), m.start = a, m.placed += y, a = f.bottom;
    } else {
      const y = t.h * g, w = m.size || f.width;
      qT(m.start) && (s = m.start), f.fullSize ? YE(f, s, o.top, w, n.outerHeight - o.bottom - o.top) : YE(f, s, t.top + m.placed, w, y), m.start = s, m.placed += y, s = f.right;
    }
  }
  t.x = s, t.y = a;
}
var Bf = {
  addBox(e, t) {
    e.boxes || (e.boxes = []), t.fullSize = t.fullSize || !1, t.position = t.position || "top", t.weight = t.weight || 0, t._layers = t._layers || function() {
      return [
        {
          z: 0,
          draw(n) {
            t.draw(n);
          }
        }
      ];
    }, e.boxes.push(t);
  },
  removeBox(e, t) {
    const n = e.boxes ? e.boxes.indexOf(t) : -1;
    n !== -1 && e.boxes.splice(n, 1);
  },
  configure(e, t, n) {
    t.fullSize = n.fullSize, t.position = n.position, t.weight = n.weight;
  },
  update(e, t, n, r) {
    if (!e)
      return;
    const o = vu(e.options.layout.padding), s = Math.max(t - o.width, 0), a = Math.max(n - o.height, 0), c = sce(e.boxes), f = c.vertical, m = c.horizontal;
    kr(e.boxes, (E) => {
      typeof E.beforeLayout == "function" && E.beforeLayout();
    });
    const g = f.reduce((E, O) => O.box.options && O.box.options.display === !1 ? E : E + 1, 0) || 1, y = Object.freeze({
      outerWidth: t,
      outerHeight: n,
      padding: o,
      availableWidth: s,
      availableHeight: a,
      vBoxMaxWidth: s / 2 / g,
      hBoxMaxHeight: a / 2
    }), w = Object.assign({}, o);
    JU(w, vu(r));
    const C = Object.assign({
      maxPadding: w,
      w: s,
      h: a,
      x: o.left,
      y: o.top
    }, o), T = ice(f.concat(m), y);
    aS(c.fullSize, C, y, T), aS(f, C, y, T), aS(m, C, y, T) && aS(f, C, y, T), lce(C), H2(c.leftAndTop, C, y, T), C.x += C.w, C.y += C.h, H2(c.rightAndBottom, C, y, T), e.chartArea = {
      left: C.left,
      top: C.top,
      right: C.left + C.w,
      bottom: C.top + C.h,
      height: C.h,
      width: C.w
    }, kr(c.chartArea, (E) => {
      const O = E.box;
      Object.assign(O, e.chartArea), O.update(C.w, C.h, {
        left: 0,
        top: 0,
        right: 0,
        bottom: 0
      });
    });
  }
};
class ZU {
  acquireContext(t, n) {
  }
  releaseContext(t) {
    return !1;
  }
  addEventListener(t, n, r) {
  }
  removeEventListener(t, n, r) {
  }
  getDevicePixelRatio() {
    return 1;
  }
  getMaximumSize(t, n, r, o) {
    return n = Math.max(0, n || t.width), r = r || t.height, {
      width: n,
      height: Math.max(0, o ? Math.floor(n / o) : r)
    };
  }
  isAttached(t) {
    return !0;
  }
  updateConfig(t) {
  }
}
class cce extends ZU {
  acquireContext(t) {
    return t && t.getContext && t.getContext("2d") || null;
  }
  updateConfig(t) {
    t.options.animation = !1;
  }
}
const mT = "$chartjs", dce = {
  touchstart: "mousedown",
  touchmove: "mousemove",
  touchend: "mouseup",
  pointerenter: "mouseenter",
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointerleave: "mouseout",
  pointerout: "mouseout"
}, V2 = (e) => e === null || e === "";
function fce(e, t) {
  const n = e.style, r = e.getAttribute("height"), o = e.getAttribute("width");
  if (e[mT] = {
    initial: {
      height: r,
      width: o,
      style: {
        display: n.display,
        height: n.height,
        width: n.width
      }
    }
  }, n.display = n.display || "block", n.boxSizing = n.boxSizing || "border-box", V2(o)) {
    const s = k2(e, "width");
    s !== void 0 && (e.width = s);
  }
  if (V2(r))
    if (e.style.height === "")
      e.height = e.width / (t || 2);
    else {
      const s = k2(e, "height");
      s !== void 0 && (e.height = s);
    }
  return e;
}
const e5 = Tue ? {
  passive: !0
} : !1;
function pce(e, t, n) {
  e && e.addEventListener(t, n, e5);
}
function hce(e, t, n) {
  e && e.canvas && e.canvas.removeEventListener(t, n, e5);
}
function mce(e, t) {
  const n = dce[e.type] || e.type, { x: r, y: o } = Fh(e, t);
  return {
    type: n,
    chart: t,
    native: e,
    x: r !== void 0 ? r : null,
    y: o !== void 0 ? o : null
  };
}
function JT(e, t) {
  for (const n of e)
    if (n === t || n.contains(t))
      return !0;
}
function gce(e, t, n) {
  const r = e.canvas, o = new MutationObserver((s) => {
    let a = !1;
    for (const c of s)
      a = a || JT(c.addedNodes, r), a = a && !JT(c.removedNodes, r);
    a && n();
  });
  return o.observe(document, {
    childList: !0,
    subtree: !0
  }), o;
}
function vce(e, t, n) {
  const r = e.canvas, o = new MutationObserver((s) => {
    let a = !1;
    for (const c of s)
      a = a || JT(c.removedNodes, r), a = a && !JT(c.addedNodes, r);
    a && n();
  });
  return o.observe(document, {
    childList: !0,
    subtree: !0
  }), o;
}
const KS = /* @__PURE__ */ new Map();
let U2 = 0;
function t5() {
  const e = window.devicePixelRatio;
  e !== U2 && (U2 = e, KS.forEach((t, n) => {
    n.currentDevicePixelRatio !== e && t();
  }));
}
function yce(e, t) {
  KS.size || window.addEventListener("resize", t5), KS.set(e, t);
}
function bce(e) {
  KS.delete(e), KS.size || window.removeEventListener("resize", t5);
}
function wce(e, t, n) {
  const r = e.canvas, o = r && _D(r);
  if (!o)
    return;
  const s = IU((c, f) => {
    const m = o.clientWidth;
    n(c, f), m < o.clientWidth && n();
  }, window), a = new ResizeObserver((c) => {
    const f = c[0], m = f.contentRect.width, g = f.contentRect.height;
    m === 0 && g === 0 || s(m, g);
  });
  return a.observe(o), yce(e, s), a;
}
function RP(e, t, n) {
  n && n.disconnect(), t === "resize" && bce(e);
}
function Sce(e, t, n) {
  const r = e.canvas, o = IU((s) => {
    e.ctx !== null && n(mce(s, e));
  }, e);
  return pce(r, t, o), o;
}
class Cce extends ZU {
  acquireContext(t, n) {
    const r = t && t.getContext && t.getContext("2d");
    return r && r.canvas === t ? (fce(t, n), r) : null;
  }
  releaseContext(t) {
    const n = t.canvas;
    if (!n[mT])
      return !1;
    const r = n[mT].initial;
    [
      "height",
      "width"
    ].forEach((s) => {
      const a = r[s];
      fo(a) ? n.removeAttribute(s) : n.setAttribute(s, a);
    });
    const o = r.style || {};
    return Object.keys(o).forEach((s) => {
      n.style[s] = o[s];
    }), n.width = n.width, delete n[mT], !0;
  }
  addEventListener(t, n, r) {
    this.removeEventListener(t, n);
    const o = t.$proxies || (t.$proxies = {}), a = {
      attach: gce,
      detach: vce,
      resize: wce
    }[n] || Sce;
    o[n] = a(t, n, r);
  }
  removeEventListener(t, n) {
    const r = t.$proxies || (t.$proxies = {}), o = r[n];
    if (!o)
      return;
    ({
      attach: RP,
      detach: RP,
      resize: RP
    }[n] || hce)(t, n, o), r[n] = void 0;
  }
  getDevicePixelRatio() {
    return window.devicePixelRatio;
  }
  getMaximumSize(t, n, r, o) {
    return Eue(t, n, r, o);
  }
  isAttached(t) {
    const n = t && _D(t);
    return !!(n && n.isConnected);
  }
}
function xce(e) {
  return !TD() || typeof OffscreenCanvas < "u" && e instanceof OffscreenCanvas ? cce : Cce;
}
var oT;
let my = (oT = class {
  constructor() {
    Dn(this, "x");
    Dn(this, "y");
    Dn(this, "active", !1);
    Dn(this, "options");
    Dn(this, "$animations");
  }
  tooltipPosition(t) {
    const { x: n, y: r } = this.getProps([
      "x",
      "y"
    ], t);
    return {
      x: n,
      y: r
    };
  }
  hasValue() {
    return YT(this.x) && YT(this.y);
  }
  getProps(t, n) {
    const r = this.$animations;
    if (!n || !r)
      return this;
    const o = {};
    return t.forEach((s) => {
      o[s] = r[s] && r[s].active() ? r[s]._to : this[s];
    }), o;
  }
}, Dn(oT, "defaults", {}), Dn(oT, "defaultRoutes"), oT);
function Ece(e, t) {
  const n = e.options.ticks, r = Tce(e), o = Math.min(n.maxTicksLimit || r, r), s = n.major.enabled ? Oce(t) : [], a = s.length, c = s[0], f = s[a - 1], m = [];
  if (a > o)
    return Rce(t, m, s, a / o), m;
  const g = _ce(s, t, o);
  if (a > 0) {
    let y, w;
    const C = a > 1 ? Math.round((f - c) / (a - 1)) : null;
    for (XE(t, m, g, fo(C) ? 0 : c - C, c), y = 0, w = a - 1; y < w; y++)
      XE(t, m, g, s[y], s[y + 1]);
    return XE(t, m, g, f, fo(C) ? t.length : f + C), m;
  }
  return XE(t, m, g), m;
}
function Tce(e) {
  const t = e.options.offset, n = e._tickSize(), r = e._length / n + (t ? 0 : 1), o = e._maxLength / n;
  return Math.floor(Math.min(r, o));
}
function _ce(e, t, n) {
  const r = kce(e), o = t.length / n;
  if (!r)
    return Math.max(o, 1);
  const s = Cle(r);
  for (let a = 0, c = s.length - 1; a < c; a++) {
    const f = s[a];
    if (f > o)
      return f;
  }
  return Math.max(o, 1);
}
function Oce(e) {
  const t = [];
  let n, r;
  for (n = 0, r = e.length; n < r; n++)
    e[n].major && t.push(n);
  return t;
}
function Rce(e, t, n, r) {
  let o = 0, s = n[0], a;
  for (r = Math.ceil(r), a = 0; a < e.length; a++)
    a === s && (t.push(e[a]), o++, s = n[o * r]);
}
function XE(e, t, n, r, o) {
  const s = Qn(r, 0), a = Math.min(Qn(o, e.length), e.length);
  let c = 0, f, m, g;
  for (n = Math.ceil(n), o && (f = o - r, n = f / Math.floor(f / n)), g = s; g < 0; )
    c++, g = Math.round(s + c * n);
  for (m = Math.max(s, 0); m < a; m++)
    m === g && (t.push(e[m]), c++, g = Math.round(s + c * n));
}
function kce(e) {
  const t = e.length;
  let n, r;
  if (t < 2)
    return !1;
  for (r = e[0], n = 1; n < t; ++n)
    if (e[n] - e[n - 1] !== r)
      return !1;
  return r;
}
const Pce = (e) => e === "left" ? "right" : e === "right" ? "left" : e, W2 = (e, t, n) => t === "top" || t === "left" ? e[t] + n : e[t] - n, G2 = (e, t) => Math.min(t || e, e);
function q2(e, t) {
  const n = [], r = e.length / t, o = e.length;
  let s = 0;
  for (; s < o; s += r)
    n.push(e[Math.floor(s)]);
  return n;
}
function Mce(e, t, n) {
  const r = e.ticks.length, o = Math.min(t, r - 1), s = e._startPixel, a = e._endPixel, c = 1e-6;
  let f = e.getPixelForTick(o), m;
  if (!(n && (r === 1 ? m = Math.max(f - s, a - f) : t === 0 ? m = (e.getPixelForTick(1) - f) / 2 : m = (f - e.getPixelForTick(o - 1)) / 2, f += o < t ? m : -m, f < s - c || f > a + c)))
    return f;
}
function Ice(e, t) {
  kr(e, (n) => {
    const r = n.gc, o = r.length / 2;
    let s;
    if (o > t) {
      for (s = 0; s < o; ++s)
        delete n.data[r[s]];
      r.splice(0, o);
    }
  });
}
function Ww(e) {
  return e.drawTicks ? e.tickLength : 0;
}
function K2(e, t) {
  if (!e.display)
    return 0;
  const n = sa(e.font, t), r = vu(e.padding);
  return (_i(e.text) ? e.text.length : 1) * n.lineHeight + r.height;
}
function Dce(e, t) {
  return gm(e, {
    scale: t,
    type: "scale"
  });
}
function Ace(e, t, n) {
  return gm(e, {
    tick: n,
    index: t,
    type: "tick"
  });
}
function Nce(e, t, n) {
  let r = DU(e);
  return (n && t !== "right" || !n && t === "right") && (r = Pce(r)), r;
}
function Lce(e, t, n, r) {
  const { top: o, left: s, bottom: a, right: c, chart: f } = e, { chartArea: m, scales: g } = f;
  let y = 0, w, C, T;
  const E = a - o, O = c - s;
  if (e.isHorizontal()) {
    if (C = Ta(r, s, c), or(n)) {
      const k = Object.keys(n)[0], I = n[k];
      T = g[k].getPixelForValue(I) + E - t;
    } else n === "center" ? T = (m.bottom + m.top) / 2 + E - t : T = W2(e, n, t);
    w = c - s;
  } else {
    if (or(n)) {
      const k = Object.keys(n)[0], I = n[k];
      C = g[k].getPixelForValue(I) - O + t;
    } else n === "center" ? C = (m.left + m.right) / 2 - O + t : C = W2(e, n, t);
    T = Ta(r, a, o), y = n === "left" ? -du : du;
  }
  return {
    titleX: C,
    titleY: T,
    maxWidth: w,
    rotation: y
  };
}
class gy extends my {
  constructor(t) {
    super(), this.id = t.id, this.type = t.type, this.options = void 0, this.ctx = t.ctx, this.chart = t.chart, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this._margins = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    }, this.maxWidth = void 0, this.maxHeight = void 0, this.paddingTop = void 0, this.paddingBottom = void 0, this.paddingLeft = void 0, this.paddingRight = void 0, this.axis = void 0, this.labelRotation = void 0, this.min = void 0, this.max = void 0, this._range = void 0, this.ticks = [], this._gridLineItems = null, this._labelItems = null, this._labelSizes = null, this._length = 0, this._maxLength = 0, this._longestTextCache = {}, this._startPixel = void 0, this._endPixel = void 0, this._reversePixels = !1, this._userMax = void 0, this._userMin = void 0, this._suggestedMax = void 0, this._suggestedMin = void 0, this._ticksLength = 0, this._borderValue = 0, this._cache = {}, this._dataLimitsCached = !1, this.$context = void 0;
  }
  init(t) {
    this.options = t.setContext(this.getContext()), this.axis = t.axis, this._userMin = this.parse(t.min), this._userMax = this.parse(t.max), this._suggestedMin = this.parse(t.suggestedMin), this._suggestedMax = this.parse(t.suggestedMax);
  }
  parse(t, n) {
    return t;
  }
  getUserBounds() {
    let { _userMin: t, _userMax: n, _suggestedMin: r, _suggestedMax: o } = this;
    return t = rc(t, Number.POSITIVE_INFINITY), n = rc(n, Number.NEGATIVE_INFINITY), r = rc(r, Number.POSITIVE_INFINITY), o = rc(o, Number.NEGATIVE_INFINITY), {
      min: rc(t, r),
      max: rc(n, o),
      minDefined: vs(t),
      maxDefined: vs(n)
    };
  }
  getMinMax(t) {
    let { min: n, max: r, minDefined: o, maxDefined: s } = this.getUserBounds(), a;
    if (o && s)
      return {
        min: n,
        max: r
      };
    const c = this.getMatchingVisibleMetas();
    for (let f = 0, m = c.length; f < m; ++f)
      a = c[f].controller.getMinMax(this, t), o || (n = Math.min(n, a.min)), s || (r = Math.max(r, a.max));
    return n = s && n > r ? r : n, r = o && n > r ? n : r, {
      min: rc(n, rc(r, n)),
      max: rc(r, rc(n, r))
    };
  }
  getPadding() {
    return {
      left: this.paddingLeft || 0,
      top: this.paddingTop || 0,
      right: this.paddingRight || 0,
      bottom: this.paddingBottom || 0
    };
  }
  getTicks() {
    return this.ticks;
  }
  getLabels() {
    const t = this.chart.data;
    return this.options.labels || (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels || [];
  }
  getLabelItems(t = this.chart.chartArea) {
    return this._labelItems || (this._labelItems = this._computeLabelItems(t));
  }
  beforeLayout() {
    this._cache = {}, this._dataLimitsCached = !1;
  }
  beforeUpdate() {
    Zr(this.options.beforeUpdate, [
      this
    ]);
  }
  update(t, n, r) {
    const { beginAtZero: o, grace: s, ticks: a } = this.options, c = a.sampleSize;
    this.beforeUpdate(), this.maxWidth = t, this.maxHeight = n, this._margins = r = Object.assign({
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    }, r), this.ticks = null, this._labelSizes = null, this._gridLineItems = null, this._labelItems = null, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this._maxLength = this.isHorizontal() ? this.width + r.left + r.right : this.height + r.top + r.bottom, this._dataLimitsCached || (this.beforeDataLimits(), this.determineDataLimits(), this.afterDataLimits(), this._range = nue(this, s, o), this._dataLimitsCached = !0), this.beforeBuildTicks(), this.ticks = this.buildTicks() || [], this.afterBuildTicks();
    const f = c < this.ticks.length;
    this._convertTicksToLabels(f ? q2(this.ticks, c) : this.ticks), this.configure(), this.beforeCalculateLabelRotation(), this.calculateLabelRotation(), this.afterCalculateLabelRotation(), a.display && (a.autoSkip || a.source === "auto") && (this.ticks = Ece(this, this.ticks), this._labelSizes = null, this.afterAutoSkip()), f && this._convertTicksToLabels(this.ticks), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate();
  }
  configure() {
    let t = this.options.reverse, n, r;
    this.isHorizontal() ? (n = this.left, r = this.right) : (n = this.top, r = this.bottom, t = !t), this._startPixel = n, this._endPixel = r, this._reversePixels = t, this._length = r - n, this._alignToPixels = this.options.alignToPixels;
  }
  afterUpdate() {
    Zr(this.options.afterUpdate, [
      this
    ]);
  }
  beforeSetDimensions() {
    Zr(this.options.beforeSetDimensions, [
      this
    ]);
  }
  setDimensions() {
    this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0;
  }
  afterSetDimensions() {
    Zr(this.options.afterSetDimensions, [
      this
    ]);
  }
  _callHooks(t) {
    this.chart.notifyPlugins(t, this.getContext()), Zr(this.options[t], [
      this
    ]);
  }
  beforeDataLimits() {
    this._callHooks("beforeDataLimits");
  }
  determineDataLimits() {
  }
  afterDataLimits() {
    this._callHooks("afterDataLimits");
  }
  beforeBuildTicks() {
    this._callHooks("beforeBuildTicks");
  }
  buildTicks() {
    return [];
  }
  afterBuildTicks() {
    this._callHooks("afterBuildTicks");
  }
  beforeTickToLabelConversion() {
    Zr(this.options.beforeTickToLabelConversion, [
      this
    ]);
  }
  generateTickLabels(t) {
    const n = this.options.ticks;
    let r, o, s;
    for (r = 0, o = t.length; r < o; r++)
      s = t[r], s.label = Zr(n.callback, [
        s.value,
        r,
        t
      ], this);
  }
  afterTickToLabelConversion() {
    Zr(this.options.afterTickToLabelConversion, [
      this
    ]);
  }
  beforeCalculateLabelRotation() {
    Zr(this.options.beforeCalculateLabelRotation, [
      this
    ]);
  }
  calculateLabelRotation() {
    const t = this.options, n = t.ticks, r = G2(this.ticks.length, t.ticks.maxTicksLimit), o = n.minRotation || 0, s = n.maxRotation;
    let a = o, c, f, m;
    if (!this._isVisible() || !n.display || o >= s || r <= 1 || !this.isHorizontal()) {
      this.labelRotation = o;
      return;
    }
    const g = this._getLabelSizes(), y = g.widest.width, w = g.highest.height, C = fc(this.chart.width - y, 0, this.maxWidth);
    c = t.offset ? this.maxWidth / r : C / (r - 1), y + 6 > c && (c = C / (r - (t.offset ? 0.5 : 1)), f = this.maxHeight - Ww(t.grid) - n.padding - K2(t.title, this.chart.options.font), m = Math.sqrt(y * y + w * w), a = _le(Math.min(Math.asin(fc((g.highest.height + 6) / c, -1, 1)), Math.asin(fc(f / m, -1, 1)) - Math.asin(fc(w / m, -1, 1)))), a = Math.max(o, Math.min(s, a))), this.labelRotation = a;
  }
  afterCalculateLabelRotation() {
    Zr(this.options.afterCalculateLabelRotation, [
      this
    ]);
  }
  afterAutoSkip() {
  }
  beforeFit() {
    Zr(this.options.beforeFit, [
      this
    ]);
  }
  fit() {
    const t = {
      width: 0,
      height: 0
    }, { chart: n, options: { ticks: r, title: o, grid: s } } = this, a = this._isVisible(), c = this.isHorizontal();
    if (a) {
      const f = K2(o, n.options.font);
      if (c ? (t.width = this.maxWidth, t.height = Ww(s) + f) : (t.height = this.maxHeight, t.width = Ww(s) + f), r.display && this.ticks.length) {
        const { first: m, last: g, widest: y, highest: w } = this._getLabelSizes(), C = r.padding * 2, T = Yh(this.labelRotation), E = Math.cos(T), O = Math.sin(T);
        if (c) {
          const k = r.mirror ? 0 : O * y.width + E * w.height;
          t.height = Math.min(this.maxHeight, t.height + k + C);
        } else {
          const k = r.mirror ? 0 : E * y.width + O * w.height;
          t.width = Math.min(this.maxWidth, t.width + k + C);
        }
        this._calculatePadding(m, g, O, E);
      }
    }
    this._handleMargins(), c ? (this.width = this._length = n.width - this._margins.left - this._margins.right, this.height = t.height) : (this.width = t.width, this.height = this._length = n.height - this._margins.top - this._margins.bottom);
  }
  _calculatePadding(t, n, r, o) {
    const { ticks: { align: s, padding: a }, position: c } = this.options, f = this.labelRotation !== 0, m = c !== "top" && this.axis === "x";
    if (this.isHorizontal()) {
      const g = this.getPixelForTick(0) - this.left, y = this.right - this.getPixelForTick(this.ticks.length - 1);
      let w = 0, C = 0;
      f ? m ? (w = o * t.width, C = r * n.height) : (w = r * t.height, C = o * n.width) : s === "start" ? C = n.width : s === "end" ? w = t.width : s !== "inner" && (w = t.width / 2, C = n.width / 2), this.paddingLeft = Math.max((w - g + a) * this.width / (this.width - g), 0), this.paddingRight = Math.max((C - y + a) * this.width / (this.width - y), 0);
    } else {
      let g = n.height / 2, y = t.height / 2;
      s === "start" ? (g = 0, y = t.height) : s === "end" && (g = n.height, y = 0), this.paddingTop = g + a, this.paddingBottom = y + a;
    }
  }
  _handleMargins() {
    this._margins && (this._margins.left = Math.max(this.paddingLeft, this._margins.left), this._margins.top = Math.max(this.paddingTop, this._margins.top), this._margins.right = Math.max(this.paddingRight, this._margins.right), this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom));
  }
  afterFit() {
    Zr(this.options.afterFit, [
      this
    ]);
  }
  isHorizontal() {
    const { axis: t, position: n } = this.options;
    return n === "top" || n === "bottom" || t === "x";
  }
  isFullSize() {
    return this.options.fullSize;
  }
  _convertTicksToLabels(t) {
    this.beforeTickToLabelConversion(), this.generateTickLabels(t);
    let n, r;
    for (n = 0, r = t.length; n < r; n++)
      fo(t[n].label) && (t.splice(n, 1), r--, n--);
    this.afterTickToLabelConversion();
  }
  _getLabelSizes() {
    let t = this._labelSizes;
    if (!t) {
      const n = this.options.ticks.sampleSize;
      let r = this.ticks;
      n < r.length && (r = q2(r, n)), this._labelSizes = t = this._computeLabelSizes(r, r.length, this.options.ticks.maxTicksLimit);
    }
    return t;
  }
  _computeLabelSizes(t, n, r) {
    const { ctx: o, _longestTextCache: s } = this, a = [], c = [], f = Math.floor(n / G2(n, r));
    let m = 0, g = 0, y, w, C, T, E, O, k, I, M, N, P;
    for (y = 0; y < n; y += f) {
      if (T = t[y].label, E = this._resolveTickFontOptions(y), o.font = O = E.string, k = s[O] = s[O] || {
        data: {},
        gc: []
      }, I = E.lineHeight, M = N = 0, !fo(T) && !_i(T))
        M = E2(o, k.data, k.gc, M, T), N = I;
      else if (_i(T))
        for (w = 0, C = T.length; w < C; ++w)
          P = T[w], !fo(P) && !_i(P) && (M = E2(o, k.data, k.gc, M, P), N += I);
      a.push(M), c.push(N), m = Math.max(M, m), g = Math.max(N, g);
    }
    Ice(s, n);
    const F = a.indexOf(m), H = c.indexOf(g), U = (z) => ({
      width: a[z] || 0,
      height: c[z] || 0
    });
    return {
      first: U(0),
      last: U(n - 1),
      widest: U(F),
      highest: U(H),
      widths: a,
      heights: c
    };
  }
  getLabelForValue(t) {
    return t;
  }
  getPixelForValue(t, n) {
    return NaN;
  }
  getValueForPixel(t) {
  }
  getPixelForTick(t) {
    const n = this.ticks;
    return t < 0 || t > n.length - 1 ? null : this.getPixelForValue(n[t].value);
  }
  getPixelForDecimal(t) {
    this._reversePixels && (t = 1 - t);
    const n = this._startPixel + t * this._length;
    return kle(this._alignToPixels ? Ih(this.chart, n, 0) : n);
  }
  getDecimalForPixel(t) {
    const n = (t - this._startPixel) / this._length;
    return this._reversePixels ? 1 - n : n;
  }
  getBasePixel() {
    return this.getPixelForValue(this.getBaseValue());
  }
  getBaseValue() {
    const { min: t, max: n } = this;
    return t < 0 && n < 0 ? n : t > 0 && n > 0 ? t : 0;
  }
  getContext(t) {
    const n = this.ticks || [];
    if (t >= 0 && t < n.length) {
      const r = n[t];
      return r.$context || (r.$context = Ace(this.getContext(), t, r));
    }
    return this.$context || (this.$context = Dce(this.chart.getContext(), this));
  }
  _tickSize() {
    const t = this.options.ticks, n = Yh(this.labelRotation), r = Math.abs(Math.cos(n)), o = Math.abs(Math.sin(n)), s = this._getLabelSizes(), a = t.autoSkipPadding || 0, c = s ? s.widest.width + a : 0, f = s ? s.highest.height + a : 0;
    return this.isHorizontal() ? f * r > c * o ? c / r : f / o : f * o < c * r ? f / r : c / o;
  }
  _isVisible() {
    const t = this.options.display;
    return t !== "auto" ? !!t : this.getMatchingVisibleMetas().length > 0;
  }
  _computeGridLineItems(t) {
    const n = this.axis, r = this.chart, o = this.options, { grid: s, position: a, border: c } = o, f = s.offset, m = this.isHorizontal(), y = this.ticks.length + (f ? 1 : 0), w = Ww(s), C = [], T = c.setContext(this.getContext()), E = T.display ? T.width : 0, O = E / 2, k = function(K) {
      return Ih(r, K, E);
    };
    let I, M, N, P, F, H, U, z, A, q, W, Y;
    if (a === "top")
      I = k(this.bottom), H = this.bottom - w, z = I - O, q = k(t.top) + O, Y = t.bottom;
    else if (a === "bottom")
      I = k(this.top), q = t.top, Y = k(t.bottom) - O, H = I + O, z = this.top + w;
    else if (a === "left")
      I = k(this.right), F = this.right - w, U = I - O, A = k(t.left) + O, W = t.right;
    else if (a === "right")
      I = k(this.left), A = t.left, W = k(t.right) - O, F = I + O, U = this.left + w;
    else if (n === "x") {
      if (a === "center")
        I = k((t.top + t.bottom) / 2 + 0.5);
      else if (or(a)) {
        const K = Object.keys(a)[0], X = a[K];
        I = k(this.chart.scales[K].getPixelForValue(X));
      }
      q = t.top, Y = t.bottom, H = I + O, z = H + w;
    } else if (n === "y") {
      if (a === "center")
        I = k((t.left + t.right) / 2);
      else if (or(a)) {
        const K = Object.keys(a)[0], X = a[K];
        I = k(this.chart.scales[K].getPixelForValue(X));
      }
      F = I - O, U = F - w, A = t.left, W = t.right;
    }
    const ee = Qn(o.ticks.maxTicksLimit, y), G = Math.max(1, Math.ceil(y / ee));
    for (M = 0; M < y; M += G) {
      const K = this.getContext(M), X = s.setContext(K), te = c.setContext(K), re = X.lineWidth, Q = X.color, B = te.dash || [], ie = te.dashOffset, de = X.tickWidth, ue = X.tickColor, he = X.tickBorderDash || [], ge = X.tickBorderDashOffset;
      N = Mce(this, M, f), N !== void 0 && (P = Ih(r, N, re), m ? F = U = A = W = P : H = z = q = Y = P, C.push({
        tx1: F,
        ty1: H,
        tx2: U,
        ty2: z,
        x1: A,
        y1: q,
        x2: W,
        y2: Y,
        width: re,
        color: Q,
        borderDash: B,
        borderDashOffset: ie,
        tickWidth: de,
        tickColor: ue,
        tickBorderDash: he,
        tickBorderDashOffset: ge
      }));
    }
    return this._ticksLength = y, this._borderValue = I, C;
  }
  _computeLabelItems(t) {
    const n = this.axis, r = this.options, { position: o, ticks: s } = r, a = this.isHorizontal(), c = this.ticks, { align: f, crossAlign: m, padding: g, mirror: y } = s, w = Ww(r.grid), C = w + g, T = y ? -g : C, E = -Yh(this.labelRotation), O = [];
    let k, I, M, N, P, F, H, U, z, A, q, W, Y = "middle";
    if (o === "top")
      F = this.bottom - T, H = this._getXAxisLabelAlignment();
    else if (o === "bottom")
      F = this.top + T, H = this._getXAxisLabelAlignment();
    else if (o === "left") {
      const G = this._getYAxisLabelAlignment(w);
      H = G.textAlign, P = G.x;
    } else if (o === "right") {
      const G = this._getYAxisLabelAlignment(w);
      H = G.textAlign, P = G.x;
    } else if (n === "x") {
      if (o === "center")
        F = (t.top + t.bottom) / 2 + C;
      else if (or(o)) {
        const G = Object.keys(o)[0], K = o[G];
        F = this.chart.scales[G].getPixelForValue(K) + C;
      }
      H = this._getXAxisLabelAlignment();
    } else if (n === "y") {
      if (o === "center")
        P = (t.left + t.right) / 2 - C;
      else if (or(o)) {
        const G = Object.keys(o)[0], K = o[G];
        P = this.chart.scales[G].getPixelForValue(K);
      }
      H = this._getYAxisLabelAlignment(w).textAlign;
    }
    n === "y" && (f === "start" ? Y = "top" : f === "end" && (Y = "bottom"));
    const ee = this._getLabelSizes();
    for (k = 0, I = c.length; k < I; ++k) {
      M = c[k], N = M.label;
      const G = s.setContext(this.getContext(k));
      U = this.getPixelForTick(k) + s.labelOffset, z = this._resolveTickFontOptions(k), A = z.lineHeight, q = _i(N) ? N.length : 1;
      const K = q / 2, X = G.color, te = G.textStrokeColor, re = G.textStrokeWidth;
      let Q = H;
      a ? (P = U, H === "inner" && (k === I - 1 ? Q = this.options.reverse ? "left" : "right" : k === 0 ? Q = this.options.reverse ? "right" : "left" : Q = "center"), o === "top" ? m === "near" || E !== 0 ? W = -q * A + A / 2 : m === "center" ? W = -ee.highest.height / 2 - K * A + A : W = -ee.highest.height + A / 2 : m === "near" || E !== 0 ? W = A / 2 : m === "center" ? W = ee.highest.height / 2 - K * A : W = ee.highest.height - q * A, y && (W *= -1), E !== 0 && !G.showLabelBackdrop && (P += A / 2 * Math.sin(E))) : (F = U, W = (1 - q) * A / 2);
      let B;
      if (G.showLabelBackdrop) {
        const ie = vu(G.backdropPadding), de = ee.heights[k], ue = ee.widths[k];
        let he = W - ie.top, ge = 0 - ie.left;
        switch (Y) {
          case "middle":
            he -= de / 2;
            break;
          case "bottom":
            he -= de;
            break;
        }
        switch (H) {
          case "center":
            ge -= ue / 2;
            break;
          case "right":
            ge -= ue;
            break;
          case "inner":
            k === I - 1 ? ge -= ue : k > 0 && (ge -= ue / 2);
            break;
        }
        B = {
          left: ge,
          top: he,
          width: ue + ie.width,
          height: de + ie.height,
          color: G.backdropColor
        };
      }
      O.push({
        label: N,
        font: z,
        textOffset: W,
        options: {
          rotation: E,
          color: X,
          strokeColor: te,
          strokeWidth: re,
          textAlign: Q,
          textBaseline: Y,
          translation: [
            P,
            F
          ],
          backdrop: B
        }
      });
    }
    return O;
  }
  _getXAxisLabelAlignment() {
    const { position: t, ticks: n } = this.options;
    if (-Yh(this.labelRotation))
      return t === "top" ? "left" : "right";
    let o = "center";
    return n.align === "start" ? o = "left" : n.align === "end" ? o = "right" : n.align === "inner" && (o = "inner"), o;
  }
  _getYAxisLabelAlignment(t) {
    const { position: n, ticks: { crossAlign: r, mirror: o, padding: s } } = this.options, a = this._getLabelSizes(), c = t + s, f = a.widest.width;
    let m, g;
    return n === "left" ? o ? (g = this.right + s, r === "near" ? m = "left" : r === "center" ? (m = "center", g += f / 2) : (m = "right", g += f)) : (g = this.right - c, r === "near" ? m = "right" : r === "center" ? (m = "center", g -= f / 2) : (m = "left", g = this.left)) : n === "right" ? o ? (g = this.left + s, r === "near" ? m = "right" : r === "center" ? (m = "center", g -= f / 2) : (m = "left", g -= f)) : (g = this.left + c, r === "near" ? m = "left" : r === "center" ? (m = "center", g += f / 2) : (m = "right", g = this.right)) : m = "right", {
      textAlign: m,
      x: g
    };
  }
  _computeLabelArea() {
    if (this.options.ticks.mirror)
      return;
    const t = this.chart, n = this.options.position;
    if (n === "left" || n === "right")
      return {
        top: 0,
        left: this.left,
        bottom: t.height,
        right: this.right
      };
    if (n === "top" || n === "bottom")
      return {
        top: this.top,
        left: 0,
        bottom: this.bottom,
        right: t.width
      };
  }
  drawBackground() {
    const { ctx: t, options: { backgroundColor: n }, left: r, top: o, width: s, height: a } = this;
    n && (t.save(), t.fillStyle = n, t.fillRect(r, o, s, a), t.restore());
  }
  getLineWidthForValue(t) {
    const n = this.options.grid;
    if (!this._isVisible() || !n.display)
      return 0;
    const o = this.ticks.findIndex((s) => s.value === t);
    return o >= 0 ? n.setContext(this.getContext(o)).lineWidth : 0;
  }
  drawGrid(t) {
    const n = this.options.grid, r = this.ctx, o = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(t));
    let s, a;
    const c = (f, m, g) => {
      !g.width || !g.color || (r.save(), r.lineWidth = g.width, r.strokeStyle = g.color, r.setLineDash(g.borderDash || []), r.lineDashOffset = g.borderDashOffset, r.beginPath(), r.moveTo(f.x, f.y), r.lineTo(m.x, m.y), r.stroke(), r.restore());
    };
    if (n.display)
      for (s = 0, a = o.length; s < a; ++s) {
        const f = o[s];
        n.drawOnChartArea && c({
          x: f.x1,
          y: f.y1
        }, {
          x: f.x2,
          y: f.y2
        }, f), n.drawTicks && c({
          x: f.tx1,
          y: f.ty1
        }, {
          x: f.tx2,
          y: f.ty2
        }, {
          color: f.tickColor,
          width: f.tickWidth,
          borderDash: f.tickBorderDash,
          borderDashOffset: f.tickBorderDashOffset
        });
      }
  }
  drawBorder() {
    const { chart: t, ctx: n, options: { border: r, grid: o } } = this, s = r.setContext(this.getContext()), a = r.display ? s.width : 0;
    if (!a)
      return;
    const c = o.setContext(this.getContext(0)).lineWidth, f = this._borderValue;
    let m, g, y, w;
    this.isHorizontal() ? (m = Ih(t, this.left, a) - a / 2, g = Ih(t, this.right, c) + c / 2, y = w = f) : (y = Ih(t, this.top, a) - a / 2, w = Ih(t, this.bottom, c) + c / 2, m = g = f), n.save(), n.lineWidth = s.width, n.strokeStyle = s.color, n.beginPath(), n.moveTo(m, y), n.lineTo(g, w), n.stroke(), n.restore();
  }
  drawLabels(t) {
    if (!this.options.ticks.display)
      return;
    const r = this.ctx, o = this._computeLabelArea();
    o && Z_(r, o);
    const s = this.getLabelItems(t);
    for (const a of s) {
      const c = a.options, f = a.font, m = a.label, g = a.textOffset;
      XT(r, m, 0, g, f, c);
    }
    o && eO(r);
  }
  drawTitle() {
    const { ctx: t, options: { position: n, title: r, reverse: o } } = this;
    if (!r.display)
      return;
    const s = sa(r.font), a = vu(r.padding), c = r.align;
    let f = s.lineHeight / 2;
    n === "bottom" || n === "center" || or(n) ? (f += a.bottom, _i(r.text) && (f += s.lineHeight * (r.text.length - 1))) : f += a.top;
    const { titleX: m, titleY: g, maxWidth: y, rotation: w } = Lce(this, f, n, c);
    XT(t, r.text, 0, 0, s, {
      color: r.color,
      maxWidth: y,
      rotation: w,
      textAlign: Nce(c, n, o),
      textBaseline: "middle",
      translation: [
        m,
        g
      ]
    });
  }
  draw(t) {
    this._isVisible() && (this.drawBackground(), this.drawGrid(t), this.drawBorder(), this.drawTitle(), this.drawLabels(t));
  }
  _layers() {
    const t = this.options, n = t.ticks && t.ticks.z || 0, r = Qn(t.grid && t.grid.z, -1), o = Qn(t.border && t.border.z, 0);
    return !this._isVisible() || this.draw !== gy.prototype.draw ? [
      {
        z: n,
        draw: (s) => {
          this.draw(s);
        }
      }
    ] : [
      {
        z: r,
        draw: (s) => {
          this.drawBackground(), this.drawGrid(s), this.drawTitle();
        }
      },
      {
        z: o,
        draw: () => {
          this.drawBorder();
        }
      },
      {
        z: n,
        draw: (s) => {
          this.drawLabels(s);
        }
      }
    ];
  }
  getMatchingVisibleMetas(t) {
    const n = this.chart.getSortedVisibleDatasetMetas(), r = this.axis + "AxisID", o = [];
    let s, a;
    for (s = 0, a = n.length; s < a; ++s) {
      const c = n[s];
      c[r] === this.id && (!t || c.type === t) && o.push(c);
    }
    return o;
  }
  _resolveTickFontOptions(t) {
    const n = this.options.ticks.setContext(this.getContext(t));
    return sa(n.font);
  }
  _maxDigits() {
    const t = this._resolveTickFontOptions(0).lineHeight;
    return (this.isHorizontal() ? this.width : this.height) / t;
  }
}
class QE {
  constructor(t, n, r) {
    this.type = t, this.scope = n, this.override = r, this.items = /* @__PURE__ */ Object.create(null);
  }
  isForType(t) {
    return Object.prototype.isPrototypeOf.call(this.type.prototype, t.prototype);
  }
  register(t) {
    const n = Object.getPrototypeOf(t);
    let r;
    Fce(n) && (r = this.register(n));
    const o = this.items, s = t.id, a = this.scope + "." + s;
    if (!s)
      throw new Error("class does not have id: " + t);
    return s in o || (o[s] = t, $ce(t, a, r), this.override && jo.override(t.id, t.overrides)), a;
  }
  get(t) {
    return this.items[t];
  }
  unregister(t) {
    const n = this.items, r = t.id, o = this.scope;
    r in n && delete n[r], o && r in jo[o] && (delete jo[o][r], this.override && delete um[r]);
  }
}
function $ce(e, t, n) {
  const r = GS(/* @__PURE__ */ Object.create(null), [
    n ? jo.get(n) : {},
    jo.get(t),
    e.defaults
  ]);
  jo.set(t, r), e.defaultRoutes && jce(t, e.defaultRoutes), e.descriptors && jo.describe(t, e.descriptors);
}
function jce(e, t) {
  Object.keys(t).forEach((n) => {
    const r = n.split("."), o = r.pop(), s = [
      e
    ].concat(r).join("."), a = t[n].split("."), c = a.pop(), f = a.join(".");
    jo.route(s, o, f, c);
  });
}
function Fce(e) {
  return "id" in e && "defaults" in e;
}
class zce {
  constructor() {
    this.controllers = new QE(hT, "datasets", !0), this.elements = new QE(my, "elements"), this.plugins = new QE(Object, "plugins"), this.scales = new QE(gy, "scales"), this._typedRegistries = [
      this.controllers,
      this.scales,
      this.elements
    ];
  }
  add(...t) {
    this._each("register", t);
  }
  remove(...t) {
    this._each("unregister", t);
  }
  addControllers(...t) {
    this._each("register", t, this.controllers);
  }
  addElements(...t) {
    this._each("register", t, this.elements);
  }
  addPlugins(...t) {
    this._each("register", t, this.plugins);
  }
  addScales(...t) {
    this._each("register", t, this.scales);
  }
  getController(t) {
    return this._get(t, this.controllers, "controller");
  }
  getElement(t) {
    return this._get(t, this.elements, "element");
  }
  getPlugin(t) {
    return this._get(t, this.plugins, "plugin");
  }
  getScale(t) {
    return this._get(t, this.scales, "scale");
  }
  removeControllers(...t) {
    this._each("unregister", t, this.controllers);
  }
  removeElements(...t) {
    this._each("unregister", t, this.elements);
  }
  removePlugins(...t) {
    this._each("unregister", t, this.plugins);
  }
  removeScales(...t) {
    this._each("unregister", t, this.scales);
  }
  _each(t, n, r) {
    [
      ...n
    ].forEach((o) => {
      const s = r || this._getRegistryForType(o);
      r || s.isForType(o) || s === this.plugins && o.id ? this._exec(t, s, o) : kr(o, (a) => {
        const c = r || this._getRegistryForType(a);
        this._exec(t, c, a);
      });
    });
  }
  _exec(t, n, r) {
    const o = bD(t);
    Zr(r["before" + o], [], r), n[t](r), Zr(r["after" + o], [], r);
  }
  _getRegistryForType(t) {
    for (let n = 0; n < this._typedRegistries.length; n++) {
      const r = this._typedRegistries[n];
      if (r.isForType(t))
        return r;
    }
    return this.plugins;
  }
  _get(t, n, r) {
    const o = n.get(t);
    if (o === void 0)
      throw new Error('"' + t + '" is not a registered ' + r + ".");
    return o;
  }
}
var ac = /* @__PURE__ */ new zce();
class Bce {
  constructor() {
    this._init = void 0;
  }
  notify(t, n, r, o) {
    if (n === "beforeInit" && (this._init = this._createDescriptors(t, !0), this._notify(this._init, t, "install")), this._init === void 0)
      return;
    const s = o ? this._descriptors(t).filter(o) : this._descriptors(t), a = this._notify(s, t, n, r);
    return n === "afterDestroy" && (this._notify(s, t, "stop"), this._notify(this._init, t, "uninstall"), this._init = void 0), a;
  }
  _notify(t, n, r, o) {
    o = o || {};
    for (const s of t) {
      const a = s.plugin, c = a[r], f = [
        n,
        o,
        s.options
      ];
      if (Zr(c, f, a) === !1 && o.cancelable)
        return !1;
    }
    return !0;
  }
  invalidate() {
    fo(this._cache) || (this._oldCache = this._cache, this._cache = void 0);
  }
  _descriptors(t) {
    if (this._cache)
      return this._cache;
    const n = this._cache = this._createDescriptors(t);
    return this._notifyStateChanges(t), n;
  }
  _createDescriptors(t, n) {
    const r = t && t.config, o = Qn(r.options && r.options.plugins, {}), s = Hce(r);
    return o === !1 && !n ? [] : Uce(t, s, o, n);
  }
  _notifyStateChanges(t) {
    const n = this._oldCache || [], r = this._cache, o = (s, a) => s.filter((c) => !a.some((f) => c.plugin.id === f.plugin.id));
    this._notify(o(n, r), t, "stop"), this._notify(o(r, n), t, "start");
  }
}
function Hce(e) {
  const t = {}, n = [], r = Object.keys(ac.plugins.items);
  for (let s = 0; s < r.length; s++)
    n.push(ac.getPlugin(r[s]));
  const o = e.plugins || [];
  for (let s = 0; s < o.length; s++) {
    const a = o[s];
    n.indexOf(a) === -1 && (n.push(a), t[a.id] = !0);
  }
  return {
    plugins: n,
    localIds: t
  };
}
function Vce(e, t) {
  return !t && e === !1 ? null : e === !0 ? {} : e;
}
function Uce(e, { plugins: t, localIds: n }, r, o) {
  const s = [], a = e.getContext();
  for (const c of t) {
    const f = c.id, m = Vce(r[f], o);
    m !== null && s.push({
      plugin: c,
      options: Wce(e.config, {
        plugin: c,
        local: n[f]
      }, m, a)
    });
  }
  return s;
}
function Wce(e, { plugin: t, local: n }, r, o) {
  const s = e.pluginScopeKeys(t), a = e.getOptionScopes(r, s);
  return n && t.defaults && a.push(t.defaults), e.createResolver(a, o, [
    ""
  ], {
    scriptable: !1,
    indexable: !1,
    allKeys: !0
  });
}
function UM(e, t) {
  const n = jo.datasets[e] || {};
  return ((t.datasets || {})[e] || {}).indexAxis || t.indexAxis || n.indexAxis || "x";
}
function Gce(e, t) {
  let n = e;
  return e === "_index_" ? n = t : e === "_value_" && (n = t === "x" ? "y" : "x"), n;
}
function qce(e, t) {
  return e === t ? "_index_" : "_value_";
}
function Y2(e) {
  if (e === "x" || e === "y" || e === "r")
    return e;
}
function Kce(e) {
  if (e === "top" || e === "bottom")
    return "x";
  if (e === "left" || e === "right")
    return "y";
}
function WM(e, ...t) {
  if (Y2(e))
    return e;
  for (const n of t) {
    const r = n.axis || Kce(n.position) || e.length > 1 && Y2(e[0].toLowerCase());
    if (r)
      return r;
  }
  throw new Error(`Cannot determine type of '${e}' axis. Please provide 'axis' or 'position' option.`);
}
function X2(e, t, n) {
  if (n[t + "AxisID"] === e)
    return {
      axis: t
    };
}
function Yce(e, t) {
  if (t.data && t.data.datasets) {
    const n = t.data.datasets.filter((r) => r.xAxisID === e || r.yAxisID === e);
    if (n.length)
      return X2(e, "x", n[0]) || X2(e, "y", n[0]);
  }
  return {};
}
function Xce(e, t) {
  const n = um[e.type] || {
    scales: {}
  }, r = t.scales || {}, o = UM(e.type, t), s = /* @__PURE__ */ Object.create(null);
  return Object.keys(r).forEach((a) => {
    const c = r[a];
    if (!or(c))
      return console.error(`Invalid scale configuration for scale: ${a}`);
    if (c._proxy)
      return console.warn(`Ignoring resolver passed as options for scale: ${a}`);
    const f = WM(a, c, Yce(a, e), jo.scales[c.type]), m = qce(f, o), g = n.scales || {};
    s[a] = wS(/* @__PURE__ */ Object.create(null), [
      {
        axis: f
      },
      c,
      g[f],
      g[m]
    ]);
  }), e.data.datasets.forEach((a) => {
    const c = a.type || e.type, f = a.indexAxis || UM(c, t), g = (um[c] || {}).scales || {};
    Object.keys(g).forEach((y) => {
      const w = Gce(y, f), C = a[w + "AxisID"] || w;
      s[C] = s[C] || /* @__PURE__ */ Object.create(null), wS(s[C], [
        {
          axis: w
        },
        r[C],
        g[y]
      ]);
    });
  }), Object.keys(s).forEach((a) => {
    const c = s[a];
    wS(c, [
      jo.scales[c.type],
      jo.scale
    ]);
  }), s;
}
function n5(e) {
  const t = e.options || (e.options = {});
  t.plugins = Qn(t.plugins, {}), t.scales = Xce(e, t);
}
function r5(e) {
  return e = e || {}, e.datasets = e.datasets || [], e.labels = e.labels || [], e;
}
function Qce(e) {
  return e = e || {}, e.data = r5(e.data), n5(e), e;
}
const Q2 = /* @__PURE__ */ new Map(), o5 = /* @__PURE__ */ new Set();
function JE(e, t) {
  let n = Q2.get(e);
  return n || (n = t(), Q2.set(e, n), o5.add(n)), n;
}
const Gw = (e, t, n) => {
  const r = GT(t, n);
  r !== void 0 && e.add(r);
};
class Jce {
  constructor(t) {
    this._config = Qce(t), this._scopeCache = /* @__PURE__ */ new Map(), this._resolverCache = /* @__PURE__ */ new Map();
  }
  get platform() {
    return this._config.platform;
  }
  get type() {
    return this._config.type;
  }
  set type(t) {
    this._config.type = t;
  }
  get data() {
    return this._config.data;
  }
  set data(t) {
    this._config.data = r5(t);
  }
  get options() {
    return this._config.options;
  }
  set options(t) {
    this._config.options = t;
  }
  get plugins() {
    return this._config.plugins;
  }
  update() {
    const t = this._config;
    this.clearCache(), n5(t);
  }
  clearCache() {
    this._scopeCache.clear(), this._resolverCache.clear();
  }
  datasetScopeKeys(t) {
    return JE(t, () => [
      [
        `datasets.${t}`,
        ""
      ]
    ]);
  }
  datasetAnimationScopeKeys(t, n) {
    return JE(`${t}.transition.${n}`, () => [
      [
        `datasets.${t}.transitions.${n}`,
        `transitions.${n}`
      ],
      [
        `datasets.${t}`,
        ""
      ]
    ]);
  }
  datasetElementScopeKeys(t, n) {
    return JE(`${t}-${n}`, () => [
      [
        `datasets.${t}.elements.${n}`,
        `datasets.${t}`,
        `elements.${n}`,
        ""
      ]
    ]);
  }
  pluginScopeKeys(t) {
    const n = t.id, r = this.type;
    return JE(`${r}-plugin-${n}`, () => [
      [
        `plugins.${n}`,
        ...t.additionalOptionScopes || []
      ]
    ]);
  }
  _cachedScopes(t, n) {
    const r = this._scopeCache;
    let o = r.get(t);
    return (!o || n) && (o = /* @__PURE__ */ new Map(), r.set(t, o)), o;
  }
  getOptionScopes(t, n, r) {
    const { options: o, type: s } = this, a = this._cachedScopes(t, r), c = a.get(n);
    if (c)
      return c;
    const f = /* @__PURE__ */ new Set();
    n.forEach((g) => {
      t && (f.add(t), g.forEach((y) => Gw(f, t, y))), g.forEach((y) => Gw(f, o, y)), g.forEach((y) => Gw(f, um[s] || {}, y)), g.forEach((y) => Gw(f, jo, y)), g.forEach((y) => Gw(f, BM, y));
    });
    const m = Array.from(f);
    return m.length === 0 && m.push(/* @__PURE__ */ Object.create(null)), o5.has(n) && a.set(n, m), m;
  }
  chartOptionScopes() {
    const { options: t, type: n } = this;
    return [
      t,
      um[n] || {},
      jo.datasets[n] || {},
      {
        type: n
      },
      jo,
      BM
    ];
  }
  resolveNamedOptions(t, n, r, o = [
    ""
  ]) {
    const s = {
      $shared: !0
    }, { resolver: a, subPrefixes: c } = J2(this._resolverCache, t, o);
    let f = a;
    if (ede(a, n)) {
      s.$shared = !1, r = Zf(r) ? r() : r;
      const m = this.createResolver(t, r, c);
      f = Zv(a, r, m);
    }
    for (const m of n)
      s[m] = f[m];
    return s;
  }
  createResolver(t, n, r = [
    ""
  ], o) {
    const { resolver: s } = J2(this._resolverCache, t, r);
    return or(n) ? Zv(s, n, void 0, o) : s;
  }
}
function J2(e, t, n) {
  let r = e.get(t);
  r || (r = /* @__PURE__ */ new Map(), e.set(t, r));
  const o = n.join();
  let s = r.get(o);
  return s || (s = {
    resolver: CD(t, n),
    subPrefixes: n.filter((c) => !c.toLowerCase().includes("hover"))
  }, r.set(o, s)), s;
}
const Zce = (e) => or(e) && Object.getOwnPropertyNames(e).some((t) => Zf(e[t]));
function ede(e, t) {
  const { isScriptable: n, isIndexable: r } = jU(e);
  for (const o of t) {
    const s = n(o), a = r(o), c = (a || s) && e[o];
    if (s && (Zf(c) || Zce(c)) || a && _i(c))
      return !0;
  }
  return !1;
}
var tde = "4.5.1";
const nde = [
  "top",
  "bottom",
  "left",
  "right",
  "chartArea"
];
function Z2(e, t) {
  return e === "top" || e === "bottom" || nde.indexOf(e) === -1 && t === "x";
}
function ez(e, t) {
  return function(n, r) {
    return n[e] === r[e] ? n[t] - r[t] : n[e] - r[e];
  };
}
function tz(e) {
  const t = e.chart, n = t.options.animation;
  t.notifyPlugins("afterRender"), Zr(n && n.onComplete, [
    e
  ], t);
}
function rde(e) {
  const t = e.chart, n = t.options.animation;
  Zr(n && n.onProgress, [
    e
  ], t);
}
function i5(e) {
  return TD() && typeof e == "string" ? e = document.getElementById(e) : e && e.length && (e = e[0]), e && e.canvas && (e = e.canvas), e;
}
const gT = {}, nz = (e) => {
  const t = i5(e);
  return Object.values(gT).filter((n) => n.canvas === t).pop();
};
function ode(e, t, n) {
  const r = Object.keys(e);
  for (const o of r) {
    const s = +o;
    if (s >= t) {
      const a = e[o];
      delete e[o], (n > 0 || s > t) && (e[s + n] = a);
    }
  }
}
function ide(e, t, n, r) {
  return !n || e.type === "mouseout" ? null : r ? t : e;
}
class Sd {
  static register(...t) {
    ac.add(...t), rz();
  }
  static unregister(...t) {
    ac.remove(...t), rz();
  }
  constructor(t, n) {
    const r = this.config = new Jce(n), o = i5(t), s = nz(o);
    if (s)
      throw new Error("Canvas is already in use. Chart with ID '" + s.id + "' must be destroyed before the canvas with ID '" + s.canvas.id + "' can be reused.");
    const a = r.createResolver(r.chartOptionScopes(), this.getContext());
    this.platform = new (r.platform || xce(o))(), this.platform.updateConfig(r);
    const c = this.platform.acquireContext(o, a.aspectRatio), f = c && c.canvas, m = f && f.height, g = f && f.width;
    if (this.id = ple(), this.ctx = c, this.canvas = f, this.width = g, this.height = m, this._options = a, this._aspectRatio = this.aspectRatio, this._layers = [], this._metasets = [], this._stacks = void 0, this.boxes = [], this.currentDevicePixelRatio = void 0, this.chartArea = void 0, this._active = [], this._lastEvent = void 0, this._listeners = {}, this._responsiveListeners = void 0, this._sortedMetasets = [], this.scales = {}, this._plugins = new Bce(), this.$proxies = {}, this._hiddenIndices = {}, this.attached = !1, this._animationsDisabled = void 0, this.$context = void 0, this._doResize = Ale((y) => this.update(y), a.resizeDelay || 0), this._dataChanges = [], gT[this.id] = this, !c || !f) {
      console.error("Failed to create chart: can't acquire context from the given item");
      return;
    }
    gd.listen(this, "complete", tz), gd.listen(this, "progress", rde), this._initialize(), this.attached && this.update();
  }
  get aspectRatio() {
    const { options: { aspectRatio: t, maintainAspectRatio: n }, width: r, height: o, _aspectRatio: s } = this;
    return fo(t) ? n && s ? s : o ? r / o : null : t;
  }
  get data() {
    return this.config.data;
  }
  set data(t) {
    this.config.data = t;
  }
  get options() {
    return this._options;
  }
  set options(t) {
    this.config.options = t;
  }
  get registry() {
    return ac;
  }
  _initialize() {
    return this.notifyPlugins("beforeInit"), this.options.responsive ? this.resize() : R2(this, this.options.devicePixelRatio), this.bindEvents(), this.notifyPlugins("afterInit"), this;
  }
  clear() {
    return T2(this.canvas, this.ctx), this;
  }
  stop() {
    return gd.stop(this), this;
  }
  resize(t, n) {
    gd.running(this) ? this._resizeBeforeDraw = {
      width: t,
      height: n
    } : this._resize(t, n);
  }
  _resize(t, n) {
    const r = this.options, o = this.canvas, s = r.maintainAspectRatio && this.aspectRatio, a = this.platform.getMaximumSize(o, t, n, s), c = r.devicePixelRatio || this.platform.getDevicePixelRatio(), f = this.width ? "resize" : "attach";
    this.width = a.width, this.height = a.height, this._aspectRatio = this.aspectRatio, R2(this, c, !0) && (this.notifyPlugins("resize", {
      size: a
    }), Zr(r.onResize, [
      this,
      a
    ], this), this.attached && this._doResize(f) && this.render());
  }
  ensureScalesHaveIDs() {
    const n = this.options.scales || {};
    kr(n, (r, o) => {
      r.id = o;
    });
  }
  buildOrUpdateScales() {
    const t = this.options, n = t.scales, r = this.scales, o = Object.keys(r).reduce((a, c) => (a[c] = !1, a), {});
    let s = [];
    n && (s = s.concat(Object.keys(n).map((a) => {
      const c = n[a], f = WM(a, c), m = f === "r", g = f === "x";
      return {
        options: c,
        dposition: m ? "chartArea" : g ? "bottom" : "left",
        dtype: m ? "radialLinear" : g ? "category" : "linear"
      };
    }))), kr(s, (a) => {
      const c = a.options, f = c.id, m = WM(f, c), g = Qn(c.type, a.dtype);
      (c.position === void 0 || Z2(c.position, m) !== Z2(a.dposition)) && (c.position = a.dposition), o[f] = !0;
      let y = null;
      if (f in r && r[f].type === g)
        y = r[f];
      else {
        const w = ac.getScale(g);
        y = new w({
          id: f,
          type: g,
          ctx: this.ctx,
          chart: this
        }), r[y.id] = y;
      }
      y.init(c, t);
    }), kr(o, (a, c) => {
      a || delete r[c];
    }), kr(r, (a) => {
      Bf.configure(this, a, a.options), Bf.addBox(this, a);
    });
  }
  _updateMetasets() {
    const t = this._metasets, n = this.data.datasets.length, r = t.length;
    if (t.sort((o, s) => o.index - s.index), r > n) {
      for (let o = n; o < r; ++o)
        this._destroyDatasetMeta(o);
      t.splice(n, r - n);
    }
    this._sortedMetasets = t.slice(0).sort(ez("order", "index"));
  }
  _removeUnreferencedMetasets() {
    const { _metasets: t, data: { datasets: n } } = this;
    t.length > n.length && delete this._stacks, t.forEach((r, o) => {
      n.filter((s) => s === r._dataset).length === 0 && this._destroyDatasetMeta(o);
    });
  }
  buildOrUpdateControllers() {
    const t = [], n = this.data.datasets;
    let r, o;
    for (this._removeUnreferencedMetasets(), r = 0, o = n.length; r < o; r++) {
      const s = n[r];
      let a = this.getDatasetMeta(r);
      const c = s.type || this.config.type;
      if (a.type && a.type !== c && (this._destroyDatasetMeta(r), a = this.getDatasetMeta(r)), a.type = c, a.indexAxis = s.indexAxis || UM(c, this.options), a.order = s.order || 0, a.index = r, a.label = "" + s.label, a.visible = this.isDatasetVisible(r), a.controller)
        a.controller.updateIndex(r), a.controller.linkScales();
      else {
        const f = ac.getController(c), { datasetElementType: m, dataElementType: g } = jo.datasets[c];
        Object.assign(f, {
          dataElementType: ac.getElement(g),
          datasetElementType: m && ac.getElement(m)
        }), a.controller = new f(this, r), t.push(a.controller);
      }
    }
    return this._updateMetasets(), t;
  }
  _resetElements() {
    kr(this.data.datasets, (t, n) => {
      this.getDatasetMeta(n).controller.reset();
    }, this);
  }
  reset() {
    this._resetElements(), this.notifyPlugins("reset");
  }
  update(t) {
    const n = this.config;
    n.update();
    const r = this._options = n.createResolver(n.chartOptionScopes(), this.getContext()), o = this._animationsDisabled = !r.animation;
    if (this._updateScales(), this._checkEventBindings(), this._updateHiddenIndices(), this._plugins.invalidate(), this.notifyPlugins("beforeUpdate", {
      mode: t,
      cancelable: !0
    }) === !1)
      return;
    const s = this.buildOrUpdateControllers();
    this.notifyPlugins("beforeElementsUpdate");
    let a = 0;
    for (let m = 0, g = this.data.datasets.length; m < g; m++) {
      const { controller: y } = this.getDatasetMeta(m), w = !o && s.indexOf(y) === -1;
      y.buildOrUpdateElements(w), a = Math.max(+y.getMaxOverflow(), a);
    }
    a = this._minPadding = r.layout.autoPadding ? a : 0, this._updateLayout(a), o || kr(s, (m) => {
      m.reset();
    }), this._updateDatasets(t), this.notifyPlugins("afterUpdate", {
      mode: t
    }), this._layers.sort(ez("z", "_idx"));
    const { _active: c, _lastEvent: f } = this;
    f ? this._eventHandler(f, !0) : c.length && this._updateHoverStyles(c, c, !0), this.render();
  }
  _updateScales() {
    kr(this.scales, (t) => {
      Bf.removeBox(this, t);
    }), this.ensureScalesHaveIDs(), this.buildOrUpdateScales();
  }
  _checkEventBindings() {
    const t = this.options, n = new Set(Object.keys(this._listeners)), r = new Set(t.events);
    (!m2(n, r) || !!this._responsiveListeners !== t.responsive) && (this.unbindEvents(), this.bindEvents());
  }
  _updateHiddenIndices() {
    const { _hiddenIndices: t } = this, n = this._getUniformDataChanges() || [];
    for (const { method: r, start: o, count: s } of n) {
      const a = r === "_removeElements" ? -s : s;
      ode(t, o, a);
    }
  }
  _getUniformDataChanges() {
    const t = this._dataChanges;
    if (!t || !t.length)
      return;
    this._dataChanges = [];
    const n = this.data.datasets.length, r = (s) => new Set(t.filter((a) => a[0] === s).map((a, c) => c + "," + a.splice(1).join(","))), o = r(0);
    for (let s = 1; s < n; s++)
      if (!m2(o, r(s)))
        return;
    return Array.from(o).map((s) => s.split(",")).map((s) => ({
      method: s[1],
      start: +s[2],
      count: +s[3]
    }));
  }
  _updateLayout(t) {
    if (this.notifyPlugins("beforeLayout", {
      cancelable: !0
    }) === !1)
      return;
    Bf.update(this, this.width, this.height, t);
    const n = this.chartArea, r = n.width <= 0 || n.height <= 0;
    this._layers = [], kr(this.boxes, (o) => {
      r && o.position === "chartArea" || (o.configure && o.configure(), this._layers.push(...o._layers()));
    }, this), this._layers.forEach((o, s) => {
      o._idx = s;
    }), this.notifyPlugins("afterLayout");
  }
  _updateDatasets(t) {
    if (this.notifyPlugins("beforeDatasetsUpdate", {
      mode: t,
      cancelable: !0
    }) !== !1) {
      for (let n = 0, r = this.data.datasets.length; n < r; ++n)
        this.getDatasetMeta(n).controller.configure();
      for (let n = 0, r = this.data.datasets.length; n < r; ++n)
        this._updateDataset(n, Zf(t) ? t({
          datasetIndex: n
        }) : t);
      this.notifyPlugins("afterDatasetsUpdate", {
        mode: t
      });
    }
  }
  _updateDataset(t, n) {
    const r = this.getDatasetMeta(t), o = {
      meta: r,
      index: t,
      mode: n,
      cancelable: !0
    };
    this.notifyPlugins("beforeDatasetUpdate", o) !== !1 && (r.controller._update(n), o.cancelable = !1, this.notifyPlugins("afterDatasetUpdate", o));
  }
  render() {
    this.notifyPlugins("beforeRender", {
      cancelable: !0
    }) !== !1 && (gd.has(this) ? this.attached && !gd.running(this) && gd.start(this) : (this.draw(), tz({
      chart: this
    })));
  }
  draw() {
    let t;
    if (this._resizeBeforeDraw) {
      const { width: r, height: o } = this._resizeBeforeDraw;
      this._resizeBeforeDraw = null, this._resize(r, o);
    }
    if (this.clear(), this.width <= 0 || this.height <= 0 || this.notifyPlugins("beforeDraw", {
      cancelable: !0
    }) === !1)
      return;
    const n = this._layers;
    for (t = 0; t < n.length && n[t].z <= 0; ++t)
      n[t].draw(this.chartArea);
    for (this._drawDatasets(); t < n.length; ++t)
      n[t].draw(this.chartArea);
    this.notifyPlugins("afterDraw");
  }
  _getSortedDatasetMetas(t) {
    const n = this._sortedMetasets, r = [];
    let o, s;
    for (o = 0, s = n.length; o < s; ++o) {
      const a = n[o];
      (!t || a.visible) && r.push(a);
    }
    return r;
  }
  getSortedVisibleDatasetMetas() {
    return this._getSortedDatasetMetas(!0);
  }
  _drawDatasets() {
    if (this.notifyPlugins("beforeDatasetsDraw", {
      cancelable: !0
    }) === !1)
      return;
    const t = this.getSortedVisibleDatasetMetas();
    for (let n = t.length - 1; n >= 0; --n)
      this._drawDataset(t[n]);
    this.notifyPlugins("afterDatasetsDraw");
  }
  _drawDataset(t) {
    const n = this.ctx, r = {
      meta: t,
      index: t.index,
      cancelable: !0
    }, o = KU(this, t);
    this.notifyPlugins("beforeDatasetDraw", r) !== !1 && (o && Z_(n, o), t.controller.draw(), o && eO(n), r.cancelable = !1, this.notifyPlugins("afterDatasetDraw", r));
  }
  isPointInArea(t) {
    return qS(t, this.chartArea, this._minPadding);
  }
  getElementsAtEventForMode(t, n, r, o) {
    const s = nce.modes[n];
    return typeof s == "function" ? s(this, t, r, o) : [];
  }
  getDatasetMeta(t) {
    const n = this.data.datasets[t], r = this._metasets;
    let o = r.filter((s) => s && s._dataset === n).pop();
    return o || (o = {
      type: null,
      data: [],
      dataset: null,
      controller: null,
      hidden: null,
      xAxisID: null,
      yAxisID: null,
      order: n && n.order || 0,
      index: t,
      _dataset: n,
      _parsed: [],
      _sorted: !1
    }, r.push(o)), o;
  }
  getContext() {
    return this.$context || (this.$context = gm(null, {
      chart: this,
      type: "chart"
    }));
  }
  getVisibleDatasetCount() {
    return this.getSortedVisibleDatasetMetas().length;
  }
  isDatasetVisible(t) {
    const n = this.data.datasets[t];
    if (!n)
      return !1;
    const r = this.getDatasetMeta(t);
    return typeof r.hidden == "boolean" ? !r.hidden : !n.hidden;
  }
  setDatasetVisibility(t, n) {
    const r = this.getDatasetMeta(t);
    r.hidden = !n;
  }
  toggleDataVisibility(t) {
    this._hiddenIndices[t] = !this._hiddenIndices[t];
  }
  getDataVisibility(t) {
    return !this._hiddenIndices[t];
  }
  _updateVisibility(t, n, r) {
    const o = r ? "show" : "hide", s = this.getDatasetMeta(t), a = s.controller._resolveAnimations(void 0, o);
    qT(n) ? (s.data[n].hidden = !r, this.update()) : (this.setDatasetVisibility(t, r), a.update(s, {
      visible: r
    }), this.update((c) => c.datasetIndex === t ? o : void 0));
  }
  hide(t, n) {
    this._updateVisibility(t, n, !1);
  }
  show(t, n) {
    this._updateVisibility(t, n, !0);
  }
  _destroyDatasetMeta(t) {
    const n = this._metasets[t];
    n && n.controller && n.controller._destroy(), delete this._metasets[t];
  }
  _stop() {
    let t, n;
    for (this.stop(), gd.remove(this), t = 0, n = this.data.datasets.length; t < n; ++t)
      this._destroyDatasetMeta(t);
  }
  destroy() {
    this.notifyPlugins("beforeDestroy");
    const { canvas: t, ctx: n } = this;
    this._stop(), this.config.clearCache(), t && (this.unbindEvents(), T2(t, n), this.platform.releaseContext(n), this.canvas = null, this.ctx = null), delete gT[this.id], this.notifyPlugins("afterDestroy");
  }
  toBase64Image(...t) {
    return this.canvas.toDataURL(...t);
  }
  bindEvents() {
    this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : this.attached = !0;
  }
  bindUserEvents() {
    const t = this._listeners, n = this.platform, r = (s, a) => {
      n.addEventListener(this, s, a), t[s] = a;
    }, o = (s, a, c) => {
      s.offsetX = a, s.offsetY = c, this._eventHandler(s);
    };
    kr(this.options.events, (s) => r(s, o));
  }
  bindResponsiveEvents() {
    this._responsiveListeners || (this._responsiveListeners = {});
    const t = this._responsiveListeners, n = this.platform, r = (f, m) => {
      n.addEventListener(this, f, m), t[f] = m;
    }, o = (f, m) => {
      t[f] && (n.removeEventListener(this, f, m), delete t[f]);
    }, s = (f, m) => {
      this.canvas && this.resize(f, m);
    };
    let a;
    const c = () => {
      o("attach", c), this.attached = !0, this.resize(), r("resize", s), r("detach", a);
    };
    a = () => {
      this.attached = !1, o("resize", s), this._stop(), this._resize(0, 0), r("attach", c);
    }, n.isAttached(this.canvas) ? c() : a();
  }
  unbindEvents() {
    kr(this._listeners, (t, n) => {
      this.platform.removeEventListener(this, n, t);
    }), this._listeners = {}, kr(this._responsiveListeners, (t, n) => {
      this.platform.removeEventListener(this, n, t);
    }), this._responsiveListeners = void 0;
  }
  updateHoverStyle(t, n, r) {
    const o = r ? "set" : "remove";
    let s, a, c, f;
    for (n === "dataset" && (s = this.getDatasetMeta(t[0].datasetIndex), s.controller["_" + o + "DatasetHoverStyle"]()), c = 0, f = t.length; c < f; ++c) {
      a = t[c];
      const m = a && this.getDatasetMeta(a.datasetIndex).controller;
      m && m[o + "HoverStyle"](a.element, a.datasetIndex, a.index);
    }
  }
  getActiveElements() {
    return this._active || [];
  }
  setActiveElements(t) {
    const n = this._active || [], r = t.map(({ datasetIndex: s, index: a }) => {
      const c = this.getDatasetMeta(s);
      if (!c)
        throw new Error("No dataset found at index " + s);
      return {
        datasetIndex: s,
        element: c.data[a],
        index: a
      };
    });
    !UT(r, n) && (this._active = r, this._lastEvent = null, this._updateHoverStyles(r, n));
  }
  notifyPlugins(t, n, r) {
    return this._plugins.notify(this, t, n, r);
  }
  isPluginEnabled(t) {
    return this._plugins._cache.filter((n) => n.plugin.id === t).length === 1;
  }
  _updateHoverStyles(t, n, r) {
    const o = this.options.hover, s = (f, m) => f.filter((g) => !m.some((y) => g.datasetIndex === y.datasetIndex && g.index === y.index)), a = s(n, t), c = r ? t : s(t, n);
    a.length && this.updateHoverStyle(a, o.mode, !1), c.length && o.mode && this.updateHoverStyle(c, o.mode, !0);
  }
  _eventHandler(t, n) {
    const r = {
      event: t,
      replay: n,
      cancelable: !0,
      inChartArea: this.isPointInArea(t)
    }, o = (a) => (a.options.events || this.options.events).includes(t.native.type);
    if (this.notifyPlugins("beforeEvent", r, o) === !1)
      return;
    const s = this._handleEvent(t, n, r.inChartArea);
    return r.cancelable = !1, this.notifyPlugins("afterEvent", r, o), (s || r.changed) && this.render(), this;
  }
  _handleEvent(t, n, r) {
    const { _active: o = [], options: s } = this, a = n, c = this._getActiveElements(t, o, r, a), f = ble(t), m = ide(t, this._lastEvent, r, f);
    r && (this._lastEvent = null, Zr(s.onHover, [
      t,
      c,
      this
    ], this), f && Zr(s.onClick, [
      t,
      c,
      this
    ], this));
    const g = !UT(c, o);
    return (g || n) && (this._active = c, this._updateHoverStyles(c, o, n)), this._lastEvent = m, g;
  }
  _getActiveElements(t, n, r, o) {
    if (t.type === "mouseout")
      return [];
    if (!r)
      return n;
    const s = this.options.hover;
    return this.getElementsAtEventForMode(t, s.mode, s, o);
  }
}
Dn(Sd, "defaults", jo), Dn(Sd, "instances", gT), Dn(Sd, "overrides", um), Dn(Sd, "registry", ac), Dn(Sd, "version", tde), Dn(Sd, "getChart", nz);
function rz() {
  return kr(Sd.instances, (e) => e._plugins.invalidate());
}
function s5(e, t, n = t) {
  e.lineCap = Qn(n.borderCapStyle, t.borderCapStyle), e.setLineDash(Qn(n.borderDash, t.borderDash)), e.lineDashOffset = Qn(n.borderDashOffset, t.borderDashOffset), e.lineJoin = Qn(n.borderJoinStyle, t.borderJoinStyle), e.lineWidth = Qn(n.borderWidth, t.borderWidth), e.strokeStyle = Qn(n.borderColor, t.borderColor);
}
function sde(e, t, n) {
  e.lineTo(n.x, n.y);
}
function ade(e) {
  return e.stepped ? Gle : e.tension || e.cubicInterpolationMode === "monotone" ? qle : sde;
}
function a5(e, t, n = {}) {
  const r = e.length, { start: o = 0, end: s = r - 1 } = n, { start: a, end: c } = t, f = Math.max(o, a), m = Math.min(s, c), g = o < a && s < a || o > c && s > c;
  return {
    count: r,
    start: f,
    loop: t.loop,
    ilen: m < f && !g ? r + m - f : m - f
  };
}
function lde(e, t, n, r) {
  const { points: o, options: s } = t, { count: a, start: c, loop: f, ilen: m } = a5(o, n, r), g = ade(s);
  let { move: y = !0, reverse: w } = r || {}, C, T, E;
  for (C = 0; C <= m; ++C)
    T = o[(c + (w ? m - C : C)) % a], !T.skip && (y ? (e.moveTo(T.x, T.y), y = !1) : g(e, E, T, w, s.stepped), E = T);
  return f && (T = o[(c + (w ? m : 0)) % a], g(e, E, T, w, s.stepped)), !!f;
}
function ude(e, t, n, r) {
  const o = t.points, { count: s, start: a, ilen: c } = a5(o, n, r), { move: f = !0, reverse: m } = r || {};
  let g = 0, y = 0, w, C, T, E, O, k;
  const I = (N) => (a + (m ? c - N : N)) % s, M = () => {
    E !== O && (e.lineTo(g, O), e.lineTo(g, E), e.lineTo(g, k));
  };
  for (f && (C = o[I(0)], e.moveTo(C.x, C.y)), w = 0; w <= c; ++w) {
    if (C = o[I(w)], C.skip)
      continue;
    const N = C.x, P = C.y, F = N | 0;
    F === T ? (P < E ? E = P : P > O && (O = P), g = (y * g + N) / ++y) : (M(), e.lineTo(N, P), T = F, y = 0, E = O = P), k = P;
  }
  M();
}
function GM(e) {
  const t = e.options, n = t.borderDash && t.borderDash.length;
  return !e._decimated && !e._loop && !t.tension && t.cubicInterpolationMode !== "monotone" && !t.stepped && !n ? ude : lde;
}
function cde(e) {
  return e.stepped ? _ue : e.tension || e.cubicInterpolationMode === "monotone" ? Oue : zh;
}
function dde(e, t, n, r) {
  let o = t._path;
  o || (o = t._path = new Path2D(), t.path(o, n, r) && o.closePath()), s5(e, t.options), e.stroke(o);
}
function fde(e, t, n, r) {
  const { segments: o, options: s } = t, a = GM(t);
  for (const c of o)
    s5(e, s, c.style), e.beginPath(), a(e, t, c, {
      start: n,
      end: n + r - 1
    }) && e.closePath(), e.stroke();
}
const pde = typeof Path2D == "function";
function hde(e, t, n, r) {
  pde && !t.options.segment ? dde(e, t, n, r) : fde(e, t, n, r);
}
class Hf extends my {
  constructor(t) {
    super(), this.animated = !0, this.options = void 0, this._chart = void 0, this._loop = void 0, this._fullLoop = void 0, this._path = void 0, this._points = void 0, this._segments = void 0, this._decimated = !1, this._pointsUpdated = !1, this._datasetIndex = void 0, t && Object.assign(this, t);
  }
  updateControlPoints(t, n) {
    const r = this.options;
    if ((r.tension || r.cubicInterpolationMode === "monotone") && !r.stepped && !this._pointsUpdated) {
      const o = r.spanGaps ? this._loop : this._fullLoop;
      yue(this._points, r, t, o, n), this._pointsUpdated = !0;
    }
  }
  set points(t) {
    this._points = t, delete this._segments, delete this._path, this._pointsUpdated = !1;
  }
  get points() {
    return this._points;
  }
  get segments() {
    return this._segments || (this._segments = Due(this, this.options.segment));
  }
  first() {
    const t = this.segments, n = this.points;
    return t.length && n[t[0].start];
  }
  last() {
    const t = this.segments, n = this.points, r = t.length;
    return r && n[t[r - 1].end];
  }
  interpolate(t, n) {
    const r = this.options, o = t[n], s = this.points, a = qU(this, {
      property: n,
      start: o,
      end: o
    });
    if (!a.length)
      return;
    const c = [], f = cde(r);
    let m, g;
    for (m = 0, g = a.length; m < g; ++m) {
      const { start: y, end: w } = a[m], C = s[y], T = s[w];
      if (C === T) {
        c.push(C);
        continue;
      }
      const E = Math.abs((o - C[n]) / (T[n] - C[n])), O = f(C, T, E, r.stepped);
      O[n] = t[n], c.push(O);
    }
    return c.length === 1 ? c[0] : c;
  }
  pathSegment(t, n, r) {
    return GM(this)(t, this, n, r);
  }
  path(t, n, r) {
    const o = this.segments, s = GM(this);
    let a = this._loop;
    n = n || 0, r = r || this.points.length - n;
    for (const c of o)
      a &= s(t, this, c, {
        start: n,
        end: n + r - 1
      });
    return !!a;
  }
  draw(t, n, r, o) {
    const s = this.options || {};
    (this.points || []).length && s.borderWidth && (t.save(), hde(t, this, r, o), t.restore()), this.animated && (this._pointsUpdated = !1, this._path = void 0);
  }
}
Dn(Hf, "id", "line"), Dn(Hf, "defaults", {
  borderCapStyle: "butt",
  borderDash: [],
  borderDashOffset: 0,
  borderJoinStyle: "miter",
  borderWidth: 3,
  capBezierPoints: !0,
  cubicInterpolationMode: "default",
  fill: !1,
  spanGaps: !1,
  stepped: !1,
  tension: 0
}), Dn(Hf, "defaultRoutes", {
  backgroundColor: "backgroundColor",
  borderColor: "borderColor"
}), Dn(Hf, "descriptors", {
  _scriptable: !0,
  _indexable: (t) => t !== "borderDash" && t !== "fill"
});
function oz(e, t, n, r) {
  const o = e.options, { [n]: s } = e.getProps([
    n
  ], r);
  return Math.abs(t - s) < o.radius + o.hitRadius;
}
class vT extends my {
  constructor(n) {
    super();
    Dn(this, "parsed");
    Dn(this, "skip");
    Dn(this, "stop");
    this.options = void 0, this.parsed = void 0, this.skip = void 0, this.stop = void 0, n && Object.assign(this, n);
  }
  inRange(n, r, o) {
    const s = this.options, { x: a, y: c } = this.getProps([
      "x",
      "y"
    ], o);
    return Math.pow(n - a, 2) + Math.pow(r - c, 2) < Math.pow(s.hitRadius + s.radius, 2);
  }
  inXRange(n, r) {
    return oz(this, n, "x", r);
  }
  inYRange(n, r) {
    return oz(this, n, "y", r);
  }
  getCenterPoint(n) {
    const { x: r, y: o } = this.getProps([
      "x",
      "y"
    ], n);
    return {
      x: r,
      y: o
    };
  }
  size(n) {
    n = n || this.options || {};
    let r = n.radius || 0;
    r = Math.max(r, r && n.hoverRadius || 0);
    const o = r && n.borderWidth || 0;
    return (r + o) * 2;
  }
  draw(n, r) {
    const o = this.options;
    this.skip || o.radius < 0.1 || !qS(this, r, this.size(o) / 2) || (n.strokeStyle = o.borderColor, n.lineWidth = o.borderWidth, n.fillStyle = o.backgroundColor, HM(n, o, this.x, this.y));
  }
  getRange() {
    const n = this.options || {};
    return n.radius + n.hitRadius;
  }
}
Dn(vT, "id", "point"), /**
* @type {any}
*/
Dn(vT, "defaults", {
  borderWidth: 1,
  hitRadius: 1,
  hoverBorderWidth: 1,
  hoverRadius: 4,
  pointStyle: "circle",
  radius: 3,
  rotation: 0
}), /**
* @type {any}
*/
Dn(vT, "defaultRoutes", {
  backgroundColor: "backgroundColor",
  borderColor: "borderColor"
});
function mde(e, t, n) {
  const r = e.segments, o = e.points, s = t.points, a = [];
  for (const c of r) {
    let { start: f, end: m } = c;
    m = rO(f, m, o);
    const g = qM(n, o[f], o[m], c.loop);
    if (!t.segments) {
      a.push({
        source: c,
        target: g,
        start: o[f],
        end: o[m]
      });
      continue;
    }
    const y = qU(t, g);
    for (const w of y) {
      const C = qM(n, s[w.start], s[w.end], w.loop), T = GU(c, o, C);
      for (const E of T)
        a.push({
          source: E,
          target: w,
          start: {
            [n]: iz(g, C, "start", Math.max)
          },
          end: {
            [n]: iz(g, C, "end", Math.min)
          }
        });
    }
  }
  return a;
}
function qM(e, t, n, r) {
  if (r)
    return;
  let o = t[e], s = n[e];
  return e === "angle" && (o = lc(o), s = lc(s)), {
    property: e,
    start: o,
    end: s
  };
}
function gde(e, t) {
  const { x: n = null, y: r = null } = e || {}, o = t.points, s = [];
  return t.segments.forEach(({ start: a, end: c }) => {
    c = rO(a, c, o);
    const f = o[a], m = o[c];
    r !== null ? (s.push({
      x: f.x,
      y: r
    }), s.push({
      x: m.x,
      y: r
    })) : n !== null && (s.push({
      x: n,
      y: f.y
    }), s.push({
      x: n,
      y: m.y
    }));
  }), s;
}
function rO(e, t, n) {
  for (; t > e; t--) {
    const r = n[t];
    if (!isNaN(r.x) && !isNaN(r.y))
      break;
  }
  return t;
}
function iz(e, t, n, r) {
  return e && t ? r(e[n], t[n]) : e ? e[n] : t ? t[n] : 0;
}
function l5(e, t) {
  let n = [], r = !1;
  return _i(e) ? (r = !0, n = e) : n = gde(e, t), n.length ? new Hf({
    points: n,
    options: {
      tension: 0
    },
    _loop: r,
    _fullLoop: r
  }) : null;
}
function sz(e) {
  return e && e.fill !== !1;
}
function vde(e, t, n) {
  let o = e[t].fill;
  const s = [
    t
  ];
  let a;
  if (!n)
    return o;
  for (; o !== !1 && s.indexOf(o) === -1; ) {
    if (!vs(o))
      return o;
    if (a = e[o], !a)
      return !1;
    if (a.visible)
      return o;
    s.push(o), o = a.fill;
  }
  return !1;
}
function yde(e, t, n) {
  const r = Cde(e);
  if (or(r))
    return isNaN(r.value) ? !1 : r;
  let o = parseFloat(r);
  return vs(o) && Math.floor(o) === o ? bde(r[0], t, o, n) : [
    "origin",
    "start",
    "end",
    "stack",
    "shape"
  ].indexOf(r) >= 0 && r;
}
function bde(e, t, n, r) {
  return (e === "-" || e === "+") && (n = t + n), n === t || n < 0 || n >= r ? !1 : n;
}
function wde(e, t) {
  let n = null;
  return e === "start" ? n = t.bottom : e === "end" ? n = t.top : or(e) ? n = t.getPixelForValue(e.value) : t.getBasePixel && (n = t.getBasePixel()), n;
}
function Sde(e, t, n) {
  let r;
  return e === "start" ? r = n : e === "end" ? r = t.options.reverse ? t.min : t.max : or(e) ? r = e.value : r = t.getBaseValue(), r;
}
function Cde(e) {
  const t = e.options, n = t.fill;
  let r = Qn(n && n.target, n);
  return r === void 0 && (r = !!t.backgroundColor), r === !1 || r === null ? !1 : r === !0 ? "origin" : r;
}
function xde(e) {
  const { scale: t, index: n, line: r } = e, o = [], s = r.segments, a = r.points, c = Ede(t, n);
  c.push(l5({
    x: null,
    y: t.bottom
  }, r));
  for (let f = 0; f < s.length; f++) {
    const m = s[f];
    for (let g = m.start; g <= m.end; g++)
      Tde(o, a[g], c);
  }
  return new Hf({
    points: o,
    options: {}
  });
}
function Ede(e, t) {
  const n = [], r = e.getMatchingVisibleMetas("line");
  for (let o = 0; o < r.length; o++) {
    const s = r[o];
    if (s.index === t)
      break;
    s.hidden || n.unshift(s.dataset);
  }
  return n;
}
function Tde(e, t, n) {
  const r = [];
  for (let o = 0; o < n.length; o++) {
    const s = n[o], { first: a, last: c, point: f } = _de(s, t, "x");
    if (!(!f || a && c)) {
      if (a)
        r.unshift(f);
      else if (e.push(f), !c)
        break;
    }
  }
  e.push(...r);
}
function _de(e, t, n) {
  const r = e.interpolate(t, n);
  if (!r)
    return {};
  const o = r[n], s = e.segments, a = e.points;
  let c = !1, f = !1;
  for (let m = 0; m < s.length; m++) {
    const g = s[m], y = a[g.start][n], w = a[g.end][n];
    if (_v(o, y, w)) {
      c = o === y, f = o === w;
      break;
    }
  }
  return {
    first: c,
    last: f,
    point: r
  };
}
class u5 {
  constructor(t) {
    this.x = t.x, this.y = t.y, this.radius = t.radius;
  }
  pathSegment(t, n, r) {
    const { x: o, y: s, radius: a } = this;
    return n = n || {
      start: 0,
      end: fu
    }, t.arc(o, s, a, n.end, n.start, !0), !r.bounds;
  }
  interpolate(t) {
    const { x: n, y: r, radius: o } = this, s = t.angle;
    return {
      x: n + Math.cos(s) * o,
      y: r + Math.sin(s) * o,
      angle: s
    };
  }
}
function Ode(e) {
  const { chart: t, fill: n, line: r } = e;
  if (vs(n))
    return Rde(t, n);
  if (n === "stack")
    return xde(e);
  if (n === "shape")
    return !0;
  const o = kde(e);
  return o instanceof u5 ? o : l5(o, r);
}
function Rde(e, t) {
  const n = e.getDatasetMeta(t);
  return n && e.isDatasetVisible(t) ? n.dataset : null;
}
function kde(e) {
  return (e.scale || {}).getPointPositionForValue ? Mde(e) : Pde(e);
}
function Pde(e) {
  const { scale: t = {}, fill: n } = e, r = wde(n, t);
  if (vs(r)) {
    const o = t.isHorizontal();
    return {
      x: o ? r : null,
      y: o ? null : r
    };
  }
  return null;
}
function Mde(e) {
  const { scale: t, fill: n } = e, r = t.options, o = t.getLabels().length, s = r.reverse ? t.max : t.min, a = Sde(n, t, s), c = [];
  if (r.grid.circular) {
    const f = t.getPointPositionForValue(0, s);
    return new u5({
      x: f.x,
      y: f.y,
      radius: t.getDistanceFromCenterForValue(a)
    });
  }
  for (let f = 0; f < o; ++f)
    c.push(t.getPointPositionForValue(f, a));
  return c;
}
function kP(e, t, n) {
  const r = Ode(t), { chart: o, index: s, line: a, scale: c, axis: f } = t, m = a.options, g = m.fill, y = m.backgroundColor, { above: w = y, below: C = y } = g || {}, T = o.getDatasetMeta(s), E = KU(o, T);
  r && a.points.length && (Z_(e, n), Ide(e, {
    line: a,
    target: r,
    above: w,
    below: C,
    area: n,
    scale: c,
    axis: f,
    clip: E
  }), eO(e));
}
function Ide(e, t) {
  const { line: n, target: r, above: o, below: s, area: a, scale: c, clip: f } = t, m = n._loop ? "angle" : t.axis;
  e.save();
  let g = s;
  s !== o && (m === "x" ? (az(e, r, a.top), PP(e, {
    line: n,
    target: r,
    color: o,
    scale: c,
    property: m,
    clip: f
  }), e.restore(), e.save(), az(e, r, a.bottom)) : m === "y" && (lz(e, r, a.left), PP(e, {
    line: n,
    target: r,
    color: s,
    scale: c,
    property: m,
    clip: f
  }), e.restore(), e.save(), lz(e, r, a.right), g = o)), PP(e, {
    line: n,
    target: r,
    color: g,
    scale: c,
    property: m,
    clip: f
  }), e.restore();
}
function az(e, t, n) {
  const { segments: r, points: o } = t;
  let s = !0, a = !1;
  e.beginPath();
  for (const c of r) {
    const { start: f, end: m } = c, g = o[f], y = o[rO(f, m, o)];
    s ? (e.moveTo(g.x, g.y), s = !1) : (e.lineTo(g.x, n), e.lineTo(g.x, g.y)), a = !!t.pathSegment(e, c, {
      move: a
    }), a ? e.closePath() : e.lineTo(y.x, n);
  }
  e.lineTo(t.first().x, n), e.closePath(), e.clip();
}
function lz(e, t, n) {
  const { segments: r, points: o } = t;
  let s = !0, a = !1;
  e.beginPath();
  for (const c of r) {
    const { start: f, end: m } = c, g = o[f], y = o[rO(f, m, o)];
    s ? (e.moveTo(g.x, g.y), s = !1) : (e.lineTo(n, g.y), e.lineTo(g.x, g.y)), a = !!t.pathSegment(e, c, {
      move: a
    }), a ? e.closePath() : e.lineTo(n, y.y);
  }
  e.lineTo(n, t.first().y), e.closePath(), e.clip();
}
function PP(e, t) {
  const { line: n, target: r, property: o, color: s, scale: a, clip: c } = t, f = mde(n, r, o);
  for (const { source: m, target: g, start: y, end: w } of f) {
    const { style: { backgroundColor: C = s } = {} } = m, T = r !== !0;
    e.save(), e.fillStyle = C, Dde(e, a, c, T && qM(o, y, w)), e.beginPath();
    const E = !!n.pathSegment(e, m);
    let O;
    if (T) {
      E ? e.closePath() : uz(e, r, w, o);
      const k = !!r.pathSegment(e, g, {
        move: E,
        reverse: !0
      });
      O = E && k, O || uz(e, r, y, o);
    }
    e.closePath(), e.fill(O ? "evenodd" : "nonzero"), e.restore();
  }
}
function Dde(e, t, n, r) {
  const o = t.chart.chartArea, { property: s, start: a, end: c } = r || {};
  if (s === "x" || s === "y") {
    let f, m, g, y;
    s === "x" ? (f = a, m = o.top, g = c, y = o.bottom) : (f = o.left, m = a, g = o.right, y = c), e.beginPath(), n && (f = Math.max(f, n.left), g = Math.min(g, n.right), m = Math.max(m, n.top), y = Math.min(y, n.bottom)), e.rect(f, m, g - f, y - m), e.clip();
  }
}
function uz(e, t, n, r) {
  const o = t.interpolate(n, r);
  o && e.lineTo(o.x, o.y);
}
var Ade = {
  id: "filler",
  afterDatasetsUpdate(e, t, n) {
    const r = (e.data.datasets || []).length, o = [];
    let s, a, c, f;
    for (a = 0; a < r; ++a)
      s = e.getDatasetMeta(a), c = s.dataset, f = null, c && c.options && c instanceof Hf && (f = {
        visible: e.isDatasetVisible(a),
        index: a,
        fill: yde(c, a, r),
        chart: e,
        axis: s.controller.options.indexAxis,
        scale: s.vScale,
        line: c
      }), s.$filler = f, o.push(f);
    for (a = 0; a < r; ++a)
      f = o[a], !(!f || f.fill === !1) && (f.fill = vde(o, a, n.propagate));
  },
  beforeDraw(e, t, n) {
    const r = n.drawTime === "beforeDraw", o = e.getSortedVisibleDatasetMetas(), s = e.chartArea;
    for (let a = o.length - 1; a >= 0; --a) {
      const c = o[a].$filler;
      c && (c.line.updateControlPoints(s, c.axis), r && c.fill && kP(e.ctx, c, s));
    }
  },
  beforeDatasetsDraw(e, t, n) {
    if (n.drawTime !== "beforeDatasetsDraw")
      return;
    const r = e.getSortedVisibleDatasetMetas();
    for (let o = r.length - 1; o >= 0; --o) {
      const s = r[o].$filler;
      sz(s) && kP(e.ctx, s, e.chartArea);
    }
  },
  beforeDatasetDraw(e, t, n) {
    const r = t.meta.$filler;
    !sz(r) || n.drawTime !== "beforeDatasetDraw" || kP(e.ctx, r, e.chartArea);
  },
  defaults: {
    propagate: !0,
    drawTime: "beforeDatasetDraw"
  }
};
const cz = (e, t) => {
  let { boxHeight: n = t, boxWidth: r = t } = e;
  return e.usePointStyle && (n = Math.min(n, t), r = e.pointStyleWidth || Math.min(r, t)), {
    boxWidth: r,
    boxHeight: n,
    itemHeight: Math.max(t, n)
  };
}, Nde = (e, t) => e !== null && t !== null && e.datasetIndex === t.datasetIndex && e.index === t.index;
class dz extends my {
  constructor(t) {
    super(), this._added = !1, this.legendHitBoxes = [], this._hoveredItem = null, this.doughnutMode = !1, this.chart = t.chart, this.options = t.options, this.ctx = t.ctx, this.legendItems = void 0, this.columnSizes = void 0, this.lineWidths = void 0, this.maxHeight = void 0, this.maxWidth = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.height = void 0, this.width = void 0, this._margins = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0;
  }
  update(t, n, r) {
    this.maxWidth = t, this.maxHeight = n, this._margins = r, this.setDimensions(), this.buildLabels(), this.fit();
  }
  setDimensions() {
    this.isHorizontal() ? (this.width = this.maxWidth, this.left = this._margins.left, this.right = this.width) : (this.height = this.maxHeight, this.top = this._margins.top, this.bottom = this.height);
  }
  buildLabels() {
    const t = this.options.labels || {};
    let n = Zr(t.generateLabels, [
      this.chart
    ], this) || [];
    t.filter && (n = n.filter((r) => t.filter(r, this.chart.data))), t.sort && (n = n.sort((r, o) => t.sort(r, o, this.chart.data))), this.options.reverse && n.reverse(), this.legendItems = n;
  }
  fit() {
    const { options: t, ctx: n } = this;
    if (!t.display) {
      this.width = this.height = 0;
      return;
    }
    const r = t.labels, o = sa(r.font), s = o.size, a = this._computeTitleHeight(), { boxWidth: c, itemHeight: f } = cz(r, s);
    let m, g;
    n.font = o.string, this.isHorizontal() ? (m = this.maxWidth, g = this._fitRows(a, s, c, f) + 10) : (g = this.maxHeight, m = this._fitCols(a, o, c, f) + 10), this.width = Math.min(m, t.maxWidth || this.maxWidth), this.height = Math.min(g, t.maxHeight || this.maxHeight);
  }
  _fitRows(t, n, r, o) {
    const { ctx: s, maxWidth: a, options: { labels: { padding: c } } } = this, f = this.legendHitBoxes = [], m = this.lineWidths = [
      0
    ], g = o + c;
    let y = t;
    s.textAlign = "left", s.textBaseline = "middle";
    let w = -1, C = -g;
    return this.legendItems.forEach((T, E) => {
      const O = r + n / 2 + s.measureText(T.text).width;
      (E === 0 || m[m.length - 1] + O + 2 * c > a) && (y += g, m[m.length - (E > 0 ? 0 : 1)] = 0, C += g, w++), f[E] = {
        left: 0,
        top: C,
        row: w,
        width: O,
        height: o
      }, m[m.length - 1] += O + c;
    }), y;
  }
  _fitCols(t, n, r, o) {
    const { ctx: s, maxHeight: a, options: { labels: { padding: c } } } = this, f = this.legendHitBoxes = [], m = this.columnSizes = [], g = a - t;
    let y = c, w = 0, C = 0, T = 0, E = 0;
    return this.legendItems.forEach((O, k) => {
      const { itemWidth: I, itemHeight: M } = Lde(r, n, s, O, o);
      k > 0 && C + M + 2 * c > g && (y += w + c, m.push({
        width: w,
        height: C
      }), T += w + c, E++, w = C = 0), f[k] = {
        left: T,
        top: C,
        col: E,
        width: I,
        height: M
      }, w = Math.max(w, I), C += M + c;
    }), y += w, m.push({
      width: w,
      height: C
    }), y;
  }
  adjustHitBoxes() {
    if (!this.options.display)
      return;
    const t = this._computeTitleHeight(), { legendHitBoxes: n, options: { align: r, labels: { padding: o }, rtl: s } } = this, a = Lv(s, this.left, this.width);
    if (this.isHorizontal()) {
      let c = 0, f = Ta(r, this.left + o, this.right - this.lineWidths[c]);
      for (const m of n)
        c !== m.row && (c = m.row, f = Ta(r, this.left + o, this.right - this.lineWidths[c])), m.top += this.top + t + o, m.left = a.leftForLtr(a.x(f), m.width), f += m.width + o;
    } else {
      let c = 0, f = Ta(r, this.top + t + o, this.bottom - this.columnSizes[c].height);
      for (const m of n)
        m.col !== c && (c = m.col, f = Ta(r, this.top + t + o, this.bottom - this.columnSizes[c].height)), m.top = f, m.left += this.left + o, m.left = a.leftForLtr(a.x(m.left), m.width), f += m.height + o;
    }
  }
  isHorizontal() {
    return this.options.position === "top" || this.options.position === "bottom";
  }
  draw() {
    if (this.options.display) {
      const t = this.ctx;
      Z_(t, this), this._draw(), eO(t);
    }
  }
  _draw() {
    const { options: t, columnSizes: n, lineWidths: r, ctx: o } = this, { align: s, labels: a } = t, c = jo.color, f = Lv(t.rtl, this.left, this.width), m = sa(a.font), { padding: g } = a, y = m.size, w = y / 2;
    let C;
    this.drawTitle(), o.textAlign = f.textAlign("left"), o.textBaseline = "middle", o.lineWidth = 0.5, o.font = m.string;
    const { boxWidth: T, boxHeight: E, itemHeight: O } = cz(a, y), k = function(F, H, U) {
      if (isNaN(T) || T <= 0 || isNaN(E) || E < 0)
        return;
      o.save();
      const z = Qn(U.lineWidth, 1);
      if (o.fillStyle = Qn(U.fillStyle, c), o.lineCap = Qn(U.lineCap, "butt"), o.lineDashOffset = Qn(U.lineDashOffset, 0), o.lineJoin = Qn(U.lineJoin, "miter"), o.lineWidth = z, o.strokeStyle = Qn(U.strokeStyle, c), o.setLineDash(Qn(U.lineDash, [])), a.usePointStyle) {
        const A = {
          radius: E * Math.SQRT2 / 2,
          pointStyle: U.pointStyle,
          rotation: U.rotation,
          borderWidth: z
        }, q = f.xPlus(F, T / 2), W = H + w;
        LU(o, A, q, W, a.pointStyleWidth && T);
      } else {
        const A = H + Math.max((y - E) / 2, 0), q = f.leftForLtr(F, T), W = ES(U.borderRadius);
        o.beginPath(), Object.values(W).some((Y) => Y !== 0) ? VM(o, {
          x: q,
          y: A,
          w: T,
          h: E,
          radius: W
        }) : o.rect(q, A, T, E), o.fill(), z !== 0 && o.stroke();
      }
      o.restore();
    }, I = function(F, H, U) {
      XT(o, U.text, F, H + O / 2, m, {
        strikethrough: U.hidden,
        textAlign: f.textAlign(U.textAlign)
      });
    }, M = this.isHorizontal(), N = this._computeTitleHeight();
    M ? C = {
      x: Ta(s, this.left + g, this.right - r[0]),
      y: this.top + g + N,
      line: 0
    } : C = {
      x: this.left + g,
      y: Ta(s, this.top + N + g, this.bottom - n[0].height),
      line: 0
    }, VU(this.ctx, t.textDirection);
    const P = O + g;
    this.legendItems.forEach((F, H) => {
      o.strokeStyle = F.fontColor, o.fillStyle = F.fontColor;
      const U = o.measureText(F.text).width, z = f.textAlign(F.textAlign || (F.textAlign = a.textAlign)), A = T + w + U;
      let q = C.x, W = C.y;
      f.setWidth(this.width), M ? H > 0 && q + A + g > this.right && (W = C.y += P, C.line++, q = C.x = Ta(s, this.left + g, this.right - r[C.line])) : H > 0 && W + P > this.bottom && (q = C.x = q + n[C.line].width + g, C.line++, W = C.y = Ta(s, this.top + N + g, this.bottom - n[C.line].height));
      const Y = f.x(q);
      if (k(Y, W, F), q = Nle(z, q + T + w, M ? q + A : this.right, t.rtl), I(f.x(q), W, F), M)
        C.x += A + g;
      else if (typeof F.text != "string") {
        const ee = m.lineHeight;
        C.y += c5(F, ee) + g;
      } else
        C.y += P;
    }), UU(this.ctx, t.textDirection);
  }
  drawTitle() {
    const t = this.options, n = t.title, r = sa(n.font), o = vu(n.padding);
    if (!n.display)
      return;
    const s = Lv(t.rtl, this.left, this.width), a = this.ctx, c = n.position, f = r.size / 2, m = o.top + f;
    let g, y = this.left, w = this.width;
    if (this.isHorizontal())
      w = Math.max(...this.lineWidths), g = this.top + m, y = Ta(t.align, y, this.right - w);
    else {
      const T = this.columnSizes.reduce((E, O) => Math.max(E, O.height), 0);
      g = m + Ta(t.align, this.top, this.bottom - T - t.labels.padding - this._computeTitleHeight());
    }
    const C = Ta(c, y, y + w);
    a.textAlign = s.textAlign(DU(c)), a.textBaseline = "middle", a.strokeStyle = n.color, a.fillStyle = n.color, a.font = r.string, XT(a, n.text, C, g, r);
  }
  _computeTitleHeight() {
    const t = this.options.title, n = sa(t.font), r = vu(t.padding);
    return t.display ? n.lineHeight + r.height : 0;
  }
  _getLegendItemAt(t, n) {
    let r, o, s;
    if (_v(t, this.left, this.right) && _v(n, this.top, this.bottom)) {
      for (s = this.legendHitBoxes, r = 0; r < s.length; ++r)
        if (o = s[r], _v(t, o.left, o.left + o.width) && _v(n, o.top, o.top + o.height))
          return this.legendItems[r];
    }
    return null;
  }
  handleEvent(t) {
    const n = this.options;
    if (!Fde(t.type, n))
      return;
    const r = this._getLegendItemAt(t.x, t.y);
    if (t.type === "mousemove" || t.type === "mouseout") {
      const o = this._hoveredItem, s = Nde(o, r);
      o && !s && Zr(n.onLeave, [
        t,
        o,
        this
      ], this), this._hoveredItem = r, r && !s && Zr(n.onHover, [
        t,
        r,
        this
      ], this);
    } else r && Zr(n.onClick, [
      t,
      r,
      this
    ], this);
  }
}
function Lde(e, t, n, r, o) {
  const s = $de(r, e, t, n), a = jde(o, r, t.lineHeight);
  return {
    itemWidth: s,
    itemHeight: a
  };
}
function $de(e, t, n, r) {
  let o = e.text;
  return o && typeof o != "string" && (o = o.reduce((s, a) => s.length > a.length ? s : a)), t + n.size / 2 + r.measureText(o).width;
}
function jde(e, t, n) {
  let r = e;
  return typeof t.text != "string" && (r = c5(t, n)), r;
}
function c5(e, t) {
  const n = e.text ? e.text.length : 0;
  return t * n;
}
function Fde(e, t) {
  return !!((e === "mousemove" || e === "mouseout") && (t.onHover || t.onLeave) || t.onClick && (e === "click" || e === "mouseup"));
}
var zde = {
  id: "legend",
  _element: dz,
  start(e, t, n) {
    const r = e.legend = new dz({
      ctx: e.ctx,
      options: n,
      chart: e
    });
    Bf.configure(e, r, n), Bf.addBox(e, r);
  },
  stop(e) {
    Bf.removeBox(e, e.legend), delete e.legend;
  },
  beforeUpdate(e, t, n) {
    const r = e.legend;
    Bf.configure(e, r, n), r.options = n;
  },
  afterUpdate(e) {
    const t = e.legend;
    t.buildLabels(), t.adjustHitBoxes();
  },
  afterEvent(e, t) {
    t.replay || e.legend.handleEvent(t.event);
  },
  defaults: {
    display: !0,
    position: "top",
    align: "center",
    fullSize: !0,
    reverse: !1,
    weight: 1e3,
    onClick(e, t, n) {
      const r = t.datasetIndex, o = n.chart;
      o.isDatasetVisible(r) ? (o.hide(r), t.hidden = !0) : (o.show(r), t.hidden = !1);
    },
    onHover: null,
    onLeave: null,
    labels: {
      color: (e) => e.chart.options.color,
      boxWidth: 40,
      padding: 10,
      generateLabels(e) {
        const t = e.data.datasets, { labels: { usePointStyle: n, pointStyle: r, textAlign: o, color: s, useBorderRadius: a, borderRadius: c } } = e.legend.options;
        return e._getSortedDatasetMetas().map((f) => {
          const m = f.controller.getStyle(n ? 0 : void 0), g = vu(m.borderWidth);
          return {
            text: t[f.index].label,
            fillStyle: m.backgroundColor,
            fontColor: s,
            hidden: !f.visible,
            lineCap: m.borderCapStyle,
            lineDash: m.borderDash,
            lineDashOffset: m.borderDashOffset,
            lineJoin: m.borderJoinStyle,
            lineWidth: (g.width + g.height) / 4,
            strokeStyle: m.borderColor,
            pointStyle: r || m.pointStyle,
            rotation: m.rotation,
            textAlign: o || m.textAlign,
            borderRadius: a && (c || m.borderRadius),
            datasetIndex: f.index
          };
        }, this);
      }
    },
    title: {
      color: (e) => e.chart.options.color,
      display: !1,
      position: "center",
      text: ""
    }
  },
  descriptors: {
    _scriptable: (e) => !e.startsWith("on"),
    labels: {
      _scriptable: (e) => ![
        "generateLabels",
        "filter",
        "sort"
      ].includes(e)
    }
  }
};
const lS = {
  average(e) {
    if (!e.length)
      return !1;
    let t, n, r = /* @__PURE__ */ new Set(), o = 0, s = 0;
    for (t = 0, n = e.length; t < n; ++t) {
      const c = e[t].element;
      if (c && c.hasValue()) {
        const f = c.tooltipPosition();
        r.add(f.x), o += f.y, ++s;
      }
    }
    return s === 0 || r.size === 0 ? !1 : {
      x: [
        ...r
      ].reduce((c, f) => c + f) / r.size,
      y: o / s
    };
  },
  nearest(e, t) {
    if (!e.length)
      return !1;
    let n = t.x, r = t.y, o = Number.POSITIVE_INFINITY, s, a, c;
    for (s = 0, a = e.length; s < a; ++s) {
      const f = e[s].element;
      if (f && f.hasValue()) {
        const m = f.getCenterPoint(), g = FM(t, m);
        g < o && (o = g, c = f);
      }
    }
    if (c) {
      const f = c.tooltipPosition();
      n = f.x, r = f.y;
    }
    return {
      x: n,
      y: r
    };
  }
};
function oc(e, t) {
  return t && (_i(t) ? Array.prototype.push.apply(e, t) : e.push(t)), e;
}
function vd(e) {
  return (typeof e == "string" || e instanceof String) && e.indexOf(`
`) > -1 ? e.split(`
`) : e;
}
function Bde(e, t) {
  const { element: n, datasetIndex: r, index: o } = t, s = e.getDatasetMeta(r).controller, { label: a, value: c } = s.getLabelAndValue(o);
  return {
    chart: e,
    label: a,
    parsed: s.getParsed(o),
    raw: e.data.datasets[r].data[o],
    formattedValue: c,
    dataset: s.getDataset(),
    dataIndex: o,
    datasetIndex: r,
    element: n
  };
}
function fz(e, t) {
  const n = e.chart.ctx, { body: r, footer: o, title: s } = e, { boxWidth: a, boxHeight: c } = t, f = sa(t.bodyFont), m = sa(t.titleFont), g = sa(t.footerFont), y = s.length, w = o.length, C = r.length, T = vu(t.padding);
  let E = T.height, O = 0, k = r.reduce((N, P) => N + P.before.length + P.lines.length + P.after.length, 0);
  if (k += e.beforeBody.length + e.afterBody.length, y && (E += y * m.lineHeight + (y - 1) * t.titleSpacing + t.titleMarginBottom), k) {
    const N = t.displayColors ? Math.max(c, f.lineHeight) : f.lineHeight;
    E += C * N + (k - C) * f.lineHeight + (k - 1) * t.bodySpacing;
  }
  w && (E += t.footerMarginTop + w * g.lineHeight + (w - 1) * t.footerSpacing);
  let I = 0;
  const M = function(N) {
    O = Math.max(O, n.measureText(N).width + I);
  };
  return n.save(), n.font = m.string, kr(e.title, M), n.font = f.string, kr(e.beforeBody.concat(e.afterBody), M), I = t.displayColors ? a + 2 + t.boxPadding : 0, kr(r, (N) => {
    kr(N.before, M), kr(N.lines, M), kr(N.after, M);
  }), I = 0, n.font = g.string, kr(e.footer, M), n.restore(), O += T.width, {
    width: O,
    height: E
  };
}
function Hde(e, t) {
  const { y: n, height: r } = t;
  return n < r / 2 ? "top" : n > e.height - r / 2 ? "bottom" : "center";
}
function Vde(e, t, n, r) {
  const { x: o, width: s } = r, a = n.caretSize + n.caretPadding;
  if (e === "left" && o + s + a > t.width || e === "right" && o - s - a < 0)
    return !0;
}
function Ude(e, t, n, r) {
  const { x: o, width: s } = n, { width: a, chartArea: { left: c, right: f } } = e;
  let m = "center";
  return r === "center" ? m = o <= (c + f) / 2 ? "left" : "right" : o <= s / 2 ? m = "left" : o >= a - s / 2 && (m = "right"), Vde(m, e, t, n) && (m = "center"), m;
}
function pz(e, t, n) {
  const r = n.yAlign || t.yAlign || Hde(e, n);
  return {
    xAlign: n.xAlign || t.xAlign || Ude(e, t, n, r),
    yAlign: r
  };
}
function Wde(e, t) {
  let { x: n, width: r } = e;
  return t === "right" ? n -= r : t === "center" && (n -= r / 2), n;
}
function Gde(e, t, n) {
  let { y: r, height: o } = e;
  return t === "top" ? r += n : t === "bottom" ? r -= o + n : r -= o / 2, r;
}
function hz(e, t, n, r) {
  const { caretSize: o, caretPadding: s, cornerRadius: a } = e, { xAlign: c, yAlign: f } = n, m = o + s, { topLeft: g, topRight: y, bottomLeft: w, bottomRight: C } = ES(a);
  let T = Wde(t, c);
  const E = Gde(t, f, m);
  return f === "center" ? c === "left" ? T += m : c === "right" && (T -= m) : c === "left" ? T -= Math.max(g, w) + o : c === "right" && (T += Math.max(y, C) + o), {
    x: fc(T, 0, r.width - t.width),
    y: fc(E, 0, r.height - t.height)
  };
}
function ZE(e, t, n) {
  const r = vu(n.padding);
  return t === "center" ? e.x + e.width / 2 : t === "right" ? e.x + e.width - r.right : e.x + r.left;
}
function mz(e) {
  return oc([], vd(e));
}
function qde(e, t, n) {
  return gm(e, {
    tooltip: t,
    tooltipItems: n,
    type: "tooltip"
  });
}
function gz(e, t) {
  const n = t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
  return n ? e.override(n) : e;
}
const d5 = {
  beforeTitle: md,
  title(e) {
    if (e.length > 0) {
      const t = e[0], n = t.chart.data.labels, r = n ? n.length : 0;
      if (this && this.options && this.options.mode === "dataset")
        return t.dataset.label || "";
      if (t.label)
        return t.label;
      if (r > 0 && t.dataIndex < r)
        return n[t.dataIndex];
    }
    return "";
  },
  afterTitle: md,
  beforeBody: md,
  beforeLabel: md,
  label(e) {
    if (this && this.options && this.options.mode === "dataset")
      return e.label + ": " + e.formattedValue || e.formattedValue;
    let t = e.dataset.label || "";
    t && (t += ": ");
    const n = e.formattedValue;
    return fo(n) || (t += n), t;
  },
  labelColor(e) {
    const n = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
    return {
      borderColor: n.borderColor,
      backgroundColor: n.backgroundColor,
      borderWidth: n.borderWidth,
      borderDash: n.borderDash,
      borderDashOffset: n.borderDashOffset,
      borderRadius: 0
    };
  },
  labelTextColor() {
    return this.options.bodyColor;
  },
  labelPointStyle(e) {
    const n = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
    return {
      pointStyle: n.pointStyle,
      rotation: n.rotation
    };
  },
  afterLabel: md,
  afterBody: md,
  beforeFooter: md,
  footer: md,
  afterFooter: md
};
function na(e, t, n, r) {
  const o = e[t].call(n, r);
  return typeof o > "u" ? d5[t].call(n, r) : o;
}
class KM extends my {
  constructor(t) {
    super(), this.opacity = 0, this._active = [], this._eventPosition = void 0, this._size = void 0, this._cachedAnimations = void 0, this._tooltipItems = [], this.$animations = void 0, this.$context = void 0, this.chart = t.chart, this.options = t.options, this.dataPoints = void 0, this.title = void 0, this.beforeBody = void 0, this.body = void 0, this.afterBody = void 0, this.footer = void 0, this.xAlign = void 0, this.yAlign = void 0, this.x = void 0, this.y = void 0, this.height = void 0, this.width = void 0, this.caretX = void 0, this.caretY = void 0, this.labelColors = void 0, this.labelPointStyles = void 0, this.labelTextColors = void 0;
  }
  initialize(t) {
    this.options = t, this._cachedAnimations = void 0, this.$context = void 0;
  }
  _resolveAnimations() {
    const t = this._cachedAnimations;
    if (t)
      return t;
    const n = this.chart, r = this.options.setContext(this.getContext()), o = r.enabled && n.options.animation && r.animations, s = new YU(this.chart, o);
    return o._cacheable && (this._cachedAnimations = Object.freeze(s)), s;
  }
  getContext() {
    return this.$context || (this.$context = qde(this.chart.getContext(), this, this._tooltipItems));
  }
  getTitle(t, n) {
    const { callbacks: r } = n, o = na(r, "beforeTitle", this, t), s = na(r, "title", this, t), a = na(r, "afterTitle", this, t);
    let c = [];
    return c = oc(c, vd(o)), c = oc(c, vd(s)), c = oc(c, vd(a)), c;
  }
  getBeforeBody(t, n) {
    return mz(na(n.callbacks, "beforeBody", this, t));
  }
  getBody(t, n) {
    const { callbacks: r } = n, o = [];
    return kr(t, (s) => {
      const a = {
        before: [],
        lines: [],
        after: []
      }, c = gz(r, s);
      oc(a.before, vd(na(c, "beforeLabel", this, s))), oc(a.lines, na(c, "label", this, s)), oc(a.after, vd(na(c, "afterLabel", this, s))), o.push(a);
    }), o;
  }
  getAfterBody(t, n) {
    return mz(na(n.callbacks, "afterBody", this, t));
  }
  getFooter(t, n) {
    const { callbacks: r } = n, o = na(r, "beforeFooter", this, t), s = na(r, "footer", this, t), a = na(r, "afterFooter", this, t);
    let c = [];
    return c = oc(c, vd(o)), c = oc(c, vd(s)), c = oc(c, vd(a)), c;
  }
  _createItems(t) {
    const n = this._active, r = this.chart.data, o = [], s = [], a = [];
    let c = [], f, m;
    for (f = 0, m = n.length; f < m; ++f)
      c.push(Bde(this.chart, n[f]));
    return t.filter && (c = c.filter((g, y, w) => t.filter(g, y, w, r))), t.itemSort && (c = c.sort((g, y) => t.itemSort(g, y, r))), kr(c, (g) => {
      const y = gz(t.callbacks, g);
      o.push(na(y, "labelColor", this, g)), s.push(na(y, "labelPointStyle", this, g)), a.push(na(y, "labelTextColor", this, g));
    }), this.labelColors = o, this.labelPointStyles = s, this.labelTextColors = a, this.dataPoints = c, c;
  }
  update(t, n) {
    const r = this.options.setContext(this.getContext()), o = this._active;
    let s, a = [];
    if (!o.length)
      this.opacity !== 0 && (s = {
        opacity: 0
      });
    else {
      const c = lS[r.position].call(this, o, this._eventPosition);
      a = this._createItems(r), this.title = this.getTitle(a, r), this.beforeBody = this.getBeforeBody(a, r), this.body = this.getBody(a, r), this.afterBody = this.getAfterBody(a, r), this.footer = this.getFooter(a, r);
      const f = this._size = fz(this, r), m = Object.assign({}, c, f), g = pz(this.chart, r, m), y = hz(r, m, g, this.chart);
      this.xAlign = g.xAlign, this.yAlign = g.yAlign, s = {
        opacity: 1,
        x: y.x,
        y: y.y,
        width: f.width,
        height: f.height,
        caretX: c.x,
        caretY: c.y
      };
    }
    this._tooltipItems = a, this.$context = void 0, s && this._resolveAnimations().update(this, s), t && r.external && r.external.call(this, {
      chart: this.chart,
      tooltip: this,
      replay: n
    });
  }
  drawCaret(t, n, r, o) {
    const s = this.getCaretPosition(t, r, o);
    n.lineTo(s.x1, s.y1), n.lineTo(s.x2, s.y2), n.lineTo(s.x3, s.y3);
  }
  getCaretPosition(t, n, r) {
    const { xAlign: o, yAlign: s } = this, { caretSize: a, cornerRadius: c } = r, { topLeft: f, topRight: m, bottomLeft: g, bottomRight: y } = ES(c), { x: w, y: C } = t, { width: T, height: E } = n;
    let O, k, I, M, N, P;
    return s === "center" ? (N = C + E / 2, o === "left" ? (O = w, k = O - a, M = N + a, P = N - a) : (O = w + T, k = O + a, M = N - a, P = N + a), I = O) : (o === "left" ? k = w + Math.max(f, g) + a : o === "right" ? k = w + T - Math.max(m, y) - a : k = this.caretX, s === "top" ? (M = C, N = M - a, O = k - a, I = k + a) : (M = C + E, N = M + a, O = k + a, I = k - a), P = M), {
      x1: O,
      x2: k,
      x3: I,
      y1: M,
      y2: N,
      y3: P
    };
  }
  drawTitle(t, n, r) {
    const o = this.title, s = o.length;
    let a, c, f;
    if (s) {
      const m = Lv(r.rtl, this.x, this.width);
      for (t.x = ZE(this, r.titleAlign, r), n.textAlign = m.textAlign(r.titleAlign), n.textBaseline = "middle", a = sa(r.titleFont), c = r.titleSpacing, n.fillStyle = r.titleColor, n.font = a.string, f = 0; f < s; ++f)
        n.fillText(o[f], m.x(t.x), t.y + a.lineHeight / 2), t.y += a.lineHeight + c, f + 1 === s && (t.y += r.titleMarginBottom - c);
    }
  }
  _drawColorBox(t, n, r, o, s) {
    const a = this.labelColors[r], c = this.labelPointStyles[r], { boxHeight: f, boxWidth: m } = s, g = sa(s.bodyFont), y = ZE(this, "left", s), w = o.x(y), C = f < g.lineHeight ? (g.lineHeight - f) / 2 : 0, T = n.y + C;
    if (s.usePointStyle) {
      const E = {
        radius: Math.min(m, f) / 2,
        pointStyle: c.pointStyle,
        rotation: c.rotation,
        borderWidth: 1
      }, O = o.leftForLtr(w, m) + m / 2, k = T + f / 2;
      t.strokeStyle = s.multiKeyBackground, t.fillStyle = s.multiKeyBackground, HM(t, E, O, k), t.strokeStyle = a.borderColor, t.fillStyle = a.backgroundColor, HM(t, E, O, k);
    } else {
      t.lineWidth = or(a.borderWidth) ? Math.max(...Object.values(a.borderWidth)) : a.borderWidth || 1, t.strokeStyle = a.borderColor, t.setLineDash(a.borderDash || []), t.lineDashOffset = a.borderDashOffset || 0;
      const E = o.leftForLtr(w, m), O = o.leftForLtr(o.xPlus(w, 1), m - 2), k = ES(a.borderRadius);
      Object.values(k).some((I) => I !== 0) ? (t.beginPath(), t.fillStyle = s.multiKeyBackground, VM(t, {
        x: E,
        y: T,
        w: m,
        h: f,
        radius: k
      }), t.fill(), t.stroke(), t.fillStyle = a.backgroundColor, t.beginPath(), VM(t, {
        x: O,
        y: T + 1,
        w: m - 2,
        h: f - 2,
        radius: k
      }), t.fill()) : (t.fillStyle = s.multiKeyBackground, t.fillRect(E, T, m, f), t.strokeRect(E, T, m, f), t.fillStyle = a.backgroundColor, t.fillRect(O, T + 1, m - 2, f - 2));
    }
    t.fillStyle = this.labelTextColors[r];
  }
  drawBody(t, n, r) {
    const { body: o } = this, { bodySpacing: s, bodyAlign: a, displayColors: c, boxHeight: f, boxWidth: m, boxPadding: g } = r, y = sa(r.bodyFont);
    let w = y.lineHeight, C = 0;
    const T = Lv(r.rtl, this.x, this.width), E = function(U) {
      n.fillText(U, T.x(t.x + C), t.y + w / 2), t.y += w + s;
    }, O = T.textAlign(a);
    let k, I, M, N, P, F, H;
    for (n.textAlign = a, n.textBaseline = "middle", n.font = y.string, t.x = ZE(this, O, r), n.fillStyle = r.bodyColor, kr(this.beforeBody, E), C = c && O !== "right" ? a === "center" ? m / 2 + g : m + 2 + g : 0, N = 0, F = o.length; N < F; ++N) {
      for (k = o[N], I = this.labelTextColors[N], n.fillStyle = I, kr(k.before, E), M = k.lines, c && M.length && (this._drawColorBox(n, t, N, T, r), w = Math.max(y.lineHeight, f)), P = 0, H = M.length; P < H; ++P)
        E(M[P]), w = y.lineHeight;
      kr(k.after, E);
    }
    C = 0, w = y.lineHeight, kr(this.afterBody, E), t.y -= s;
  }
  drawFooter(t, n, r) {
    const o = this.footer, s = o.length;
    let a, c;
    if (s) {
      const f = Lv(r.rtl, this.x, this.width);
      for (t.x = ZE(this, r.footerAlign, r), t.y += r.footerMarginTop, n.textAlign = f.textAlign(r.footerAlign), n.textBaseline = "middle", a = sa(r.footerFont), n.fillStyle = r.footerColor, n.font = a.string, c = 0; c < s; ++c)
        n.fillText(o[c], f.x(t.x), t.y + a.lineHeight / 2), t.y += a.lineHeight + r.footerSpacing;
    }
  }
  drawBackground(t, n, r, o) {
    const { xAlign: s, yAlign: a } = this, { x: c, y: f } = t, { width: m, height: g } = r, { topLeft: y, topRight: w, bottomLeft: C, bottomRight: T } = ES(o.cornerRadius);
    n.fillStyle = o.backgroundColor, n.strokeStyle = o.borderColor, n.lineWidth = o.borderWidth, n.beginPath(), n.moveTo(c + y, f), a === "top" && this.drawCaret(t, n, r, o), n.lineTo(c + m - w, f), n.quadraticCurveTo(c + m, f, c + m, f + w), a === "center" && s === "right" && this.drawCaret(t, n, r, o), n.lineTo(c + m, f + g - T), n.quadraticCurveTo(c + m, f + g, c + m - T, f + g), a === "bottom" && this.drawCaret(t, n, r, o), n.lineTo(c + C, f + g), n.quadraticCurveTo(c, f + g, c, f + g - C), a === "center" && s === "left" && this.drawCaret(t, n, r, o), n.lineTo(c, f + y), n.quadraticCurveTo(c, f, c + y, f), n.closePath(), n.fill(), o.borderWidth > 0 && n.stroke();
  }
  _updateAnimationTarget(t) {
    const n = this.chart, r = this.$animations, o = r && r.x, s = r && r.y;
    if (o || s) {
      const a = lS[t.position].call(this, this._active, this._eventPosition);
      if (!a)
        return;
      const c = this._size = fz(this, t), f = Object.assign({}, a, this._size), m = pz(n, t, f), g = hz(t, f, m, n);
      (o._to !== g.x || s._to !== g.y) && (this.xAlign = m.xAlign, this.yAlign = m.yAlign, this.width = c.width, this.height = c.height, this.caretX = a.x, this.caretY = a.y, this._resolveAnimations().update(this, g));
    }
  }
  _willRender() {
    return !!this.opacity;
  }
  draw(t) {
    const n = this.options.setContext(this.getContext());
    let r = this.opacity;
    if (!r)
      return;
    this._updateAnimationTarget(n);
    const o = {
      width: this.width,
      height: this.height
    }, s = {
      x: this.x,
      y: this.y
    };
    r = Math.abs(r) < 1e-3 ? 0 : r;
    const a = vu(n.padding), c = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;
    n.enabled && c && (t.save(), t.globalAlpha = r, this.drawBackground(s, t, o, n), VU(t, n.textDirection), s.y += a.top, this.drawTitle(s, t, n), this.drawBody(s, t, n), this.drawFooter(s, t, n), UU(t, n.textDirection), t.restore());
  }
  getActiveElements() {
    return this._active || [];
  }
  setActiveElements(t, n) {
    const r = this._active, o = t.map(({ datasetIndex: c, index: f }) => {
      const m = this.chart.getDatasetMeta(c);
      if (!m)
        throw new Error("Cannot find a dataset at index " + c);
      return {
        datasetIndex: c,
        element: m.data[f],
        index: f
      };
    }), s = !UT(r, o), a = this._positionChanged(o, n);
    (s || a) && (this._active = o, this._eventPosition = n, this._ignoreReplayEvents = !0, this.update(!0));
  }
  handleEvent(t, n, r = !0) {
    if (n && this._ignoreReplayEvents)
      return !1;
    this._ignoreReplayEvents = !1;
    const o = this.options, s = this._active || [], a = this._getActiveElements(t, s, n, r), c = this._positionChanged(a, t), f = n || !UT(a, s) || c;
    return f && (this._active = a, (o.enabled || o.external) && (this._eventPosition = {
      x: t.x,
      y: t.y
    }, this.update(!0, n))), f;
  }
  _getActiveElements(t, n, r, o) {
    const s = this.options;
    if (t.type === "mouseout")
      return [];
    if (!o)
      return n.filter((c) => this.chart.data.datasets[c.datasetIndex] && this.chart.getDatasetMeta(c.datasetIndex).controller.getParsed(c.index) !== void 0);
    const a = this.chart.getElementsAtEventForMode(t, s.mode, s, r);
    return s.reverse && a.reverse(), a;
  }
  _positionChanged(t, n) {
    const { caretX: r, caretY: o, options: s } = this, a = lS[s.position].call(this, t, n);
    return a !== !1 && (r !== a.x || o !== a.y);
  }
}
Dn(KM, "positioners", lS);
var Kde = {
  id: "tooltip",
  _element: KM,
  positioners: lS,
  afterInit(e, t, n) {
    n && (e.tooltip = new KM({
      chart: e,
      options: n
    }));
  },
  beforeUpdate(e, t, n) {
    e.tooltip && e.tooltip.initialize(n);
  },
  reset(e, t, n) {
    e.tooltip && e.tooltip.initialize(n);
  },
  afterDraw(e) {
    const t = e.tooltip;
    if (t && t._willRender()) {
      const n = {
        tooltip: t
      };
      if (e.notifyPlugins("beforeTooltipDraw", {
        ...n,
        cancelable: !0
      }) === !1)
        return;
      t.draw(e.ctx), e.notifyPlugins("afterTooltipDraw", n);
    }
  },
  afterEvent(e, t) {
    if (e.tooltip) {
      const n = t.replay;
      e.tooltip.handleEvent(t.event, n, t.inChartArea) && (t.changed = !0);
    }
  },
  defaults: {
    enabled: !0,
    external: null,
    position: "average",
    backgroundColor: "rgba(0,0,0,0.8)",
    titleColor: "#fff",
    titleFont: {
      weight: "bold"
    },
    titleSpacing: 2,
    titleMarginBottom: 6,
    titleAlign: "left",
    bodyColor: "#fff",
    bodySpacing: 2,
    bodyFont: {},
    bodyAlign: "left",
    footerColor: "#fff",
    footerSpacing: 2,
    footerMarginTop: 6,
    footerFont: {
      weight: "bold"
    },
    footerAlign: "left",
    padding: 6,
    caretPadding: 2,
    caretSize: 5,
    cornerRadius: 6,
    boxHeight: (e, t) => t.bodyFont.size,
    boxWidth: (e, t) => t.bodyFont.size,
    multiKeyBackground: "#fff",
    displayColors: !0,
    boxPadding: 0,
    borderColor: "rgba(0,0,0,0)",
    borderWidth: 0,
    animation: {
      duration: 400,
      easing: "easeOutQuart"
    },
    animations: {
      numbers: {
        type: "number",
        properties: [
          "x",
          "y",
          "width",
          "height",
          "caretX",
          "caretY"
        ]
      },
      opacity: {
        easing: "linear",
        duration: 200
      }
    },
    callbacks: d5
  },
  defaultRoutes: {
    bodyFont: "font",
    footerFont: "font",
    titleFont: "font"
  },
  descriptors: {
    _scriptable: (e) => e !== "filter" && e !== "itemSort" && e !== "external",
    _indexable: !1,
    callbacks: {
      _scriptable: !1,
      _indexable: !1
    },
    animation: {
      _fallback: !1
    },
    animations: {
      _fallback: "animation"
    }
  },
  additionalOptionScopes: [
    "interaction"
  ]
};
const Yde = (e, t, n, r) => (typeof t == "string" ? (n = e.push(t) - 1, r.unshift({
  index: n,
  label: t
})) : isNaN(t) && (n = null), n);
function Xde(e, t, n, r) {
  const o = e.indexOf(t);
  if (o === -1)
    return Yde(e, t, n, r);
  const s = e.lastIndexOf(t);
  return o !== s ? n : o;
}
const Qde = (e, t) => e === null ? null : fc(Math.round(e), 0, t);
function vz(e) {
  const t = this.getLabels();
  return e >= 0 && e < t.length ? t[e] : e;
}
class YM extends gy {
  constructor(t) {
    super(t), this._startValue = void 0, this._valueRange = 0, this._addedLabels = [];
  }
  init(t) {
    const n = this._addedLabels;
    if (n.length) {
      const r = this.getLabels();
      for (const { index: o, label: s } of n)
        r[o] === s && r.splice(o, 1);
      this._addedLabels = [];
    }
    super.init(t);
  }
  parse(t, n) {
    if (fo(t))
      return null;
    const r = this.getLabels();
    return n = isFinite(n) && r[n] === t ? n : Xde(r, t, Qn(n, t), this._addedLabels), Qde(n, r.length - 1);
  }
  determineDataLimits() {
    const { minDefined: t, maxDefined: n } = this.getUserBounds();
    let { min: r, max: o } = this.getMinMax(!0);
    this.options.bounds === "ticks" && (t || (r = 0), n || (o = this.getLabels().length - 1)), this.min = r, this.max = o;
  }
  buildTicks() {
    const t = this.min, n = this.max, r = this.options.offset, o = [];
    let s = this.getLabels();
    s = t === 0 && n === s.length - 1 ? s : s.slice(t, n + 1), this._valueRange = Math.max(s.length - (r ? 0 : 1), 1), this._startValue = this.min - (r ? 0.5 : 0);
    for (let a = t; a <= n; a++)
      o.push({
        value: a
      });
    return o;
  }
  getLabelForValue(t) {
    return vz.call(this, t);
  }
  configure() {
    super.configure(), this.isHorizontal() || (this._reversePixels = !this._reversePixels);
  }
  getPixelForValue(t) {
    return typeof t != "number" && (t = this.parse(t)), t === null ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
  }
  getPixelForTick(t) {
    const n = this.ticks;
    return t < 0 || t > n.length - 1 ? null : this.getPixelForValue(n[t].value);
  }
  getValueForPixel(t) {
    return Math.round(this._startValue + this.getDecimalForPixel(t) * this._valueRange);
  }
  getBasePixel() {
    return this.bottom;
  }
}
Dn(YM, "id", "category"), Dn(YM, "defaults", {
  ticks: {
    callback: vz
  }
});
function Jde(e, t) {
  const n = [], { bounds: o, step: s, min: a, max: c, precision: f, count: m, maxTicks: g, maxDigits: y, includeBounds: w } = e, C = s || 1, T = g - 1, { min: E, max: O } = t, k = !fo(a), I = !fo(c), M = !fo(m), N = (O - E) / (y + 1);
  let P = v2((O - E) / T / C) * C, F, H, U, z;
  if (P < 1e-14 && !k && !I)
    return [
      {
        value: E
      },
      {
        value: O
      }
    ];
  z = Math.ceil(O / P) - Math.floor(E / P), z > T && (P = v2(z * P / T / C) * C), fo(f) || (F = Math.pow(10, f), P = Math.ceil(P * F) / F), o === "ticks" ? (H = Math.floor(E / P) * P, U = Math.ceil(O / P) * P) : (H = E, U = O), k && I && s && Ele((c - a) / s, P / 1e3) ? (z = Math.round(Math.min((c - a) / P, g)), P = (c - a) / z, H = a, U = c) : M ? (H = k ? a : H, U = I ? c : U, z = m - 1, P = (U - H) / z) : (z = (U - H) / P, SS(z, Math.round(z), P / 1e3) ? z = Math.round(z) : z = Math.ceil(z));
  const A = Math.max(y2(P), y2(H));
  F = Math.pow(10, fo(f) ? A : f), H = Math.round(H * F) / F, U = Math.round(U * F) / F;
  let q = 0;
  for (k && (w && H !== a ? (n.push({
    value: a
  }), H < a && q++, SS(Math.round((H + q * P) * F) / F, a, yz(a, N, e)) && q++) : H < a && q++); q < z; ++q) {
    const W = Math.round((H + q * P) * F) / F;
    if (I && W > c)
      break;
    n.push({
      value: W
    });
  }
  return I && w && U !== c ? n.length && SS(n[n.length - 1].value, c, yz(c, N, e)) ? n[n.length - 1].value = c : n.push({
    value: c
  }) : (!I || U === c) && n.push({
    value: U
  }), n;
}
function yz(e, t, { horizontal: n, minRotation: r }) {
  const o = Yh(r), s = (n ? Math.sin(o) : Math.cos(o)) || 1e-3, a = 0.75 * t * ("" + e).length;
  return Math.min(t / s, a);
}
class Zde extends gy {
  constructor(t) {
    super(t), this.start = void 0, this.end = void 0, this._startValue = void 0, this._endValue = void 0, this._valueRange = 0;
  }
  parse(t, n) {
    return fo(t) || (typeof t == "number" || t instanceof Number) && !isFinite(+t) ? null : +t;
  }
  handleTickRangeOptions() {
    const { beginAtZero: t } = this.options, { minDefined: n, maxDefined: r } = this.getUserBounds();
    let { min: o, max: s } = this;
    const a = (f) => o = n ? o : f, c = (f) => s = r ? s : f;
    if (t) {
      const f = Jv(o), m = Jv(s);
      f < 0 && m < 0 ? c(0) : f > 0 && m > 0 && a(0);
    }
    if (o === s) {
      let f = s === 0 ? 1 : Math.abs(s * 0.05);
      c(s + f), t || a(o - f);
    }
    this.min = o, this.max = s;
  }
  getTickLimit() {
    const t = this.options.ticks;
    let { maxTicksLimit: n, stepSize: r } = t, o;
    return r ? (o = Math.ceil(this.max / r) - Math.floor(this.min / r) + 1, o > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${r} would result generating up to ${o} ticks. Limiting to 1000.`), o = 1e3)) : (o = this.computeTickLimit(), n = n || 11), n && (o = Math.min(n, o)), o;
  }
  computeTickLimit() {
    return Number.POSITIVE_INFINITY;
  }
  buildTicks() {
    const t = this.options, n = t.ticks;
    let r = this.getTickLimit();
    r = Math.max(2, r);
    const o = {
      maxTicks: r,
      bounds: t.bounds,
      min: t.min,
      max: t.max,
      precision: n.precision,
      step: n.stepSize,
      count: n.count,
      maxDigits: this._maxDigits(),
      horizontal: this.isHorizontal(),
      minRotation: n.minRotation || 0,
      includeBounds: n.includeBounds !== !1
    }, s = this._range || this, a = Jde(o, s);
    return t.bounds === "ticks" && Tle(a, this, "value"), t.reverse ? (a.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), a;
  }
  configure() {
    const t = this.ticks;
    let n = this.min, r = this.max;
    if (super.configure(), this.options.offset && t.length) {
      const o = (r - n) / Math.max(t.length - 1, 1) / 2;
      n -= o, r += o;
    }
    this._startValue = n, this._endValue = r, this._valueRange = r - n;
  }
  getLabelForValue(t) {
    return AU(t, this.chart.options.locale, this.options.ticks.format);
  }
}
class XM extends Zde {
  determineDataLimits() {
    const { min: t, max: n } = this.getMinMax(!0);
    this.min = vs(t) ? t : 0, this.max = vs(n) ? n : 1, this.handleTickRangeOptions();
  }
  computeTickLimit() {
    const t = this.isHorizontal(), n = t ? this.width : this.height, r = Yh(this.options.ticks.minRotation), o = (t ? Math.sin(r) : Math.cos(r)) || 1e-3, s = this._resolveTickFontOptions(0);
    return Math.ceil(n / Math.min(40, s.lineHeight / o));
  }
  getPixelForValue(t) {
    return t === null ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
  }
  getValueForPixel(t) {
    return this._startValue + this.getDecimalForPixel(t) * this._valueRange;
  }
}
Dn(XM, "id", "linear"), Dn(XM, "defaults", {
  ticks: {
    callback: NU.formatters.numeric
  }
});
const oO = {
  millisecond: {
    common: !0,
    size: 1,
    steps: 1e3
  },
  second: {
    common: !0,
    size: 1e3,
    steps: 60
  },
  minute: {
    common: !0,
    size: 6e4,
    steps: 60
  },
  hour: {
    common: !0,
    size: 36e5,
    steps: 24
  },
  day: {
    common: !0,
    size: 864e5,
    steps: 30
  },
  week: {
    common: !1,
    size: 6048e5,
    steps: 4
  },
  month: {
    common: !0,
    size: 2628e6,
    steps: 12
  },
  quarter: {
    common: !1,
    size: 7884e6,
    steps: 4
  },
  year: {
    common: !0,
    size: 3154e7
  }
}, ia = /* @__PURE__ */ Object.keys(oO);
function bz(e, t) {
  return e - t;
}
function wz(e, t) {
  if (fo(t))
    return null;
  const n = e._adapter, { parser: r, round: o, isoWeekday: s } = e._parseOpts;
  let a = t;
  return typeof r == "function" && (a = r(a)), vs(a) || (a = typeof r == "string" ? n.parse(a, r) : n.parse(a)), a === null ? null : (o && (a = o === "week" && (YT(s) || s === !0) ? n.startOf(a, "isoWeek", s) : n.startOf(a, o)), +a);
}
function Sz(e, t, n, r) {
  const o = ia.length;
  for (let s = ia.indexOf(e); s < o - 1; ++s) {
    const a = oO[ia[s]], c = a.steps ? a.steps : Number.MAX_SAFE_INTEGER;
    if (a.common && Math.ceil((n - t) / (c * a.size)) <= r)
      return ia[s];
  }
  return ia[o - 1];
}
function efe(e, t, n, r, o) {
  for (let s = ia.length - 1; s >= ia.indexOf(n); s--) {
    const a = ia[s];
    if (oO[a].common && e._adapter.diff(o, r, a) >= t - 1)
      return a;
  }
  return ia[n ? ia.indexOf(n) : 0];
}
function tfe(e) {
  for (let t = ia.indexOf(e) + 1, n = ia.length; t < n; ++t)
    if (oO[ia[t]].common)
      return ia[t];
}
function Cz(e, t, n) {
  if (!n)
    e[t] = !0;
  else if (n.length) {
    const { lo: r, hi: o } = wD(n, t), s = n[r] >= t ? n[r] : n[o];
    e[s] = !0;
  }
}
function nfe(e, t, n, r) {
  const o = e._adapter, s = +o.startOf(t[0].value, r), a = t[t.length - 1].value;
  let c, f;
  for (c = s; c <= a; c = +o.add(c, 1, r))
    f = n[c], f >= 0 && (t[f].major = !0);
  return t;
}
function xz(e, t, n) {
  const r = [], o = {}, s = t.length;
  let a, c;
  for (a = 0; a < s; ++a)
    c = t[a], o[c] = a, r.push({
      value: c,
      major: !1
    });
  return s === 0 || !n ? r : nfe(e, r, o, n);
}
class ZT extends gy {
  constructor(t) {
    super(t), this._cache = {
      data: [],
      labels: [],
      all: []
    }, this._unit = "day", this._majorUnit = void 0, this._offsets = {}, this._normalized = !1, this._parseOpts = void 0;
  }
  init(t, n = {}) {
    const r = t.time || (t.time = {}), o = this._adapter = new Que._date(t.adapters.date);
    o.init(n), wS(r.displayFormats, o.formats()), this._parseOpts = {
      parser: r.parser,
      round: r.round,
      isoWeekday: r.isoWeekday
    }, super.init(t), this._normalized = n.normalized;
  }
  parse(t, n) {
    return t === void 0 ? null : wz(this, t);
  }
  beforeLayout() {
    super.beforeLayout(), this._cache = {
      data: [],
      labels: [],
      all: []
    };
  }
  determineDataLimits() {
    const t = this.options, n = this._adapter, r = t.time.unit || "day";
    let { min: o, max: s, minDefined: a, maxDefined: c } = this.getUserBounds();
    function f(m) {
      !a && !isNaN(m.min) && (o = Math.min(o, m.min)), !c && !isNaN(m.max) && (s = Math.max(s, m.max));
    }
    (!a || !c) && (f(this._getLabelBounds()), (t.bounds !== "ticks" || t.ticks.source !== "labels") && f(this.getMinMax(!1))), o = vs(o) && !isNaN(o) ? o : +n.startOf(Date.now(), r), s = vs(s) && !isNaN(s) ? s : +n.endOf(Date.now(), r) + 1, this.min = Math.min(o, s - 1), this.max = Math.max(o + 1, s);
  }
  _getLabelBounds() {
    const t = this.getLabelTimestamps();
    let n = Number.POSITIVE_INFINITY, r = Number.NEGATIVE_INFINITY;
    return t.length && (n = t[0], r = t[t.length - 1]), {
      min: n,
      max: r
    };
  }
  buildTicks() {
    const t = this.options, n = t.time, r = t.ticks, o = r.source === "labels" ? this.getLabelTimestamps() : this._generate();
    t.bounds === "ticks" && o.length && (this.min = this._userMin || o[0], this.max = this._userMax || o[o.length - 1]);
    const s = this.min, a = this.max, c = Mle(o, s, a);
    return this._unit = n.unit || (r.autoSkip ? Sz(n.minUnit, this.min, this.max, this._getLabelCapacity(s)) : efe(this, c.length, n.minUnit, this.min, this.max)), this._majorUnit = !r.major.enabled || this._unit === "year" ? void 0 : tfe(this._unit), this.initOffsets(o), t.reverse && c.reverse(), xz(this, c, this._majorUnit);
  }
  afterAutoSkip() {
    this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map((t) => +t.value));
  }
  initOffsets(t = []) {
    let n = 0, r = 0, o, s;
    this.options.offset && t.length && (o = this.getDecimalForValue(t[0]), t.length === 1 ? n = 1 - o : n = (this.getDecimalForValue(t[1]) - o) / 2, s = this.getDecimalForValue(t[t.length - 1]), t.length === 1 ? r = s : r = (s - this.getDecimalForValue(t[t.length - 2])) / 2);
    const a = t.length < 3 ? 0.5 : 0.25;
    n = fc(n, 0, a), r = fc(r, 0, a), this._offsets = {
      start: n,
      end: r,
      factor: 1 / (n + 1 + r)
    };
  }
  _generate() {
    const t = this._adapter, n = this.min, r = this.max, o = this.options, s = o.time, a = s.unit || Sz(s.minUnit, n, r, this._getLabelCapacity(n)), c = Qn(o.ticks.stepSize, 1), f = a === "week" ? s.isoWeekday : !1, m = YT(f) || f === !0, g = {};
    let y = n, w, C;
    if (m && (y = +t.startOf(y, "isoWeek", f)), y = +t.startOf(y, m ? "day" : a), t.diff(r, n, a) > 1e5 * c)
      throw new Error(n + " and " + r + " are too far apart with stepSize of " + c + " " + a);
    const T = o.ticks.source === "data" && this.getDataTimestamps();
    for (w = y, C = 0; w < r; w = +t.add(w, c, a), C++)
      Cz(g, w, T);
    return (w === r || o.bounds === "ticks" || C === 1) && Cz(g, w, T), Object.keys(g).sort(bz).map((E) => +E);
  }
  getLabelForValue(t) {
    const n = this._adapter, r = this.options.time;
    return r.tooltipFormat ? n.format(t, r.tooltipFormat) : n.format(t, r.displayFormats.datetime);
  }
  format(t, n) {
    const o = this.options.time.displayFormats, s = this._unit, a = n || o[s];
    return this._adapter.format(t, a);
  }
  _tickFormatFunction(t, n, r, o) {
    const s = this.options, a = s.ticks.callback;
    if (a)
      return Zr(a, [
        t,
        n,
        r
      ], this);
    const c = s.time.displayFormats, f = this._unit, m = this._majorUnit, g = f && c[f], y = m && c[m], w = r[n], C = m && y && w && w.major;
    return this._adapter.format(t, o || (C ? y : g));
  }
  generateTickLabels(t) {
    let n, r, o;
    for (n = 0, r = t.length; n < r; ++n)
      o = t[n], o.label = this._tickFormatFunction(o.value, n, t);
  }
  getDecimalForValue(t) {
    return t === null ? NaN : (t - this.min) / (this.max - this.min);
  }
  getPixelForValue(t) {
    const n = this._offsets, r = this.getDecimalForValue(t);
    return this.getPixelForDecimal((n.start + r) * n.factor);
  }
  getValueForPixel(t) {
    const n = this._offsets, r = this.getDecimalForPixel(t) / n.factor - n.end;
    return this.min + r * (this.max - this.min);
  }
  _getLabelSize(t) {
    const n = this.options.ticks, r = this.ctx.measureText(t).width, o = Yh(this.isHorizontal() ? n.maxRotation : n.minRotation), s = Math.cos(o), a = Math.sin(o), c = this._resolveTickFontOptions(0).size;
    return {
      w: r * s + c * a,
      h: r * a + c * s
    };
  }
  _getLabelCapacity(t) {
    const n = this.options.time, r = n.displayFormats, o = r[n.unit] || r.millisecond, s = this._tickFormatFunction(t, 0, xz(this, [
      t
    ], this._majorUnit), o), a = this._getLabelSize(s), c = Math.floor(this.isHorizontal() ? this.width / a.w : this.height / a.h) - 1;
    return c > 0 ? c : 1;
  }
  getDataTimestamps() {
    let t = this._cache.data || [], n, r;
    if (t.length)
      return t;
    const o = this.getMatchingVisibleMetas();
    if (this._normalized && o.length)
      return this._cache.data = o[0].controller.getAllParsedValues(this);
    for (n = 0, r = o.length; n < r; ++n)
      t = t.concat(o[n].controller.getAllParsedValues(this));
    return this._cache.data = this.normalize(t);
  }
  getLabelTimestamps() {
    const t = this._cache.labels || [];
    let n, r;
    if (t.length)
      return t;
    const o = this.getLabels();
    for (n = 0, r = o.length; n < r; ++n)
      t.push(wz(this, o[n]));
    return this._cache.labels = this._normalized ? t : this.normalize(t);
  }
  normalize(t) {
    return Dle(t.sort(bz));
  }
}
Dn(ZT, "id", "time"), Dn(ZT, "defaults", {
  bounds: "data",
  adapters: {},
  time: {
    parser: !1,
    unit: !1,
    round: !1,
    isoWeekday: !1,
    minUnit: "millisecond",
    displayFormats: {}
  },
  ticks: {
    source: "auto",
    callback: !1,
    major: {
      enabled: !1
    }
  }
});
function eT(e, t, n) {
  let r = 0, o = e.length - 1, s, a, c, f;
  n ? (t >= e[r].pos && t <= e[o].pos && ({ lo: r, hi: o } = zM(e, "pos", t)), { pos: s, time: c } = e[r], { pos: a, time: f } = e[o]) : (t >= e[r].time && t <= e[o].time && ({ lo: r, hi: o } = zM(e, "time", t)), { time: s, pos: c } = e[r], { time: a, pos: f } = e[o]);
  const m = a - s;
  return m ? c + (f - c) * (t - s) / m : c;
}
class Ez extends ZT {
  constructor(t) {
    super(t), this._table = [], this._minPos = void 0, this._tableRange = void 0;
  }
  initOffsets() {
    const t = this._getTimestampsForTable(), n = this._table = this.buildLookupTable(t);
    this._minPos = eT(n, this.min), this._tableRange = eT(n, this.max) - this._minPos, super.initOffsets(t);
  }
  buildLookupTable(t) {
    const { min: n, max: r } = this, o = [], s = [];
    let a, c, f, m, g;
    for (a = 0, c = t.length; a < c; ++a)
      m = t[a], m >= n && m <= r && o.push(m);
    if (o.length < 2)
      return [
        {
          time: n,
          pos: 0
        },
        {
          time: r,
          pos: 1
        }
      ];
    for (a = 0, c = o.length; a < c; ++a)
      g = o[a + 1], f = o[a - 1], m = o[a], Math.round((g + f) / 2) !== m && s.push({
        time: m,
        pos: a / (c - 1)
      });
    return s;
  }
  _generate() {
    const t = this.min, n = this.max;
    let r = super.getDataTimestamps();
    return (!r.includes(t) || !r.length) && r.splice(0, 0, t), (!r.includes(n) || r.length === 1) && r.push(n), r.sort((o, s) => o - s);
  }
  _getTimestampsForTable() {
    let t = this._cache.all || [];
    if (t.length)
      return t;
    const n = this.getDataTimestamps(), r = this.getLabelTimestamps();
    return n.length && r.length ? t = this.normalize(n.concat(r)) : t = n.length ? n : r, t = this._cache.all = t, t;
  }
  getDecimalForValue(t) {
    return (eT(this._table, t) - this._minPos) / this._tableRange;
  }
  getValueForPixel(t) {
    const n = this._offsets, r = this.getDecimalForPixel(t) / n.factor - n.end;
    return eT(this._table, r * this._tableRange + this._minPos, !0);
  }
}
Dn(Ez, "id", "timeseries"), Dn(Ez, "defaults", ZT.defaults);
Sd.register(YM, XM, vT, Hf, Kde, Ade, zde);
function rfe({ data: e }) {
  const t = x.useRef(null), n = x.useRef(null);
  return x.useEffect(() => {
    if (t.current)
      return n.current && n.current.destroy(), n.current = new Sd(t.current, {
        type: "line",
        data: {
          labels: e.map((r) => r.date),
          datasets: [
            {
              label: "Revenue",
              data: e.map((r) => r.amount),
              borderColor: "#6054d0",
              backgroundColor: "rgba(96, 84, 208, 0.2)",
              tension: 0.4,
              fill: !0,
              pointRadius: 3
            }
          ]
        },
        options: {
          responsive: !0,
          maintainAspectRatio: !1,
          scales: {
            y: {
              ticks: {
                callback: (r) => `$${r}`
              }
            }
          }
        }
      }), () => {
        var r;
        (r = n.current) == null || r.destroy();
      };
  }, [e]), /* @__PURE__ */ $.jsx(rD, { elevation: 2, children: /* @__PURE__ */ $.jsxs(oD, { sx: { height: 360 }, children: [
    /* @__PURE__ */ $.jsx(Po, { variant: "h6", fontWeight: 600, mb: 2, children: "Monthly revenue" }),
    /* @__PURE__ */ $.jsx("canvas", { ref: t })
  ] }) });
}
const RD = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (RD.displayName = "GridApiContext");
function On() {
  const e = x.useContext(RD);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const kD = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (kD.displayName = "GridRootPropsContext");
const Lt = () => {
  const e = x.useContext(kD);
  if (!e)
    throw new Error("MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.");
  return e;
}, ofe = parseInt(x.version, 10), Yn = (e) => {
  if (ofe >= 19) {
    const t = (n) => e(n, n.ref ?? null);
    return t.displayName = e.displayName ?? e.name, t;
  }
  return /* @__PURE__ */ x.forwardRef(e);
};
function f5(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
/**
 * @mui/styled-engine v7.3.3
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function ife(e, t) {
  const n = _T(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function sfe(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const Tz = [];
function om(e) {
  return Tz[0] = e, ly(Tz);
}
function Uh(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function p5(e) {
  if (/* @__PURE__ */ x.isValidElement(e) || mu.isValidElementType(e) || !Uh(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = p5(e[n]);
  }), t;
}
function e_(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Uh(e) && Uh(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ x.isValidElement(t[o]) || mu.isValidElementType(t[o]) ? r[o] = t[o] : Uh(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Uh(e[o]) ? r[o] = e_(e[o], t[o], n) : n.clone ? r[o] = Uh(t[o]) ? p5(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const afe = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function lfe(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = afe(t), a = Object.keys(s);
  function c(w) {
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n})`;
  }
  function f(w) {
    return `@media (max-width:${(typeof t[w] == "number" ? t[w] : w) - r / 100}${n})`;
  }
  function m(w, C) {
    const T = a.indexOf(C);
    return `@media (min-width:${typeof t[w] == "number" ? t[w] : w}${n}) and (max-width:${(T !== -1 && typeof t[a[T]] == "number" ? t[a[T]] : C) - r / 100}${n})`;
  }
  function g(w) {
    return a.indexOf(w) + 1 < a.length ? m(w, a[a.indexOf(w) + 1]) : c(w);
  }
  function y(w) {
    const C = a.indexOf(w);
    return C === 0 ? c(a[1]) : C === a.length - 1 ? f(a[C]) : m(w, a[a.indexOf(w) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: c,
    down: f,
    between: m,
    only: g,
    not: y,
    unit: n,
    ...o
  };
}
function _z(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, c;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((c = o.match(s)) == null ? void 0 : c[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function ufe(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function cfe(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : f5(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function dfe(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...c) => t(e.breakpoints.up(...c), a), s.down = (...c) => t(e.breakpoints.down(...c), a), s.between = (...c) => t(e.breakpoints.between(...c), a), s.only = (...c) => t(e.breakpoints.only(...c), a), s.not = (...c) => {
      const f = t(e.breakpoints.not(...c), a);
      return f.includes("not all and") ? f.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : f;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const ffe = {
  borderRadius: 4
}, cp = process.env.NODE_ENV !== "production" ? u.oneOfType([u.number, u.string, u.object, u.array]) : {};
function TS(e, t) {
  return t ? e_(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const iO = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Oz = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${iO[e]}px)`
}, pfe = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : iO[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function _d(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || Oz;
    return t.reduce((a, c, f) => (a[s.up(s.keys[f])] = n(t[f]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || Oz;
    return Object.keys(t).reduce((a, c) => {
      if (ufe(s.keys, c)) {
        const f = cfe(r.containerQueries ? r : pfe, c);
        f && (a[f] = n(t[c], c));
      } else if (Object.keys(s.values || iO).includes(c)) {
        const f = s.up(c);
        a[f] = n(t[c], c);
      } else {
        const f = c;
        a[f] = t[f];
      }
      return a;
    }, {});
  }
  return n(t);
}
function hfe(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function Rz(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function PD(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : f5(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function sO(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function t_(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = sO(e, n) || r, t && (o = t(o, r, e)), o;
}
function zo(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const c = a[t], f = a.theme, m = sO(f, r) || {};
    return _d(a, c, (y) => {
      let w = t_(m, o, y);
      return y === w && typeof y == "string" && (w = t_(m, o, `${t}${y === "default" ? "" : PD(y)}`, y)), n === !1 ? w : {
        [n]: w
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: cp
  } : {}, s.filterProps = [t], s;
}
function mfe(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const gfe = {
  m: "margin",
  p: "padding"
}, vfe = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, kz = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, yfe = mfe((e) => {
  if (e.length > 2)
    if (kz[e])
      e = kz[e];
    else
      return [e];
  const [t, n] = e.split(""), r = gfe[t], o = vfe[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), aO = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], lO = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], bfe = [...aO, ...lO];
function SC(e, t, n, r) {
  const o = sO(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const c = o[a];
    return s >= 0 ? c : typeof c == "number" ? -c : typeof c == "string" && c.startsWith("var(") ? `calc(-1 * ${c})` : `-${c}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function h5(e) {
  return SC(e, "spacing", 8, "spacing");
}
function CC(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function wfe(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = CC(t, n), r), {});
}
function Sfe(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = yfe(n), s = wfe(o, r), a = e[n];
  return _d(e, a, s);
}
function m5(e, t) {
  const n = h5(e.theme);
  return Object.keys(e).map((r) => Sfe(e, t, r, n)).reduce(TS, {});
}
function _o(e) {
  return m5(e, aO);
}
_o.propTypes = process.env.NODE_ENV !== "production" ? aO.reduce((e, t) => (e[t] = cp, e), {}) : {};
_o.filterProps = aO;
function Oo(e) {
  return m5(e, lO);
}
Oo.propTypes = process.env.NODE_ENV !== "production" ? lO.reduce((e, t) => (e[t] = cp, e), {}) : {};
Oo.filterProps = lO;
process.env.NODE_ENV !== "production" && bfe.reduce((e, t) => (e[t] = cp, e), {});
function Cfe(e = 8, t = h5({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function uO(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? TS(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function pl(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Rl(e, t) {
  return zo({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const xfe = Rl("border", pl), Efe = Rl("borderTop", pl), Tfe = Rl("borderRight", pl), _fe = Rl("borderBottom", pl), Ofe = Rl("borderLeft", pl), Rfe = Rl("borderColor"), kfe = Rl("borderTopColor"), Pfe = Rl("borderRightColor"), Mfe = Rl("borderBottomColor"), Ife = Rl("borderLeftColor"), Dfe = Rl("outline", pl), Afe = Rl("outlineColor"), cO = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = SC(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: CC(t, r)
    });
    return _d(e, e.borderRadius, n);
  }
  return null;
};
cO.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: cp
} : {};
cO.filterProps = ["borderRadius"];
uO(xfe, Efe, Tfe, _fe, Ofe, Rfe, kfe, Pfe, Mfe, Ife, cO, Dfe, Afe);
const dO = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = SC(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: CC(t, r)
    });
    return _d(e, e.gap, n);
  }
  return null;
};
dO.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: cp
} : {};
dO.filterProps = ["gap"];
const fO = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = SC(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: CC(t, r)
    });
    return _d(e, e.columnGap, n);
  }
  return null;
};
fO.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: cp
} : {};
fO.filterProps = ["columnGap"];
const pO = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = SC(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: CC(t, r)
    });
    return _d(e, e.rowGap, n);
  }
  return null;
};
pO.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: cp
} : {};
pO.filterProps = ["rowGap"];
const Nfe = zo({
  prop: "gridColumn"
}), Lfe = zo({
  prop: "gridRow"
}), $fe = zo({
  prop: "gridAutoFlow"
}), jfe = zo({
  prop: "gridAutoColumns"
}), Ffe = zo({
  prop: "gridAutoRows"
}), zfe = zo({
  prop: "gridTemplateColumns"
}), Bfe = zo({
  prop: "gridTemplateRows"
}), Hfe = zo({
  prop: "gridTemplateAreas"
}), Vfe = zo({
  prop: "gridArea"
});
uO(dO, fO, pO, Nfe, Lfe, $fe, jfe, Ffe, zfe, Bfe, Hfe, Vfe);
function $v(e, t) {
  return t === "grey" ? t : e;
}
const Ufe = zo({
  prop: "color",
  themeKey: "palette",
  transform: $v
}), Wfe = zo({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: $v
}), Gfe = zo({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: $v
});
uO(Ufe, Wfe, Gfe);
function Pa(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const qfe = zo({
  prop: "width",
  transform: Pa
}), MD = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, c, f;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || iO[n];
      return r ? ((f = (c = e.theme) == null ? void 0 : c.breakpoints) == null ? void 0 : f.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: Pa(n)
      };
    };
    return _d(e, e.maxWidth, t);
  }
  return null;
};
MD.filterProps = ["maxWidth"];
const Kfe = zo({
  prop: "minWidth",
  transform: Pa
}), Yfe = zo({
  prop: "height",
  transform: Pa
}), Xfe = zo({
  prop: "maxHeight",
  transform: Pa
}), Qfe = zo({
  prop: "minHeight",
  transform: Pa
});
zo({
  prop: "size",
  cssProperty: "width",
  transform: Pa
});
zo({
  prop: "size",
  cssProperty: "height",
  transform: Pa
});
const Jfe = zo({
  prop: "boxSizing"
});
uO(qfe, MD, Kfe, Yfe, Xfe, Qfe, Jfe);
const g5 = {
  // borders
  border: {
    themeKey: "borders",
    transform: pl
  },
  borderTop: {
    themeKey: "borders",
    transform: pl
  },
  borderRight: {
    themeKey: "borders",
    transform: pl
  },
  borderBottom: {
    themeKey: "borders",
    transform: pl
  },
  borderLeft: {
    themeKey: "borders",
    transform: pl
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: pl
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: cO
  },
  // palette
  color: {
    themeKey: "palette",
    transform: $v
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: $v
  },
  backgroundColor: {
    themeKey: "palette",
    transform: $v
  },
  // spacing
  p: {
    style: Oo
  },
  pt: {
    style: Oo
  },
  pr: {
    style: Oo
  },
  pb: {
    style: Oo
  },
  pl: {
    style: Oo
  },
  px: {
    style: Oo
  },
  py: {
    style: Oo
  },
  padding: {
    style: Oo
  },
  paddingTop: {
    style: Oo
  },
  paddingRight: {
    style: Oo
  },
  paddingBottom: {
    style: Oo
  },
  paddingLeft: {
    style: Oo
  },
  paddingX: {
    style: Oo
  },
  paddingY: {
    style: Oo
  },
  paddingInline: {
    style: Oo
  },
  paddingInlineStart: {
    style: Oo
  },
  paddingInlineEnd: {
    style: Oo
  },
  paddingBlock: {
    style: Oo
  },
  paddingBlockStart: {
    style: Oo
  },
  paddingBlockEnd: {
    style: Oo
  },
  m: {
    style: _o
  },
  mt: {
    style: _o
  },
  mr: {
    style: _o
  },
  mb: {
    style: _o
  },
  ml: {
    style: _o
  },
  mx: {
    style: _o
  },
  my: {
    style: _o
  },
  margin: {
    style: _o
  },
  marginTop: {
    style: _o
  },
  marginRight: {
    style: _o
  },
  marginBottom: {
    style: _o
  },
  marginLeft: {
    style: _o
  },
  marginX: {
    style: _o
  },
  marginY: {
    style: _o
  },
  marginInline: {
    style: _o
  },
  marginInlineStart: {
    style: _o
  },
  marginInlineEnd: {
    style: _o
  },
  marginBlock: {
    style: _o
  },
  marginBlockStart: {
    style: _o
  },
  marginBlockEnd: {
    style: _o
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: dO
  },
  rowGap: {
    style: pO
  },
  columnGap: {
    style: fO
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Pa
  },
  maxWidth: {
    style: MD
  },
  minWidth: {
    transform: Pa
  },
  height: {
    transform: Pa
  },
  maxHeight: {
    transform: Pa
  },
  minHeight: {
    transform: Pa
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function Zfe(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function epe(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function tpe() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, c = s[n];
    if (!c)
      return {
        [n]: r
      };
    const {
      cssProperty: f = n,
      themeKey: m,
      transform: g,
      style: y
    } = c;
    if (r == null)
      return null;
    if (m === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const w = sO(o, m) || {};
    return y ? y(a) : _d(a, r, (T) => {
      let E = t_(w, g, T);
      return T === E && typeof T == "string" && (E = t_(w, g, `${n}${T === "default" ? "" : PD(T)}`, T)), f === !1 ? E : {
        [f]: E
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {},
      nested: s
    } = n || {};
    if (!r)
      return null;
    const a = o.unstable_sxConfig ?? g5;
    function c(f) {
      let m = f;
      if (typeof f == "function")
        m = f(o);
      else if (typeof f != "object")
        return f;
      if (!m)
        return null;
      const g = hfe(o.breakpoints), y = Object.keys(g);
      let w = g;
      return Object.keys(m).forEach((C) => {
        const T = epe(m[C], o);
        if (T != null)
          if (typeof T == "object")
            if (a[C])
              w = TS(w, e(C, T, o, a));
            else {
              const E = _d({
                theme: o
              }, T, (O) => ({
                [C]: O
              }));
              Zfe(E, T) ? w[C] = t({
                sx: T,
                theme: o,
                nested: !0
              }) : w = TS(w, E);
            }
          else
            w = TS(w, e(C, T, o, a));
      }), !s && o.modularCssLayers ? {
        "@layer sx": _z(o, Rz(y, w))
      } : _z(o, Rz(y, w));
    }
    return Array.isArray(r) ? r.map(c) : c(r);
  }
  return t;
}
const n_ = tpe();
n_.filterProps = ["sx"];
function npe(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function rpe(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, c = lfe(n), f = Cfe(o);
  let m = e_({
    breakpoints: c,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: f,
    shape: {
      ...ffe,
      ...s
    }
  }, a);
  return m = dfe(m), m.applyStyles = npe, m = t.reduce((g, y) => e_(g, y), m), m.unstable_sxConfig = {
    ...g5,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, m.unstable_sx = function(y) {
    return n_({
      sx: y,
      theme: this
    });
  }, m;
}
function v5(e, t = "") {
  return e.displayName || e.name || t;
}
function Pz(e, t, n) {
  const r = v5(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function ope(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return v5(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case mu.ForwardRef:
          return Pz(e, e.render, "ForwardRef");
        case mu.Memo:
          return Pz(e, e.type, "memo");
        default:
          return;
      }
  }
}
function ipe(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: om(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = om(o.style));
  }), r;
}
const spe = rpe();
function MP(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Xh(e, t) {
  return t && e && typeof e == "object" && e.styles && !e.styles.startsWith("@layer") && (e.styles = `@layer ${t}{${String(e.styles)}}`), e;
}
function ape(e) {
  return e ? (t, n) => n[e] : null;
}
function lpe(e, t, n) {
  e.theme = fpe(e.theme) ? n : e.theme[t] || e.theme;
}
function yT(e, t, n) {
  const r = typeof t == "function" ? t(e) : t;
  if (Array.isArray(r))
    return r.flatMap((o) => yT(e, o, n));
  if (Array.isArray(r == null ? void 0 : r.variants)) {
    let o;
    if (r.isProcessed)
      o = n ? Xh(r.style, n) : r.style;
    else {
      const {
        variants: s,
        ...a
      } = r;
      o = n ? Xh(om(a), n) : a;
    }
    return y5(e, r.variants, [o], n);
  }
  return r != null && r.isProcessed ? n ? Xh(om(r.style), n) : r.style : n ? Xh(om(r), n) : r;
}
function y5(e, t, n = [], r = void 0) {
  var s;
  let o;
  e: for (let a = 0; a < t.length; a += 1) {
    const c = t[a];
    if (typeof c.props == "function") {
      if (o ?? (o = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !c.props(o))
        continue;
    } else
      for (const f in c.props)
        if (e[f] !== c.props[f] && ((s = e.ownerState) == null ? void 0 : s[f]) !== c.props[f])
          continue e;
    typeof c.style == "function" ? (o ?? (o = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(r ? Xh(om(c.style(o)), r) : c.style(o))) : n.push(r ? Xh(om(c.style), r) : c.style);
  }
  return n;
}
function upe(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = spe,
    rootShouldForwardProp: r = MP,
    slotShouldForwardProp: o = MP
  } = e;
  function s(c) {
    lpe(c, t, n);
  }
  return (c, f = {}) => {
    sfe(c, (F) => F.filter((H) => H !== n_));
    const {
      name: m,
      slot: g,
      skipVariantsResolver: y,
      skipSx: w,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: C = ape(b5(g)),
      ...T
    } = f, E = m && m.startsWith("Mui") || g ? "components" : "custom", O = y !== void 0 ? y : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      g && g !== "Root" && g !== "root" || !1
    ), k = w || !1;
    let I = MP;
    g === "Root" || g === "root" ? I = r : g ? I = o : ppe(c) && (I = void 0);
    const M = ife(c, {
      shouldForwardProp: I,
      label: dpe(m, g),
      ...T
    }), N = (F) => {
      if (F.__emotion_real === F)
        return F;
      if (typeof F == "function")
        return function(U) {
          return yT(U, F, U.theme.modularCssLayers ? E : void 0);
        };
      if (Uh(F)) {
        const H = ipe(F);
        return function(z) {
          return H.variants ? yT(z, H, z.theme.modularCssLayers ? E : void 0) : z.theme.modularCssLayers ? Xh(H.style, E) : H.style;
        };
      }
      return F;
    }, P = (...F) => {
      const H = [], U = F.map(N), z = [];
      if (H.push(s), m && C && z.push(function(Y) {
        var X, te;
        const G = (te = (X = Y.theme.components) == null ? void 0 : X[m]) == null ? void 0 : te.styleOverrides;
        if (!G)
          return null;
        const K = {};
        for (const re in G)
          K[re] = yT(Y, G[re], Y.theme.modularCssLayers ? "theme" : void 0);
        return C(Y, K);
      }), m && !O && z.push(function(Y) {
        var K, X;
        const ee = Y.theme, G = (X = (K = ee == null ? void 0 : ee.components) == null ? void 0 : K[m]) == null ? void 0 : X.variants;
        return G ? y5(Y, G, [], Y.theme.modularCssLayers ? "theme" : void 0) : null;
      }), k || z.push(n_), Array.isArray(U[0])) {
        const W = U.shift(), Y = new Array(H.length).fill(""), ee = new Array(z.length).fill("");
        let G;
        G = [...Y, ...W, ...ee], G.raw = [...Y, ...W.raw, ...ee], H.unshift(G);
      }
      const A = [...H, ...U, ...z], q = M(...A);
      return c.muiName && (q.muiName = c.muiName), process.env.NODE_ENV !== "production" && (q.displayName = cpe(m, g, c)), q;
    };
    return M.withConfig && (P.withConfig = M.withConfig), P;
  };
}
function cpe(e, t, n) {
  return e ? `${e}${PD(t || "")}` : `Styled(${ope(n)})`;
}
function dpe(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${b5(t || "Root")}`), n;
}
function fpe(e) {
  for (const t in e)
    return !1;
  return !0;
}
function ppe(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function b5(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const Lr = upe();
function w5(e, t, n = !1) {
  const r = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const s = o;
      if (s === "components" || s === "slots")
        r[s] = {
          ...e[s],
          ...r[s]
        };
      else if (s === "componentsProps" || s === "slotProps") {
        const a = e[s], c = t[s];
        if (!c)
          r[s] = a || {};
        else if (!a)
          r[s] = c;
        else {
          r[s] = {
            ...c
          };
          for (const f in a)
            if (Object.prototype.hasOwnProperty.call(a, f)) {
              const m = f;
              r[s][m] = w5(a[m], c[m], n);
            }
        }
      } else s === "className" && n && t.className ? r.className = et(e == null ? void 0 : e.className, t == null ? void 0 : t.className) : s === "style" && n && t.style ? r.style = {
        ...e == null ? void 0 : e.style,
        ...t == null ? void 0 : t.style
      } : r[s] === void 0 && (r[s] = e[s]);
    }
  return r;
}
function hpe(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : w5(t.components[n].defaultProps, r);
}
const mpe = /* @__PURE__ */ x.createContext();
process.env.NODE_ENV !== "production" && (u.node, u.bool);
const xc = () => x.useContext(mpe) ?? !1;
var gpe = (e, t, n) => {
  if (t.length === 1 && t[0] === n) {
    let r = !1;
    try {
      const o = {};
      e(o) === o && (r = !0);
    } catch {
    }
    if (r) {
      let o;
      try {
        throw new Error();
      } catch (s) {
        ({ stack: o } = s);
      }
      console.warn(
        `The result function returned its own inputs without modification. e.g
\`createSelector([state => state.todos], todos => todos)\`
This could lead to inefficient memoization and unnecessary re-renders.
Ensure transformation logic is in the result function, and extraction logic is in the input selectors.`,
        { stack: o }
      );
    }
  }
}, vpe = (e, t, n) => {
  const { memoize: r, memoizeOptions: o } = t, { inputSelectorResults: s, inputSelectorResultsCopy: a } = e, c = r(() => ({}), ...o);
  if (!(c.apply(null, s) === c.apply(null, a))) {
    let m;
    try {
      throw new Error();
    } catch (g) {
      ({ stack: m } = g);
    }
    console.warn(
      `An input selector returned a different result when passed same arguments.
This means your output selector will likely run more frequently than intended.
Avoid returning a new reference inside your input selector, e.g.
\`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)\``,
      {
        arguments: n,
        firstInputs: s,
        secondInputs: a,
        stack: m
      }
    );
  }
}, ype = {
  inputStabilityCheck: "once",
  identityFunctionCheck: "once"
}, r_ = /* @__PURE__ */ Symbol("NOT_FOUND");
function bpe(e, t = `expected a function, instead received ${typeof e}`) {
  if (typeof e != "function")
    throw new TypeError(t);
}
function wpe(e, t = `expected an object, instead received ${typeof e}`) {
  if (typeof e != "object")
    throw new TypeError(t);
}
function Spe(e, t = "expected all items to be functions, instead received the following types: ") {
  if (!e.every((n) => typeof n == "function")) {
    const n = e.map(
      (r) => typeof r == "function" ? `function ${r.name || "unnamed"}()` : typeof r
    ).join(", ");
    throw new TypeError(`${t}[${n}]`);
  }
}
var Mz = (e) => Array.isArray(e) ? e : [e];
function Cpe(e) {
  const t = Array.isArray(e[0]) ? e[0] : e;
  return Spe(
    t,
    "createSelector expects all input-selectors to be functions, but received the following types: "
  ), t;
}
function Iz(e, t) {
  const n = [], { length: r } = e;
  for (let o = 0; o < r; o++)
    n.push(e[o].apply(null, t));
  return n;
}
var xpe = (e, t) => {
  const { identityFunctionCheck: n, inputStabilityCheck: r } = {
    ...ype,
    ...t
  };
  return {
    identityFunctionCheck: {
      shouldRun: n === "always" || n === "once" && e,
      run: gpe
    },
    inputStabilityCheck: {
      shouldRun: r === "always" || r === "once" && e,
      run: vpe
    }
  };
};
function Epe(e) {
  let t;
  return {
    get(n) {
      return t && e(t.key, n) ? t.value : r_;
    },
    put(n, r) {
      t = { key: n, value: r };
    },
    getEntries() {
      return t ? [t] : [];
    },
    clear() {
      t = void 0;
    }
  };
}
function Tpe(e, t) {
  let n = [];
  function r(c) {
    const f = n.findIndex((m) => t(c, m.key));
    if (f > -1) {
      const m = n[f];
      return f > 0 && (n.splice(f, 1), n.unshift(m)), m.value;
    }
    return r_;
  }
  function o(c, f) {
    r(c) === r_ && (n.unshift({ key: c, value: f }), n.length > e && n.pop());
  }
  function s() {
    return n;
  }
  function a() {
    n = [];
  }
  return { get: r, put: o, getEntries: s, clear: a };
}
var _pe = (e, t) => e === t;
function Ope(e) {
  return function(n, r) {
    if (n === null || r === null || n.length !== r.length)
      return !1;
    const { length: o } = n;
    for (let s = 0; s < o; s++)
      if (!e(n[s], r[s]))
        return !1;
    return !0;
  };
}
function S5(e, t) {
  const n = typeof t == "object" ? t : { equalityCheck: t }, {
    equalityCheck: r = _pe,
    maxSize: o = 1,
    resultEqualityCheck: s
  } = n, a = Ope(r);
  let c = 0;
  const f = o <= 1 ? Epe(a) : Tpe(o, a);
  function m() {
    let g = f.get(arguments);
    if (g === r_) {
      if (g = e.apply(null, arguments), c++, s) {
        const w = f.getEntries().find(
          (C) => s(C.value, g)
        );
        w && (g = w.value, c !== 0 && c--);
      }
      f.put(arguments, g);
    }
    return g;
  }
  return m.clearCache = () => {
    f.clear(), m.resetResultsCount();
  }, m.resultsCount = () => c, m.resetResultsCount = () => {
    c = 0;
  }, m;
}
var Rpe = class {
  constructor(e) {
    this.value = e;
  }
  deref() {
    return this.value;
  }
}, kpe = typeof WeakRef < "u" ? WeakRef : Rpe, Ppe = 0, Dz = 1;
function tT() {
  return {
    s: Ppe,
    v: void 0,
    o: null,
    p: null
  };
}
function C5(e, t = {}) {
  let n = tT();
  const { resultEqualityCheck: r } = t;
  let o, s = 0;
  function a() {
    var y;
    let c = n;
    const { length: f } = arguments;
    for (let w = 0, C = f; w < C; w++) {
      const T = arguments[w];
      if (typeof T == "function" || typeof T == "object" && T !== null) {
        let E = c.o;
        E === null && (c.o = E = /* @__PURE__ */ new WeakMap());
        const O = E.get(T);
        O === void 0 ? (c = tT(), E.set(T, c)) : c = O;
      } else {
        let E = c.p;
        E === null && (c.p = E = /* @__PURE__ */ new Map());
        const O = E.get(T);
        O === void 0 ? (c = tT(), E.set(T, c)) : c = O;
      }
    }
    const m = c;
    let g;
    if (c.s === Dz)
      g = c.v;
    else if (g = e.apply(null, arguments), s++, r) {
      const w = ((y = o == null ? void 0 : o.deref) == null ? void 0 : y.call(o)) ?? o;
      w != null && r(w, g) && (g = w, s !== 0 && s--), o = typeof g == "object" && g !== null || typeof g == "function" ? new kpe(g) : g;
    }
    return m.s = Dz, m.v = g, g;
  }
  return a.clearCache = () => {
    n = tT(), a.resetResultsCount();
  }, a.resultsCount = () => s, a.resetResultsCount = () => {
    s = 0;
  }, a;
}
function x5(e, ...t) {
  const n = typeof e == "function" ? {
    memoize: e,
    memoizeOptions: t
  } : e, r = (...o) => {
    let s = 0, a = 0, c, f = {}, m = o.pop();
    typeof m == "object" && (f = m, m = o.pop()), bpe(
      m,
      `createSelector expects an output function after the inputs, but received: [${typeof m}]`
    );
    const g = {
      ...n,
      ...f
    }, {
      memoize: y,
      memoizeOptions: w = [],
      argsMemoize: C = C5,
      argsMemoizeOptions: T = [],
      devModeChecks: E = {}
    } = g, O = Mz(w), k = Mz(T), I = Cpe(o), M = y(function() {
      return s++, m.apply(
        null,
        arguments
      );
    }, ...O);
    let N = !0;
    const P = C(function() {
      a++;
      const H = Iz(
        I,
        arguments
      );
      if (c = M.apply(null, H), process.env.NODE_ENV !== "production") {
        const { identityFunctionCheck: U, inputStabilityCheck: z } = xpe(N, E);
        if (U.shouldRun && U.run(
          m,
          H,
          c
        ), z.shouldRun) {
          const A = Iz(
            I,
            arguments
          );
          z.run(
            { inputSelectorResults: H, inputSelectorResultsCopy: A },
            { memoize: y, memoizeOptions: O },
            arguments
          );
        }
        N && (N = !1);
      }
      return c;
    }, ...k);
    return Object.assign(P, {
      resultFunc: m,
      memoizedResultFunc: M,
      dependencies: I,
      dependencyRecomputations: () => a,
      resetDependencyRecomputations: () => {
        a = 0;
      },
      lastResult: () => c,
      recomputations: () => s,
      resetRecomputations: () => {
        s = 0;
      },
      memoize: y,
      argsMemoize: C
    });
  };
  return Object.assign(r, {
    withTypes: () => r
  }), r;
}
var E5 = /* @__PURE__ */ x5(C5), Mpe = Object.assign(
  (e, t = E5) => {
    wpe(
      e,
      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof e}`
    );
    const n = Object.keys(e), r = n.map(
      (s) => e[s]
    );
    return t(
      r,
      (...s) => s.reduce((a, c, f) => (a[n[f]] = c, a), {})
    );
  },
  { withTypes: () => Mpe }
);
const Az = /* @__PURE__ */ new Set();
function yl(e, t = "warning") {
  if (process.env.NODE_ENV === "production")
    return;
  const n = Array.isArray(e) ? e.join(`
`) : e;
  Az.has(n) || (Az.add(n), t === "error" ? console.error(n) : console.warn(n));
}
const Ipe = Object.is;
function T5(e, t) {
  if (e === t)
    return !0;
  if (!(e instanceof Object) || !(t instanceof Object))
    return !1;
  let n = 0, r = 0;
  for (const o in e)
    if (n += 1, !Ipe(e[o], t[o]) || !(o in t))
      return !1;
  for (const o in t)
    r += 1;
  return n === r;
}
var QM = { exports: {} }, IP = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Nz;
function Dpe() {
  if (Nz) return IP;
  Nz = 1;
  var e = x;
  function t(y, w) {
    return y === w && (y !== 0 || 1 / y === 1 / w) || y !== y && w !== w;
  }
  var n = typeof Object.is == "function" ? Object.is : t, r = e.useState, o = e.useEffect, s = e.useLayoutEffect, a = e.useDebugValue;
  function c(y, w) {
    var C = w(), T = r({ inst: { value: C, getSnapshot: w } }), E = T[0].inst, O = T[1];
    return s(
      function() {
        E.value = C, E.getSnapshot = w, f(E) && O({ inst: E });
      },
      [y, C, w]
    ), o(
      function() {
        return f(E) && O({ inst: E }), y(function() {
          f(E) && O({ inst: E });
        });
      },
      [y]
    ), a(C), C;
  }
  function f(y) {
    var w = y.getSnapshot;
    y = y.value;
    try {
      var C = w();
      return !n(y, C);
    } catch {
      return !0;
    }
  }
  function m(y, w) {
    return w();
  }
  var g = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? m : c;
  return IP.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : g, IP;
}
var DP = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Lz;
function Ape() {
  return Lz || (Lz = 1, process.env.NODE_ENV !== "production" && function() {
    function e(C, T) {
      return C === T && (C !== 0 || 1 / C === 1 / T) || C !== C && T !== T;
    }
    function t(C, T) {
      g || o.startTransition === void 0 || (g = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var E = T();
      if (!y) {
        var O = T();
        s(E, O) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), y = !0);
      }
      O = a({
        inst: { value: E, getSnapshot: T }
      });
      var k = O[0].inst, I = O[1];
      return f(
        function() {
          k.value = E, k.getSnapshot = T, n(k) && I({ inst: k });
        },
        [C, E, T]
      ), c(
        function() {
          return n(k) && I({ inst: k }), C(function() {
            n(k) && I({ inst: k });
          });
        },
        [C]
      ), m(E), E;
    }
    function n(C) {
      var T = C.getSnapshot;
      C = C.value;
      try {
        var E = T();
        return !s(C, E);
      } catch {
        return !0;
      }
    }
    function r(C, T) {
      return T();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var o = x, s = typeof Object.is == "function" ? Object.is : e, a = o.useState, c = o.useEffect, f = o.useLayoutEffect, m = o.useDebugValue, g = !1, y = !1, w = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? r : t;
    DP.useSyncExternalStore = o.useSyncExternalStore !== void 0 ? o.useSyncExternalStore : w, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), DP;
}
process.env.NODE_ENV === "production" ? QM.exports = Dpe() : QM.exports = Ape();
var ID = QM.exports;
function _5(e) {
  return e.acceptsApiRef;
}
function $z(e, t) {
  return _5(t) ? t(e) : t(e.current.state);
}
function AP(e, t, n, r) {
  return _5(t) ? t(e, n) : t(e.current.state, r);
}
const O5 = Object.is, DD = T5, Npe = (e, t) => e === t ? !0 : e.length === t.length && e.every((n, r) => n === t[r]), Lpe = (e, t) => {
  let n = Object.is;
  return t instanceof Array ? n = Npe : t instanceof Object && (n = DD), n(e, t);
}, R5 = () => ({
  state: null,
  equals: null,
  selector: null,
  args: void 0
}), o_ = [], k5 = () => null, Ze = (e, t, n = O5) => {
  process.env.NODE_ENV !== "production" && (e.current.state || yl(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const r = Ol(R5), o = r.current.selector !== null, [s, a] = x.useState(
    // We don't use an initialization function to avoid allocations
    o ? null : $z(e, t)
  );
  r.current.state = s, r.current.equals = n, r.current.selector = t;
  const c = x.useCallback(
    () => (r.current.subscription || (r.current.subscription = e.current.store.subscribe(() => {
      const m = $z(e, r.current.selector);
      r.current.equals(r.current.state, m) || (r.current.state = m, a(m));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    o_
  ), f = x.useCallback(() => () => {
    r.current.subscription && (r.current.subscription(), r.current.subscription = void 0);
  }, o_);
  return ID.useSyncExternalStore(f, c, k5), s;
}, YS = (e, t, n = void 0, r = O5) => {
  process.env.NODE_ENV !== "production" && (e.current.state || yl(["MUI X: `useGridSelector` has been called before the initialization of the state.", "This hook can only be used inside the context of the grid."]));
  const o = Ol(R5), s = o.current.selector !== null, [a, c] = x.useState(
    // We don't use an initialization function to avoid allocations
    s ? null : AP(e, t, n, e.current.instanceId)
  );
  o.current.state = a, o.current.equals = r, o.current.selector = t;
  const f = o.current.args;
  if (o.current.args = n, s && !Lpe(f, n)) {
    const y = AP(e, o.current.selector, o.current.args, e.current.instanceId);
    o.current.equals(o.current.state, y) || (o.current.state = y, c(y));
  }
  const m = x.useCallback(
    () => (o.current.subscription || (o.current.subscription = e.current.store.subscribe(() => {
      const y = AP(e, o.current.selector, o.current.args, e.current.instanceId);
      o.current.equals(o.current.state, y) || (o.current.state = y, c(y));
    })), null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    o_
  ), g = x.useCallback(() => () => {
    o.current.subscription && (o.current.subscription(), o.current.subscription = void 0);
  }, o_);
  return ID.useSyncExternalStore(g, m, k5), a;
}, $pe = x5({
  memoize: S5,
  memoizeOptions: {
    maxSize: 1,
    equalityCheck: Object.is
  }
}), jz = /* @__PURE__ */ new WeakMap();
function au(e) {
  return "current" in e && "instanceId" in e.current;
}
const lu = {
  id: "default"
}, en = (e, t, n, r, o, s, ...a) => {
  if (a.length > 0)
    throw new Error("Unsupported number of selectors");
  let c;
  if (e && t && n && r && o && s)
    c = (f, m) => {
      const g = au(f), y = m ?? (g ? f.current.instanceId : lu), w = g ? f.current.state : f, C = e(w, y), T = t(w, y), E = n(w, y), O = r(w, y), k = o(w, y);
      return s(C, T, E, O, k);
    };
  else if (e && t && n && r && o)
    c = (f, m) => {
      const g = au(f), y = m ?? (g ? f.current.instanceId : lu), w = g ? f.current.state : f, C = e(w, y), T = t(w, y), E = n(w, y), O = r(w, y);
      return o(C, T, E, O);
    };
  else if (e && t && n && r)
    c = (f, m) => {
      const g = au(f), y = m ?? (g ? f.current.instanceId : lu), w = g ? f.current.state : f, C = e(w, y), T = t(w, y), E = n(w, y);
      return r(C, T, E);
    };
  else if (e && t && n)
    c = (f, m) => {
      const g = au(f), y = m ?? (g ? f.current.instanceId : lu), w = g ? f.current.state : f, C = e(w, y), T = t(w, y);
      return n(C, T);
    };
  else if (e && t)
    c = (f, m) => {
      const g = au(f), y = m ?? (g ? f.current.instanceId : lu), w = g ? f.current.state : f, C = e(w, y);
      return t(C);
    };
  else
    throw new Error("Missing arguments");
  return c.acceptsApiRef = !0, c;
}, xC = (e, t, n, r, o, s, ...a) => {
  if (a.length > 0)
    throw new Error("Unsupported number of selectors");
  let c;
  if (e && t && n && r && o && s)
    c = (f, m, g) => {
      const y = au(f), w = g ?? (y ? f.current.instanceId : lu), C = y ? f.current.state : f, T = e(C, m, w), E = t(C, m, w), O = n(C, m, w), k = r(C, m, w), I = o(C, m, w);
      return s(T, E, O, k, I, m);
    };
  else if (e && t && n && r && o)
    c = (f, m, g) => {
      const y = au(f), w = g ?? (y ? f.current.instanceId : lu), C = y ? f.current.state : f, T = e(C, m, w), E = t(C, m, w), O = n(C, m, w), k = r(C, m, w);
      return o(T, E, O, k, m);
    };
  else if (e && t && n && r)
    c = (f, m, g) => {
      const y = au(f), w = g ?? (y ? f.current.instanceId : lu), C = y ? f.current.state : f, T = e(C, m, w), E = t(C, m, w), O = n(C, m, w);
      return r(T, E, O, m);
    };
  else if (e && t && n)
    c = (f, m, g) => {
      const y = au(f), w = g ?? (y ? f.current.instanceId : lu), C = y ? f.current.state : f, T = e(C, m, w), E = t(C, m, w);
      return n(T, E, m);
    };
  else if (e && t)
    c = (f, m, g) => {
      const y = au(f), w = g ?? (y ? f.current.instanceId : lu), C = y ? f.current.state : f, T = e(C, m, w);
      return t(T, m);
    };
  else
    throw new Error("Missing arguments");
  return c.acceptsApiRef = !0, c;
}, ir = (...e) => {
  const t = (n, r) => {
    const o = au(n), s = o ? n.current.instanceId : r ?? lu, a = o ? n.current.state : n;
    process.env.NODE_ENV !== "production" && s.id === "default" && yl(["MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.", "To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`."]);
    const c = jz.get(s), f = c ?? /* @__PURE__ */ new Map(), m = f == null ? void 0 : f.get(e);
    if (f && m)
      return m(a, s);
    const g = $pe(...e);
    return c || jz.set(s, f), f.set(e, g), g(a, s);
  };
  return t.acceptsApiRef = !0, t;
}, gi = (e) => e.dimensions, hO = en(gi, (e) => e.columnsTotalWidth), AD = (e) => e.dimensions.rowHeight, jpe = (e) => e.dimensions.contentSize.height, Fpe = (e) => e.dimensions.hasScrollX, zpe = (e) => e.dimensions.hasScrollY, P5 = (e) => e.dimensions.columnsTotalWidth < e.dimensions.viewportOuterSize.width, Bpe = (e) => e.dimensions.headerHeight, Hpe = (e) => e.dimensions.groupHeaderHeight, M5 = (e) => e.dimensions.hasScrollY ? e.dimensions.scrollbarSize : 0, Vpe = (e) => {
  const t = e.dimensions.hasScrollX ? e.dimensions.scrollbarSize : 0, n = e.dimensions.viewportOuterSize.height - e.dimensions.minimumSize.height > 0;
  return !(t === 0 && !n);
};
function Rd(e) {
  return /* @__PURE__ */ x.memo(e, T5);
}
const Upe = {
  // Root
  noRowsLabel: "No rows",
  noResultsOverlayLabel: "No results found.",
  // Density selector toolbar button text
  toolbarDensity: "Density",
  toolbarDensityLabel: "Density",
  toolbarDensityCompact: "Compact",
  toolbarDensityStandard: "Standard",
  toolbarDensityComfortable: "Comfortable",
  // Columns selector toolbar button text
  toolbarColumns: "Columns",
  toolbarColumnsLabel: "Select columns",
  // Filters toolbar button text
  toolbarFilters: "Filters",
  toolbarFiltersLabel: "Show filters",
  toolbarFiltersTooltipHide: "Hide filters",
  toolbarFiltersTooltipShow: "Show filters",
  toolbarFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  // Quick filter toolbar field
  toolbarQuickFilterPlaceholder: "Search…",
  toolbarQuickFilterLabel: "Search",
  toolbarQuickFilterDeleteIconLabel: "Clear",
  // Export selector toolbar button text
  toolbarExport: "Export",
  toolbarExportLabel: "Export",
  toolbarExportCSV: "Download as CSV",
  toolbarExportPrint: "Print",
  toolbarExportExcel: "Download as Excel",
  // Columns management text
  columnsManagementSearchTitle: "Search",
  columnsManagementNoColumns: "No columns",
  columnsManagementShowHideAllText: "Show/Hide All",
  columnsManagementReset: "Reset",
  columnsManagementDeleteIconLabel: "Clear",
  // Filter panel text
  filterPanelAddFilter: "Add filter",
  filterPanelRemoveAll: "Remove all",
  filterPanelDeleteIconLabel: "Delete",
  filterPanelLogicOperator: "Logic operator",
  filterPanelOperator: "Operator",
  filterPanelOperatorAnd: "And",
  filterPanelOperatorOr: "Or",
  filterPanelColumns: "Columns",
  filterPanelInputLabel: "Value",
  filterPanelInputPlaceholder: "Filter value",
  // Filter operators text
  filterOperatorContains: "contains",
  filterOperatorDoesNotContain: "does not contain",
  filterOperatorEquals: "equals",
  filterOperatorDoesNotEqual: "does not equal",
  filterOperatorStartsWith: "starts with",
  filterOperatorEndsWith: "ends with",
  filterOperatorIs: "is",
  filterOperatorNot: "is not",
  filterOperatorAfter: "is after",
  filterOperatorOnOrAfter: "is on or after",
  filterOperatorBefore: "is before",
  filterOperatorOnOrBefore: "is on or before",
  filterOperatorIsEmpty: "is empty",
  filterOperatorIsNotEmpty: "is not empty",
  filterOperatorIsAnyOf: "is any of",
  "filterOperator=": "=",
  "filterOperator!=": "!=",
  "filterOperator>": ">",
  "filterOperator>=": ">=",
  "filterOperator<": "<",
  "filterOperator<=": "<=",
  // Header filter operators text
  headerFilterOperatorContains: "Contains",
  headerFilterOperatorDoesNotContain: "Does not contain",
  headerFilterOperatorEquals: "Equals",
  headerFilterOperatorDoesNotEqual: "Does not equal",
  headerFilterOperatorStartsWith: "Starts with",
  headerFilterOperatorEndsWith: "Ends with",
  headerFilterOperatorIs: "Is",
  headerFilterOperatorNot: "Is not",
  headerFilterOperatorAfter: "Is after",
  headerFilterOperatorOnOrAfter: "Is on or after",
  headerFilterOperatorBefore: "Is before",
  headerFilterOperatorOnOrBefore: "Is on or before",
  headerFilterOperatorIsEmpty: "Is empty",
  headerFilterOperatorIsNotEmpty: "Is not empty",
  headerFilterOperatorIsAnyOf: "Is any of",
  "headerFilterOperator=": "Equals",
  "headerFilterOperator!=": "Not equals",
  "headerFilterOperator>": "Greater than",
  "headerFilterOperator>=": "Greater than or equal to",
  "headerFilterOperator<": "Less than",
  "headerFilterOperator<=": "Less than or equal to",
  // Filter values text
  filterValueAny: "any",
  filterValueTrue: "true",
  filterValueFalse: "false",
  // Column menu text
  columnMenuLabel: "Menu",
  columnMenuAriaLabel: (e) => `${e} column menu`,
  columnMenuShowColumns: "Show columns",
  columnMenuManageColumns: "Manage columns",
  columnMenuFilter: "Filter",
  columnMenuHideColumn: "Hide column",
  columnMenuUnsort: "Unsort",
  columnMenuSortAsc: "Sort by ASC",
  columnMenuSortDesc: "Sort by DESC",
  // Column header text
  columnHeaderFiltersTooltipActive: (e) => e !== 1 ? `${e} active filters` : `${e} active filter`,
  columnHeaderFiltersLabel: "Show filters",
  columnHeaderSortIconLabel: "Sort",
  // Rows selected footer text
  footerRowSelected: (e) => e !== 1 ? `${e.toLocaleString()} rows selected` : `${e.toLocaleString()} row selected`,
  // Total row amount footer text
  footerTotalRows: "Total Rows:",
  // Total visible row amount footer text
  footerTotalVisibleRows: (e, t) => `${e.toLocaleString()} of ${t.toLocaleString()}`,
  // Checkbox selection text
  checkboxSelectionHeaderName: "Checkbox selection",
  checkboxSelectionSelectAllRows: "Select all rows",
  checkboxSelectionUnselectAllRows: "Unselect all rows",
  checkboxSelectionSelectRow: "Select row",
  checkboxSelectionUnselectRow: "Unselect row",
  // Boolean cell text
  booleanCellTrueLabel: "yes",
  booleanCellFalseLabel: "no",
  // Actions cell more text
  actionsCellMore: "more",
  // Column pinning text
  pinToLeft: "Pin to left",
  pinToRight: "Pin to right",
  unpin: "Unpin",
  // Tree Data
  treeDataGroupingHeaderName: "Group",
  treeDataExpand: "see children",
  treeDataCollapse: "hide children",
  // Grouping columns
  groupingColumnHeaderName: "Group",
  groupColumn: (e) => `Group by ${e}`,
  unGroupColumn: (e) => `Stop grouping by ${e}`,
  // Master/detail
  detailPanelToggle: "Detail panel toggle",
  expandDetailPanel: "Expand",
  collapseDetailPanel: "Collapse",
  // Used core components translation keys
  MuiTablePagination: {},
  // Row reordering text
  rowReorderingHeaderName: "Row reordering",
  // Aggregation
  aggregationMenuItemHeader: "Aggregation",
  aggregationFunctionLabelSum: "sum",
  aggregationFunctionLabelAvg: "avg",
  aggregationFunctionLabelMin: "min",
  aggregationFunctionLabelMax: "max",
  aggregationFunctionLabelSize: "size"
};
function zn(e) {
  return an("MuiDataGrid", e);
}
const se = pn("MuiDataGrid", ["actionsCell", "aggregationColumnHeader", "aggregationColumnHeader--alignLeft", "aggregationColumnHeader--alignCenter", "aggregationColumnHeader--alignRight", "aggregationColumnHeaderLabel", "autoHeight", "autosizing", "booleanCell", "cell--editable", "cell--editing", "cell--flex", "cell--textCenter", "cell--textLeft", "cell--textRight", "cell--rangeTop", "cell--rangeBottom", "cell--rangeLeft", "cell--rangeRight", "cell--pinnedLeft", "cell--pinnedRight", "cell--selectionMode", "cell", "cellCheckbox", "cellEmpty", "cellSkeleton", "cellOffsetLeft", "checkboxInput", "columnHeader", "columnHeader--alignCenter", "columnHeader--alignLeft", "columnHeader--alignRight", "columnHeader--dragging", "columnHeader--moving", "columnHeader--numeric", "columnHeader--sortable", "columnHeader--sorted", "columnHeader--filtered", "columnHeader--pinnedLeft", "columnHeader--pinnedRight", "columnHeader--last", "columnHeader--lastUnpinned", "columnHeader--siblingFocused", "columnHeaderCheckbox", "columnHeaderDraggableContainer", "columnHeaderTitle", "columnHeaderTitleContainer", "columnHeaderTitleContainerContent", "columnHeader--filledGroup", "columnHeader--emptyGroup", "columnHeaders", "columnSeparator--resizable", "columnSeparator--resizing", "columnSeparator--sideLeft", "columnSeparator--sideRight", "columnSeparator", "columnsManagement", "columnsManagementRow", "columnsManagementHeader", "columnsManagementSearchInput", "columnsManagementFooter", "container--top", "container--bottom", "detailPanel", "detailPanels", "detailPanelToggleCell", "detailPanelToggleCell--expanded", "footerCell", "panel", "panelHeader", "panelWrapper", "panelContent", "panelFooter", "paper", "editBooleanCell", "editInputCell", "filler", "filler--borderBottom", "filler--pinnedLeft", "filler--pinnedRight", "filterForm", "filterFormDeleteIcon", "filterFormLogicOperatorInput", "filterFormColumnInput", "filterFormOperatorInput", "filterFormValueInput", "filterIcon", "footerContainer", "headerFilterRow", "iconButtonContainer", "iconSeparator", "main", "main--hasPinnedRight", "main--hasSkeletonLoadingOverlay", "menu", "menuIcon", "menuIconButton", "menuOpen", "menuList", "overlay", "overlayWrapper", "overlayWrapperInner", "root", "root--densityStandard", "root--densityComfortable", "root--densityCompact", "root--disableUserSelection", "root--noToolbar", "row", "row--editable", "row--editing", "row--firstVisible", "row--lastVisible", "row--dragging", "row--dynamicHeight", "row--detailPanelExpanded", "row--borderBottom", "rowReorderCellPlaceholder", "rowCount", "rowReorderCellContainer", "rowReorderCell", "rowReorderCell--draggable", "rowSkeleton", "scrollArea--left", "scrollArea--right", "scrollArea--up", "scrollArea--down", "scrollArea", "scrollbar", "scrollbar--vertical", "scrollbar--horizontal", "scrollbarFiller", "scrollbarFiller--header", "scrollbarFiller--borderTop", "scrollbarFiller--borderBottom", "scrollbarFiller--pinnedRight", "selectedRowCount", "sortButton", "sortIcon", "toolbarContainer", "toolbarFilterList", "virtualScroller", "virtualScroller--hasScrollX", "virtualScrollerContent", "virtualScrollerContent--overflowed", "virtualScrollerRenderZone", "pinnedColumns", "withVerticalBorder", "withBorderColor", "cell--withRightBorder", "cell--withLeftBorder", "columnHeader--withRightBorder", "columnHeader--withLeftBorder", "treeDataGroupingCell", "treeDataGroupingCellToggle", "treeDataGroupingCellLoadingContainer", "groupingCriteriaCell", "groupingCriteriaCellToggle", "groupingCriteriaCellLoadingContainer", "pinnedRows", "pinnedRows--top", "pinnedRows--bottom", "pinnedRowsRenderZone"]), Fz = 1e3;
class Wpe {
  constructor(t = Fz) {
    this.timeouts = /* @__PURE__ */ new Map(), this.cleanupTimeout = Fz, this.cleanupTimeout = t;
  }
  register(t, n, r) {
    this.timeouts || (this.timeouts = /* @__PURE__ */ new Map());
    const o = setTimeout(() => {
      typeof n == "function" && n(), this.timeouts.delete(r.cleanupToken);
    }, this.cleanupTimeout);
    this.timeouts.set(r.cleanupToken, o);
  }
  unregister(t) {
    const n = this.timeouts.get(t.cleanupToken);
    n && (this.timeouts.delete(t.cleanupToken), clearTimeout(n));
  }
  reset() {
    this.timeouts && (this.timeouts.forEach((t, n) => {
      this.unregister({
        cleanupToken: n
      });
    }), this.timeouts = void 0);
  }
}
class Gpe {
  constructor() {
    this.registry = new FinalizationRegistry((t) => {
      typeof t == "function" && t();
    });
  }
  register(t, n, r) {
    this.registry.register(t, n, r);
  }
  unregister(t) {
    this.registry.unregister(t);
  }
  // eslint-disable-next-line class-methods-use-this
  reset() {
  }
}
var Da = /* @__PURE__ */ function(e) {
  return e.DataGrid = "DataGrid", e.DataGridPro = "DataGridPro", e.DataGridPremium = "DataGridPremium", e;
}(Da || {});
class qpe {
}
function Kpe(e) {
  let t = 0;
  return function(r, o, s, a) {
    e.registry === null && (e.registry = typeof FinalizationRegistry < "u" ? new Gpe() : new Wpe());
    const [c] = x.useState(new qpe()), f = x.useRef(null), m = x.useRef(null);
    m.current = s;
    const g = x.useRef(null);
    if (!f.current && m.current) {
      const y = (w, C, T) => {
        var E;
        C.defaultMuiPrevented || (E = m.current) == null || E.call(m, w, C, T);
      };
      f.current = r.current.subscribeEvent(o, y, a), t += 1, g.current = {
        cleanupToken: t
      }, e.registry.register(
        c,
        // The callback below will be called once this reference stops being retained
        () => {
          var w;
          (w = f.current) == null || w.call(f), f.current = null, g.current = null;
        },
        g.current
      );
    } else !m.current && f.current && (f.current(), f.current = null, g.current && (e.registry.unregister(g.current), g.current = null));
    x.useEffect(() => {
      if (!f.current && m.current) {
        const y = (w, C, T) => {
          var E;
          C.defaultMuiPrevented || (E = m.current) == null || E.call(m, w, C, T);
        };
        f.current = r.current.subscribeEvent(o, y, a);
      }
      return g.current && e.registry && (e.registry.unregister(g.current), g.current = null), () => {
        var y;
        (y = f.current) == null || y.call(f), f.current = null;
      };
    }, [r, o, a]);
  };
}
const Ype = {
  registry: null
}, Ot = Kpe(Ype), Xpe = {
  isFirst: !0
};
function fr(e, t, n) {
  Ot(e, t, n, Xpe);
}
const Qpe = 0.7, Jpe = 1.3, Zpe = {
  compact: Qpe,
  comfortable: Jpe,
  standard: 1
}, Ov = (e) => e.density, vy = en(Ov, (e) => Zpe[e]), ehe = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "isValidating", "debounceMs", "isProcessingProps", "onValueChange"], the = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["editInputCell"]
  }, zn, t);
}, nhe = Ue(hm, {
  name: "MuiDataGrid",
  slot: "EditInputCell",
  overridesResolver: (e, t) => t.editInputCell
})(({
  theme: e
}) => J({}, e.typography.body2, {
  padding: "1px 0",
  "& input": {
    padding: "0 16px",
    height: "100%"
  }
})), I5 = Yn((e, t) => {
  const n = Lt(), {
    id: r,
    value: o,
    field: s,
    colDef: a,
    hasFocus: c,
    debounceMs: f = 200,
    isProcessingProps: m,
    onValueChange: g
  } = e, y = qt(e, ehe), w = On(), C = x.useRef(null), [T, E] = x.useState(o), O = the(n), k = x.useCallback(async (M) => {
    const N = M.target.value;
    g && await g(M, N);
    const P = w.current.getColumn(s);
    let F = N;
    P.valueParser && (F = P.valueParser(N, w.current.getRow(r), P, w)), E(F), w.current.setEditCellValue({
      id: r,
      field: s,
      value: F,
      debounceMs: f,
      unstable_skipValueParser: !0
    }, M);
  }, [w, f, s, r, g]), I = w.current.unstable_getEditCellMeta(r, s);
  return x.useEffect(() => {
    (I == null ? void 0 : I.changeReason) !== "debouncedSetEditCellValue" && E(o);
  }, [I, o]), Nr(() => {
    c && C.current.focus();
  }, [c]), /* @__PURE__ */ $.jsx(nhe, J({
    inputRef: C,
    className: O.root,
    ownerState: n,
    fullWidth: !0,
    type: a.type === "number" ? a.type : "text",
    value: T ?? "",
    onChange: k,
    endAdornment: m ? /* @__PURE__ */ $.jsx(n.slots.loadIcon, {
      fontSize: "small",
      color: "action"
    }) : void 0
  }, y, {
    ref: t
  }));
});
process.env.NODE_ENV !== "production" && (I5.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  changeReason: u.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  debounceMs: u.number,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  isProcessingProps: u.bool,
  isValidating: u.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: u.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const rhe = (e) => /* @__PURE__ */ $.jsx(I5, J({}, e)), kl = (e) => e.rows, EC = en(kl, (e) => e.totalRowCount), ohe = en(kl, (e) => e.loading), ihe = en(kl, (e) => e.totalTopLevelRowCount), hl = en(kl, (e) => e.dataRowIdToModelLookup), zz = en(kl, (e) => e.dataRowIdToIdLookup), Yo = en(kl, (e) => e.tree), she = en(kl, (e) => e.groupsToFetch), ahe = en(kl, (e) => e.groupingName), Bz = en(kl, (e) => e.treeDepths), vm = ir(kl, (e) => {
  const t = Object.entries(e.treeDepths);
  return t.length === 0 ? 1 : (t.filter(([, n]) => n > 0).map(([n]) => Number(n)).sort((n, r) => r - n)[0] ?? 0) + 1;
}), uS = en(kl, (e) => e.dataRowIds), lhe = en(kl, (e) => e == null ? void 0 : e.additionalRowGroups), yy = ir(lhe, (e) => {
  var n, r;
  const t = e == null ? void 0 : e.pinnedRows;
  return {
    bottom: ((n = t == null ? void 0 : t.bottom) == null ? void 0 : n.map((o) => ({
      id: o.id,
      model: o.model ?? {}
    }))) ?? [],
    top: ((r = t == null ? void 0 : t.top) == null ? void 0 : r.map((o) => ({
      id: o.id,
      model: o.model ?? {}
    }))) ?? []
  };
}), D5 = en(yy, (e) => {
  var t, n;
  return (((t = e == null ? void 0 : e.top) == null ? void 0 : t.length) || 0) + (((n = e == null ? void 0 : e.bottom) == null ? void 0 : n.length) || 0);
}), A5 = (e, t) => t && e.length > 1 ? (process.env.NODE_ENV !== "production" && yl(["MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), [e[0]]) : e, Hz = (e, t) => (n) => J({}, n, {
  sorting: J({}, n.sorting, {
    sortModel: A5(e, t)
  })
}), uhe = (e) => e === "desc", che = (e, t) => {
  const n = t.current.getColumn(e.field);
  if (!n || e.sort === null)
    return null;
  let r;
  return n.getSortComparator ? r = n.getSortComparator(e.sort) : r = uhe(e.sort) ? (...s) => -1 * n.sortComparator(...s) : n.sortComparator, r ? {
    getSortCellParams: (s) => ({
      id: s,
      field: n.field,
      rowNode: Yo(t)[s],
      value: t.current.getCellValue(s, n.field),
      api: t.current
    }),
    comparator: r
  } : null;
}, dhe = (e, t, n) => e.reduce((r, o, s) => {
  if (r !== 0)
    return r;
  const a = t.params[s], c = n.params[s];
  return r = o.comparator(a.value, c.value, a, c), r;
}, 0), fhe = (e, t) => {
  const n = e.map((r) => che(r, t)).filter((r) => !!r);
  return n.length === 0 ? null : (r) => r.map((o) => ({
    node: o,
    params: n.map((s) => s.getSortCellParams(o.id))
  })).sort((o, s) => dhe(n, o, s)).map((o) => o.node.id);
}, Vz = (e, t) => {
  const n = e.indexOf(t);
  return !t || n === -1 || n + 1 === e.length ? e[0] : e[n + 1];
}, ND = (e, t) => e == null && t != null ? -1 : t == null && e != null ? 1 : e == null && t == null ? 0 : null, phe = new Intl.Collator(), hhe = (e, t) => {
  const n = ND(e, t);
  return n !== null ? n : typeof e == "string" ? phe.compare(e.toString(), t.toString()) : e - t;
}, N5 = (e, t) => {
  const n = ND(e, t);
  return n !== null ? n : Number(e) - Number(t);
}, L5 = (e, t) => {
  const n = ND(e, t);
  return n !== null ? n : e > t ? 1 : e < t ? -1 : 0;
}, mhe = ["item", "applyValue", "type", "apiRef", "focusElementRef", "tabIndex", "disabled", "isFilterActive", "clearButton", "InputProps", "variant"];
function Ra(e) {
  var N;
  const {
    item: t,
    applyValue: n,
    type: r,
    apiRef: o,
    focusElementRef: s,
    tabIndex: a,
    disabled: c,
    clearButton: f,
    InputProps: m,
    variant: g = "standard"
  } = e, y = qt(e, mhe), w = Ma(), [C, T] = x.useState(NP(t.value)), [E, O] = x.useState(!1), k = pr(), I = Lt(), M = x.useCallback((P) => {
    const F = NP(P.target.value);
    T(F), O(!0), w.start(I.filterDebounceMs, () => {
      const H = J({}, t, {
        value: r === "number" && !Number.isNaN(Number(F)) ? Number(F) : F,
        fromInput: k
      });
      n(H), O(!1);
    });
  }, [w, I.filterDebounceMs, t, r, k, n]);
  return x.useEffect(() => {
    (t.fromInput !== k || t.value == null) && T(NP(t.value));
  }, [k, t]), /* @__PURE__ */ $.jsx(I.slots.baseTextField, J({
    id: k,
    label: o.current.getLocaleText("filterPanelInputLabel"),
    placeholder: o.current.getLocaleText("filterPanelInputPlaceholder"),
    value: C ?? "",
    onChange: M,
    variant: g,
    type: r || "text",
    InputProps: J({}, E || f ? {
      endAdornment: E ? /* @__PURE__ */ $.jsx(I.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : f
    } : {}, {
      disabled: c
    }, m, {
      inputProps: J({
        tabIndex: a
      }, m == null ? void 0 : m.inputProps)
    }),
    InputLabelProps: {
      shrink: !0
    },
    inputRef: s
  }, y, (N = I.slotProps) == null ? void 0 : N.baseTextField));
}
function NP(e) {
  if (!(e == null || e === ""))
    return String(e);
}
process.env.NODE_ENV !== "production" && (Ra.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  clearButton: u.node,
  focusElementRef: u.oneOfType([u.func, u.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: u.bool,
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired
});
function $5(e) {
  return typeof e == "number" && !Number.isNaN(e);
}
function ghe(e) {
  return typeof e == "function";
}
function LD(e) {
  return typeof e == "object" && e !== null;
}
function vhe() {
  try {
    const e = "__some_random_key_you_are_not_going_to_use__";
    return window.localStorage.setItem(e, e), window.localStorage.removeItem(e), !0;
  } catch {
    return !1;
  }
}
function i_(e) {
  return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}
const Aa = (e, t, n) => Math.max(t, Math.min(n, e));
function Uz(e, t) {
  return Array.from({
    length: t - e
  }).map((n, r) => e + r);
}
function Wf(e, t) {
  if (e === t)
    return !0;
  if (e && t && typeof e == "object" && typeof t == "object") {
    if (e.constructor !== t.constructor)
      return !1;
    if (Array.isArray(e)) {
      const o = e.length;
      if (o !== t.length)
        return !1;
      for (let s = 0; s < o; s += 1)
        if (!Wf(e[s], t[s]))
          return !1;
      return !0;
    }
    if (e instanceof Map && t instanceof Map) {
      if (e.size !== t.size)
        return !1;
      const o = Array.from(e.entries());
      for (let s = 0; s < o.length; s += 1)
        if (!t.has(o[s][0]))
          return !1;
      for (let s = 0; s < o.length; s += 1) {
        const a = o[s];
        if (!Wf(a[1], t.get(a[0])))
          return !1;
      }
      return !0;
    }
    if (e instanceof Set && t instanceof Set) {
      if (e.size !== t.size)
        return !1;
      const o = Array.from(e.entries());
      for (let s = 0; s < o.length; s += 1)
        if (!t.has(o[s][0]))
          return !1;
      return !0;
    }
    if (ArrayBuffer.isView(e) && ArrayBuffer.isView(t)) {
      const o = e.length;
      if (o !== t.length)
        return !1;
      for (let s = 0; s < o; s += 1)
        if (e[s] !== t[s])
          return !1;
      return !0;
    }
    if (e.constructor === RegExp)
      return e.source === t.source && e.flags === t.flags;
    if (e.valueOf !== Object.prototype.valueOf)
      return e.valueOf() === t.valueOf();
    if (e.toString !== Object.prototype.toString)
      return e.toString() === t.toString();
    const n = Object.keys(e), r = n.length;
    if (r !== Object.keys(t).length)
      return !1;
    for (let o = 0; o < r; o += 1)
      if (!Object.prototype.hasOwnProperty.call(t, n[o]))
        return !1;
    for (let o = 0; o < r; o += 1) {
      const s = n[o];
      if (!Wf(e[s], t[s]))
        return !1;
    }
    return !0;
  }
  return e !== e && t !== t;
}
function yhe(e) {
  return () => {
    let t = e += 1831565813;
    return t = Math.imul(t ^ t >>> 15, t | 1), t ^= t + Math.imul(t ^ t >>> 7, t | 61), ((t ^ t >>> 14) >>> 0) / 4294967296;
  };
}
function bhe(e) {
  const t = yhe(e);
  return (n, r) => n + (r - n) * t();
}
function j5(e) {
  return typeof structuredClone == "function" ? structuredClone(e) : JSON.parse(JSON.stringify(e));
}
const Wh = (e, t) => (n) => {
  e && t(n);
}, whe = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], She = ["key"];
function $D(e) {
  const {
    item: t,
    applyValue: n,
    type: r,
    apiRef: o,
    focusElementRef: s,
    color: a,
    error: c,
    helperText: f,
    size: m,
    variant: g = "standard"
  } = e, y = qt(e, whe), w = {
    color: a,
    error: c,
    helperText: f,
    size: m,
    variant: g
  }, [C, T] = x.useState(t.value || []), E = pr(), O = Lt();
  x.useEffect(() => {
    const I = t.value ?? [];
    T(I.map(String));
  }, [t.value]);
  const k = x.useCallback((I, M) => {
    T(M.map(String)), n(J({}, t, {
      value: [...M.map((N) => r === "number" ? Number(N) : N)]
    }));
  }, [n, t, r]);
  return /* @__PURE__ */ $.jsx(nD, J({
    multiple: !0,
    freeSolo: !0,
    options: [],
    filterOptions: (I, M) => {
      const {
        inputValue: N
      } = M;
      return N == null || N === "" ? [] : [N];
    },
    id: E,
    value: C,
    onChange: k,
    renderTags: (I, M) => I.map((N, P) => {
      const F = M({
        index: P
      }), {
        key: H
      } = F, U = qt(F, She);
      return /* @__PURE__ */ $.jsx(O.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: N
      }, U), H);
    }),
    renderInput: (I) => {
      var M;
      return /* @__PURE__ */ $.jsx(O.slots.baseTextField, J({}, I, {
        label: o.current.getLocaleText("filterPanelInputLabel"),
        placeholder: o.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, I.InputLabelProps, {
          shrink: !0
        }),
        inputRef: s,
        type: r || "text"
      }, w, (M = O.slotProps) == null ? void 0 : M.baseTextField));
    }
  }, y));
}
process.env.NODE_ENV !== "production" && ($D.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  focusElementRef: u.oneOfType([u.func, u.object]),
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired,
  type: u.oneOf(["date", "datetime-local", "number", "text"])
});
var wc = /* @__PURE__ */ function(e) {
  return e.Cell = "cell", e.Row = "row", e;
}(wc || {}), cr = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(cr || {}), Ur = /* @__PURE__ */ function(e) {
  return e.Edit = "edit", e.View = "view", e;
}(Ur || {}), Ms = /* @__PURE__ */ function(e) {
  return e.And = "and", e.Or = "or", e;
}(Ms || {}), yd = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e.pasteKeyDown = "pasteKeyDown", e;
}(yd || {}), ou = /* @__PURE__ */ function(e) {
  return e.cellFocusOut = "cellFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(ou || {}), If = /* @__PURE__ */ function(e) {
  return e.enterKeyDown = "enterKeyDown", e.cellDoubleClick = "cellDoubleClick", e.printableKeyDown = "printableKeyDown", e.deleteKeyDown = "deleteKeyDown", e;
}(If || {}), ic = /* @__PURE__ */ function(e) {
  return e.rowFocusOut = "rowFocusOut", e.escapeKeyDown = "escapeKeyDown", e.enterKeyDown = "enterKeyDown", e.tabKeyDown = "tabKeyDown", e.shiftTabKeyDown = "shiftTabKeyDown", e;
}(ic || {});
function F5(e) {
  return e.field !== void 0;
}
const z5 = {
  filteredRowsLookup: {},
  filteredChildrenCountLookup: {},
  filteredDescendantCountLookup: {}
}, XS = () => ({
  items: [],
  logicOperator: Ms.And,
  quickFilterValues: [],
  quickFilterLogicOperator: Ms.And
});
function B5(e) {
  return {
    current: e.current.getPublicApi()
  };
}
let Df = /* @__PURE__ */ function(e) {
  return e.LEFT = "left", e.RIGHT = "right", e;
}({});
const s_ = {
  left: [],
  right: []
}, H5 = (e) => e.isRtl, gc = (e) => e.columns, Ed = en(gc, (e) => e.orderedFields), kd = en(gc, (e) => e.lookup), bl = ir(Ed, kd, (e, t) => e.map((n) => t[n])), ml = en(gc, (e) => e.columnVisibilityModel), po = ir(bl, ml, (e, t) => e.filter((n) => t[n.field] !== !1)), by = ir(po, (e) => e.map((t) => t.field)), V5 = (e) => e.pinnedColumns;
ir(V5, Ed, H5, (e, t, n) => U5(e, t, n));
const wy = ir(gc, V5, by, H5, (e, t, n, r) => {
  const o = U5(t, n, r);
  return {
    left: o.left.map((a) => e.lookup[a]),
    right: o.right.map((a) => e.lookup[a])
  };
});
function U5(e, t, n) {
  var c, f;
  if (!Array.isArray(e.left) && !Array.isArray(e.right) || ((c = e.left) == null ? void 0 : c.length) === 0 && ((f = e.right) == null ? void 0 : f.length) === 0)
    return s_;
  const r = (m, g) => Array.isArray(m) ? m.filter((y) => g.includes(y)) : [], o = r(e.left, t), s = t.filter(
    // Filter out from the remaining columns those columns already pinned to the left
    (m) => !o.includes(m)
  ), a = r(e.right, s);
  return n ? {
    left: a,
    right: o
  } : {
    left: o,
    right: a
  };
}
const dp = ir(po, (e) => {
  const t = [];
  let n = 0;
  for (let r = 0; r < e.length; r += 1)
    t.push(n), n += e[r].computedWidth;
  return t;
}), W5 = ir(bl, (e) => e.filter((t) => t.filterable)), Che = ir(bl, (e) => e.reduce((t, n) => (n.filterable && (t[n.field] = n), t), {})), xhe = ir(bl, (e) => e.some((t) => t.colSpan !== void 0));
let qw;
function Ehe() {
  if (qw !== void 0)
    return qw;
  try {
    qw = new Function("return true")();
  } catch {
    qw = !1;
  }
  return qw;
}
const JM = (e, t) => {
  const n = J({}, e);
  if (n.id == null && (n.id = Math.round(Math.random() * 1e5)), n.operator == null) {
    const r = kd(t)[n.field];
    n.operator = r && r.filterOperators[0].value;
  }
  return n;
}, jD = (e, t, n) => {
  const r = e.items.length > 1;
  let o;
  r && t ? (process.env.NODE_ENV !== "production" && yl(["MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.", "If you are using the community version of the Data Grid, this prop is always `true`."], "error"), o = [e.items[0]]) : o = e.items;
  const s = r && o.some((c) => c.id == null), a = o.some((c) => c.operator == null);
  return process.env.NODE_ENV !== "production" && s && yl("MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.", "error"), process.env.NODE_ENV !== "production" && a && yl("MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.", "error"), a || s ? J({}, e, {
    items: o.map((c) => JM(c, n))
  }) : e.items !== o ? J({}, e, {
    items: o
  }) : e;
}, Wz = (e, t, n) => (r) => J({}, r, {
  filterModel: jD(e, t, n)
}), QS = (e) => typeof e == "string" ? e.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : e, G5 = (e, t) => {
  var g;
  if (!e.field || !e.operator)
    return null;
  const n = t.current.getColumn(e.field);
  if (!n)
    return null;
  let r;
  if (n.valueParser) {
    const y = n.valueParser;
    r = Array.isArray(e.value) ? (g = e.value) == null ? void 0 : g.map((w) => y(w, void 0, n, t)) : y(e.value, void 0, n, t);
  } else
    r = e.value;
  const {
    ignoreDiacritics: o
  } = t.current.rootProps;
  o && (r = QS(r));
  const s = J({}, e, {
    value: r
  }), a = n.filterOperators;
  if (!(a != null && a.length))
    throw new Error(`MUI X: No filter operators found for column '${n.field}'.`);
  const c = a.find((y) => y.value === s.operator);
  if (!c)
    throw new Error(`MUI X: No filter operator found for column '${n.field}' and operator value '${s.operator}'.`);
  const f = B5(t), m = c.getApplyFilterFn(s, n);
  return typeof m != "function" ? null : {
    item: s,
    fn: (y) => {
      let w = t.current.getRowValue(y, n);
      return o && (w = QS(w)), m(w, y, n, f);
    }
  };
};
let Gz = 1;
const The = (e, t, n) => {
  const {
    items: r
  } = e, o = r.map((c) => G5(c, t)).filter((c) => !!c);
  if (o.length === 0)
    return null;
  if (n || !Ehe())
    return (c, f) => {
      const m = {};
      for (let g = 0; g < o.length; g += 1) {
        const y = o[g];
        (!f || f(y.item.field)) && (m[y.item.id] = y.fn(c));
      }
      return m;
    };
  const s = new Function("appliers", "row", "shouldApplyFilter", `"use strict";
${o.map((c, f) => `const shouldApply${f} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(c.item.field)});`).join(`
`)}

const result$$ = {
${o.map((c, f) => `  ${JSON.stringify(String(c.item.id))}: !shouldApply${f} ? false : appliers[${f}].fn(row),`).join(`
`)}
};

return result$$;`.replaceAll("$$", String(Gz)));
  return Gz += 1, (c, f) => s(o, c, f);
}, q5 = (e) => e.quickFilterExcludeHiddenColumns ?? !0, _he = (e, t) => {
  var c;
  const n = ((c = e.quickFilterValues) == null ? void 0 : c.filter(Boolean)) ?? [];
  if (n.length === 0)
    return null;
  const r = q5(e) ? by(t) : Ed(t), o = [], {
    ignoreDiacritics: s
  } = t.current.rootProps, a = B5(t);
  return r.forEach((f) => {
    const m = t.current.getColumn(f), g = m == null ? void 0 : m.getApplyQuickFilterFn;
    g && o.push({
      column: m,
      appliers: n.map((y) => {
        const w = s ? QS(y) : y;
        return {
          fn: g(w, m, a)
        };
      })
    });
  }), function(m, g) {
    const y = {};
    e: for (let w = 0; w < n.length; w += 1) {
      const C = n[w];
      for (let T = 0; T < o.length; T += 1) {
        const {
          column: E,
          appliers: O
        } = o[T], {
          field: k
        } = E;
        if (g && !g(k))
          continue;
        const I = O[w];
        let M = t.current.getRowValue(m, E);
        if (I.fn === null)
          continue;
        if (s && (M = QS(M)), I.fn(M, m, E, a)) {
          y[C] = !0;
          continue e;
        }
      }
      y[C] = !1;
    }
    return y;
  };
}, Ohe = (e, t, n) => {
  const r = The(e, t, n), o = _he(e, t);
  return function(a, c, f) {
    f.passingFilterItems = (r == null ? void 0 : r(a, c)) ?? null, f.passingQuickFilterValues = (o == null ? void 0 : o(a, c)) ?? null;
  };
}, qz = (e) => e != null, Rhe = (e, t, n) => (e.cleanedFilterItems || (e.cleanedFilterItems = n.filter((r) => G5(r, t) !== null)), e.cleanedFilterItems), khe = (e, t, n, r, o) => {
  const s = Rhe(o, r, n.items), a = e.filter(qz), c = t.filter(qz);
  if (a.length > 0) {
    const f = (g) => a.some((y) => y[g.id]);
    if ((n.logicOperator ?? XS().logicOperator) === Ms.And) {
      if (!s.every(f))
        return !1;
    } else if (!s.some(f))
      return !1;
  }
  if (c.length > 0 && n.quickFilterValues != null) {
    const f = (g) => c.some((y) => y[g]);
    if ((n.quickFilterLogicOperator ?? XS().quickFilterLogicOperator) === Ms.And) {
      if (!n.quickFilterValues.every(f))
        return !1;
    } else if (!n.quickFilterValues.some(f))
      return !1;
  }
  return !0;
}, Phe = (e) => {
  if (!e)
    return null;
  const t = new RegExp(i_(e), "i");
  return (n, r, o, s) => {
    let a = s.current.getRowFormattedValue(r, o);
    return s.current.ignoreDiacritics && (a = QS(a)), a != null ? t.test(a.toString()) : !1;
  };
}, Kz = (e, t) => (n) => {
  if (!n.value)
    return null;
  const r = e ? n.value : n.value.trim(), o = new RegExp(i_(r), "i");
  return (s) => {
    if (s == null)
      return t;
    const a = o.test(String(s));
    return t ? !a : a;
  };
}, Yz = (e, t) => (n) => {
  if (!n.value)
    return null;
  const r = e ? n.value : n.value.trim(), o = new Intl.Collator(void 0, {
    sensitivity: "base",
    usage: "search"
  });
  return (s) => {
    if (s == null)
      return t;
    const a = o.compare(r, s.toString()) === 0;
    return t ? !a : a;
  };
}, Xz = (e) => () => (t) => {
  const n = t === "" || t == null;
  return e ? !n : n;
}, Mhe = (e = !1) => [{
  value: "contains",
  getApplyFilterFn: Kz(e, !1),
  InputComponent: Ra
}, {
  value: "doesNotContain",
  getApplyFilterFn: Kz(e, !0),
  InputComponent: Ra
}, {
  value: "equals",
  getApplyFilterFn: Yz(e, !1),
  InputComponent: Ra
}, {
  value: "doesNotEqual",
  getApplyFilterFn: Yz(e, !0),
  InputComponent: Ra
}, {
  value: "startsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), r = new RegExp(`^${i_(n)}.*$`, "i");
    return (o) => o != null ? r.test(o.toString()) : !1;
  },
  InputComponent: Ra
}, {
  value: "endsWith",
  getApplyFilterFn: (t) => {
    if (!t.value)
      return null;
    const n = e ? t.value : t.value.trim(), r = new RegExp(`.*${i_(n)}$`, "i");
    return (o) => o != null ? r.test(o.toString()) : !1;
  },
  InputComponent: Ra
}, {
  value: "isEmpty",
  getApplyFilterFn: Xz(!1),
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: Xz(!0),
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (t) => {
    if (!Array.isArray(t.value) || t.value.length === 0)
      return null;
    const n = e ? t.value : t.value.map((o) => o.trim()), r = new Intl.Collator(void 0, {
      sensitivity: "base",
      usage: "search"
    });
    return (o) => o != null ? n.some((s) => r.compare(s, o.toString() || "") === 0) : !1;
  },
  InputComponent: $D
}], pu = {
  width: 100,
  minWidth: 50,
  maxWidth: 1 / 0,
  hideable: !0,
  sortable: !0,
  resizable: !0,
  filterable: !0,
  groupable: !0,
  pinnable: !0,
  // @ts-ignore
  aggregable: !0,
  editable: !1,
  sortComparator: hhe,
  type: "string",
  align: "left",
  filterOperators: Mhe(),
  renderEditCell: rhe,
  getApplyQuickFilterFn: Phe
}, Ihe = ["open", "target", "onClose", "children", "position", "className", "onExited"], Dhe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["menu"]
  }, zn, t);
}, Ahe = Ue(lp, {
  name: "MuiDataGrid",
  slot: "Menu",
  overridesResolver: (e, t) => t.menu
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal,
  [`& .${se.menuList}`]: {
    outline: 0
  }
})), Nhe = {
  "bottom-start": "top left",
  "bottom-end": "top right"
};
function mO(e) {
  var E;
  const {
    open: t,
    target: n,
    onClose: r,
    children: o,
    position: s,
    className: a,
    onExited: c
  } = e, f = qt(e, Ihe), m = On(), g = Lt(), y = Dhe(g), w = x.useRef(null);
  Nr(() => {
    var O, k;
    t ? w.current = document.activeElement instanceof HTMLElement ? document.activeElement : null : ((k = (O = w.current) == null ? void 0 : O.focus) == null || k.call(O), w.current = null);
  }, [t]), x.useEffect(() => {
    const O = t ? "menuOpen" : "menuClose";
    m.current.publishEvent(O, {
      target: n
    });
  }, [m, t, n]);
  const C = (O) => (k) => {
    O && O(), c && c(k);
  }, T = (O) => {
    O.target && (n === O.target || n != null && n.contains(O.target)) || r(O);
  };
  return /* @__PURE__ */ $.jsx(Ahe, J({
    as: g.slots.basePopper,
    className: et(y.root, a),
    ownerState: g,
    open: t,
    anchorEl: n,
    transition: !0,
    placement: s
  }, f, (E = g.slotProps) == null ? void 0 : E.basePopper, {
    children: ({
      TransitionProps: O,
      placement: k
    }) => /* @__PURE__ */ $.jsx(zS, {
      onClickAway: T,
      mouseEvent: "onMouseDown",
      children: /* @__PURE__ */ $.jsx(qv, J({}, O, {
        style: {
          transformOrigin: Nhe[k]
        },
        onExited: C(O == null ? void 0 : O.onExited),
        children: /* @__PURE__ */ $.jsx(bu, {
          children: o
        })
      }))
    })
  }));
}
process.env.NODE_ENV !== "production" && (mO.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: u.node,
  onClose: u.func.isRequired,
  onExited: u.func,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  position: u.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  target: Sl
});
const Lhe = ["api", "colDef", "id", "hasFocus", "isEditable", "field", "value", "formattedValue", "row", "rowNode", "cellMode", "tabIndex", "position", "focusElementRef"], $he = (e) => typeof e.getActions == "function";
function K5(e) {
  var K;
  const {
    colDef: t,
    id: n,
    hasFocus: r,
    tabIndex: o,
    position: s = "bottom-end",
    focusElementRef: a
  } = e, c = qt(e, Lhe), [f, m] = x.useState(-1), [g, y] = x.useState(!1), w = On(), C = x.useRef(null), T = x.useRef(null), E = x.useRef(!1), O = x.useRef({}), k = xc(), I = pr(), M = pr(), N = Lt();
  if (!$he(t))
    throw new Error("MUI X: Missing the `getActions` property in the `GridColDef`.");
  const P = t.getActions(w.current.getRowParams(n)), F = P.filter((X) => !X.props.showInMenu), H = P.filter((X) => X.props.showInMenu), U = F.length + (H.length ? 1 : 0);
  x.useLayoutEffect(() => {
    r || Object.entries(O.current).forEach(([X, te]) => {
      te == null || te.stop({}, () => {
        delete O.current[X];
      });
    });
  }, [r]), x.useEffect(() => {
    if (f < 0 || !C.current || f >= C.current.children.length)
      return;
    C.current.children[f].focus({
      preventScroll: !0
    });
  }, [f]), x.useEffect(() => {
    r || (m(-1), E.current = !1);
  }, [r]), x.useImperativeHandle(a, () => ({
    focus() {
      if (!E.current) {
        const X = P.findIndex((te) => !te.props.disabled);
        m(X);
      }
    }
  }), [P]), x.useEffect(() => {
    f >= U && m(U - 1);
  }, [f, U]);
  const z = () => {
    y(!0), m(U - 1), E.current = !0;
  }, A = () => {
    y(!1);
  }, q = (X) => {
    X.stopPropagation(), X.preventDefault(), g ? A() : z();
  }, W = (X) => (te) => {
    O.current[X] = te;
  }, Y = (X, te) => (re) => {
    m(X), E.current = !0, te && te(re);
  }, ee = (X) => {
    if (U <= 1)
      return;
    const te = (Q, B) => {
      var ue;
      if (Q < 0 || Q > P.length)
        return Q;
      const de = (B === "left" ? -1 : 1) * (k ? -1 : 1);
      return (ue = P[Q + de]) != null && ue.props.disabled ? te(Q + de, B) : Q + de;
    };
    let re = f;
    X.key === "ArrowRight" ? re = te(f, "right") : X.key === "ArrowLeft" && (re = te(f, "left")), !(re < 0 || re >= U) && re !== f && (X.preventDefault(), X.stopPropagation(), m(re));
  }, G = (X) => {
    X.key === "Tab" && X.preventDefault(), ["Tab", "Escape"].includes(X.key) && A();
  };
  return /* @__PURE__ */ $.jsxs("div", J({
    role: "menu",
    ref: C,
    tabIndex: -1,
    className: se.actionsCell,
    onKeyDown: ee
  }, c, {
    children: [F.map((X, te) => /* @__PURE__ */ x.cloneElement(X, {
      key: te,
      touchRippleRef: W(te),
      onClick: Y(te, X.props.onClick),
      tabIndex: f === te ? o : -1
    })), H.length > 0 && M && /* @__PURE__ */ $.jsx(N.slots.baseIconButton, J({
      ref: T,
      id: M,
      "aria-label": w.current.getLocaleText("actionsCellMore"),
      "aria-haspopup": "menu",
      "aria-expanded": g,
      "aria-controls": g ? I : void 0,
      role: "menuitem",
      size: "small",
      onClick: q,
      touchRippleRef: W(M),
      tabIndex: f === F.length ? o : -1
    }, (K = N.slotProps) == null ? void 0 : K.baseIconButton, {
      children: /* @__PURE__ */ $.jsx(N.slots.moreActionsIcon, {
        fontSize: "small"
      })
    })), H.length > 0 && /* @__PURE__ */ $.jsx(mO, {
      open: g,
      target: T.current,
      position: s,
      onClose: A,
      children: /* @__PURE__ */ $.jsx(gC, {
        id: I,
        className: se.menuList,
        onKeyDown: G,
        "aria-labelledby": M,
        variant: "menu",
        autoFocusItem: !0,
        children: H.map((X, te) => /* @__PURE__ */ x.cloneElement(X, {
          key: te,
          closeMenu: A
        }))
      })
    })]
  }));
}
process.env.NODE_ENV !== "production" && (K5.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  api: u.object,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: u.oneOfType([u.func, u.shape({
    current: u.shape({
      focus: u.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  position: u.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const jhe = (e) => /* @__PURE__ */ $.jsx(K5, J({}, e)), gO = "actions", Fhe = J({}, pu, {
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  width: 100,
  display: "flex",
  align: "center",
  headerAlign: "center",
  headerName: "",
  disableColumnMenu: !0,
  disableExport: !0,
  renderCell: jhe,
  getApplyQuickFilterFn: void 0
}), qi = "auto-generated-group-node-root", ty = Symbol("mui.id_autogenerated"), zhe = () => ({
  type: "group",
  id: qi,
  depth: -1,
  groupingField: null,
  groupingKey: null,
  isAutoGenerated: !0,
  children: [],
  childrenFromPath: {},
  childrenExpanded: !0,
  parent: null
});
function Bhe(e, t, n = "A row was provided without id in the rows prop:") {
  if (e == null)
    throw new Error(["MUI X: The Data Grid component requires all rows to have a unique `id` property.", "Alternatively, you can use the `getRowId` prop to specify a custom id for each row.", n, JSON.stringify(t)].join(`
`));
}
const vO = (e, t, n) => {
  const r = t ? t(e) : e.id;
  return Bhe(r, e, n), r;
}, bT = ({
  rows: e,
  getRowId: t,
  loading: n,
  rowCount: r
}) => {
  const o = {
    type: "full",
    rows: []
  }, s = {}, a = {};
  for (let c = 0; c < e.length; c += 1) {
    const f = e[c], m = vO(f, t);
    s[m] = f, a[m] = m, o.rows.push(m);
  }
  return {
    rowsBeforePartialUpdates: e,
    loadingPropBeforePartialUpdates: n,
    rowCountPropBeforePartialUpdates: r,
    updates: o,
    dataRowIdToIdLookup: a,
    dataRowIdToModelLookup: s
  };
}, Y5 = ({
  tree: e,
  rowCountProp: t = 0
}) => {
  const n = e[qi];
  return Math.max(t, n.children.length + (n.footerId == null ? 0 : 1));
}, X5 = ({
  apiRef: e,
  rowCountProp: t = 0,
  loadingProp: n,
  previousTree: r,
  previousTreeDepths: o,
  previousGroupsToFetch: s
}) => {
  const a = e.current.caches.rows, {
    tree: c,
    treeDepths: f,
    dataRowIds: m,
    groupingName: g,
    groupsToFetch: y = []
  } = e.current.applyStrategyProcessor("rowTreeCreation", {
    previousTree: r,
    previousTreeDepths: o,
    updates: a.updates,
    dataRowIdToIdLookup: a.dataRowIdToIdLookup,
    dataRowIdToModelLookup: a.dataRowIdToModelLookup,
    previousGroupsToFetch: s
  }), w = e.current.unstable_applyPipeProcessors("hydrateRows", {
    tree: c,
    treeDepths: f,
    dataRowIdToIdLookup: a.dataRowIdToIdLookup,
    dataRowIds: m,
    dataRowIdToModelLookup: a.dataRowIdToModelLookup
  });
  return e.current.caches.rows.updates = {
    type: "partial",
    actions: {
      insert: [],
      modify: [],
      remove: []
    },
    idToActionLookup: {}
  }, J({}, w, {
    totalRowCount: Math.max(t, w.dataRowIds.length),
    totalTopLevelRowCount: Y5({
      tree: w.tree,
      rowCountProp: t
    }),
    groupingName: g,
    loading: n,
    groupsToFetch: y
  });
}, ny = (e) => e.type === "skeletonRow" || e.type === "footer" || e.type === "group" && e.isAutoGenerated || e.type === "pinnedRow" && e.isAutoGenerated, FD = (e, t, n) => {
  const r = e[t];
  if (r.type !== "group")
    return [];
  const o = [];
  for (let s = 0; s < r.children.length; s += 1) {
    const a = r.children[s];
    (!n || !ny(e[a])) && o.push(a);
    const c = FD(e, a, n);
    for (let f = 0; f < c.length; f += 1)
      o.push(c[f]);
  }
  return !n && r.footerId != null && o.push(r.footerId), o;
}, Qz = ({
  previousCache: e,
  getRowId: t,
  updates: n,
  groupKeys: r
}) => {
  if (e.updates.type === "full")
    throw new Error("MUI X: Unable to prepare a partial update if a full update is not applied yet.");
  const o = /* @__PURE__ */ new Map();
  n.forEach((g) => {
    const y = vO(g, t, "A row was provided without id when calling updateRows():");
    o.has(y) ? o.set(y, J({}, o.get(y), g)) : o.set(y, g);
  });
  const s = {
    type: "partial",
    actions: {
      insert: [...e.updates.actions.insert ?? []],
      modify: [...e.updates.actions.modify ?? []],
      remove: [...e.updates.actions.remove ?? []]
    },
    idToActionLookup: J({}, e.updates.idToActionLookup),
    groupKeys: r
  }, a = J({}, e.dataRowIdToModelLookup), c = J({}, e.dataRowIdToIdLookup), f = {
    insert: {},
    modify: {},
    remove: {}
  };
  o.forEach((g, y) => {
    const w = s.idToActionLookup[y];
    if (g._action === "delete") {
      if (w === "remove" || !a[y])
        return;
      w != null && (f[w][y] = !0), s.actions.remove.push(y), delete a[y], delete c[y];
      return;
    }
    const C = a[y];
    if (C) {
      w === "remove" ? (f.remove[y] = !0, s.actions.modify.push(y)) : w == null && s.actions.modify.push(y), a[y] = J({}, C, g);
      return;
    }
    w === "remove" ? (f.remove[y] = !0, s.actions.insert.push(y)) : w == null && s.actions.insert.push(y), a[y] = g, c[y] = y;
  });
  const m = Object.keys(f);
  for (let g = 0; g < m.length; g += 1) {
    const y = m[g], w = f[y];
    Object.keys(w).length > 0 && (s.actions[y] = s.actions[y].filter((C) => !w[C]));
  }
  return {
    dataRowIdToModelLookup: a,
    dataRowIdToIdLookup: c,
    updates: s,
    rowsBeforePartialUpdates: e.rowsBeforePartialUpdates,
    loadingPropBeforePartialUpdates: e.loadingPropBeforePartialUpdates,
    rowCountPropBeforePartialUpdates: e.rowCountPropBeforePartialUpdates
  };
}, Q5 = "var(--DataGrid-overlayHeight, calc(var(--height) * 2))";
function Jz(e, t, n) {
  const r = [];
  return t.forEach((o) => {
    const s = vO(o, n, "A row was provided without id when calling updateRows():"), a = e.current.getRowNode(s);
    if ((a == null ? void 0 : a.type) === "pinnedRow") {
      const c = e.current.caches.pinnedRows, f = c.idLookup[s];
      f && (c.idLookup[s] = J({}, f, o));
    } else
      r.push(o);
  }), r;
}
let Zz = !1;
const J5 = (e, t, n) => typeof e == "number" && e > 0 ? e : (process.env.NODE_ENV !== "production" && !Zz && typeof e < "u" && e !== null && (console.warn(n), Zz = !0), t), Hhe = ["MUI X: The `rowHeight` prop should be a number greater than 0.", "The default value will be used instead."].join(`
`), Vhe = ["MUI X: The `getRowHeight` prop should return a number greater than 0 or 'auto'.", "The default value will be used instead."].join(`
`), Uhe = "__tree_data_group__", Z5 = "__row_group_by_columns_group__", yO = "__detail_panel_toggle__";
let Nn = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.LEFT = 1] = "LEFT", e[e.RIGHT = 2] = "RIGHT", e[e.VIRTUAL = 3] = "VIRTUAL", e;
}({});
const Whe = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "hasFocus", "tabIndex", "hideDescendantCount"], Ghe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["booleanCell"]
  }, zn, t);
};
function eW(e) {
  const {
    value: t,
    rowNode: n
  } = e, r = qt(e, Whe), o = On(), s = Lt(), a = {
    classes: s.classes
  }, c = Ghe(a), m = (
    // @ts-expect-error - Access tree data prop
    Ze(o, vm) > 0 && n.type === "group" && s.treeData === !1
  ), g = x.useMemo(() => t ? s.slots.booleanCellTrueIcon : s.slots.booleanCellFalseIcon, [s.slots.booleanCellFalseIcon, s.slots.booleanCellTrueIcon, t]);
  return m && t === void 0 ? null : /* @__PURE__ */ $.jsx(g, J({
    fontSize: "small",
    className: c.root,
    titleAccess: o.current.getLocaleText(t ? "booleanCellTrueLabel" : "booleanCellFalseLabel"),
    "data-value": !!t
  }, r));
}
process.env.NODE_ENV !== "production" && (eW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: u.oneOfType([u.func, u.shape({
    current: u.shape({
      focus: u.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  hideDescendantCount: u.bool,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const qhe = /* @__PURE__ */ x.memo(eW), Khe = (e) => e.field !== Z5 && ny(e.rowNode) ? "" : /* @__PURE__ */ $.jsx(qhe, J({}, e)), Yhe = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange"], Xhe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["editBooleanCell"]
  }, zn, t);
};
function tW(e) {
  var k;
  const {
    id: t,
    value: n,
    field: r,
    className: o,
    hasFocus: s,
    onValueChange: a
  } = e, c = qt(e, Yhe), f = On(), m = x.useRef(null), g = pr(), [y, w] = x.useState(n), C = Lt(), T = {
    classes: C.classes
  }, E = Xhe(T), O = x.useCallback(async (I) => {
    const M = I.target.checked;
    a && await a(I, M), w(M), await f.current.setEditCellValue({
      id: t,
      field: r,
      value: M
    }, I);
  }, [f, r, t, a]);
  return x.useEffect(() => {
    w(n);
  }, [n]), Nr(() => {
    s && m.current.focus();
  }, [s]), /* @__PURE__ */ $.jsx("label", J({
    htmlFor: g,
    className: et(E.root, o)
  }, c, {
    children: /* @__PURE__ */ $.jsx(C.slots.baseCheckbox, J({
      id: g,
      inputRef: m,
      checked: !!y,
      onChange: O,
      size: "small"
    }, (k = C.slotProps) == null ? void 0 : k.baseCheckbox))
  }));
}
process.env.NODE_ENV !== "production" && (tW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  changeReason: u.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  isProcessingProps: u.bool,
  isValidating: u.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: u.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const Qhe = (e) => /* @__PURE__ */ $.jsx(tW, J({}, e)), Jhe = ["item", "applyValue", "apiRef", "focusElementRef", "isFilterActive", "clearButton", "tabIndex", "label", "variant", "InputLabelProps"], wT = (e) => {
  if (String(e).toLowerCase() === "true")
    return !0;
  if (String(e).toLowerCase() === "false")
    return !1;
}, Zhe = Ue("div")({
  display: "flex",
  alignItems: "center",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function nW(e) {
  var N, P, F;
  const {
    item: t,
    applyValue: n,
    apiRef: r,
    focusElementRef: o,
    clearButton: s,
    tabIndex: a,
    label: c,
    variant: f = "standard"
  } = e, m = qt(e, Jhe), [g, y] = x.useState(wT(t.value)), w = Lt(), C = pr(), T = pr(), E = ((N = w.slotProps) == null ? void 0 : N.baseSelect) || {}, O = E.native ?? !1, k = ((P = w.slotProps) == null ? void 0 : P.baseSelectOption) || {}, I = x.useCallback((H) => {
    const U = wT(H.target.value);
    y(U), n(J({}, t, {
      value: U
    }));
  }, [n, t]);
  x.useEffect(() => {
    y(wT(t.value));
  }, [t.value]);
  const M = c ?? r.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ $.jsxs(Zhe, {
    children: [/* @__PURE__ */ $.jsxs(w.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ $.jsx(w.slots.baseInputLabel, J({}, (F = w.slotProps) == null ? void 0 : F.baseInputLabel, {
        id: C,
        shrink: !0,
        variant: f,
        children: M
      })), /* @__PURE__ */ $.jsxs(w.slots.baseSelect, J({
        labelId: C,
        id: T,
        label: M,
        value: g === void 0 ? "" : String(g),
        onChange: I,
        variant: f,
        notched: f === "outlined" ? !0 : void 0,
        native: O,
        displayEmpty: !0,
        inputProps: {
          ref: o,
          tabIndex: a
        }
      }, m, E, {
        children: [/* @__PURE__ */ $.jsx(w.slots.baseSelectOption, J({}, k, {
          native: O,
          value: "",
          children: r.current.getLocaleText("filterValueAny")
        })), /* @__PURE__ */ $.jsx(w.slots.baseSelectOption, J({}, k, {
          native: O,
          value: "true",
          children: r.current.getLocaleText("filterValueTrue")
        })), /* @__PURE__ */ $.jsx(w.slots.baseSelectOption, J({}, k, {
          native: O,
          value: "false",
          children: r.current.getLocaleText("filterValueFalse")
        }))]
      }))]
    }), s]
  });
}
process.env.NODE_ENV !== "production" && (nW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  clearButton: u.node,
  focusElementRef: ca,
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: u.bool,
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired
});
const eme = () => [{
  value: "is",
  getApplyFilterFn: (e) => {
    const t = wT(e.value);
    return t === void 0 ? null : (n) => !!n === t;
  },
  InputComponent: nW
}], tme = (e, t, n, r) => e ? r.current.getLocaleText("booleanCellTrueLabel") : r.current.getLocaleText("booleanCellFalseLabel"), nme = (e) => {
  switch (e.toLowerCase().trim()) {
    case "true":
    case "yes":
    case "1":
      return !0;
    case "false":
    case "no":
    case "0":
    case "null":
    case "undefined":
      return !1;
    default:
      return;
  }
}, rW = J({}, pu, {
  type: "boolean",
  display: "flex",
  align: "center",
  headerAlign: "center",
  renderCell: Khe,
  renderEditCell: Qhe,
  sortComparator: N5,
  valueFormatter: tme,
  filterOperators: eme(),
  getApplyQuickFilterFn: void 0,
  // @ts-ignore
  aggregable: !1,
  // @ts-ignore
  pastedValueParser: (e) => nme(e)
}), oW = (e) => e.sorting, Sy = en(oW, (e) => e.sortedRows), zD = ir(Sy, hl, Yo, (e, t, n) => e.reduce((r, o) => {
  const s = t[o];
  if (s)
    r.push({
      id: o,
      model: s
    });
  else {
    const a = n[o];
    a && ny(a) && r.push({
      id: o,
      model: {
        [ty]: o
      }
    });
  }
  return r;
}, [])), iu = en(oW, (e) => e.sortModel), rme = ir(iu, (e) => e.reduce((n, r, o) => (n[r.field] = {
  sortDirection: r.sort,
  sortIndex: e.length > 1 ? o + 1 : void 0
}, n), {}));
ir(Sy, (e) => e.reduce((t, n, r) => (t[n] = r, t), /* @__PURE__ */ Object.create(null)));
const bO = (e) => e.filter, Ei = en(bO, (e) => e.filterModel), ome = en(Ei, (e) => e.quickFilterValues), ime = (e) => e.visibleRowsLookup, Cy = en(bO, (e) => e.filteredRowsLookup);
en(bO, (e) => e.filteredChildrenCountLookup);
en(bO, (e) => e.filteredDescendantCountLookup);
const fp = ir(ime, zD, vm, Ei, ome, (e, t, n, r, o) => n < 2 && !r.items.length && !(o != null && o.length) ? t : t.filter((s) => e[s.id] !== !1)), jv = ir(fp, (e) => e.map((t) => t.id)), iW = ir(Cy, zD, (e, t) => t.filter((n) => e[n.id] !== !1)), sW = ir(iW, (e) => e.map((t) => t.id));
ir(jv, Yo, (e, t) => {
  const n = {};
  let r = 0;
  return e.reduce((o, s) => {
    const a = t[s];
    return n[a.depth] || (n[a.depth] = 0), a.depth > r && (n[a.depth] = 0), r = a.depth, n[a.depth] += 1, o[s] = n[a.depth], o;
  }, {});
});
const aW = ir(fp, Yo, vm, (e, t, n) => n < 2 ? e : e.filter((r) => {
  var o;
  return ((o = t[r.id]) == null ? void 0 : o.depth) === 0;
})), BD = en(fp, (e) => e.length), HD = en(aW, (e) => e.length), sme = en(iW, (e) => e.length);
en(sme, HD, (e, t) => e - t);
const lW = ir(Ei, kd, (e, t) => {
  var n;
  return (n = e.items) == null ? void 0 : n.filter((r) => {
    var a, c;
    if (!r.field)
      return !1;
    const o = t[r.field];
    if (!(o != null && o.filterOperators) || ((a = o == null ? void 0 : o.filterOperators) == null ? void 0 : a.length) === 0)
      return !1;
    const s = o.filterOperators.find((f) => f.value === r.operator);
    return s ? !s.InputComponent || r.value != null && ((c = r.value) == null ? void 0 : c.toString()) !== "" : !1;
  });
}), ame = ir(lW, (e) => e.reduce((n, r) => (n[r.field] ? n[r.field].push(r) : n[r.field] = [r], n), {})), _a = (e) => e.rowSelection, lme = en(_a, (e) => e.length), ume = ir(_a, hl, (e, t) => new Map(e.map((n) => [n, t[n]]))), Gf = ir(_a, (e) => e.reduce((t, n) => (t[n] = n, t), {}));
function uW(e, t) {
  var f;
  const n = Yo(e), r = Sy(e), o = Cy(e), s = n[t];
  if (!s || s.type !== "group")
    return [];
  const a = [], c = r.findIndex((m) => m === t) + 1;
  for (let m = c; m < r.length && ((f = n[r[m]]) == null ? void 0 : f.depth) > s.depth; m += 1) {
    const g = r[m];
    o[g] !== !1 && e.current.isRowSelectable(g) && a.push(g);
  }
  return a;
}
function cme(e, t) {
  return en(Yo, Sy, Cy, Gf, (n, r, o, s) => {
    var g;
    const a = n[e];
    if (!a || a.type !== "group")
      return {
        isIndeterminate: !1,
        isChecked: s[e] === e
      };
    if (s[e] === e)
      return {
        isIndeterminate: !1,
        isChecked: !0
      };
    let c = 0, f = 0;
    const m = r.findIndex((y) => y === e) + 1;
    for (let y = m; y < r.length && ((g = n[r[y]]) == null ? void 0 : g.depth) > a.depth; y += 1) {
      const w = r[y];
      o[w] !== !1 && (c += 1, s[w] !== void 0 && (f += 1));
    }
    return {
      isIndeterminate: f > 0 && (f < c || s[e] === void 0),
      isChecked: t ? f > 0 : s[e] === e
    };
  });
}
function VD(e) {
  return e.signature === Da.DataGrid ? e.checkboxSelection && e.disableMultipleRowSelection !== !0 : !e.disableMultipleRowSelection;
}
const dme = (e, t) => {
  const n = [];
  let r = t;
  for (; r != null && r !== qi; ) {
    const o = e[r];
    if (!o)
      return n;
    n.push(r), r = o.parent;
  }
  return n;
}, fme = (e, t, n) => {
  const r = e[n];
  if (!r)
    return [];
  const o = r.parent;
  return o == null ? [] : e[o].children.filter((a) => a !== n && t[a] !== !1);
}, Kw = (e, t, n, r, o, s, a = new Set(_a(e.current.state))) => {
  const c = Cy(e), f = /* @__PURE__ */ new Set([]);
  if (!(!r && !o || c[n] === !1)) {
    if (r) {
      const m = t[n];
      (m == null ? void 0 : m.type) === "group" && uW(e, n).forEach((y) => {
        s(y), f.add(y);
      });
    }
    if (o) {
      const m = (y) => {
        if (!a.has(y) && !f.has(y))
          return !1;
        const w = t[y];
        return w ? w.type !== "group" ? !0 : w.children.every(m) : !1;
      }, g = (y) => {
        const w = fme(t, c, y);
        if (w.length === 0 || w.every(m)) {
          const C = t[y], T = C == null ? void 0 : C.parent;
          T != null && T !== qi && e.current.isRowSelectable(T) && (s(T), f.add(T), g(T));
        }
      };
      g(n);
    }
  }
}, eB = (e, t, n, r, o, s) => {
  const a = Gf(e);
  if (!(!o && !r) && (o && dme(t, n).forEach((f) => {
    a[f] === f && s(f);
  }), r)) {
    const c = t[n];
    (c == null ? void 0 : c.type) === "group" && uW(e, n).forEach((m) => {
      s(m);
    });
  }
}, pme = ["field", "id", "formattedValue", "row", "rowNode", "colDef", "isEditable", "cellMode", "hasFocus", "tabIndex", "api"], hme = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["checkboxInput"]
  }, zn, t);
}, cW = Yn(function(t, n) {
  var U, z;
  const {
    field: r,
    id: o,
    rowNode: s,
    hasFocus: a,
    tabIndex: c
  } = t, f = qt(t, pme), m = On(), g = Lt(), y = {
    classes: g.classes
  }, w = hme(y), C = x.useRef(null), T = x.useRef(null), E = Pr(C, n), O = (A) => {
    const q = {
      value: A.target.checked,
      id: o
    };
    m.current.publishEvent("rowSelectionCheckboxChange", q, A);
  };
  x.useLayoutEffect(() => {
    if (c === 0) {
      const A = m.current.getCellElement(o, r);
      A && (A.tabIndex = -1);
    }
  }, [m, c, o, r]), x.useEffect(() => {
    var A;
    if (a) {
      const q = (A = C.current) == null ? void 0 : A.querySelector("input");
      q == null || q.focus({
        preventScroll: !0
      });
    } else T.current && T.current.stop({});
  }, [a]);
  const k = x.useCallback((A) => {
    A.key === " " && A.stopPropagation();
  }, []), I = m.current.isRowSelectable(o), M = cme(o, ((U = g.rowSelectionPropagation) == null ? void 0 : U.parents) ?? !1), {
    isIndeterminate: N,
    isChecked: P
  } = Ze(m, M, DD);
  if (s.type === "footer" || s.type === "pinnedRow")
    return null;
  const F = g.indeterminateCheckboxAction === "select" ? P && !N : P, H = m.current.getLocaleText(F ? "checkboxSelectionUnselectRow" : "checkboxSelectionSelectRow");
  return /* @__PURE__ */ $.jsx(g.slots.baseCheckbox, J({
    tabIndex: c,
    checked: F,
    onChange: O,
    className: w.root,
    inputProps: {
      "aria-label": H,
      name: "select_row"
    },
    onKeyDown: k,
    indeterminate: N,
    disabled: !I,
    touchRippleRef: T
    /* FIXME: typing error */
  }, (z = g.slotProps) == null ? void 0 : z.baseCheckbox, f, {
    ref: E
  }));
});
process.env.NODE_ENV !== "production" && (cW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the element that should receive focus.
   * @ignore - do not document.
   */
  focusElementRef: u.oneOfType([u.func, u.shape({
    current: u.shape({
      focus: u.func.isRequired
    })
  })]),
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const mme = cW, wO = (e) => e.focus, Ps = en(wO, (e) => e.cell), gme = en(wO, (e) => e.columnHeader);
en(wO, (e) => e.columnHeaderFilter);
const a_ = en(wO, (e) => e.columnGroupHeader), SO = (e) => e.tabIndex, UD = en(SO, (e) => e.cell), dW = en(SO, (e) => e.columnHeader);
en(SO, (e) => e.columnHeaderFilter);
const vme = en(SO, (e) => e.columnGroupHeader);
function Tn(e, t, n) {
  const r = x.useRef(!0);
  Nr(() => {
    r.current = !1, e.current.register(n, t);
  }, [e, n, t]), r.current && e.current.register(n, t);
}
function vi(e, t) {
  const n = x.useRef(null);
  if (n.current)
    return n.current;
  const r = e.current.getLogger(t);
  return n.current = r, r;
}
const fW = (e, t, n, r, o) => {
  const s = vi(e, "useNativeEventListener");
  fr(e, "rootMount", () => {
    const a = typeof t == "function" ? t() : t.current;
    if (!(!a || !n || !r))
      return s.debug(`Binding native ${n} event`), a.addEventListener(n, r, o), () => {
        s.debug(`Clearing native ${n} event`), a.removeEventListener(n, r, o);
      };
  });
}, TC = (e) => {
  const t = x.useRef(!0);
  t.current && (t.current = !1, e());
}, yme = () => {
}, bme = (e, t) => {
  const n = x.useRef(!1);
  Nr(() => n.current || !e ? yme : (n.current = !0, t()), [n.current || e]);
}, wme = 100, Sme = (e) => e ? 0 : 100, pW = (e, t, n) => t > 0 && e > 0 ? Math.ceil(e / t) : e === -1 ? n + 2 : 0, hW = (e) => ({
  page: 0,
  pageSize: e ? 0 : 100
}), Cme = (e, t = 0) => t === 0 ? e : Math.max(Math.min(e, t - 1), 0), mW = (e, t) => {
  if (t === Da.DataGrid && e > wme)
    throw new Error(["MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
}, xme = -1, _C = (e) => e.pagination, gW = en(_C, (e) => e.enabled && e.paginationMode === "client"), ms = en(_C, (e) => e.paginationModel), Rv = en(_C, (e) => e.rowCount), cS = en(_C, (e) => e.meta), Eme = en(ms, (e) => e.page), vW = en(ms, (e) => e.pageSize), yW = en(ms, Rv, (e, t) => pW(t, e.pageSize, e.page)), WD = ir(gW, ms, Yo, vm, fp, aW, (e, t, n, r, o, s) => {
  var T;
  if (!e)
    return null;
  const a = s.length, c = Math.min(t.pageSize * t.page, a - 1), f = t.pageSize === xme ? a - 1 : Math.min(c + t.pageSize - 1, a - 1);
  if (c === -1 || f === -1)
    return null;
  if (r < 2)
    return {
      firstRowIndex: c,
      lastRowIndex: f
    };
  const m = s[c], g = f - c + 1, y = o.findIndex((E) => E.id === m.id);
  let w = y, C = 0;
  for (; w < o.length && C <= g; ) {
    const E = o[w], O = (T = n[E.id]) == null ? void 0 : T.depth;
    O === void 0 ? w += 1 : ((C < g || O > 0) && (w += 1), O === 0 && (C += 1));
  }
  return {
    firstRowIndex: y,
    lastRowIndex: w - 1
  };
}), Tme = ir(fp, WD, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), bW = ir(jv, WD, (e, t) => t ? e.slice(t.firstRowIndex, t.lastRowIndex + 1) : []), OC = ir(gW, WD, Tme, fp, (e, t, n, r) => e ? {
  rows: n,
  range: t,
  rowToIndexMap: n.reduce((o, s, a) => (o.set(s.model, a), o), /* @__PURE__ */ new Map())
} : {
  rows: r,
  range: r.length === 0 ? null : {
    firstRowIndex: 0,
    lastRowIndex: r.length - 1
  },
  rowToIndexMap: r.reduce((o, s, a) => (o.set(s.model, a), o), /* @__PURE__ */ new Map())
}), _me = ["field", "colDef"], Ome = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["checkboxInput"]
  }, zn, t);
}, wW = Yn(function(t, n) {
  var U;
  const r = qt(t, _me), [, o] = x.useState(!1), s = On(), a = Lt(), c = {
    classes: a.classes
  }, f = Ome(c), m = Ze(s, dW), g = Ze(s, _a), y = Ze(s, jv), w = Ze(s, bW), C = x.useMemo(() => typeof a.isRowSelectable != "function" ? g : g.filter((z) => a.keepNonExistentRowsSelected ? !0 : s.current.getRow(z) ? a.isRowSelectable(s.current.getRowParams(z)) : !1), [s, a.isRowSelectable, g, a.keepNonExistentRowsSelected]), T = x.useMemo(() => (!a.pagination || !a.checkboxSelectionVisibleOnly || a.paginationMode === "server" ? y : w).reduce((A, q) => (A[q] = !0, A), {}), [a.pagination, a.paginationMode, a.checkboxSelectionVisibleOnly, w, y]), E = x.useMemo(() => C.filter((z) => T[z]).length, [C, T]), O = E > 0 && E < Object.keys(T).length, k = E > 0, I = (z) => {
    const A = {
      value: z.target.checked
    };
    s.current.publishEvent("headerSelectionCheckboxChange", A);
  }, M = m !== null && m.field === t.field ? 0 : -1;
  x.useLayoutEffect(() => {
    const z = s.current.getColumnHeaderElement(t.field);
    M === 0 && z && (z.tabIndex = -1);
  }, [M, s, t.field]);
  const N = x.useCallback((z) => {
    z.key === " " && s.current.publishEvent("headerSelectionCheckboxChange", {
      value: !k
    });
  }, [s, k]), P = x.useCallback(() => {
    o((z) => !z);
  }, []);
  x.useEffect(() => s.current.subscribeEvent("rowSelectionChange", P), [s, P]);
  const F = a.indeterminateCheckboxAction === "select" ? k && !O : k, H = s.current.getLocaleText(F ? "checkboxSelectionUnselectAllRows" : "checkboxSelectionSelectAllRows");
  return /* @__PURE__ */ $.jsx(a.slots.baseCheckbox, J({
    indeterminate: O,
    checked: F,
    onChange: I,
    className: f.root,
    inputProps: {
      "aria-label": H,
      name: "select_all_rows"
    },
    tabIndex: M,
    onKeyDown: N,
    disabled: !VD(a)
  }, (U = a.slotProps) == null ? void 0 : U.baseCheckbox, r, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (wW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The column of the current header component.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the column that triggered the event
   */
  field: u.string.isRequired
});
const RC = (e, t) => ty in t ? t[ty] : e.props.getRowId ? e.props.getRowId(t) : t.id, cl = "__check__", xy = J({}, rW, {
  type: "custom",
  field: cl,
  width: 50,
  resizable: !1,
  sortable: !1,
  filterable: !1,
  // @ts-ignore
  aggregable: !1,
  disableColumnMenu: !0,
  disableReorder: !0,
  disableExport: !0,
  getApplyQuickFilterFn: void 0,
  display: "flex",
  valueGetter: (e, t, n, r) => {
    const o = Gf(r), s = RC(r.current.state, t);
    return o[s] !== void 0;
  },
  renderHeader: (e) => /* @__PURE__ */ $.jsx(wW, J({}, e)),
  renderCell: (e) => /* @__PURE__ */ $.jsx(mme, J({}, e))
}), Rme = ["item", "applyValue", "type", "apiRef", "focusElementRef", "InputProps", "isFilterActive", "clearButton", "tabIndex", "disabled"];
function tB(e, t) {
  if (e == null)
    return "";
  const n = new Date(e);
  return Number.isNaN(n.getTime()) ? "" : t === "date" ? n.toISOString().substring(0, 10) : t === "datetime-local" ? (n.setMinutes(n.getMinutes() - n.getTimezoneOffset()), n.toISOString().substring(0, 19)) : n.toISOString().substring(0, 10);
}
function Bh(e) {
  var M;
  const {
    item: t,
    applyValue: n,
    type: r,
    apiRef: o,
    focusElementRef: s,
    InputProps: a,
    clearButton: c,
    tabIndex: f,
    disabled: m
  } = e, g = qt(e, Rme), y = Ma(), [w, C] = x.useState(() => tB(t.value, r)), [T, E] = x.useState(!1), O = pr(), k = Lt(), I = x.useCallback((N) => {
    y.clear();
    const P = N.target.value;
    C(P), E(!0), y.start(k.filterDebounceMs, () => {
      const F = new Date(P);
      n(J({}, t, {
        value: Number.isNaN(F.getTime()) ? void 0 : F
      })), E(!1);
    });
  }, [n, t, k.filterDebounceMs, y]);
  return x.useEffect(() => {
    const N = tB(t.value, r);
    C(N);
  }, [t.value, r]), /* @__PURE__ */ $.jsx(k.slots.baseTextField, J({
    fullWidth: !0,
    id: O,
    label: o.current.getLocaleText("filterPanelInputLabel"),
    placeholder: o.current.getLocaleText("filterPanelInputPlaceholder"),
    value: w,
    onChange: I,
    variant: "standard",
    type: r || "text",
    InputLabelProps: {
      shrink: !0
    },
    inputRef: s,
    InputProps: J({}, T || c ? {
      endAdornment: T ? /* @__PURE__ */ $.jsx(k.slots.loadIcon, {
        fontSize: "small",
        color: "action"
      }) : c
    } : {}, {
      disabled: m
    }, a, {
      inputProps: J({
        max: r === "datetime-local" ? "9999-12-31T23:59" : "9999-12-31",
        tabIndex: f
      }, a == null ? void 0 : a.inputProps)
    })
  }, g, (M = k.slotProps) == null ? void 0 : M.baseTextField));
}
process.env.NODE_ENV !== "production" && (Bh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  clearButton: u.node,
  focusElementRef: u.oneOfType([u.func, u.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: u.bool,
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired
});
function gv(e, t, n, r) {
  if (!e.value)
    return null;
  const o = new Date(e.value);
  n ? o.setSeconds(0, 0) : (o.setMinutes(o.getMinutes() + o.getTimezoneOffset()), o.setHours(0, 0, 0, 0));
  const s = o.getTime();
  return (a) => {
    if (!a)
      return !1;
    if (r)
      return t(a.getTime(), s);
    const c = new Date(a);
    return n ? c.setSeconds(0, 0) : c.setHours(0, 0, 0, 0), t(c.getTime(), s);
  };
}
const SW = (e) => [{
  value: "is",
  getApplyFilterFn: (t) => gv(t, (n, r) => n === r, e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "not",
  getApplyFilterFn: (t) => gv(t, (n, r) => n !== r, e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "after",
  getApplyFilterFn: (t) => gv(t, (n, r) => n > r, e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrAfter",
  getApplyFilterFn: (t) => gv(t, (n, r) => n >= r, e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "before",
  getApplyFilterFn: (t) => gv(t, (n, r) => n < r, e, !e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "onOrBefore",
  getApplyFilterFn: (t) => gv(t, (n, r) => n <= r, e),
  InputComponent: Bh,
  InputComponentProps: {
    type: e ? "datetime-local" : "date"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (t) => t == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (t) => t != null,
  requiresFilterValue: !1
}], kme = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "hasFocus", "inputProps", "isValidating", "isProcessingProps", "onValueChange"], Pme = Ue(hm)({
  fontSize: "inherit"
}), Mme = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["editInputCell"]
  }, zn, t);
};
function CW(e) {
  const {
    id: t,
    value: n,
    field: r,
    colDef: o,
    hasFocus: s,
    inputProps: a,
    onValueChange: c
  } = e, f = qt(e, kme), m = o.type === "dateTime", g = On(), y = x.useRef(null), w = x.useMemo(() => {
    let N;
    n == null ? N = null : n instanceof Date ? N = n : N = new Date((n ?? "").toString());
    let P;
    return N == null || Number.isNaN(N.getTime()) ? P = "" : P = new Date(N.getTime() - N.getTimezoneOffset() * 60 * 1e3).toISOString().substr(0, m ? 16 : 10), {
      parsed: N,
      formatted: P
    };
  }, [n, m]), [C, T] = x.useState(w), O = {
    classes: Lt().classes
  }, k = Mme(O), I = x.useCallback((N) => {
    if (N === "")
      return null;
    const [P, F] = N.split("T"), [H, U, z] = P.split("-"), A = /* @__PURE__ */ new Date();
    if (A.setFullYear(Number(H), Number(U) - 1, Number(z)), A.setHours(0, 0, 0, 0), F) {
      const [q, W] = F.split(":");
      A.setHours(Number(q), Number(W), 0, 0);
    }
    return A;
  }, []), M = x.useCallback(async (N) => {
    const P = N.target.value, F = I(P);
    c && await c(N, F), T({
      parsed: F,
      formatted: P
    }), g.current.setEditCellValue({
      id: t,
      field: r,
      value: F
    }, N);
  }, [g, r, t, c, I]);
  return x.useEffect(() => {
    T((N) => {
      var P, F;
      return w.parsed !== N.parsed && ((P = w.parsed) == null ? void 0 : P.getTime()) !== ((F = N.parsed) == null ? void 0 : F.getTime()) ? w : N;
    });
  }, [w]), Nr(() => {
    s && y.current.focus();
  }, [s]), /* @__PURE__ */ $.jsx(Pme, J({
    inputRef: y,
    fullWidth: !0,
    className: k.root,
    type: m ? "datetime-local" : "date",
    inputProps: J({
      max: m ? "9999-12-31T23:59" : "9999-12-31"
    }, a),
    value: C.formatted,
    onChange: M
  }, f));
}
process.env.NODE_ENV !== "production" && (CW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  changeReason: u.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  isProcessingProps: u.bool,
  isValidating: u.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: u.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const xW = (e) => /* @__PURE__ */ $.jsx(CW, J({}, e));
function EW({
  value: e,
  columnType: t,
  rowId: n,
  field: r
}) {
  if (!(e instanceof Date))
    throw new Error([`MUI X: \`${t}\` column type only accepts \`Date\` objects as values.`, "Use `valueGetter` to transform the value into a `Date` object.", `Row ID: ${n}, field: "${r}".`].join(`
`));
}
const Ime = (e, t, n, r) => {
  if (!e)
    return "";
  const o = RC(r.current.state, t);
  return EW({
    value: e,
    columnType: "date",
    rowId: o,
    field: n.field
  }), e.toLocaleDateString();
}, Dme = (e, t, n, r) => {
  if (!e)
    return "";
  const o = RC(r.current.state, t);
  return EW({
    value: e,
    columnType: "dateTime",
    rowId: o,
    field: n.field
  }), e.toLocaleString();
}, Ame = J({}, pu, {
  type: "date",
  sortComparator: L5,
  valueFormatter: Ime,
  filterOperators: SW(),
  renderEditCell: xW,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), Nme = J({}, pu, {
  type: "dateTime",
  sortComparator: L5,
  valueFormatter: Dme,
  filterOperators: SW(!0),
  renderEditCell: xW,
  // @ts-ignore
  pastedValueParser: (e) => new Date(e)
}), Af = (e) => e == null ? null : Number(e), Lme = (e) => e == null || Number.isNaN(e) || e === "" ? null : (t) => Af(t) === Af(e), $me = () => [{
  value: "=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => Af(t) === e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "!=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => Af(t) !== e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : Af(t) > e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: ">=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : Af(t) >= e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : Af(t) < e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "<=",
  getApplyFilterFn: (e) => e.value == null || Number.isNaN(e.value) ? null : (t) => t == null ? !1 : Af(t) <= e.value,
  InputComponent: Ra,
  InputComponentProps: {
    type: "number"
  }
}, {
  value: "isEmpty",
  getApplyFilterFn: () => (e) => e == null,
  requiresFilterValue: !1
}, {
  value: "isNotEmpty",
  getApplyFilterFn: () => (e) => e != null,
  requiresFilterValue: !1
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => !Array.isArray(e.value) || e.value.length === 0 ? null : (t) => t != null && e.value.includes(Number(t)),
  InputComponent: $D,
  InputComponentProps: {
    type: "number"
  }
}], jme = J({}, pu, {
  type: "number",
  align: "right",
  headerAlign: "right",
  sortComparator: N5,
  valueParser: (e) => e === "" ? null : Number(e),
  valueFormatter: (e) => $5(e) ? e.toLocaleString() : e || "",
  filterOperators: $me(),
  getApplyQuickFilterFn: Lme
});
function ry(e) {
  return (e == null ? void 0 : e.type) === "singleSelect";
}
function cm(e, t) {
  if (e)
    return typeof e.valueOptions == "function" ? e.valueOptions(J({
      field: e.field
    }, t)) : e.valueOptions;
}
function l_(e, t, n) {
  if (t === void 0)
    return;
  const r = t.find((o) => {
    const s = n(o);
    return String(s) === String(e);
  });
  return n(r);
}
const Fme = ["id", "value", "formattedValue", "api", "field", "row", "rowNode", "colDef", "cellMode", "isEditable", "tabIndex", "className", "hasFocus", "isValidating", "isProcessingProps", "error", "onValueChange", "initialOpen"], zme = ["MenuProps"];
function Bme(e) {
  return !!e.key;
}
function TW(e) {
  var W, Y;
  const t = Lt(), {
    id: n,
    value: r,
    field: o,
    row: s,
    colDef: a,
    hasFocus: c,
    error: f,
    onValueChange: m,
    initialOpen: g = t.editMode === wc.Cell
  } = e, y = qt(e, Fme), w = On(), C = x.useRef(null), T = x.useRef(null), [E, O] = x.useState(g), I = (((W = t.slotProps) == null ? void 0 : W.baseSelect) || {}).native ?? !1, M = ((Y = t.slotProps) == null ? void 0 : Y.baseSelect) || {}, {
    MenuProps: N
  } = M, P = qt(M, zme);
  if (Nr(() => {
    var ee;
    c && ((ee = T.current) == null || ee.focus());
  }, [c]), !ry(a))
    return null;
  const F = cm(a, {
    id: n,
    row: s
  });
  if (!F)
    return null;
  const H = a.getOptionValue, U = a.getOptionLabel, z = async (ee) => {
    if (!ry(a) || !F)
      return;
    O(!1);
    const G = ee.target, K = l_(G.value, F, H);
    m && await m(ee, K), await w.current.setEditCellValue({
      id: n,
      field: o,
      value: K
    }, ee);
  }, A = (ee, G) => {
    if (t.editMode === wc.Row) {
      O(!1);
      return;
    }
    if (G === "backdropClick" || ee.key === "Escape") {
      const K = w.current.getCellParams(n, o);
      w.current.publishEvent("cellEditStop", J({}, K, {
        reason: ee.key === "Escape" ? ou.escapeKeyDown : ou.cellFocusOut
      }));
    }
  }, q = (ee) => {
    Bme(ee) && ee.key === "Enter" || O(!0);
  };
  return !F || !a ? null : /* @__PURE__ */ $.jsx(t.slots.baseSelect, J({
    ref: C,
    inputRef: T,
    value: r,
    onChange: z,
    open: E,
    onOpen: q,
    MenuProps: J({
      onClose: A
    }, N),
    error: f,
    native: I,
    fullWidth: !0
  }, y, P, {
    children: F.map((ee) => {
      var K;
      const G = H(ee);
      return /* @__PURE__ */ x.createElement(t.slots.baseSelectOption, J({}, ((K = t.slotProps) == null ? void 0 : K.baseSelectOption) || {}, {
        native: I,
        key: G,
        value: G
      }), U(ee));
    })
  }));
}
process.env.NODE_ENV !== "production" && (TW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * GridApi that let you manipulate the grid.
   */
  api: u.object.isRequired,
  /**
   * The mode of the cell.
   */
  cellMode: u.oneOf(["edit", "view"]).isRequired,
  changeReason: u.oneOf(["debouncedSetEditCellValue", "setEditCellValue"]),
  /**
   * The column of the row that the current cell belongs to.
   */
  colDef: u.object.isRequired,
  /**
   * The column field of the cell that triggered the event.
   */
  field: u.string.isRequired,
  /**
   * The cell value formatted with the column valueFormatter.
   */
  formattedValue: u.any,
  /**
   * If true, the cell is the active element.
   */
  hasFocus: u.bool.isRequired,
  /**
   * The grid row id.
   */
  id: u.oneOfType([u.number, u.string]).isRequired,
  /**
   * If true, the select opens by default.
   */
  initialOpen: u.bool,
  /**
   * If true, the cell is editable.
   */
  isEditable: u.bool,
  isProcessingProps: u.bool,
  isValidating: u.bool,
  /**
   * Callback called when the value is changed by the user.
   * @param {SelectChangeEvent<any>} event The event source of the callback.
   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.
   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`
   */
  onValueChange: u.func,
  /**
   * The row model of the row that the current cell belongs to.
   */
  row: u.any.isRequired,
  /**
   * The node of the row that the current cell belongs to.
   */
  rowNode: u.object.isRequired,
  /**
   * the tabIndex value.
   */
  tabIndex: u.oneOf([-1, 0]).isRequired,
  /**
   * The cell value.
   * If the column has `valueGetter`, use `params.row` to directly access the fields.
   */
  value: u.any
});
const Hme = (e) => /* @__PURE__ */ $.jsx(TW, J({}, e)), Vme = ["item", "applyValue", "type", "apiRef", "focusElementRef", "placeholder", "tabIndex", "label", "variant", "isFilterActive", "clearButton", "InputLabelProps"], Ume = ({
  column: e,
  OptionComponent: t,
  getOptionLabel: n,
  getOptionValue: r,
  isSelectNative: o,
  baseSelectOptionProps: s
}) => ["", ...cm(e) || []].map((c) => {
  const f = r(c);
  let m = n(c);
  return m === "" && (m = " "), /* @__PURE__ */ x.createElement(t, J({}, s, {
    native: o,
    key: f,
    value: f
  }), m);
}), Wme = Ue("div")({
  display: "flex",
  alignItems: "flex-end",
  width: "100%",
  "& button": {
    margin: "auto 0px 5px 5px"
  }
});
function ZM(e) {
  var H, U, z, A, q;
  const {
    item: t,
    applyValue: n,
    type: r,
    apiRef: o,
    focusElementRef: s,
    placeholder: a,
    tabIndex: c,
    label: f,
    variant: m = "standard",
    clearButton: g
  } = e, y = qt(e, Vme), w = t.value ?? "", C = pr(), T = pr(), E = Lt(), O = ((U = (H = E.slotProps) == null ? void 0 : H.baseSelect) == null ? void 0 : U.native) ?? !1;
  let k = null;
  if (t.field) {
    const W = o.current.getColumn(t.field);
    ry(W) && (k = W);
  }
  const I = k == null ? void 0 : k.getOptionValue, M = k == null ? void 0 : k.getOptionLabel, N = x.useMemo(() => cm(k), [k]), P = x.useCallback((W) => {
    let Y = W.target.value;
    Y = l_(Y, N, I), n(J({}, t, {
      value: Y
    }));
  }, [N, I, n, t]);
  if (!ry(k))
    return null;
  const F = f ?? o.current.getLocaleText("filterPanelInputLabel");
  return /* @__PURE__ */ $.jsxs(Wme, {
    children: [/* @__PURE__ */ $.jsxs(E.slots.baseFormControl, {
      fullWidth: !0,
      children: [/* @__PURE__ */ $.jsx(E.slots.baseInputLabel, J({}, (z = E.slotProps) == null ? void 0 : z.baseInputLabel, {
        id: T,
        htmlFor: C,
        shrink: !0,
        variant: m,
        children: F
      })), /* @__PURE__ */ $.jsx(E.slots.baseSelect, J({
        id: C,
        label: F,
        labelId: T,
        value: w,
        onChange: P,
        variant: m,
        type: r || "text",
        inputProps: {
          tabIndex: c,
          ref: s,
          placeholder: a ?? o.current.getLocaleText("filterPanelInputPlaceholder")
        },
        native: O,
        notched: m === "outlined" ? !0 : void 0
      }, y, (A = E.slotProps) == null ? void 0 : A.baseSelect, {
        children: Ume({
          column: k,
          OptionComponent: E.slots.baseSelectOption,
          getOptionLabel: M,
          getOptionValue: I,
          isSelectNative: O,
          baseSelectOptionProps: (q = E.slotProps) == null ? void 0 : q.baseSelectOption
        })
      }))]
    }), g]
  });
}
process.env.NODE_ENV !== "production" && (ZM.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  clearButton: u.node,
  focusElementRef: u.oneOfType([u.func, u.object]),
  /**
   * It is `true` if the filter either has a value or an operator with no value
   * required is selected (for example `isEmpty`)
   */
  isFilterActive: u.bool,
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired
});
const Gme = ["item", "applyValue", "type", "apiRef", "focusElementRef", "color", "error", "helperText", "size", "variant"], qme = ["key"], Kme = oV();
function _W(e) {
  const {
    item: t,
    applyValue: n,
    apiRef: r,
    focusElementRef: o,
    color: s,
    error: a,
    helperText: c,
    size: f,
    variant: m = "standard"
  } = e, g = qt(e, Gme), y = {
    color: s,
    error: a,
    helperText: c,
    size: f,
    variant: m
  }, w = pr(), C = Lt();
  let T = null;
  if (t.field) {
    const P = r.current.getColumn(t.field);
    ry(P) && (T = P);
  }
  const E = T == null ? void 0 : T.getOptionValue, O = T == null ? void 0 : T.getOptionLabel, k = x.useCallback((P, F) => E(P) === E(F), [E]), I = x.useMemo(() => cm(T) || [], [T]), M = x.useMemo(() => Array.isArray(t.value) ? t.value.reduce((P, F) => {
    const H = I.find((U) => E(U) === F);
    return H != null && P.push(H), P;
  }, []) : [], [E, t.value, I]), N = x.useCallback((P, F) => {
    n(J({}, t, {
      value: F.map(E)
    }));
  }, [n, t, E]);
  return /* @__PURE__ */ $.jsx(nD, J({
    multiple: !0,
    options: I,
    isOptionEqualToValue: k,
    filterOptions: Kme,
    id: w,
    value: M,
    onChange: N,
    getOptionLabel: O,
    renderTags: (P, F) => P.map((H, U) => {
      const z = F({
        index: U
      }), {
        key: A
      } = z, q = qt(z, qme);
      return /* @__PURE__ */ $.jsx(C.slots.baseChip, J({
        variant: "outlined",
        size: "small",
        label: O(H)
      }, q), A);
    }),
    renderInput: (P) => {
      var F;
      return /* @__PURE__ */ $.jsx(C.slots.baseTextField, J({}, P, {
        label: r.current.getLocaleText("filterPanelInputLabel"),
        placeholder: r.current.getLocaleText("filterPanelInputPlaceholder"),
        InputLabelProps: J({}, P.InputLabelProps, {
          shrink: !0
        }),
        inputRef: o,
        type: "singleSelect"
      }, y, (F = C.slotProps) == null ? void 0 : F.baseTextField));
    }
  }, g));
}
process.env.NODE_ENV !== "production" && (_W.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  apiRef: u.shape({
    current: u.object.isRequired
  }).isRequired,
  applyValue: u.func.isRequired,
  focusElementRef: u.oneOfType([u.func, u.object]),
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired,
  type: u.oneOf(["singleSelect"])
});
const vv = (e) => e == null || !LD(e) ? e : e.value, Yme = () => [{
  value: "is",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => vv(t) === vv(e.value),
  InputComponent: ZM
}, {
  value: "not",
  getApplyFilterFn: (e) => e.value == null || e.value === "" ? null : (t) => vv(t) !== vv(e.value),
  InputComponent: ZM
}, {
  value: "isAnyOf",
  getApplyFilterFn: (e) => {
    if (!Array.isArray(e.value) || e.value.length === 0)
      return null;
    const t = e.value.map(vv);
    return (n) => t.includes(vv(n));
  },
  InputComponent: _W
}], Xme = (e) => typeof e[0] == "object", Qme = (e) => LD(e) ? e.value : e, Jme = (e) => LD(e) ? e.label : String(e), Zme = J({}, pu, {
  type: "singleSelect",
  getOptionLabel: Jme,
  getOptionValue: Qme,
  valueFormatter(e, t, n, r) {
    const o = RC(r.current.state, t);
    if (!ry(n))
      return "";
    const s = cm(n, {
      id: o,
      row: t
    });
    if (e == null)
      return "";
    if (!s)
      return e;
    if (!Xme(s))
      return n.getOptionLabel(e);
    const a = s.find((c) => n.getOptionValue(c) === e);
    return a ? n.getOptionLabel(a) : "";
  },
  renderEditCell: Hme,
  filterOperators: Yme(),
  // @ts-ignore
  pastedValueParser: (e, t, n) => {
    const r = n, o = cm(r) || [], s = r.getOptionValue;
    if (o.find((c) => s(c) === e))
      return e;
  }
}), ege = "string", tge = () => ({
  string: pu,
  number: jme,
  date: Ame,
  dateTime: Nme,
  boolean: rW,
  singleSelect: Zme,
  [gO]: Fhe,
  custom: pu
}), GD = (e) => e.headerFiltering, nge = en(
  GD,
  // No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`
  (e) => (e == null ? void 0 : e.enabled) ?? !1
), rge = en(GD, (e) => e.editing), oge = en(GD, (e) => e.menuOpen), CO = (e) => e.columnGrouping, OW = ir(CO, (e) => (e == null ? void 0 : e.unwrappedGroupingModel) ?? {}), RW = ir(CO, (e) => (e == null ? void 0 : e.lookup) ?? {}), ige = ir(CO, (e) => (e == null ? void 0 : e.headerStructure) ?? []), kC = en(CO, (e) => (e == null ? void 0 : e.maxDepth) ?? 0), kW = ["maxWidth", "minWidth", "width", "flex"], LP = tge();
function sge({
  initialFreeSpace: e,
  totalFlexUnits: t,
  flexColumns: n
}) {
  const r = new Set(n.map((a) => a.field)), o = {
    all: {},
    frozenFields: [],
    freeze: (a) => {
      const c = o.all[a];
      c && c.frozen !== !0 && (o.all[a].frozen = !0, o.frozenFields.push(a));
    }
  };
  function s() {
    if (o.frozenFields.length === r.size)
      return;
    const a = {
      min: {},
      max: {}
    };
    let c = e, f = t, m = 0;
    o.frozenFields.forEach((g) => {
      c -= o.all[g].computedWidth, f -= o.all[g].flex;
    });
    for (let g = 0; g < n.length; g += 1) {
      const y = n[g];
      if (o.all[y.field] && o.all[y.field].frozen === !0)
        continue;
      let C = c / f * y.flex;
      C < y.minWidth ? (m += y.minWidth - C, C = y.minWidth, a.min[y.field] = !0) : C > y.maxWidth && (m += y.maxWidth - C, C = y.maxWidth, a.max[y.field] = !0), o.all[y.field] = {
        frozen: !1,
        computedWidth: C,
        flex: y.flex
      };
    }
    m < 0 ? Object.keys(a.max).forEach((g) => {
      o.freeze(g);
    }) : m > 0 ? Object.keys(a.min).forEach((g) => {
      o.freeze(g);
    }) : n.forEach(({
      field: g
    }) => {
      o.freeze(g);
    }), s();
  }
  return s(), o.all;
}
const eI = (e, t) => {
  const n = {};
  let r = 0, o = 0;
  const s = [];
  e.orderedFields.forEach((f) => {
    let m = e.lookup[f], g = 0, y = !1;
    e.columnVisibilityModel[f] !== !1 && (m.flex && m.flex > 0 ? (r += m.flex, y = !0) : g = Aa(m.width || pu.width, m.minWidth || pu.minWidth, m.maxWidth || pu.maxWidth), o += g), m.computedWidth !== g && (m = J({}, m, {
      computedWidth: g
    })), y && s.push(m), n[f] = m;
  });
  const a = t === void 0 ? 0 : t.viewportOuterSize.width - (t.hasScrollY ? t.scrollbarSize : 0), c = Math.max(a - o, 0);
  if (r > 0 && a > 0) {
    const f = sge({
      initialFreeSpace: c,
      totalFlexUnits: r,
      flexColumns: s
    });
    Object.keys(f).forEach((m) => {
      n[m].computedWidth = f[m].computedWidth;
    });
  }
  return J({}, e, {
    lookup: n
  });
}, age = (e, t) => {
  if (!t)
    return e;
  const {
    orderedFields: n = [],
    dimensions: r = {}
  } = t, o = Object.keys(r);
  if (o.length === 0 && n.length === 0)
    return e;
  const s = {}, a = [];
  for (let g = 0; g < n.length; g += 1) {
    const y = n[g];
    e.lookup[y] && (s[y] = !0, a.push(y));
  }
  const c = a.length === 0 ? e.orderedFields : [...a, ...e.orderedFields.filter((g) => !s[g])], f = J({}, e.lookup);
  for (let g = 0; g < o.length; g += 1) {
    const y = o[g], w = J({}, f[y], {
      hasBeenResized: !0
    });
    Object.entries(r[y]).forEach(([C, T]) => {
      w[C] = T === -1 ? 1 / 0 : T;
    }), f[y] = w;
  }
  return J({}, e, {
    orderedFields: c,
    lookup: f
  });
};
function nB(e) {
  let t = LP[ege];
  return e && LP[e] && (t = LP[e]), t;
}
const xv = ({
  apiRef: e,
  columnsToUpsert: t,
  initialState: n,
  columnVisibilityModel: r = ml(e),
  keepOnlyColumnsToUpsert: o = !1
}) => {
  var g, y;
  const s = !e.current.state.columns;
  let a;
  if (s)
    a = {
      orderedFields: [],
      lookup: {},
      columnVisibilityModel: r
    };
  else {
    const w = gc(e.current.state);
    a = {
      orderedFields: o ? [] : [...w.orderedFields],
      lookup: J({}, w.lookup),
      // Will be cleaned later if keepOnlyColumnsToUpsert=true
      columnVisibilityModel: r
    };
  }
  let c = {};
  o && !s && (c = Object.keys(a.lookup).reduce((w, C) => J({}, w, {
    [C]: !1
  }), {})), t.forEach((w) => {
    const {
      field: C
    } = w;
    c[C] = !0;
    let T = a.lookup[C];
    T == null ? (T = J({}, nB(w.type), {
      field: C,
      hasBeenResized: !1
    }), a.orderedFields.push(C)) : o && a.orderedFields.push(C), T && T.type !== w.type && (T = J({}, nB(w.type), {
      field: C
    }));
    let E = T.hasBeenResized;
    kW.forEach((O) => {
      w[O] !== void 0 && (E = !0, w[O] === -1 && (w[O] = 1 / 0));
    }), a.lookup[C] = Bv(T, J({}, w, {
      hasBeenResized: E
    }));
  }), o && !s && Object.keys(a.lookup).forEach((w) => {
    c[w] || delete a.lookup[w];
  });
  const f = e.current.unstable_applyPipeProcessors("hydrateColumns", a), m = age(f, n);
  return eI(m, ((y = (g = e.current).getRootDimensions) == null ? void 0 : y.call(g)) ?? void 0);
};
function lge({
  firstColumnToRender: e,
  apiRef: t,
  firstRowToRender: n,
  lastRowToRender: r,
  visibleRows: o
}) {
  let s = e, a = !1;
  for (; !a; ) {
    a = !0;
    for (let c = n; c < r; c += 1)
      if (o[c]) {
        const m = o[c].id, g = t.current.unstable_getCellColSpanInfo(m, s);
        if (g && g.spannedByColSpan && g.leftVisibleCellIndex < s) {
          s = g.leftVisibleCellIndex, a = !1;
          break;
        }
      }
  }
  return s;
}
function xO(e, t) {
  if (t.unstable_listView)
    return 0;
  const n = vy(e), r = kC(e), o = nge(e), s = Math.floor(t.columnHeaderHeight * n), a = Math.floor((t.columnGroupHeaderHeight ?? t.columnHeaderHeight) * n), c = o ? Math.floor((t.headerFilterHeight ?? t.columnHeaderHeight) * n) : 0;
  return s + a * r + c;
}
const Ey = (e) => e.rowsMeta, u_ = 1, PW = 1.5, uge = (e) => {
  const {
    scrollDirection: t,
    classes: n
  } = e, r = {
    root: ["scrollArea", `scrollArea--${t}`]
  };
  return mt(r, zn, n);
}, cge = Lr("div", {
  name: "MuiDataGrid",
  slot: "ScrollArea",
  overridesResolver: (e, t) => [{
    [`&.${se["scrollArea--left"]}`]: t["scrollArea--left"]
  }, {
    [`&.${se["scrollArea--right"]}`]: t["scrollArea--right"]
  }, {
    [`&.${se["scrollArea--up"]}`]: t["scrollArea--up"]
  }, {
    [`&.${se["scrollArea--down"]}`]: t["scrollArea--down"]
  }, t.scrollArea]
})(() => ({
  position: "absolute",
  zIndex: 101,
  // Horizontal scroll areas
  [`&.${se["scrollArea--left"]}`]: {
    top: 0,
    left: 0,
    width: 20,
    bottom: 0
  },
  [`&.${se["scrollArea--right"]}`]: {
    top: 0,
    right: 0,
    width: 20,
    bottom: 0
  },
  // Vertical scroll areas
  [`&.${se["scrollArea--up"]}`]: {
    top: 0,
    left: 0,
    right: 0,
    height: 20
  },
  [`&.${se["scrollArea--down"]}`]: {
    bottom: 0,
    left: 0,
    right: 0,
    height: 20
  }
})), dge = xC(gi, (e, t) => t === "left" ? e.leftPinnedWidth : t === "right" ? e.rightPinnedWidth + (e.hasScrollX ? e.scrollbarSize : 0) : 0);
function fge(e) {
  const t = On(), [n, r] = x.useState("none");
  return Ot(t, "columnHeaderDragStart", () => r("horizontal")), Ot(t, "columnHeaderDragEnd", () => r("none")), Ot(t, "rowDragStart", () => r("vertical")), Ot(t, "rowDragEnd", () => r("none")), n === "none" ? null : n === "horizontal" ? /* @__PURE__ */ $.jsx(pge, J({}, e)) : /* @__PURE__ */ $.jsx(hge, J({}, e));
}
function pge(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, r = x.useRef(null), o = On(), s = Ma(), a = Ze(o, vy), c = Ze(o, hO), f = YS(o, dge, t), m = () => {
    const E = gi(o.current.state);
    if (t === "left")
      return n.current.left > 0;
    if (t === "right") {
      const O = c - E.viewportInnerSize.width;
      return n.current.left < O;
    }
    return !1;
  }, g = Lt(), y = xO(o, g), w = Math.floor(g.columnHeaderHeight * a), C = J({
    height: w,
    top: y - w
  }, t === "left" ? {
    left: f
  } : {}, t === "right" ? {
    right: f
  } : {}), T = jn((E) => {
    let O;
    if (E.preventDefault(), t === "left")
      O = E.clientX - r.current.getBoundingClientRect().right;
    else if (t === "right")
      O = Math.max(1, E.clientX - r.current.getBoundingClientRect().left);
    else
      throw new Error("MUI X: Wrong drag direction");
    O = (O - u_) * PW + u_, s.start(0, () => {
      o.current.scroll({
        left: n.current.left + O,
        top: n.current.top
      });
    });
  });
  return /* @__PURE__ */ $.jsx(MW, J({}, e, {
    ref: r,
    getCanScrollMore: m,
    style: C,
    handleDragOver: T
  }));
}
function hge(e) {
  const {
    scrollDirection: t,
    scrollPosition: n
  } = e, r = x.useRef(null), o = On(), s = Ma(), a = Ze(o, Ey), c = () => {
    const w = gi(o.current.state);
    if (t === "up")
      return n.current.top > 0;
    if (t === "down") {
      const T = (a.currentPageTotalHeight || 0) - w.viewportInnerSize.height - w.scrollbarSize;
      return n.current.top < T;
    }
    return !1;
  }, f = Lt(), m = xO(o, f), g = {
    top: t === "up" ? m : void 0,
    bottom: t === "down" ? 0 : void 0
  }, y = jn((w) => {
    let C;
    if (w.preventDefault(), t === "up")
      C = w.clientY - r.current.getBoundingClientRect().bottom;
    else if (t === "down")
      C = Math.max(1, w.clientY - r.current.getBoundingClientRect().top);
    else
      throw new Error("MUI X: Wrong drag direction");
    C = (C - u_) * PW + u_, s.start(0, () => {
      o.current.scroll({
        left: n.current.left,
        top: n.current.top + C
      });
    });
  });
  return /* @__PURE__ */ $.jsx(MW, J({}, e, {
    ref: r,
    getCanScrollMore: c,
    style: g,
    handleDragOver: y
  }));
}
const MW = Yn(function(t, n) {
  const {
    scrollDirection: r,
    getCanScrollMore: o,
    style: s,
    handleDragOver: a
  } = t, c = On(), [f, m] = x.useState(o), g = Lt(), y = J({}, g, {
    scrollDirection: r
  }), w = uge(y);
  return Ot(c, "scrollPositionChange", () => {
    m(o);
  }), f ? /* @__PURE__ */ $.jsx(cge, {
    ref: n,
    className: w.root,
    ownerState: y,
    onDragOver: a,
    style: s
  }) : null;
}), nT = Rd(fge);
var qD = {}, IW = { exports: {} }, DW = { exports: {} };
(function(e) {
  function t(n) {
    "@babel/helpers - typeof";
    return e.exports = t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
      return typeof r;
    } : function(r) {
      return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
    }, e.exports.__esModule = !0, e.exports.default = e.exports, t(n);
  }
  e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports;
})(DW);
var mge = DW.exports;
(function(e) {
  var t = mge.default;
  function n(r, o) {
    if (typeof WeakMap == "function") var s = /* @__PURE__ */ new WeakMap(), a = /* @__PURE__ */ new WeakMap();
    return (e.exports = n = function(f, m) {
      if (!m && f && f.__esModule) return f;
      var g, y, w = {
        __proto__: null,
        default: f
      };
      if (f === null || t(f) != "object" && typeof f != "function") return w;
      if (g = m ? a : s) {
        if (g.has(f)) return g.get(f);
        g.set(f, w);
      }
      for (var C in f) C !== "default" && {}.hasOwnProperty.call(f, C) && ((y = (g = Object.defineProperty) && Object.getOwnPropertyDescriptor(f, C)) && (y.get || y.set) ? g(w, C, y) : w[C] = f[C]);
      return w;
    }, e.exports.__esModule = !0, e.exports.default = e.exports)(r, o);
  }
  e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports;
})(IW);
var gge = IW.exports, vge = gge.default;
Object.defineProperty(qD, "__esModule", {
  value: !0
});
var AW = qD.default = void 0, yge = vge(x);
AW = qD.default = parseInt(yge.version, 10);
const KD = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (KD.displayName = "GridPrivateApiContext");
function $a() {
  const e = x.useContext(KD);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid private context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}
const qf = (e, t) => OC(e), YD = (e, t) => Ze(e, OC), bge = typeof navigator < "u" ? navigator.userAgent.toLowerCase() : "empty", wge = bge.includes("firefox"), EO = (e) => e.virtualization;
en(EO, (e) => e.enabled);
const NW = en(EO, (e) => e.enabledForColumns), Sge = en(EO, (e) => e.enabledForRows), PC = en(EO, (e) => e.renderContext), Cge = ir((e) => e.virtualization.renderContext.firstColumnIndex, (e) => e.virtualization.renderContext.lastColumnIndex, (e, t) => ({
  firstColumnIndex: e,
  lastColumnIndex: t
})), tI = {
  firstRowIndex: 0,
  lastRowIndex: 0,
  firstColumnIndex: 0,
  lastColumnIndex: 0
}, xge = (e, t) => {
  const {
    disableVirtualization: n,
    autoHeight: r
  } = t;
  return J({}, e, {
    virtualization: {
      enabled: !n,
      enabledForColumns: !n,
      enabledForRows: !n && !r,
      renderContext: tI
    }
  });
};
function Ege(e, t) {
  const n = (s) => {
    e.current.setState((a) => J({}, a, {
      virtualization: J({}, a.virtualization, {
        enabled: s,
        enabledForColumns: s,
        enabledForRows: s && !t.autoHeight
      })
    }));
  };
  Tn(e, {
    unstable_setVirtualization: n,
    unstable_setColumnVirtualization: (s) => {
      e.current.setState((a) => J({}, a, {
        virtualization: J({}, a.virtualization, {
          enabledForColumns: s
        })
      }));
    }
  }, "public"), x.useEffect(() => {
    n(!t.disableVirtualization);
  }, [t.disableVirtualization, t.autoHeight]);
}
const XD = (e) => e.rowSpanning, LW = en(XD, (e) => e.hiddenCells), Tge = en(XD, (e) => e.spannedCells), _ge = en(XD, (e) => e.hiddenCellOriginMap), oy = (e) => e.listViewColumn, Oge = E5(Ps, PC, OC, po, hl, (e, t, n, r, o) => {
  if (!e)
    return !1;
  const s = o[e.id];
  if (!s)
    return !1;
  const a = n.rowToIndexMap.get(s), c = r.slice(t.firstColumnIndex, t.lastColumnIndex).findIndex((m) => m.field === e.field);
  return !(a !== void 0 && c !== -1 && a >= t.firstRowIndex && a <= t.lastRowIndex);
}), $W = ir(Oge, po, OC, hl, Ps, (e, t, n, r, o) => {
  if (!e)
    return null;
  const s = r[o.id];
  if (!s)
    return null;
  const a = n.rowToIndexMap.get(s);
  if (a === void 0)
    return null;
  const c = t.findIndex((f) => f.field === o.field);
  return c === -1 ? null : J({}, o, {
    rowIndex: a,
    columnIndex: c
  });
});
function kv(e, t) {
  return Math.round(e * 10 ** t) / 10 ** t;
}
const c_ = typeof window < "u" && /jsdom|HappyDOM/.test(window.navigator.userAgent), $P = 50;
var $o = /* @__PURE__ */ function(e) {
  return e[e.NONE = 0] = "NONE", e[e.UP = 1] = "UP", e[e.DOWN = 2] = "DOWN", e[e.LEFT = 3] = "LEFT", e[e.RIGHT = 4] = "RIGHT", e;
}($o || {});
const rB = {
  top: 0,
  left: 0
}, Rge = Object.freeze(/* @__PURE__ */ new Map()), kge = (e, t, n, r, o) => ({
  direction: $o.NONE,
  buffer: FW(e, $o.NONE, t, n, r, o)
}), Pge = () => {
  var ce;
  const e = $a(), t = Lt(), {
    unstable_listView: n
  } = t, r = Ze(e, () => n ? [oy(e.current.state)] : po(e)), o = Ze(e, Sge) && !c_, s = Ze(e, NW) && !c_, a = Ze(e, yy), c = wy(e), f = n ? s_ : c, m = a.bottom.length > 0, [g, y] = x.useState(Rge), w = xc(), C = Ze(e, Gf), T = YD(e), E = e.current.mainElementRef, O = e.current.virtualScrollerRef, k = e.current.virtualScrollbarVerticalRef, I = e.current.virtualScrollbarHorizontalRef, M = Ze(e, xhe), N = x.useRef(!1), P = Ze(e, AD), F = Ze(e, jpe), H = Ze(e, hO), U = Ze(e, Mge), z = Ze(e, M5), A = Ze(e, P5), q = x.useRef(null), W = x.useCallback((Ce) => {
    if (E.current = Ce, !Ce)
      return;
    const Ne = Ce.getBoundingClientRect();
    let Be = {
      width: kv(Ne.width, 1),
      height: kv(Ne.height, 1)
    };
    if ((!q.current || Be.width !== q.current.width && Be.height !== q.current.height) && (q.current = Be, e.current.publishEvent("resize", Be)), typeof ResizeObserver > "u")
      return;
    const tt = new ResizeObserver(($e) => {
      const rt = $e[0];
      if (!rt)
        return;
      const ot = {
        width: kv(rt.contentRect.width, 1),
        height: kv(rt.contentRect.height, 1)
      };
      ot.width === Be.width && ot.height === Be.height || (e.current.publishEvent("resize", ot), Be = ot);
    });
    if (tt.observe(Ce), AW >= 19)
      return () => {
        E.current = null, tt.disconnect();
      };
  }, [e, E]), Y = x.useRef(((ce = t.initialState) == null ? void 0 : ce.scroll) ?? rB), ee = x.useRef(!1), G = x.useRef(rB), K = x.useRef(tI), X = Ze(e, PC), te = Ze(e, $W), re = Ma(), Q = x.useRef(void 0), B = Ol(() => kge(w, t.rowBufferPx, t.columnBufferPx, P * 15, $P * 6)).current, ie = x.useCallback((Ce) => {
    if (aB(Ce, e.current.state.virtualization.renderContext))
      return;
    const Ne = Ce.firstRowIndex !== K.current.firstRowIndex || Ce.lastRowIndex !== K.current.lastRowIndex;
    e.current.setState((tt) => J({}, tt, {
      virtualization: J({}, tt.virtualization, {
        renderContext: Ce
      })
    })), gi(e.current.state).isReady && Ne && (K.current = Ce, e.current.publishEvent("renderedRowsIntervalChange", Ce)), G.current = Y.current;
  }, [e]), de = jn(() => {
    const Ce = O.current;
    if (!Ce)
      return;
    const Ne = gi(e.current.state), Be = Math.ceil(Ne.minimumSize.height - Ne.viewportOuterSize.height), tt = Math.ceil(Ne.minimumSize.width - Ne.viewportInnerSize.width), $e = {
      top: Aa(Ce.scrollTop, 0, Be),
      left: w ? Aa(Ce.scrollLeft, -tt, 0) : Aa(Ce.scrollLeft, 0, tt)
    }, rt = $e.left - Y.current.left, ot = $e.top - Y.current.top, wt = rt !== 0 || ot !== 0;
    Y.current = $e;
    const gt = wt ? Age(rt, ot) : $o.NONE, nt = Math.abs(Y.current.top - G.current.top), Ft = Math.abs(Y.current.left - G.current.left), ut = nt >= P || Ft >= $P, Et = B.direction !== gt;
    if (!(ut || Et))
      return X;
    if (Et)
      switch (gt) {
        case $o.NONE:
        case $o.LEFT:
        case $o.RIGHT:
          Q.current = void 0;
          break;
        default:
          Q.current = X;
          break;
      }
    B.direction = gt, B.buffer = FW(w, gt, t.rowBufferPx, t.columnBufferPx, P * 15, $P * 6);
    const At = oB(e, t, o, s), vt = iB(At, Y.current, B);
    return aB(vt, X) || (v_.flushSync(() => {
      ie(vt);
    }), re.start(1e3, de)), vt;
  }), ue = () => {
    if (!gi(e.current.state).isReady && (o || s))
      return;
    const Ce = oB(e, t, o, s), Ne = iB(Ce, Y.current, B);
    Q.current = void 0, ie(Ne);
  }, he = jn(() => {
    if (ee.current) {
      ee.current = !1;
      return;
    }
    const Ce = de();
    e.current.publishEvent("scrollPositionChange", {
      top: Y.current.top,
      left: Y.current.left,
      renderContext: Ce
    });
  }), ge = jn((Ce) => {
    e.current.publishEvent("virtualScrollerWheel", {}, Ce);
  }), fe = jn((Ce) => {
    e.current.publishEvent("virtualScrollerTouchMove", {}, Ce);
  }), pe = (Ce = {}) => {
    var At;
    if (!Ce.rows && !T.range)
      return [];
    const Ne = Yo(e);
    let Be = X;
    Ce.renderContext && (Be = Ce.renderContext, Be.firstColumnIndex = X.firstColumnIndex, Be.lastColumnIndex = X.lastColumnIndex);
    const tt = !m && Ce.position === void 0 || m && Ce.position === "bottom", $e = Ce.position !== void 0;
    let rt;
    switch (Ce.position) {
      case "top":
        rt = 0;
        break;
      case "bottom":
        rt = a.top.length + T.rows.length;
        break;
      case void 0:
        rt = a.top.length;
        break;
    }
    const ot = Ce.rows ?? T.rows, wt = Be.firstRowIndex, gt = Math.min(Be.lastRowIndex, ot.length), nt = Ce.rows ? Uz(0, Ce.rows.length) : Uz(wt, gt);
    let Ft = -1;
    !$e && te && (te.rowIndex < wt && (nt.unshift(te.rowIndex), Ft = te.rowIndex), te.rowIndex > gt && (nt.push(te.rowIndex), Ft = te.rowIndex));
    const ut = [], Et = (At = t.slotProps) == null ? void 0 : At.row, Tt = dp(e);
    return nt.forEach((vt) => {
      var Xo, Qo, Wt;
      const {
        id: Xe,
        model: Oe
      } = ot[vt];
      if (!Ne[Xe])
        return;
      const Ie = (((Xo = T == null ? void 0 : T.range) == null ? void 0 : Xo.firstRowIndex) || 0) + rt + vt;
      if (M) {
        const hr = f.left.length, Jo = r.length - f.right.length;
        e.current.calculateColSpan({
          rowId: Xe,
          minFirstColumn: hr,
          maxLastColumn: Jo,
          columns: r
        }), f.left.length > 0 && e.current.calculateColSpan({
          rowId: Xe,
          minFirstColumn: 0,
          maxLastColumn: f.left.length,
          columns: r
        }), f.right.length > 0 && e.current.calculateColSpan({
          rowId: Xe,
          minFirstColumn: r.length - f.right.length,
          maxLastColumn: r.length,
          columns: r
        });
      }
      const pt = e.current.rowHasAutoHeight(Xe) ? "auto" : e.current.unstable_getRowHeight(Xe);
      let yt;
      C[Xe] == null ? yt = !1 : yt = e.current.isRowSelectable(Xe);
      let zt = !1;
      Ce.position === void 0 && (zt = vt === 0);
      let bt = !1;
      const We = vt === ot.length - 1;
      if (tt)
        if ($e)
          bt = We;
        else {
          const hr = T.rows.length - 1;
          vt === hr && (bt = !0);
        }
      let St = Be;
      Q.current && vt >= Q.current.firstRowIndex && vt < Q.current.lastRowIndex && (St = Q.current);
      const $t = vt === Ft, wn = (te == null ? void 0 : te.rowIndex) === Ie, cn = jW(Tt, St, f.left.length), Tr = We && Ce.position === "top", sr = St.firstColumnIndex, $r = St.lastColumnIndex;
      if (ut.push(/* @__PURE__ */ $.jsx(t.slots.row, J({
        row: Oe,
        rowId: Xe,
        index: Ie,
        selected: yt,
        offsetLeft: cn,
        columnsTotalWidth: H,
        rowHeight: pt,
        pinnedColumns: f,
        visibleColumns: r,
        firstColumnIndex: sr,
        lastColumnIndex: $r,
        focusedColumnIndex: wn ? te.columnIndex : void 0,
        isFirstVisible: zt,
        isLastVisible: bt,
        isNotVisible: $t,
        showBottomBorder: Tr,
        scrollbarWidth: z,
        gridHasFiller: A
      }, Et), Xe)), $t)
        return;
      const _r = g.get(Xe);
      _r && ut.push(_r), Ce.position === void 0 && We && ut.push((Wt = (Qo = e.current).getInfiniteLoadingTriggerElement) == null ? void 0 : Wt.call(Qo, {
        lastRowId: Xe
      }));
    }), ut;
  }, be = x.useMemo(() => ({
    overflowX: !U || n ? "hidden" : void 0,
    overflowY: t.autoHeight ? "hidden" : void 0
  }), [U, t.autoHeight, n]), we = x.useMemo(() => {
    const Ce = {
      width: U ? H : "auto",
      flexBasis: F,
      flexShrink: 0
    };
    return Ce.flexBasis === 0 && (Ce.flexBasis = Q5), Ce;
  }, [H, F, U]), _e = x.useCallback((Ce) => {
    Ce && e.current.publishEvent("virtualScrollerContentSizeChange", {
      columnsTotalWidth: H,
      contentHeight: F
    });
  }, [e, H, F]);
  return Nr(() => {
    var Ce, Ne;
    N.current && ((Ne = (Ce = e.current).updateRenderContext) == null || Ne.call(Ce));
  }, [e, s, o]), Nr(() => {
    n && (O.current.scrollLeft = 0);
  }, [n, O]), bme(X !== tI, () => {
    var Ce;
    if (e.current.publishEvent("scrollPositionChange", {
      top: Y.current.top,
      left: Y.current.left,
      renderContext: X
    }), N.current = !0, (Ce = t.initialState) != null && Ce.scroll && O.current) {
      const Ne = O.current, {
        top: Be,
        left: tt
      } = t.initialState.scroll, $e = {
        top: !(Be > 0),
        left: !(tt > 0)
      };
      if (!$e.left && H && (Ne.scrollLeft = tt, ee.current = !0, $e.left = !0), !$e.top && F && (Ne.scrollTop = Be, ee.current = !0, $e.top = !0), !$e.top || !$e.left) {
        const rt = e.current.subscribeEvent("virtualScrollerContentSizeChange", (ot) => {
          !$e.left && ot.columnsTotalWidth && (Ne.scrollLeft = tt, ee.current = !0, $e.left = !0), !$e.top && ot.contentHeight && (Ne.scrollTop = Be, ee.current = !0, $e.top = !0), $e.left && $e.top && rt();
        });
        return rt;
      }
    }
  }), e.current.register("private", {
    updateRenderContext: ue
  }), fr(e, "sortedRowsSet", ue), fr(e, "paginationModelChange", ue), fr(e, "columnsChange", ue), {
    renderContext: X,
    setPanels: y,
    getRows: pe,
    getContainerProps: () => ({
      ref: W
    }),
    getScrollerProps: () => ({
      ref: O,
      onScroll: he,
      onWheel: ge,
      onTouchMove: fe,
      style: be,
      role: "presentation",
      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug
      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024
      tabIndex: wge ? -1 : void 0
    }),
    getContentProps: () => ({
      style: we,
      role: "presentation",
      ref: _e
    }),
    getRenderZoneProps: () => ({
      role: "rowgroup"
    }),
    getScrollbarVerticalProps: () => ({
      ref: k,
      scrollPosition: Y
    }),
    getScrollbarHorizontalProps: () => ({
      ref: I,
      scrollPosition: Y
    }),
    getScrollAreaProps: () => ({
      scrollPosition: Y
    })
  };
};
function Mge(e) {
  return e.dimensions.viewportOuterSize.width > 0 && e.dimensions.columnsTotalWidth > e.dimensions.viewportOuterSize.width;
}
function oB(e, t, n, r) {
  const o = gi(e.current.state), s = qf(e), a = t.unstable_listView ? [oy(e.current.state)] : po(e), c = _ge(e), f = e.current.state.rows.dataRowIds.at(-1), m = a.at(-1);
  return {
    enabledForRows: n,
    enabledForColumns: r,
    apiRef: e,
    autoHeight: t.autoHeight,
    rowBufferPx: t.rowBufferPx,
    columnBufferPx: t.columnBufferPx,
    leftPinnedWidth: o.leftPinnedWidth,
    columnsTotalWidth: o.columnsTotalWidth,
    viewportInnerWidth: o.viewportInnerSize.width,
    viewportInnerHeight: o.viewportInnerSize.height,
    lastRowHeight: f !== void 0 ? e.current.unstable_getRowHeight(f) : 0,
    lastColumnWidth: (m == null ? void 0 : m.computedWidth) ?? 0,
    rowsMeta: Ey(e.current.state),
    columnPositions: dp(e),
    rows: s.rows,
    range: s.range,
    pinnedColumns: wy(e),
    visibleColumns: a,
    hiddenCellsOriginMap: c,
    listView: t.unstable_listView ?? !1,
    virtualizeColumnsWithAutoRowHeight: t.virtualizeColumnsWithAutoRowHeight
  };
}
function iB(e, t, n) {
  const r = {
    firstRowIndex: 0,
    lastRowIndex: e.rows.length,
    firstColumnIndex: 0,
    lastColumnIndex: e.visibleColumns.length
  }, {
    top: o,
    left: s
  } = t, a = Math.abs(s) + e.leftPinnedWidth;
  if (e.enabledForRows) {
    let f = Math.min(sB(e, o, {
      atStart: !0,
      lastPosition: e.rowsMeta.positions[e.rowsMeta.positions.length - 1] + e.lastRowHeight
    }), e.rowsMeta.positions.length - 1);
    const m = e.hiddenCellsOriginMap[f];
    if (m) {
      const y = Math.min(...Object.values(m));
      f = Math.min(f, y);
    }
    const g = e.autoHeight ? f + e.rows.length : sB(e, o + e.viewportInnerHeight);
    r.firstRowIndex = f, r.lastRowIndex = g;
  }
  if (e.listView)
    return J({}, r, {
      lastColumnIndex: 1
    });
  if (e.enabledForColumns) {
    let f = 0, m = e.columnPositions.length, g = !1;
    const [y, w] = nI({
      firstIndex: r.firstRowIndex,
      lastIndex: r.lastRowIndex,
      minFirstIndex: 0,
      maxLastIndex: e.rows.length,
      bufferBefore: n.buffer.rowBefore,
      bufferAfter: n.buffer.rowAfter,
      positions: e.rowsMeta.positions,
      lastSize: e.lastRowHeight
    });
    if (!e.virtualizeColumnsWithAutoRowHeight)
      for (let C = y; C < w && !g; C += 1) {
        const T = e.rows[C];
        g = e.apiRef.current.rowHasAutoHeight(T.id);
      }
    (!g || e.virtualizeColumnsWithAutoRowHeight) && (f = ep(a, e.columnPositions, {
      atStart: !0,
      lastPosition: e.columnsTotalWidth
    }), m = ep(a + e.viewportInnerWidth, e.columnPositions)), r.firstColumnIndex = f, r.lastColumnIndex = m;
  }
  return Ige(e, r, n);
}
function sB(e, t, n) {
  var a, c;
  const r = e.apiRef.current.getLastMeasuredRowIndex();
  let o = r === 1 / 0;
  (a = e.range) != null && a.lastRowIndex && !o && (o = r >= e.range.lastRowIndex);
  const s = Aa(r - (((c = e.range) == null ? void 0 : c.firstRowIndex) || 0), 0, e.rowsMeta.positions.length);
  return o || e.rowsMeta.positions[s] >= t ? ep(t, e.rowsMeta.positions, n) : Dge(t, e.rowsMeta.positions, s, n);
}
function Ige(e, t, n) {
  const [r, o] = nI({
    firstIndex: t.firstRowIndex,
    lastIndex: t.lastRowIndex,
    minFirstIndex: 0,
    maxLastIndex: e.rows.length,
    bufferBefore: n.buffer.rowBefore,
    bufferAfter: n.buffer.rowAfter,
    positions: e.rowsMeta.positions,
    lastSize: e.lastRowHeight
  }), [s, a] = nI({
    firstIndex: t.firstColumnIndex,
    lastIndex: t.lastColumnIndex,
    minFirstIndex: e.pinnedColumns.left.length,
    maxLastIndex: e.visibleColumns.length - e.pinnedColumns.right.length,
    bufferBefore: n.buffer.columnBefore,
    bufferAfter: n.buffer.columnAfter,
    positions: e.columnPositions,
    lastSize: e.lastColumnWidth
  }), c = lge({
    firstColumnToRender: s,
    apiRef: e.apiRef,
    firstRowToRender: r,
    lastRowToRender: o,
    visibleRows: e.rows
  });
  return {
    firstRowIndex: r,
    lastRowIndex: o,
    firstColumnIndex: c,
    lastColumnIndex: a
  };
}
function ep(e, t, n = void 0, r = 0, o = t.length) {
  if (t.length <= 0)
    return -1;
  if (r >= o)
    return r;
  const s = r + Math.floor((o - r) / 2), a = t[s];
  let c;
  if (n != null && n.atStart) {
    const f = (s === t.length - 1 ? n.lastPosition : t[s + 1]) - a;
    c = e - f < a;
  } else
    c = e <= a;
  return c ? ep(e, t, n, r, s) : ep(e, t, n, s + 1, o);
}
function Dge(e, t, n, r = void 0) {
  let o = 1;
  for (; n < t.length && Math.abs(t[n]) < e; )
    n += o, o *= 2;
  return ep(e, t, r, Math.floor(n / 2), Math.min(n, t.length));
}
function nI({
  firstIndex: e,
  lastIndex: t,
  bufferBefore: n,
  bufferAfter: r,
  minFirstIndex: o,
  maxLastIndex: s,
  positions: a,
  lastSize: c
}) {
  const f = a[e] - n, m = a[t] + r, g = ep(f, a, {
    atStart: !0,
    lastPosition: a[a.length - 1] + c
  }), y = ep(m, a);
  return [Aa(g, o, s), Aa(y, o, s)];
}
function aB(e, t) {
  return e === t ? !0 : e.firstRowIndex === t.firstRowIndex && e.lastRowIndex === t.lastRowIndex && e.firstColumnIndex === t.firstColumnIndex && e.lastColumnIndex === t.lastColumnIndex;
}
function jW(e, t, n) {
  const r = (e[t.firstColumnIndex] ?? 0) - (e[n] ?? 0);
  return Math.abs(r);
}
function Age(e, t) {
  return e === 0 && t === 0 ? $o.NONE : Math.abs(t) >= Math.abs(e) ? t > 0 ? $o.DOWN : $o.UP : e > 0 ? $o.RIGHT : $o.LEFT;
}
function FW(e, t, n, r, o, s) {
  if (e)
    switch (t) {
      case $o.LEFT:
        t = $o.RIGHT;
        break;
      case $o.RIGHT:
        t = $o.LEFT;
        break;
    }
  switch (t) {
    case $o.NONE:
      return {
        rowAfter: n,
        rowBefore: n,
        columnAfter: r,
        columnBefore: r
      };
    case $o.LEFT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: s
      };
    case $o.RIGHT:
      return {
        rowAfter: 0,
        rowBefore: 0,
        columnAfter: s,
        columnBefore: 0
      };
    case $o.UP:
      return {
        rowAfter: 0,
        rowBefore: o,
        columnAfter: 0,
        columnBefore: 0
      };
    case $o.DOWN:
      return {
        rowAfter: o,
        rowBefore: 0,
        columnAfter: 0,
        columnBefore: 0
      };
    default:
      throw new Error("unreachable");
  }
}
const Nge = () => {
  var y, w;
  const e = On(), t = Lt(), n = Ze(e, EC), r = Ze(e, BD), o = Ze(e, D5), s = n === 0 && o === 0, a = Ze(e, ohe), c = !a && s, f = !a && n > 0 && r === 0;
  let m = null, g = null;
  return c && (m = "noRowsOverlay"), f && (m = "noResultsOverlay"), a && (m = "loadingOverlay", g = ((w = (y = t.slotProps) == null ? void 0 : y.loadingOverlay) == null ? void 0 : w[s ? "noRowsVariant" : "variant"]) || null), {
    overlayType: m,
    loadingOverlayVariant: g
  };
}, Lge = Lr("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapper",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapper
})(({
  overlayType: e,
  loadingOverlayVariant: t
}) => (
  // Skeleton overlay should flow with the scroll container and not be sticky
  t !== "skeleton" ? {
    position: "sticky",
    // To stay in place while scrolling
    top: "var(--DataGrid-headersTotalHeight)",
    // TODO: take pinned rows into account
    left: 0,
    width: 0,
    // To stay above the content instead of shifting it down
    height: 0,
    // To stay above the content instead of shifting it down
    zIndex: e === "loadingOverlay" ? 5 : 4
    // Should be above pinned columns and detail panel
  } : {}
)), $ge = Lr("div", {
  name: "MuiDataGrid",
  slot: "OverlayWrapperInner",
  shouldForwardProp: (e) => e !== "overlayType" && e !== "loadingOverlayVariant",
  overridesResolver: (e, t) => t.overlayWrapperInner
})({}), jge = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["overlayWrapper"],
    inner: ["overlayWrapperInner"]
  }, zn, t);
};
function zW(e) {
  const t = On(), n = Lt(), r = Ze(t, gi);
  let o = Math.max(r.viewportOuterSize.height - r.topContainerHeight - r.bottomContainerHeight - (r.hasScrollX ? r.scrollbarSize : 0), 0);
  o === 0 && (o = Q5);
  const s = jge(J({}, e, {
    classes: n.classes
  }));
  return /* @__PURE__ */ $.jsx(Lge, J({
    className: et(s.root)
  }, e, {
    children: /* @__PURE__ */ $.jsx($ge, J({
      className: et(s.inner),
      style: {
        height: o,
        width: r.viewportOuterSize.width
      }
    }, e))
  }));
}
process.env.NODE_ENV !== "production" && (zW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: u.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: u.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
process.env.NODE_ENV !== "production" && (BW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  loadingOverlayVariant: u.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  overlayType: u.oneOf(["loadingOverlay", "noResultsOverlay", "noRowsOverlay"])
});
function BW(e) {
  var s, a;
  const {
    overlayType: t
  } = e, n = Lt();
  if (!t)
    return null;
  const r = (s = n.slots) == null ? void 0 : s[t], o = (a = n.slotProps) == null ? void 0 : a[t];
  return /* @__PURE__ */ $.jsx(zW, J({}, e, {
    children: /* @__PURE__ */ $.jsx(r, J({}, o))
  }));
}
const ST = (e) => e.columnMenu;
function Fge() {
  var O;
  const e = $a(), t = Lt(), n = Ze(e, po), r = Ze(e, ame), o = Ze(e, rme), s = Ze(e, dW), a = Ze(e, () => UD(e) === null), c = Ze(e, vme), f = Ze(e, gme), m = Ze(e, a_), g = Ze(e, kC), y = Ze(e, ST), w = Ze(e, ml), C = Ze(e, ige), T = !(c === null && s === null && a), E = e.current.columnHeadersContainerRef;
  return /* @__PURE__ */ $.jsx(t.slots.columnHeaders, J({
    ref: E,
    visibleColumns: n,
    filterColumnLookup: r,
    sortColumnLookup: o,
    columnHeaderTabIndexState: s,
    columnGroupHeaderTabIndexState: c,
    columnHeaderFocus: f,
    columnGroupHeaderFocus: m,
    headerGroupingMaxDepth: g,
    columnMenuState: y,
    columnVisibility: w,
    columnGroupsHeaderStructure: C,
    hasOtherElementInTabSequence: T
  }, (O = t.slotProps) == null ? void 0 : O.columnHeaders));
}
const zge = Rd(Fge), QD = /* @__PURE__ */ x.createContext(void 0);
process.env.NODE_ENV !== "production" && (QD.displayName = "GridConfigurationContext");
const JD = () => {
  const e = x.useContext(QD);
  if (e === void 0)
    throw new Error(["MUI X: Could not find the Data Grid configuration context.", "It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.", "This can also happen if you are bundling multiple versions of the Data Grid."].join(`
`));
  return e;
}, Bge = Lr("div")({
  position: "absolute",
  top: "var(--DataGrid-headersTotalHeight)",
  left: 0,
  width: "calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))"
}), Hge = Lr("div", {
  name: "MuiDataGrid",
  slot: "Main",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.main, n.hasPinnedRight && t["main--hasPinnedRight"], n.loadingOverlayVariant === "skeleton" && t["main--hasSkeletonLoadingOverlay"]];
  }
})({
  flexGrow: 1,
  position: "relative",
  overflow: "hidden",
  display: "flex",
  flexDirection: "column"
}), Vge = Yn((e, t) => {
  var a;
  const {
    ownerState: n
  } = e, r = Lt(), s = JD().hooks.useGridAriaAttributes();
  return /* @__PURE__ */ $.jsxs(Hge, J({
    ownerState: n,
    className: e.className,
    tabIndex: -1
  }, s, (a = r.slotProps) == null ? void 0 : a.main, {
    ref: t,
    children: [/* @__PURE__ */ $.jsx(Bge, {
      role: "presentation",
      "data-id": "gridPanelAnchor"
    }), e.children]
  }));
}), Uge = () => mt({
  root: ["topContainer"]
}, zn, {}), Wge = Lr("div")({
  position: "sticky",
  zIndex: 40,
  top: 0
});
function Gge(e) {
  const t = Uge();
  return /* @__PURE__ */ $.jsx(Wge, J({}, e, {
    className: et(t.root, se["container--top"]),
    role: "presentation"
  }));
}
const qge = () => mt({
  root: ["bottomContainer"]
}, zn, {}), Kge = Lr("div")({
  position: "sticky",
  zIndex: 40,
  bottom: "calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))"
});
function Yge(e) {
  const t = qge();
  return /* @__PURE__ */ $.jsx(Kge, J({}, e, {
    className: et(t.root, se["container--bottom"]),
    role: "presentation"
  }));
}
const Xge = (e, t) => {
  const {
    classes: n
  } = e;
  return mt({
    root: ["virtualScrollerContent", t && "virtualScrollerContent--overflowed"]
  }, zn, n);
}, Qge = Lr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerContent",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScrollerContent, n.overflowedContent && t["virtualScrollerContent--overflowed"]];
  }
})({}), Jge = Yn(function(t, n) {
  var c;
  const r = Lt(), o = !r.autoHeight && ((c = t.style) == null ? void 0 : c.minHeight) === "auto", s = Xge(r, o), a = {
    classes: r.classes,
    overflowedContent: o
  };
  return /* @__PURE__ */ $.jsx(Qge, J({}, t, {
    ownerState: a,
    className: et(s.root, t.className),
    ref: n
  }));
}), Zge = Lr("div")({
  display: "flex",
  flexDirection: "row",
  width: "var(--DataGrid-rowWidth)",
  boxSizing: "border-box"
}), HW = Lr("div")({
  position: "sticky",
  height: "100%",
  boxSizing: "border-box",
  borderTop: "1px solid var(--rowBorderColor)",
  backgroundColor: "var(--DataGrid-pinnedBackground)"
}), eve = Lr(HW)({
  left: 0,
  borderRight: "1px solid var(--rowBorderColor)"
}), tve = Lr(HW)({
  right: 0,
  borderLeft: "1px solid var(--rowBorderColor)"
}), nve = Lr("div")({
  flexGrow: 1,
  borderTop: "1px solid var(--rowBorderColor)"
});
function rve({
  rowsLength: e
}) {
  const t = On(), {
    viewportOuterSize: n,
    minimumSize: r,
    hasScrollX: o,
    hasScrollY: s,
    scrollbarSize: a,
    leftPinnedWidth: c,
    rightPinnedWidth: f
  } = Ze(t, gi), m = o ? a : 0, g = n.height - r.height > 0;
  return m === 0 && !g ? null : /* @__PURE__ */ $.jsxs(Zge, {
    className: se.filler,
    role: "presentation",
    style: {
      height: m,
      "--rowBorderColor": e === 0 ? "transparent" : "var(--DataGrid-rowBorderColor)"
    },
    children: [c > 0 && /* @__PURE__ */ $.jsx(eve, {
      className: se["filler--pinnedLeft"],
      style: {
        width: c
      }
    }), /* @__PURE__ */ $.jsx(nve, {}), f > 0 && /* @__PURE__ */ $.jsx(tve, {
      className: se["filler--pinnedRight"],
      style: {
        width: f + (s ? a : 0)
      }
    })]
  });
}
const ove = Rd(rve), ive = ["className"], sve = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["virtualScrollerRenderZone"]
  }, zn, t);
}, ave = Lr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScrollerRenderZone",
  overridesResolver: (e, t) => t.virtualScrollerRenderZone
})({
  position: "absolute",
  display: "flex",
  // Prevents margin collapsing when using `getRowSpacing`
  flexDirection: "column"
}), lve = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, ive), s = On(), a = Lt(), c = sve(a), f = Ze(s, () => {
    const m = PC(s);
    return Ey(s.current.state).positions[m.firstRowIndex] ?? 0;
  });
  return /* @__PURE__ */ $.jsx(ave, J({
    className: et(c.root, r),
    ownerState: a,
    style: {
      transform: `translate3d(0, ${f}px, 0)`
    }
  }, o, {
    ref: n
  }));
}), uve = {
  includeHeaders: !0,
  includeOutliers: !1,
  outliersFactor: 1.5,
  expand: !1,
  disableColumnVirtualization: !0
}, mi = (e) => e.editRows, VW = xC(mi, (e, {
  rowId: t,
  editMode: n
}) => n === wc.Row && !!e[t]), cve = xC(mi, (e, {
  rowId: t,
  field: n
}) => {
  var r;
  return ((r = e[t]) == null ? void 0 : r[n]) ?? null;
}), JS = (e) => e.preferencePanel, dve = xC(JS, (e, t) => !!(e.open && e.labelId === t));
var dm = /* @__PURE__ */ function(e) {
  return e.filters = "filters", e.columns = "columns", e;
}(dm || {});
const fve = (e, t) => {
  const {
    classes: n
  } = e, r = {
    root: ["scrollbar", `scrollbar--${t}`],
    content: ["scrollbarContent"]
  };
  return mt(r, zn, n);
}, UW = Lr("div")({
  position: "absolute",
  display: "inline-block",
  zIndex: 60,
  "&:hover": {
    zIndex: 70
  },
  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider
  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need
  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we
  // don't have a method to find the required size for scrollbars on those platforms.
  "--size": "calc(max(var(--DataGrid-scrollbarSize), 14px))"
}), pve = Lr(UW)({
  width: "var(--size)",
  height: "calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))",
  overflowY: "auto",
  overflowX: "hidden",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    width: "var(--size)"
  },
  top: "var(--DataGrid-topContainerHeight)",
  right: "0px"
}), hve = Lr(UW)({
  width: "100%",
  height: "var(--size)",
  overflowY: "hidden",
  overflowX: "auto",
  // Disable focus-visible style, it's a scrollbar.
  outline: 0,
  "& > div": {
    height: "var(--size)"
  },
  bottom: "0px"
}), lB = Yn(function(t, n) {
  const r = $a(), o = Lt(), s = x.useRef(!1), a = x.useRef(0), c = x.useRef(null), f = x.useRef(null), m = fve(o, t.position), g = Ze(r, gi), y = t.position === "vertical" ? "height" : "width", w = t.position === "vertical" ? "scrollTop" : "scrollLeft", C = t.position === "vertical" ? "top" : "left", T = t.position === "vertical" ? g.hasScrollX : g.hasScrollY, E = g.minimumSize[y] + (T ? g.scrollbarSize : 0), k = (t.position === "vertical" ? g.viewportInnerSize.height : g.viewportOuterSize.width) * (E / g.viewportOuterSize[y]), I = jn(() => {
    const P = c.current, F = t.scrollPosition.current;
    if (!P || F[C] === a.current)
      return;
    if (a.current = F[C], s.current) {
      s.current = !1;
      return;
    }
    s.current = !0;
    const H = F[C] / E;
    P[w] = H * k;
  }), M = jn(() => {
    const P = r.current.virtualScrollerRef.current, F = c.current;
    if (!F)
      return;
    if (s.current) {
      s.current = !1;
      return;
    }
    s.current = !0;
    const H = F[w] / k;
    P[w] = H * E;
  });
  LI(() => {
    const P = r.current.virtualScrollerRef.current, F = c.current, H = {
      passive: !0
    };
    return P.addEventListener("scroll", I, H), F.addEventListener("scroll", M, H), () => {
      P.removeEventListener("scroll", I, H), F.removeEventListener("scroll", M, H);
    };
  }), x.useEffect(() => {
    f.current.style.setProperty(y, `${k}px`);
  }, [k, y]);
  const N = t.position === "vertical" ? pve : hve;
  return /* @__PURE__ */ $.jsx(N, {
    ref: Pr(n, c),
    className: m.root,
    style: t.position === "vertical" && o.unstable_listView ? {
      height: "100%",
      top: 0
    } : void 0,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: (P) => {
      P.target.blur();
    },
    children: /* @__PURE__ */ $.jsx("div", {
      ref: f,
      className: m.content
    })
  });
}), mve = (e) => {
  const {
    classes: t,
    hasScrollX: n,
    hasPinnedRight: r,
    loadingOverlayVariant: o
  } = e;
  return mt({
    root: ["main", r && "main--hasPinnedRight", o === "skeleton" && "main--hasSkeletonLoadingOverlay"],
    scroller: ["virtualScroller", n && "virtualScroller--hasScrollX"]
  }, zn, t);
}, gve = Lr("div", {
  name: "MuiDataGrid",
  slot: "VirtualScroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.virtualScroller, n.hasScrollX && t["virtualScroller--hasScrollX"]];
  }
})({
  position: "relative",
  height: "100%",
  flexGrow: 1,
  overflow: "scroll",
  scrollbarWidth: "none",
  display: "flex",
  flexDirection: "column",
  "&::-webkit-scrollbar": {
    display: "none"
    /* Safari and Chrome */
  },
  "@media print": {
    overflow: "hidden"
  },
  // See https://github.com/mui/mui-x/issues/10547
  zIndex: 0
}), vve = (e) => e.dimensions.rightPinnedWidth > 0;
function yve(e) {
  const t = On(), n = Lt(), r = Ze(t, zpe), o = Ze(t, Fpe), s = Ze(t, vve), a = Ze(t, Vpe), c = Nge(), f = {
    classes: n.classes,
    hasScrollX: o,
    hasPinnedRight: s,
    loadingOverlayVariant: c.loadingOverlayVariant
  }, m = mve(f), g = Pge(), {
    getContainerProps: y,
    getScrollerProps: w,
    getContentProps: C,
    getRenderZoneProps: T,
    getScrollbarVerticalProps: E,
    getScrollbarHorizontalProps: O,
    getRows: k,
    getScrollAreaProps: I
  } = g, M = k();
  return /* @__PURE__ */ $.jsxs(Vge, J({
    className: m.root
  }, y(), {
    ownerState: f,
    children: [/* @__PURE__ */ $.jsx(nT, J({
      scrollDirection: "left"
    }, I())), /* @__PURE__ */ $.jsx(nT, J({
      scrollDirection: "right"
    }, I())), /* @__PURE__ */ $.jsx(nT, J({
      scrollDirection: "up"
    }, I())), /* @__PURE__ */ $.jsx(nT, J({
      scrollDirection: "down"
    }, I())), /* @__PURE__ */ $.jsxs(gve, J({
      className: m.scroller
    }, w(), {
      ownerState: f,
      children: [/* @__PURE__ */ $.jsxs(Gge, {
        children: [!n.unstable_listView && /* @__PURE__ */ $.jsx(zge, {}), /* @__PURE__ */ $.jsx(n.slots.pinnedRows, {
          position: "top",
          virtualScroller: g
        })]
      }), /* @__PURE__ */ $.jsx(BW, J({}, c)), /* @__PURE__ */ $.jsx(Jge, J({}, C(), {
        children: /* @__PURE__ */ $.jsxs(lve, J({}, T(), {
          children: [M, /* @__PURE__ */ $.jsx(n.slots.detailPanels, {
            virtualScroller: g
          })]
        }))
      })), a && /* @__PURE__ */ $.jsx(ove, {
        rowsLength: M.length
      }), /* @__PURE__ */ $.jsx(Yge, {
        children: /* @__PURE__ */ $.jsx(n.slots.pinnedRows, {
          position: "bottom",
          virtualScroller: g
        })
      })]
    })), o && !n.unstable_listView && /* @__PURE__ */ $.jsx(lB, J({
      position: "horizontal"
    }, O())), r && /* @__PURE__ */ $.jsx(lB, J({
      position: "vertical"
    }, E())), e.children]
  }));
}
function bve() {
  var t;
  const e = Lt();
  return e.hideFooter ? null : /* @__PURE__ */ $.jsx(e.slots.footer, J(
    {},
    (t = e.slotProps) == null ? void 0 : t.footer
    /* FIXME: typing error */
  ));
}
let jP;
function wve() {
  return jP === void 0 && document.createElement("div").focus({
    get preventScroll() {
      return jP = !0, !1;
    }
  }), jP;
}
function Sve({
  defaultSlots: e,
  slots: t
}) {
  const n = t;
  if (!n || Object.keys(n).length === 0)
    return e;
  const r = J({}, e);
  return Object.keys(n).forEach((o) => {
    const s = o;
    n[s] !== void 0 && (r[s] = n[s]);
  }), r;
}
function Cve(e) {
  var o;
  if ((o = e.slotProps) != null && o.root)
    return e;
  const t = Object.keys(e);
  if (!t.some((s) => s.startsWith("aria-") || s.startsWith("data-")))
    return e;
  const n = {}, r = e.forwardedProps ?? {};
  for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    a.startsWith("aria-") || a.startsWith("data-") ? r[a] = e[a] : n[a] = e[a];
  }
  return n.forwardedProps = r, n;
}
function xve(e) {
  return x.useMemo(() => Cve(e), [e]);
}
const Eve = [(e) => e.autoPageSize && e.autoHeight && ["MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.", "You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.", "", "Please remove one of these two props."].join(`
`) || void 0, (e) => e.paginationMode === "client" && e.paginationMeta != null && ['MUI X: Usage of the `paginationMeta` prop with client-side pagination (`paginationMode="client"`) has no effect.', '`paginationMeta` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.signature === Da.DataGrid && e.paginationMode === "client" && $5(e.rowCount) && ['MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode="client"`) has no effect.', '`rowCount` is only meant to be used with `paginationMode="server"`.'].join(`
`) || void 0, (e) => e.paginationMode === "server" && e.rowCount == null && !e.unstable_dataSource && ["MUI X: The `rowCount` prop must be passed using `paginationMode='server'`", "For more detail, see http://mui.com/components/data-grid/pagination/#index-based-pagination"].join(`
`) || void 0];
function Tve(e, t) {
  t.forEach((n) => {
    const r = n(e);
    r && yl(r, "error");
  });
}
const _ve = (e) => {
  const t = e.match(/^__row_group_by_columns_group_(.*)__$/);
  return t ? t[1] : null;
}, Ove = (e) => e === Z5 || _ve(e) !== null, WW = (e, t) => {
  if (e)
    if (t) {
      if (e === Nn.LEFT)
        return "right";
      if (e === Nn.RIGHT)
        return "left";
    } else {
      if (e === Nn.LEFT)
        return "left";
      if (e === Nn.RIGHT)
        return "right";
    }
};
function TO(e, t, n, r) {
  const o = WW(n, t);
  return !o || r === void 0 || (e[o] = r), e;
}
const Rve = ["column", "row", "rowId", "rowNode", "align", "children", "colIndex", "width", "className", "style", "colSpan", "disableDragEvents", "isNotVisible", "pinnedOffset", "pinnedPosition", "showRightBorder", "showLeftBorder", "onClick", "onDoubleClick", "onMouseDown", "onMouseUp", "onMouseOver", "onKeyDown", "onKeyUp", "onDragEnter", "onDragOver"], kve = ["changeReason", "unstable_updateValueOnRender"];
Nn.LEFT + "", Df.LEFT, Nn.RIGHT + "", Df.RIGHT, Nn.NONE + "", Nn.VIRTUAL + "";
const Pve = (e) => {
  const {
    align: t,
    showLeftBorder: n,
    showRightBorder: r,
    pinnedPosition: o,
    isEditable: s,
    isSelected: a,
    isSelectionMode: c,
    classes: f
  } = e, m = {
    root: ["cell", `cell--text${He(t)}`, a && "selected", s && "cell--editable", n && "cell--withLeftBorder", r && "cell--withRightBorder", o === Nn.LEFT && "cell--pinnedLeft", o === Nn.RIGHT && "cell--pinnedRight", c && !s && "cell--selectionMode"]
  };
  return mt(m, zn, f);
};
let uB = !1;
const GW = Yn(function(t, n) {
  var Ie, pt, yt, zt;
  const {
    column: r,
    row: o,
    rowId: s,
    rowNode: a,
    align: c,
    colIndex: f,
    width: m,
    className: g,
    style: y,
    colSpan: w,
    disableDragEvents: C,
    isNotVisible: T,
    pinnedOffset: E,
    pinnedPosition: O,
    showRightBorder: k,
    showLeftBorder: I,
    onClick: M,
    onDoubleClick: N,
    onMouseDown: P,
    onMouseUp: F,
    onMouseOver: H,
    onKeyDown: U,
    onKeyUp: z,
    onDragEnter: A,
    onDragOver: q
  } = t, W = qt(t, Rve), Y = $a(), ee = Lt(), G = xc(), K = r.field, X = YS(Y, cve, {
    rowId: s,
    field: K
  }), re = JD().hooks.useCellAggregationResult(s, K), Q = X ? cr.Edit : cr.View, B = Y.current.getCellParamsForRow(s, K, o, {
    colDef: r,
    cellMode: Q,
    rowNode: a,
    tabIndex: Ze(Y, () => {
      const bt = UD(Y);
      return bt && bt.field === K && bt.id === s ? 0 : -1;
    }),
    hasFocus: Ze(Y, () => {
      const bt = Ps(Y);
      return (bt == null ? void 0 : bt.id) === s && bt.field === K;
    })
  });
  B.api = Y.current, re && (B.value = re.value, B.formattedValue = r.valueFormatter ? r.valueFormatter(B.value, o, r, Y) : B.value);
  const ie = Ze(Y, () => Y.current.unstable_applyPipeProcessors("isCellSelected", !1, {
    id: s,
    field: K
  })), de = Ze(Y, LW), ue = Ze(Y, Tge), {
    hasFocus: he,
    isEditable: ge = !1,
    value: fe
  } = B, pe = r.type === "actions" && ((Ie = r.getActions) == null ? void 0 : Ie.call(r, Y.current.getRowParams(s)).some((bt) => !bt.props.disabled)), be = (Q === "view" || !ge) && !pe ? B.tabIndex : -1, {
    classes: we,
    getCellClassName: _e
  } = ee, Ce = [Ze(Y, () => Y.current.unstable_applyPipeProcessors("cellClassName", [], {
    id: s,
    field: K
  }).filter(Boolean).join(" "))];
  r.cellClassName && Ce.push(typeof r.cellClassName == "function" ? r.cellClassName(B) : r.cellClassName), r.display === "flex" && Ce.push(se["cell--flex"]), _e && Ce.push(_e(B));
  const Ne = B.formattedValue ?? fe, Be = x.useRef(null), tt = Pr(n, Be), $e = x.useRef(null), rt = ee.cellSelection ?? !1, ot = {
    align: c,
    showLeftBorder: I,
    showRightBorder: k,
    isEditable: ge,
    classes: ee.classes,
    pinnedPosition: O,
    isSelected: ie,
    isSelectionMode: rt
  }, wt = Pve(ot), gt = x.useCallback((bt) => (We) => {
    const St = Y.current.getCellParams(s, K || "");
    Y.current.publishEvent(bt, St, We), F && F(We);
  }, [Y, K, F, s]), nt = x.useCallback((bt) => (We) => {
    const St = Y.current.getCellParams(s, K || "");
    Y.current.publishEvent(bt, St, We), P && P(We);
  }, [Y, K, P, s]), Ft = x.useCallback((bt, We) => (St) => {
    if (!Y.current.getRow(s))
      return;
    const $t = Y.current.getCellParams(s, K || "");
    Y.current.publishEvent(bt, $t, St), We && We(St);
  }, [Y, K, s]), ut = ((pt = de[s]) == null ? void 0 : pt[K]) ?? !1, Et = ((yt = ue[s]) == null ? void 0 : yt[K]) ?? 1, Tt = x.useMemo(() => {
    if (T)
      return {
        padding: 0,
        opacity: 0,
        width: 0,
        height: 0,
        border: 0
      };
    const bt = TO(J({
      "--width": `${m}px`
    }, y), G, O, E), We = O === Nn.LEFT, St = O === Nn.RIGHT;
    return Et > 1 && (bt.height = `calc(var(--height) * ${Et})`, bt.zIndex = 10, (We || St) && (bt.zIndex = 40)), bt;
  }, [m, T, y, E, O, G, Et]);
  if (x.useEffect(() => {
    if (!he || Q === cr.Edit)
      return;
    const bt = ho(Y.current.rootElementRef.current);
    if (Be.current && !Be.current.contains(bt.activeElement)) {
      const We = Be.current.querySelector('[tabindex="0"]'), St = $e.current || We || Be.current;
      if (wve())
        St.focus({
          preventScroll: !0
        });
      else {
        const $t = Y.current.getScrollPosition();
        St.focus(), Y.current.scroll($t);
      }
    }
  }, [he, Q, Y]), ut)
    return /* @__PURE__ */ $.jsx("div", {
      "data-colindex": f,
      role: "presentation",
      style: J({
        width: "var(--width)"
      }, Tt)
    });
  let At = W.onFocus;
  process.env.NODE_ENV === "test" && ((zt = ee.experimentalFeatures) != null && zt.warnIfFocusStateIsNotSynced) && (At = (bt) => {
    const We = Ps(Y);
    if ((We == null ? void 0 : We.id) === s && We.field === K) {
      typeof W.onFocus == "function" && W.onFocus(bt);
      return;
    }
    uB || (console.warn([`MUI X: The cell with id=${s} and field=${K} received focus.`, `According to the state, the focus should be at id=${We == null ? void 0 : We.id}, field=${We == null ? void 0 : We.field}.`, "Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.", "Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state."].join(`
`)), uB = !0);
  });
  let vt, Xe;
  if (X === null && r.renderCell && (vt = r.renderCell(B)), X !== null && r.renderEditCell) {
    const bt = Y.current.getRowWithUpdatedValues(s, r.field), We = qt(X, kve), St = r.valueFormatter ? r.valueFormatter(X.value, bt, r, Y) : B.formattedValue, $t = J({}, B, {
      row: bt,
      formattedValue: St
    }, We);
    vt = r.renderEditCell($t), Ce.push(se["cell--editing"]), Ce.push(we == null ? void 0 : we["cell--editing"]);
  }
  if (vt === void 0) {
    const bt = Ne == null ? void 0 : Ne.toString();
    vt = bt, Xe = bt;
  }
  /* @__PURE__ */ x.isValidElement(vt) && pe && (vt = /* @__PURE__ */ x.cloneElement(vt, {
    focusElementRef: $e
  }));
  const Oe = C ? null : {
    onDragEnter: Ft("cellDragEnter", A),
    onDragOver: Ft("cellDragOver", q)
  };
  return /* @__PURE__ */ $.jsx("div", J({
    className: et(wt.root, Ce, g),
    role: "gridcell",
    "data-field": K,
    "data-colindex": f,
    "aria-colindex": f + 1,
    "aria-colspan": w,
    "aria-rowspan": Et,
    style: Tt,
    title: Xe,
    tabIndex: be,
    onClick: Ft("cellClick", M),
    onDoubleClick: Ft("cellDoubleClick", N),
    onMouseOver: Ft("cellMouseOver", H),
    onMouseDown: nt("cellMouseDown"),
    onMouseUp: gt("cellMouseUp"),
    onKeyDown: Ft("cellKeyDown", U),
    onKeyUp: Ft("cellKeyUp", z)
  }, Oe, W, {
    onFocus: At,
    ref: tt,
    children: vt
  }));
});
process.env.NODE_ENV !== "production" && (GW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: u.oneOf(["center", "left", "right"]).isRequired,
  colIndex: u.number.isRequired,
  colSpan: u.number,
  column: u.object.isRequired,
  disableDragEvents: u.bool,
  isNotVisible: u.bool.isRequired,
  pinnedOffset: u.number,
  pinnedPosition: u.oneOf([0, 1, 2, 3]).isRequired,
  row: u.object.isRequired,
  rowId: u.oneOfType([u.number, u.string]).isRequired,
  rowNode: u.object.isRequired,
  showLeftBorder: u.bool.isRequired,
  showRightBorder: u.bool.isRequired,
  width: u.number.isRequired
});
const Mve = Rd(GW), Ive = ["field", "type", "align", "width", "height", "empty", "style", "className"], cB = "1.3em", Dve = "1.2em", dB = [40, 80], Ave = {
  number: [40, 60],
  string: [40, 80],
  date: [40, 60],
  dateTime: [60, 80],
  singleSelect: [40, 80]
}, Nve = (e) => {
  const {
    align: t,
    classes: n,
    empty: r
  } = e, o = {
    root: ["cell", "cellSkeleton", `cell--text${t ? He(t) : "Left"}`, r && "cellEmpty"]
  };
  return mt(o, zn, n);
}, Lve = bhe(12345);
function qW(e) {
  const {
    field: t,
    type: n,
    align: r,
    width: o,
    height: s,
    empty: a = !1,
    style: c,
    className: f
  } = e, m = qt(e, Ive), y = {
    classes: Lt().classes,
    align: r,
    empty: a
  }, w = Nve(y), C = x.useMemo(() => {
    if (n === "boolean" || n === "actions")
      return {
        variant: "circular",
        width: cB,
        height: cB
      };
    const [E, O] = n ? Ave[n] ?? dB : dB;
    return {
      variant: "text",
      width: `${Math.round(Lve(E, O))}%`,
      height: Dve
    };
  }, [n]);
  return /* @__PURE__ */ $.jsx("div", J({
    "data-field": t,
    className: et(w.root, f),
    style: J({
      height: s,
      maxWidth: o,
      minWidth: o
    }, c)
  }, m, {
    children: !a && /* @__PURE__ */ $.jsx(GV, J({}, C))
  }));
}
process.env.NODE_ENV !== "production" && (qW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  align: u.string,
  /**
   * If `true`, the cell will not display the skeleton but still reserve the cell space.
   * @default false
   */
  empty: u.bool,
  field: u.string,
  height: u.oneOfType([u.oneOf(["auto"]), u.number]),
  type: u.oneOf(["actions", "boolean", "custom", "date", "dateTime", "number", "singleSelect", "string"]),
  width: u.oneOfType([u.number, u.string])
});
const $ve = Rd(qW);
function jve(e) {
  return e.vars ? e.vars.palette.TableCell.border : e.palette.mode === "light" ? Qf(An(e.palette.divider, 1), 0.88) : Xf(An(e.palette.divider, 1), 0.68);
}
const Fve = 10, rT = -5, yv = 1, fB = {
  width: 3,
  rx: 1.5,
  x: 10.5
}, zve = "/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */", Bve = (e) => e.dimensions.hasScrollX && (!e.dimensions.hasScrollY || e.dimensions.scrollbarSize === 0), Hve = Ue("div", {
  name: "MuiDataGrid",
  slot: "Root",
  overridesResolver: (e, t) => [
    // Root overrides
    t.root,
    {
      [`&.${se.autoHeight}`]: t.autoHeight
    },
    {
      [`&.${se.autosizing}`]: t.autosizing
    },
    {
      [`&.${se["root--densityStandard"]}`]: t["root--densityStandard"]
    },
    {
      [`&.${se["root--densityComfortable"]}`]: t["root--densityComfortable"]
    },
    {
      [`&.${se["root--densityCompact"]}`]: t["root--densityCompact"]
    },
    {
      [`&.${se["root--disableUserSelection"]}`]: t["root--disableUserSelection"]
    },
    {
      [`&.${se["root--noToolbar"]}`]: t["root--noToolbar"]
    },
    {
      [`&.${se.withVerticalBorder}`]: t.withVerticalBorder
    },
    // Child element overrides
    // - Only declare overrides here for class names that are not applied to `styled` components.
    // - For `styled` components, declare overrides in the component itself.
    {
      [`& .${se.actionsCell}`]: t.actionsCell
    },
    {
      [`& .${se.booleanCell}`]: t.booleanCell
    },
    {
      [`& .${se.cell}`]: t.cell
    },
    {
      [`& .${se["cell--editable"]}`]: t["cell--editable"]
    },
    {
      [`& .${se["cell--editing"]}`]: t["cell--editing"]
    },
    {
      [`& .${se["cell--flex"]}`]: t["cell--flex"]
    },
    {
      [`& .${se["cell--pinnedLeft"]}`]: t["cell--pinnedLeft"]
    },
    {
      [`& .${se["cell--pinnedRight"]}`]: t["cell--pinnedRight"]
    },
    {
      [`& .${se["cell--rangeBottom"]}`]: t["cell--rangeBottom"]
    },
    {
      [`& .${se["cell--rangeLeft"]}`]: t["cell--rangeLeft"]
    },
    {
      [`& .${se["cell--rangeRight"]}`]: t["cell--rangeRight"]
    },
    {
      [`& .${se["cell--rangeTop"]}`]: t["cell--rangeTop"]
    },
    {
      [`& .${se["cell--selectionMode"]}`]: t["cell--selectionMode"]
    },
    {
      [`& .${se["cell--textCenter"]}`]: t["cell--textCenter"]
    },
    {
      [`& .${se["cell--textLeft"]}`]: t["cell--textLeft"]
    },
    {
      [`& .${se["cell--textRight"]}`]: t["cell--textRight"]
    },
    {
      [`& .${se["cell--withLeftBorder"]}`]: t["cell--withLeftBorder"]
    },
    {
      [`& .${se["cell--withRightBorder"]}`]: t["cell--withRightBorder"]
    },
    {
      [`& .${se.cellCheckbox}`]: t.cellCheckbox
    },
    {
      [`& .${se.cellEmpty}`]: t.cellEmpty
    },
    {
      [`& .${se.cellOffsetLeft}`]: t.cellOffsetLeft
    },
    {
      [`& .${se.cellSkeleton}`]: t.cellSkeleton
    },
    {
      [`& .${se.checkboxInput}`]: t.checkboxInput
    },
    {
      [`& .${se.columnHeader}`]: t.columnHeader
    },
    {
      [`& .${se["columnHeader--alignCenter"]}`]: t["columnHeader--alignCenter"]
    },
    {
      [`& .${se["columnHeader--alignLeft"]}`]: t["columnHeader--alignLeft"]
    },
    {
      [`& .${se["columnHeader--alignRight"]}`]: t["columnHeader--alignRight"]
    },
    {
      [`& .${se["columnHeader--dragging"]}`]: t["columnHeader--dragging"]
    },
    {
      [`& .${se["columnHeader--emptyGroup"]}`]: t["columnHeader--emptyGroup"]
    },
    {
      [`& .${se["columnHeader--filledGroup"]}`]: t["columnHeader--filledGroup"]
    },
    {
      [`& .${se["columnHeader--filtered"]}`]: t["columnHeader--filtered"]
    },
    {
      [`& .${se["columnHeader--last"]}`]: t["columnHeader--last"]
    },
    {
      [`& .${se["columnHeader--lastUnpinned"]}`]: t["columnHeader--lastUnpinned"]
    },
    {
      [`& .${se["columnHeader--moving"]}`]: t["columnHeader--moving"]
    },
    {
      [`& .${se["columnHeader--numeric"]}`]: t["columnHeader--numeric"]
    },
    {
      [`& .${se["columnHeader--pinnedLeft"]}`]: t["columnHeader--pinnedLeft"]
    },
    {
      [`& .${se["columnHeader--pinnedRight"]}`]: t["columnHeader--pinnedRight"]
    },
    {
      [`& .${se["columnHeader--siblingFocused"]}`]: t["columnHeader--siblingFocused"]
    },
    {
      [`& .${se["columnHeader--sortable"]}`]: t["columnHeader--sortable"]
    },
    {
      [`& .${se["columnHeader--sorted"]}`]: t["columnHeader--sorted"]
    },
    {
      [`& .${se["columnHeader--withLeftBorder"]}`]: t["columnHeader--withLeftBorder"]
    },
    {
      [`& .${se["columnHeader--withRightBorder"]}`]: t["columnHeader--withRightBorder"]
    },
    {
      [`& .${se.columnHeaderCheckbox}`]: t.columnHeaderCheckbox
    },
    {
      [`& .${se.columnHeaderDraggableContainer}`]: t.columnHeaderDraggableContainer
    },
    {
      [`& .${se.columnHeaderTitleContainer}`]: t.columnHeaderTitleContainer
    },
    {
      [`& .${se.columnHeaderTitleContainerContent}`]: t.columnHeaderTitleContainerContent
    },
    {
      [`& .${se.columnSeparator}`]: t.columnSeparator
    },
    {
      [`& .${se["columnSeparator--resizable"]}`]: t["columnSeparator--resizable"]
    },
    {
      [`& .${se["columnSeparator--resizing"]}`]: t["columnSeparator--resizing"]
    },
    {
      [`& .${se["columnSeparator--sideLeft"]}`]: t["columnSeparator--sideLeft"]
    },
    {
      [`& .${se["columnSeparator--sideRight"]}`]: t["columnSeparator--sideRight"]
    },
    {
      [`& .${se["container--bottom"]}`]: t["container--bottom"]
    },
    {
      [`& .${se["container--top"]}`]: t["container--top"]
    },
    {
      [`& .${se.detailPanelToggleCell}`]: t.detailPanelToggleCell
    },
    {
      [`& .${se["detailPanelToggleCell--expanded"]}`]: t["detailPanelToggleCell--expanded"]
    },
    {
      [`& .${se.editBooleanCell}`]: t.editBooleanCell
    },
    {
      [`& .${se.filterIcon}`]: t.filterIcon
    },
    {
      [`& .${se["filler--borderBottom"]}`]: t["filler--borderBottom"]
    },
    {
      [`& .${se["filler--pinnedLeft"]}`]: t["filler--pinnedLeft"]
    },
    {
      [`& .${se["filler--pinnedRight"]}`]: t["filler--pinnedRight"]
    },
    {
      [`& .${se.groupingCriteriaCell}`]: t.groupingCriteriaCell
    },
    {
      [`& .${se.groupingCriteriaCellLoadingContainer}`]: t.groupingCriteriaCellLoadingContainer
    },
    {
      [`& .${se.groupingCriteriaCellToggle}`]: t.groupingCriteriaCellToggle
    },
    {
      [`& .${se.headerFilterRow}`]: t.headerFilterRow
    },
    {
      [`& .${se.iconSeparator}`]: t.iconSeparator
    },
    {
      [`& .${se.menuIcon}`]: t.menuIcon
    },
    {
      [`& .${se.menuIconButton}`]: t.menuIconButton
    },
    {
      [`& .${se.menuList}`]: t.menuList
    },
    {
      [`& .${se.menuOpen}`]: t.menuOpen
    },
    {
      [`& .${se.overlayWrapperInner}`]: t.overlayWrapperInner
    },
    {
      [`& .${se.pinnedRows}`]: t.pinnedRows
    },
    {
      [`& .${se["pinnedRows--bottom"]}`]: t["pinnedRows--bottom"]
    },
    {
      [`& .${se["pinnedRows--top"]}`]: t["pinnedRows--top"]
    },
    {
      [`& .${se.row}`]: t.row
    },
    {
      [`& .${se["row--borderBottom"]}`]: t["row--borderBottom"]
    },
    {
      [`& .${se["row--detailPanelExpanded"]}`]: t["row--detailPanelExpanded"]
    },
    {
      [`& .${se["row--dragging"]}`]: t["row--dragging"]
    },
    {
      [`& .${se["row--dynamicHeight"]}`]: t["row--dynamicHeight"]
    },
    {
      [`& .${se["row--editable"]}`]: t["row--editable"]
    },
    {
      [`& .${se["row--editing"]}`]: t["row--editing"]
    },
    {
      [`& .${se["row--firstVisible"]}`]: t["row--firstVisible"]
    },
    {
      [`& .${se["row--lastVisible"]}`]: t["row--lastVisible"]
    },
    {
      [`& .${se.rowReorderCell}`]: t.rowReorderCell
    },
    {
      [`& .${se["rowReorderCell--draggable"]}`]: t["rowReorderCell--draggable"]
    },
    {
      [`& .${se.rowReorderCellContainer}`]: t.rowReorderCellContainer
    },
    {
      [`& .${se.rowReorderCellPlaceholder}`]: t.rowReorderCellPlaceholder
    },
    {
      [`& .${se.rowSkeleton}`]: t.rowSkeleton
    },
    {
      [`& .${se.scrollbar}`]: t.scrollbar
    },
    {
      [`& .${se["scrollbar--horizontal"]}`]: t["scrollbar--horizontal"]
    },
    {
      [`& .${se["scrollbar--vertical"]}`]: t["scrollbar--vertical"]
    },
    {
      [`& .${se.scrollbarFiller}`]: t.scrollbarFiller
    },
    {
      [`& .${se["scrollbarFiller--borderBottom"]}`]: t["scrollbarFiller--borderBottom"]
    },
    {
      [`& .${se["scrollbarFiller--borderTop"]}`]: t["scrollbarFiller--borderTop"]
    },
    {
      [`& .${se["scrollbarFiller--header"]}`]: t["scrollbarFiller--header"]
    },
    {
      [`& .${se["scrollbarFiller--pinnedRight"]}`]: t["scrollbarFiller--pinnedRight"]
    },
    {
      [`& .${se.sortIcon}`]: t.sortIcon
    },
    {
      [`& .${se.treeDataGroupingCell}`]: t.treeDataGroupingCell
    },
    {
      [`& .${se.treeDataGroupingCellLoadingContainer}`]: t.treeDataGroupingCellLoadingContainer
    },
    {
      [`& .${se.treeDataGroupingCellToggle}`]: t.treeDataGroupingCellToggle
    },
    {
      [`& .${se.withBorderColor}`]: t.withBorderColor
    }
  ]
})(({
  theme: e
}) => {
  var U, z;
  const t = $a(), n = Ze(t, Bve), r = jve(e), o = e.shape.borderRadius, s = e.vars ? e.vars.palette.background.default : ((U = e.mixins.MuiDataGrid) == null ? void 0 : U.containerBackground) ?? e.palette.background.default, a = ((z = e.mixins.MuiDataGrid) == null ? void 0 : z.pinnedBackground) ?? s, c = e.vars ? `rgba(${e.vars.palette.background.defaultChannel} / ${e.vars.palette.action.disabledOpacity})` : An(e.palette.background.default, e.palette.action.disabledOpacity), f = (e.vars || e).palette.action.hoverOpacity, m = (e.vars || e).palette.action.hover, g = (e.vars || e).palette.action.selectedOpacity, y = e.vars ? `calc(${f} + ${g})` : f + g, w = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${g})` : An(e.palette.primary.main, g), C = e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${y})` : An(e.palette.primary.main, y), T = e.vars ? Wve : Vve, E = (A) => ({
    [`& .${se["cell--pinnedLeft"]}, & .${se["cell--pinnedRight"]}`]: {
      backgroundColor: A,
      "&.Mui-selected": {
        backgroundColor: T(A, w, g),
        "&:hover": {
          backgroundColor: T(A, w, y)
        }
      }
    }
  }), O = T(a, m, f), k = E(O), I = T(a, w, g), M = E(I), N = T(a, C, y), P = E(N), F = {
    backgroundColor: w,
    "&:hover": {
      backgroundColor: C,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: w
      }
    }
  };
  return J({
    "--unstable_DataGrid-radius": typeof o == "number" ? `${o}px` : o,
    "--unstable_DataGrid-headWeight": e.typography.fontWeightMedium,
    "--unstable_DataGrid-overlayBackground": c,
    "--DataGrid-containerBackground": s,
    "--DataGrid-pinnedBackground": a,
    "--DataGrid-rowBorderColor": r,
    "--DataGrid-cellOffsetMultiplier": 2,
    "--DataGrid-width": "0px",
    "--DataGrid-hasScrollX": "0",
    "--DataGrid-hasScrollY": "0",
    "--DataGrid-scrollbarSize": "10px",
    "--DataGrid-rowWidth": "0px",
    "--DataGrid-columnsTotalWidth": "0px",
    "--DataGrid-leftPinnedWidth": "0px",
    "--DataGrid-rightPinnedWidth": "0px",
    "--DataGrid-headerHeight": "0px",
    "--DataGrid-headersTotalHeight": "0px",
    "--DataGrid-topContainerHeight": "0px",
    "--DataGrid-bottomContainerHeight": "0px",
    flex: 1,
    boxSizing: "border-box",
    position: "relative",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: r,
    borderRadius: "var(--unstable_DataGrid-radius)",
    color: (e.vars || e).palette.text.primary
  }, e.typography.body2, {
    outline: "none",
    height: "100%",
    display: "flex",
    minWidth: 0,
    // See https://github.com/mui/mui-x/issues/8547
    minHeight: 0,
    flexDirection: "column",
    overflow: "hidden",
    overflowAnchor: "none",
    // Keep the same scrolling position
    transform: "translate(0, 0)",
    // Create a stacking context to keep scrollbars from showing on top
    [`.${se.main} > *:first-child${zve}`]: {
      borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
      borderTopRightRadius: "var(--unstable_DataGrid-radius)"
    },
    [`&.${se.autoHeight}`]: {
      height: "auto"
    },
    [`&.${se.autosizing}`]: {
      [`& .${se.columnHeaderTitleContainerContent} > *`]: {
        overflow: "visible !important"
      },
      "@media (hover: hover)": {
        [`& .${se.menuIcon}`]: {
          width: "0 !important",
          visibility: "hidden !important"
        }
      },
      [`& .${se.cell}`]: {
        overflow: "visible !important",
        whiteSpace: "nowrap",
        minWidth: "max-content !important",
        maxWidth: "max-content !important"
      },
      [`& .${se.groupingCriteriaCell}`]: {
        width: "unset"
      },
      [`& .${se.treeDataGroupingCell}`]: {
        width: "unset"
      }
    },
    [`& .${se.columnHeader}, & .${se.cell}`]: {
      WebkitTapHighlightColor: "transparent",
      padding: "0 10px",
      boxSizing: "border-box"
    },
    [`& .${se.columnHeader}:focus-within, & .${se.cell}:focus-within`]: {
      outline: `solid ${e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / 0.5)` : An(e.palette.primary.main, 0.5)} ${yv}px`,
      outlineOffset: yv * -1
    },
    [`& .${se.columnHeader}:focus, & .${se.cell}:focus`]: {
      outline: `solid ${e.palette.primary.main} ${yv}px`,
      outlineOffset: yv * -1
    },
    // Hide the column separator when:
    // - the column is focused and has an outline
    // - the next column is focused and has an outline
    // - the column has a left or right border
    // - the next column is pinned right and has a left border
    [`& .${se.columnHeader}:focus,
      & .${se["columnHeader--withLeftBorder"]},
      & .${se["columnHeader--withRightBorder"]},
      & .${se["columnHeader--siblingFocused"]},
      & .${se["virtualScroller--hasScrollX"]} .${se["columnHeader--lastUnpinned"]},
      & .${se["virtualScroller--hasScrollX"]} .${se["columnHeader--last"]}
      `]: {
      [`& .${se.columnSeparator}`]: {
        opacity: 0
      },
      // Show resizable separators at all times on touch devices
      "@media (hover: none)": {
        [`& .${se["columnSeparator--resizable"]}`]: {
          opacity: 1
        }
      },
      [`& .${se["columnSeparator--resizable"]}:hover`]: {
        opacity: 1
      }
    },
    [`&.${se["root--noToolbar"]} [aria-rowindex="1"] [aria-colindex="1"]`]: {
      borderTopLeftRadius: "calc(var(--unstable_DataGrid-radius) - 1px)"
    },
    [`&.${se["root--noToolbar"]} [aria-rowindex="1"] .${se["columnHeader--last"]}`]: {
      borderTopRightRadius: n ? "calc(var(--unstable_DataGrid-radius) - 1px)" : void 0
    },
    [`& .${se.columnHeaderCheckbox}, & .${se.cellCheckbox}`]: {
      padding: 0,
      justifyContent: "center",
      alignItems: "center"
    },
    [`& .${se.columnHeader}`]: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    [`& .${se["virtualScroller--hasScrollX"]} .${se["columnHeader--last"]}`]: {
      overflow: "hidden"
    },
    [`& .${se["columnHeader--sorted"]} .${se.iconButtonContainer}, & .${se["columnHeader--filtered"]} .${se.iconButtonContainer}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${se.columnHeader}:not(.${se["columnHeader--sorted"]}) .${se.sortButton}`]: {
      opacity: 0,
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.shorter
      })
    },
    [`& .${se.columnHeaderTitleContainer}`]: {
      display: "flex",
      alignItems: "center",
      gap: e.spacing(0.25),
      minWidth: 0,
      flex: 1,
      whiteSpace: "nowrap",
      overflow: "hidden"
    },
    [`& .${se.columnHeaderTitleContainerContent}`]: {
      overflow: "hidden",
      display: "flex",
      alignItems: "center"
    },
    [`& .${se["columnHeader--filledGroup"]} .${se.columnHeaderTitleContainer}`]: {
      borderBottomWidth: "1px",
      borderBottomStyle: "solid",
      boxSizing: "border-box"
    },
    [`& .${se.sortIcon}, & .${se.filterIcon}`]: {
      fontSize: "inherit"
    },
    [`& .${se["columnHeader--sortable"]}`]: {
      cursor: "pointer"
    },
    [`& .${se["columnHeader--alignCenter"]} .${se.columnHeaderTitleContainer}`]: {
      justifyContent: "center"
    },
    [`& .${se["columnHeader--alignRight"]} .${se.columnHeaderDraggableContainer}, & .${se["columnHeader--alignRight"]} .${se.columnHeaderTitleContainer}`]: {
      flexDirection: "row-reverse"
    },
    [`& .${se["columnHeader--alignCenter"]} .${se.menuIcon}`]: {
      marginLeft: "auto"
    },
    [`& .${se["columnHeader--alignRight"]} .${se.menuIcon}`]: {
      marginRight: "auto",
      marginLeft: -5
    },
    [`& .${se["columnHeader--moving"]}`]: {
      backgroundColor: (e.vars || e).palette.action.hover
    },
    [`& .${se["columnHeader--pinnedLeft"]}, & .${se["columnHeader--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 40,
      // Should be above the column separator
      background: "var(--DataGrid-pinnedBackground)"
    },
    [`& .${se.columnSeparator}`]: {
      position: "absolute",
      overflow: "hidden",
      zIndex: 30,
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
      maxWidth: Fve,
      color: r
    },
    [`& .${se.columnHeaders}`]: {
      width: "var(--DataGrid-rowWidth)"
    },
    "@media (hover: hover)": {
      [`& .${se.columnHeader}:hover`]: {
        [`& .${se.menuIcon}`]: {
          width: "auto",
          visibility: "visible"
        },
        [`& .${se.iconButtonContainer}`]: {
          visibility: "visible",
          width: "auto"
        }
      },
      [`& .${se.columnHeader}:not(.${se["columnHeader--sorted"]}):hover .${se.sortButton}`]: {
        opacity: 0.5
      }
    },
    "@media (hover: none)": {
      [`& .${se.columnHeader} .${se.menuIcon}`]: {
        width: "auto",
        visibility: "visible"
      },
      [`& .${se.columnHeader}:focus,
        & .${se["columnHeader--siblingFocused"]}`]: {
        [`.${se["columnSeparator--resizable"]}`]: {
          color: (e.vars || e).palette.primary.main
        }
      }
    },
    [`& .${se["columnSeparator--sideLeft"]}`]: {
      left: rT
    },
    [`& .${se["columnSeparator--sideRight"]}`]: {
      right: rT
    },
    [`& .${se["columnHeader--withRightBorder"]} .${se["columnSeparator--sideLeft"]}`]: {
      left: rT - 0.5
    },
    [`& .${se["columnHeader--withRightBorder"]} .${se["columnSeparator--sideRight"]}`]: {
      right: rT - 0.5
    },
    [`& .${se["columnSeparator--resizable"]}`]: {
      cursor: "col-resize",
      touchAction: "none",
      [`&.${se["columnSeparator--resizing"]}`]: {
        color: (e.vars || e).palette.primary.main
      },
      // Always appear as draggable on touch devices
      "@media (hover: none)": {
        [`& .${se.iconSeparator} rect`]: fB
      },
      "@media (hover: hover)": {
        "&:hover": {
          color: (e.vars || e).palette.primary.main,
          [`& .${se.iconSeparator} rect`]: fB
        }
      },
      "& svg": {
        pointerEvents: "none"
      }
    },
    [`& .${se.iconSeparator}`]: {
      color: "inherit",
      transition: e.transitions.create(["color", "width"], {
        duration: e.transitions.duration.shortest
      })
    },
    [`& .${se.menuIcon}`]: {
      width: 0,
      visibility: "hidden",
      fontSize: 20,
      marginRight: -5,
      display: "flex",
      alignItems: "center"
    },
    [`.${se.menuOpen}`]: {
      visibility: "visible",
      width: "auto"
    },
    [`& .${se.headerFilterRow}`]: {
      [`& .${se.columnHeader}`]: {
        boxSizing: "border-box",
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      }
    },
    /* Bottom border of the top-container */
    [`& .${se["row--borderBottom"]} .${se.columnHeader},
      & .${se["row--borderBottom"]} .${se.filler},
      & .${se["row--borderBottom"]} .${se.scrollbarFiller}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    [`& .${se["row--borderBottom"]} .${se.cell}`]: {
      borderBottom: "1px solid var(--rowBorderColor)"
    },
    /* Row styles */
    [`.${se.row}`]: {
      display: "flex",
      width: "var(--DataGrid-rowWidth)",
      breakInside: "avoid",
      // Avoid the row to be broken in two different print pages.
      "--rowBorderColor": "var(--DataGrid-rowBorderColor)",
      [`&.${se["row--firstVisible"]}`]: {
        "--rowBorderColor": "transparent"
      },
      "&:hover": {
        backgroundColor: (e.vars || e).palette.action.hover,
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      },
      [`&.${se.rowSkeleton}:hover`]: {
        backgroundColor: "transparent"
      },
      "&.Mui-selected": F
    },
    [`& .${se["container--top"]}, & .${se["container--bottom"]}`]: {
      "[role=row]": {
        background: "var(--DataGrid-containerBackground)"
      }
    },
    /* Cell styles */
    [`& .${se.cell}`]: {
      flex: "0 0 auto",
      height: "var(--height)",
      width: "var(--width)",
      lineHeight: "calc(var(--height) - 1px)",
      // -1px for the border
      boxSizing: "border-box",
      borderTop: "1px solid var(--rowBorderColor)",
      overflow: "hidden",
      whiteSpace: "nowrap",
      textOverflow: "ellipsis",
      "&.Mui-selected": F
    },
    [`& .${se["virtualScrollerContent--overflowed"]} .${se["row--lastVisible"]} .${se.cell}`]: {
      borderTopColor: "transparent"
    },
    [`& .${se["pinnedRows--top"]} :first-of-type`]: {
      [`& .${se.cell}, .${se.scrollbarFiller}`]: {
        borderTop: "none"
      }
    },
    [`&.${se["root--disableUserSelection"]}`]: {
      userSelect: "none"
    },
    [`& .${se["row--dynamicHeight"]} > .${se.cell}`]: {
      whiteSpace: "initial",
      lineHeight: "inherit"
    },
    [`& .${se.cellEmpty}`]: {
      flex: 1,
      padding: 0,
      height: "unset"
    },
    [`& .${se.cell}.${se["cell--selectionMode"]}`]: {
      cursor: "default"
    },
    [`& .${se.cell}.${se["cell--editing"]}`]: {
      padding: 1,
      display: "flex",
      boxShadow: e.shadows[2],
      backgroundColor: (e.vars || e).palette.background.paper,
      "&:focus-within": {
        outline: `${yv}px solid ${(e.vars || e).palette.primary.main}`,
        outlineOffset: yv * -1
      }
    },
    [`& .${se["row--editing"]}`]: {
      boxShadow: e.shadows[2]
    },
    [`& .${se["row--editing"]} .${se.cell}`]: {
      boxShadow: e.shadows[0],
      backgroundColor: (e.vars || e).palette.background.paper
    },
    [`& .${se.editBooleanCell}`]: {
      display: "flex",
      height: "100%",
      width: "100%",
      alignItems: "center",
      justifyContent: "center"
    },
    [`& .${se.booleanCell}[data-value="true"]`]: {
      color: (e.vars || e).palette.text.secondary
    },
    [`& .${se.booleanCell}[data-value="false"]`]: {
      color: (e.vars || e).palette.text.disabled
    },
    [`& .${se.actionsCell}`]: {
      display: "inline-flex",
      alignItems: "center",
      gridGap: e.spacing(1)
    },
    [`& .${se.rowReorderCell}`]: {
      display: "inline-flex",
      flex: 1,
      alignItems: "center",
      justifyContent: "center",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${se["rowReorderCell--draggable"]}`]: {
      cursor: "move",
      opacity: 1
    },
    [`& .${se.rowReorderCellContainer}`]: {
      padding: 0,
      display: "flex",
      alignItems: "stretch"
    },
    [`.${se.withBorderColor}`]: {
      borderColor: r
    },
    [`& .${se["cell--withLeftBorder"]}, & .${se["columnHeader--withLeftBorder"]}`]: {
      borderLeftColor: "var(--DataGrid-rowBorderColor)",
      borderLeftWidth: "1px",
      borderLeftStyle: "solid"
    },
    [`& .${se["cell--withRightBorder"]}, & .${se["columnHeader--withRightBorder"]}`]: {
      borderRightColor: "var(--DataGrid-rowBorderColor)",
      borderRightWidth: "1px",
      borderRightStyle: "solid"
    },
    [`& .${se["cell--flex"]}`]: {
      display: "flex",
      alignItems: "center",
      lineHeight: "inherit"
    },
    [`& .${se["cell--textLeft"]}`]: {
      textAlign: "left",
      justifyContent: "flex-start"
    },
    [`& .${se["cell--textRight"]}`]: {
      textAlign: "right",
      justifyContent: "flex-end"
    },
    [`& .${se["cell--textCenter"]}`]: {
      textAlign: "center",
      justifyContent: "center"
    },
    [`& .${se["cell--pinnedLeft"]}, & .${se["cell--pinnedRight"]}`]: {
      position: "sticky",
      zIndex: 30,
      background: "var(--DataGrid-pinnedBackground)",
      "&.Mui-selected": {
        backgroundColor: I
      }
    },
    [`& .${se.virtualScrollerContent} .${se.row}`]: {
      "&:hover": k,
      "&.Mui-selected": M,
      "&.Mui-selected:hover": P
    },
    [`& .${se.cellOffsetLeft}`]: {
      flex: "0 0 auto",
      display: "inline-block"
    },
    [`& .${se.cellSkeleton}`]: {
      flex: "0 0 auto",
      height: "100%",
      display: "inline-flex",
      alignItems: "center"
    },
    [`& .${se.columnHeaderDraggableContainer}`]: {
      display: "flex",
      width: "100%",
      height: "100%"
    },
    [`& .${se.rowReorderCellPlaceholder}`]: {
      display: "none"
    },
    [`& .${se["columnHeader--dragging"]}, & .${se["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity
    },
    [`& .${se["row--dragging"]}`]: {
      background: (e.vars || e).palette.background.paper,
      padding: "0 12px",
      borderRadius: "var(--unstable_DataGrid-radius)",
      opacity: (e.vars || e).palette.action.disabledOpacity,
      [`& .${se.rowReorderCellPlaceholder}`]: {
        display: "flex"
      }
    },
    [`& .${se.treeDataGroupingCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${se.treeDataGroupingCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    [`& .${se.treeDataGroupingCellLoadingContainer}, .${se.groupingCriteriaCellLoadingContainer}`]: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    },
    [`& .${se.groupingCriteriaCell}`]: {
      display: "flex",
      alignItems: "center",
      width: "100%"
    },
    [`& .${se.groupingCriteriaCellToggle}`]: {
      flex: "0 0 28px",
      alignSelf: "stretch",
      marginRight: e.spacing(2)
    },
    /* ScrollbarFiller styles */
    [`.${se.scrollbarFiller}`]: {
      minWidth: "calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))",
      alignSelf: "stretch",
      [`&.${se["scrollbarFiller--borderTop"]}`]: {
        borderTop: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${se["scrollbarFiller--borderBottom"]}`]: {
        borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
      },
      [`&.${se["scrollbarFiller--pinnedRight"]}`]: {
        backgroundColor: "var(--DataGrid-pinnedBackground)",
        position: "sticky",
        right: 0
      }
    },
    [`& .${se.filler}`]: {
      flex: "1 0 auto"
    },
    [`& .${se["filler--borderBottom"]}`]: {
      borderBottom: "1px solid var(--DataGrid-rowBorderColor)"
    },
    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */
    [`& .${se["main--hasSkeletonLoadingOverlay"]}`]: {
      [`& .${se.virtualScrollerContent}`]: {
        // We use visibility hidden so that the virtual scroller content retains its height.
        // Position fixed is used to remove the virtual scroller content from the flow.
        // https://github.com/mui/mui-x/issues/14061
        position: "fixed",
        visibility: "hidden"
      },
      [`& .${se["scrollbar--vertical"]}, & .${se.pinnedRows}, & .${se.virtualScroller} > .${se.filler}`]: {
        display: "none"
      }
    }
  });
});
function Vve(e, t, n, r = 1) {
  const o = (f, m) => Math.round((f ** (1 / r) * (1 - n) + m ** (1 / r) * n) ** r), s = yc(e), a = yc(t), c = [o(s.values[0], a.values[0]), o(s.values[1], a.values[1]), o(s.values[2], a.values[2])];
  return cC({
    type: "rgb",
    values: c
  });
}
const Uve = (e) => `rgb(from ${e} r g b / 1)`;
function Wve(e, t, n) {
  return `color-mix(in srgb,${e}, ${Uve(t)} calc(${n} * 100%))`;
}
const Gve = () => () => {
}, qve = () => !1, Kve = () => !0, Yve = () => ID.useSyncExternalStore(Gve, qve, Kve);
function Xve() {
  var s, a;
  const e = On(), t = Ze(e, bl), n = Lt(), r = Ze(e, JS), o = e.current.unstable_applyPipeProcessors("preferencePanel", null, r.openedPanelValue ?? dm.filters);
  return /* @__PURE__ */ $.jsx(n.slots.panel, J({
    as: n.slots.basePopper,
    open: t.length > 0 && r.open,
    id: r.panelId,
    "aria-labelledby": r.labelId
  }, (s = n.slotProps) == null ? void 0 : s.panel, (a = n.slotProps) == null ? void 0 : a.basePopper, {
    children: o
  }));
}
function Qve() {
  var t;
  const e = Lt();
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(Xve, {}), e.slots.toolbar && /* @__PURE__ */ $.jsx(e.slots.toolbar, J({}, (t = e.slotProps) == null ? void 0 : t.toolbar))]
  });
}
const Jve = ["className", "children"], Zve = (e, t) => {
  const {
    autoHeight: n,
    classes: r,
    showCellVerticalBorder: o
  } = e, s = {
    root: ["root", n && "autoHeight", `root--density${He(t)}`, e.slots.toolbar === null && "root--noToolbar", "withBorderColor", o && "withVerticalBorder"]
  };
  return mt(s, zn, r);
}, KW = Yn(function(t, n) {
  const r = Lt(), {
    className: o,
    children: s
  } = t, a = qt(t, Jve), c = $a(), f = Ze(c, Ov), m = c.current.rootElementRef, g = x.useCallback((E) => {
    E !== null && c.current.publishEvent("rootMount", E);
  }, [c]), y = Pr(m, n, g), w = r, C = Zve(w, f);
  return Yve() ? null : /* @__PURE__ */ $.jsxs(Hve, J({
    className: et(C.root, o),
    ownerState: w
  }, a, {
    ref: y,
    children: [/* @__PURE__ */ $.jsx(Qve, {}), /* @__PURE__ */ $.jsx(yve, {
      children: s
    }), /* @__PURE__ */ $.jsx(bve, {})]
  }));
});
process.env.NODE_ENV !== "production" && (KW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const eye = Rd(KW), tye = ["className"], nye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["footerContainer", "withBorderColor"]
  }, zn, t);
}, rye = Lr("div", {
  name: "MuiDataGrid",
  slot: "FooterContainer",
  overridesResolver: (e, t) => t.footerContainer
})({
  display: "flex",
  justifyContent: "space-between",
  alignItems: "center",
  minHeight: 52,
  borderTop: "1px solid"
}), YW = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, tye), s = Lt(), a = nye(s);
  return /* @__PURE__ */ $.jsx(rye, J({
    className: et(a.root, r),
    ownerState: s
  }, o, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (YW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const oye = ["className"], iye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["overlay"]
  }, zn, t);
}, sye = Lr("div", {
  name: "MuiDataGrid",
  slot: "Overlay",
  overridesResolver: (e, t) => t.overlay
})({
  width: "100%",
  height: "100%",
  display: "flex",
  alignSelf: "center",
  alignItems: "center",
  justifyContent: "center",
  backgroundColor: "var(--unstable_DataGrid-overlayBackground)"
}), _O = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, oye), s = Lt(), a = iye(s);
  return /* @__PURE__ */ $.jsx(sye, J({
    className: et(a.root, r),
    ownerState: s
  }, o, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (_O.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const aye = (e) => {
  const {
    classes: t,
    open: n
  } = e;
  return mt({
    root: ["menuIcon", n && "menuOpen"],
    button: ["menuIconButton"]
  }, zn, t);
}, lye = /* @__PURE__ */ x.memo((e) => {
  var w, C;
  const {
    colDef: t,
    open: n,
    columnMenuId: r,
    columnMenuButtonId: o,
    iconButtonRef: s
  } = e, a = On(), c = Lt(), f = J({}, e, {
    classes: c.classes
  }), m = aye(f), g = x.useCallback((T) => {
    T.preventDefault(), T.stopPropagation(), a.current.toggleColumnMenu(t.field);
  }, [a, t.field]), y = t.headerName ?? t.field;
  return /* @__PURE__ */ $.jsx("div", {
    className: m.root,
    children: /* @__PURE__ */ $.jsx(c.slots.baseTooltip, J({
      title: a.current.getLocaleText("columnMenuLabel"),
      enterDelay: 1e3
    }, (w = c.slotProps) == null ? void 0 : w.baseTooltip, {
      children: /* @__PURE__ */ $.jsx(c.slots.baseIconButton, J({
        ref: s,
        tabIndex: -1,
        className: m.button,
        "aria-label": a.current.getLocaleText("columnMenuAriaLabel")(y),
        size: "small",
        onClick: g,
        "aria-haspopup": "menu",
        "aria-expanded": n,
        "aria-controls": n ? r : void 0,
        id: o
      }, (C = c.slotProps) == null ? void 0 : C.baseIconButton, {
        children: /* @__PURE__ */ $.jsx(c.slots.columnMenuIcon, {
          fontSize: "inherit"
        })
      }))
    }))
  });
});
function XW({
  columnMenuId: e,
  columnMenuButtonId: t,
  ContentComponent: n,
  contentComponentProps: r,
  field: o,
  open: s,
  target: a,
  onExited: c
}) {
  const f = On(), m = f.current.getColumn(o), g = jn((y) => {
    y && (y.stopPropagation(), a != null && a.contains(y.target)) || f.current.hideColumnMenu();
  });
  return !a || !m ? null : /* @__PURE__ */ $.jsx(mO, {
    placement: `bottom-${m.align === "right" ? "start" : "end"}`,
    open: s,
    target: a,
    onClose: g,
    onExited: c,
    children: /* @__PURE__ */ $.jsx(n, J({
      colDef: m,
      hideMenu: g,
      open: s,
      id: e,
      labelledby: t
    }, r))
  });
}
process.env.NODE_ENV !== "production" && (XW.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnMenuButtonId: u.string,
  columnMenuId: u.string,
  ContentComponent: u.elementType.isRequired,
  contentComponentProps: u.any,
  field: u.string.isRequired,
  onExited: u.func,
  open: u.bool.isRequired,
  target: Sl
});
function uye(e) {
  return e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth;
}
function d_(e, t) {
  return e.closest(`.${t}`);
}
function Pd(e) {
  return e.replace(/["\\]/g, "\\$&");
}
function cye(e, t) {
  return e.querySelector(`[role="columnheader"][data-field="${Pd(t)}"]`);
}
function QW(e) {
  return `.${se.row}[data-id="${Pd(String(e))}"]`;
}
function dye(e, t) {
  return e.querySelector(QW(t));
}
function fye(e, {
  id: t,
  field: n
}) {
  const r = QW(t), o = `.${se.cell}[data-field="${Pd(n)}"]`, s = `${r} ${o}`;
  return e.querySelector(s);
}
function MC(e) {
  return (
    // The target is not an element when triggered by a Select inside the cell
    // See https://github.com/mui/material-ui/issues/10534
    e.target.nodeType === 1 && !e.currentTarget.contains(e.target)
  );
}
function pye(e) {
  return e.getAttribute("data-field");
}
function hye(e, t) {
  return e.querySelector(`[data-field="${Pd(t)}"]`);
}
function mye(e) {
  return e.getAttribute("data-fields").slice(2, -2).split("-|-");
}
function gye(e, t) {
  return Array.from(e.querySelectorAll(`[data-fields*="|-${Pd(t)}-|"]`) ?? []);
}
function vye(e, t) {
  var a;
  if (!d_(e, se.root))
    throw new Error("MUI X: The root element is not found.");
  const r = e.getAttribute("aria-colindex");
  if (!r)
    return [];
  const o = Number(r) - 1, s = [];
  return (a = t.virtualScrollerRef) != null && a.current ? (e4(t).forEach((c) => {
    const f = c.getAttribute("data-id");
    if (!f)
      return;
    let m = o;
    const g = t.unstable_getCellColSpanInfo(f, o);
    g && g.spannedByColSpan && (m = g.leftVisibleCellIndex);
    const y = c.querySelector(`[data-colindex="${m}"]`);
    y && s.push(y);
  }), s) : [];
}
function pB(e, t) {
  return e.rootElementRef.current.querySelector(`.${se[t]}`);
}
const JW = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: r
}) => {
  if (t === null)
    return [];
  const o = [];
  return e4(e).forEach((s) => {
    s.getAttribute("data-id") && s.querySelectorAll(`.${se[n === "left" ? "cell--pinnedLeft" : "cell--pinnedRight"]}`).forEach((c) => {
      const f = Ty(c);
      f !== null && r(f) && o.push(c);
    });
  }), o;
};
function yye(e, t, n) {
  const r = Ty(t);
  return JW({
    api: e,
    colIndex: r,
    position: n ? "right" : "left",
    filterFn: (o) => n ? o < r : o > r
  });
}
function bye(e, t, n) {
  const r = Ty(t);
  return JW({
    api: e,
    colIndex: r,
    position: n ? "left" : "right",
    filterFn: (o) => n ? o > r : o < r
  });
}
const ZW = ({
  api: e,
  colIndex: t,
  position: n,
  filterFn: r
}) => {
  var s;
  if (!((s = e.columnHeadersContainerRef) != null && s.current))
    return [];
  if (t === null)
    return [];
  const o = [];
  return e.columnHeadersContainerRef.current.querySelectorAll(`.${se[n === "left" ? "columnHeader--pinnedLeft" : "columnHeader--pinnedRight"]}`).forEach((a) => {
    const c = Ty(a);
    c !== null && r(c, a) && o.push(a);
  }), o;
};
function wye(e, t, n) {
  const r = Ty(t);
  return ZW({
    api: e,
    position: n ? "right" : "left",
    colIndex: r,
    filterFn: (o) => n ? o < r : o > r
  });
}
function Sye(e, t, n) {
  const r = Ty(t);
  return ZW({
    api: e,
    position: n ? "left" : "right",
    colIndex: r,
    filterFn: (o, s) => s.classList.contains(se["columnHeader--last"]) ? !1 : n ? o > r : o < r
  });
}
function Cye(e, t) {
  return e.columnHeadersContainerRef.current.querySelector(`:scope > div > [data-field="${Pd(t)}"][role="columnheader"]`);
}
function xye(e, t) {
  const n = e.virtualScrollerRef.current;
  return Array.from(n.querySelectorAll(`:scope > div > div > div > [data-field="${Pd(t)}"][role="gridcell"]`));
}
function e4(e) {
  return e.virtualScrollerRef.current.querySelectorAll(
    // Use > to ignore rows from nested Data Grids (for example in detail panel)
    `:scope > div > div > .${se.row}`
  );
}
function Ty(e) {
  const t = e.getAttribute("aria-colindex");
  return t ? Number(t) - 1 : null;
}
const Eye = ["className", "aria-label"], Tye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["columnHeaderTitle"]
  }, zn, t);
}, _ye = Lr("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderTitle",
  overridesResolver: (e, t) => t.columnHeaderTitle
})({
  textOverflow: "ellipsis",
  overflow: "hidden",
  whiteSpace: "nowrap",
  fontWeight: "var(--unstable_DataGrid-headWeight)",
  lineHeight: "normal"
}), Oye = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, Eye), s = Lt(), a = Tye(s);
  return /* @__PURE__ */ $.jsx(_ye, J({
    className: et(a.root, r),
    ownerState: s
  }, o, {
    ref: n
  }));
});
function t4(e) {
  var f;
  const {
    label: t,
    description: n
  } = e, r = Lt(), o = x.useRef(null), [s, a] = x.useState(""), c = x.useCallback(() => {
    if (!n && (o != null && o.current)) {
      const m = uye(o.current);
      a(m ? t : "");
    }
  }, [n, t]);
  return /* @__PURE__ */ $.jsx(r.slots.baseTooltip, J({
    title: n || s
  }, (f = r.slotProps) == null ? void 0 : f.baseTooltip, {
    children: /* @__PURE__ */ $.jsx(Oye, {
      onMouseOver: c,
      ref: o,
      children: t
    })
  }));
}
process.env.NODE_ENV !== "production" && (t4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnWidth: u.number.isRequired,
  description: u.node,
  label: u.string.isRequired
});
const Rye = ["resizable", "resizing", "height", "side"];
var ZD = /* @__PURE__ */ function(e) {
  return e.Left = "left", e.Right = "right", e;
}(ZD || {});
const kye = (e) => {
  const {
    resizable: t,
    resizing: n,
    classes: r,
    side: o
  } = e, s = {
    root: ["columnSeparator", t && "columnSeparator--resizable", n && "columnSeparator--resizing", o && `columnSeparator--side${He(o)}`],
    icon: ["iconSeparator"]
  };
  return mt(s, zn, r);
};
function n4(e) {
  const {
    height: t,
    side: n = ZD.Right
  } = e, r = qt(e, Rye), o = Lt(), s = J({}, e, {
    side: n,
    classes: o.classes
  }), a = kye(s), c = x.useCallback((f) => {
    f.preventDefault(), f.stopPropagation();
  }, []);
  return (
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
    /* @__PURE__ */ $.jsx("div", J({
      className: a.root,
      style: {
        minHeight: t
      }
    }, r, {
      onClick: c,
      children: /* @__PURE__ */ $.jsx(o.slots.columnResizeIcon, {
        className: a.icon
      })
    }))
  );
}
const Pye = /* @__PURE__ */ x.memo(n4);
process.env.NODE_ENV !== "production" && (n4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  height: u.number.isRequired,
  resizable: u.bool.isRequired,
  resizing: u.bool.isRequired,
  side: u.oneOf(["left", "right"])
});
const Mye = ["classes", "columnMenuOpen", "colIndex", "height", "isResizing", "sortDirection", "hasFocus", "tabIndex", "separatorSide", "isDraggable", "headerComponent", "description", "elementId", "width", "columnMenuIconButton", "columnMenu", "columnTitleIconButtons", "headerClassName", "label", "resizable", "draggableContainerProps", "columnHeaderSeparatorProps", "style"], r4 = Yn(function(t, n) {
  const {
    classes: r,
    colIndex: o,
    height: s,
    isResizing: a,
    sortDirection: c,
    hasFocus: f,
    tabIndex: m,
    separatorSide: g,
    isDraggable: y,
    headerComponent: w,
    description: C,
    width: T,
    columnMenuIconButton: E = null,
    columnMenu: O = null,
    columnTitleIconButtons: k = null,
    headerClassName: I,
    label: M,
    resizable: N,
    draggableContainerProps: P,
    columnHeaderSeparatorProps: F,
    style: H
  } = t, U = qt(t, Mye), z = $a(), A = Lt(), q = x.useRef(null), W = Pr(q, n);
  let Y = "none";
  return c != null && (Y = c === "asc" ? "ascending" : "descending"), x.useLayoutEffect(() => {
    var G;
    const ee = z.current.state.columnMenu;
    if (f && !ee.open) {
      const X = q.current.querySelector('[tabindex="0"]') || q.current;
      X == null || X.focus(), (G = z.current.columnHeadersContainerRef) != null && G.current && (z.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [z, f]), /* @__PURE__ */ $.jsxs("div", J({
    className: et(r.root, I),
    style: J({}, H, {
      height: s,
      width: T
    }),
    role: "columnheader",
    tabIndex: m,
    "aria-colindex": o + 1,
    "aria-sort": Y
  }, U, {
    ref: W,
    children: [/* @__PURE__ */ $.jsxs("div", J({
      className: r.draggableContainer,
      draggable: y,
      role: "presentation"
    }, P, {
      children: [/* @__PURE__ */ $.jsxs("div", {
        className: r.titleContainer,
        role: "presentation",
        children: [/* @__PURE__ */ $.jsx("div", {
          className: r.titleContainerContent,
          children: w !== void 0 ? w : /* @__PURE__ */ $.jsx(t4, {
            label: M,
            description: C,
            columnWidth: T
          })
        }), k]
      }), E]
    })), /* @__PURE__ */ $.jsx(Pye, J({
      resizable: !A.disableColumnResize && !!N,
      resizing: a,
      height: s,
      side: g
    }, F)), O]
  }));
}), Iye = (e) => {
  const {
    colDef: t,
    classes: n,
    isDragging: r,
    sortDirection: o,
    showRightBorder: s,
    showLeftBorder: a,
    filterItemsCounter: c,
    pinnedPosition: f,
    isLastUnpinned: m,
    isSiblingFocused: g
  } = e, y = o != null, w = c != null && c > 0, C = t.type === "number", T = {
    root: [
      "columnHeader",
      t.headerAlign === "left" && "columnHeader--alignLeft",
      t.headerAlign === "center" && "columnHeader--alignCenter",
      t.headerAlign === "right" && "columnHeader--alignRight",
      t.sortable && "columnHeader--sortable",
      r && "columnHeader--moving",
      y && "columnHeader--sorted",
      w && "columnHeader--filtered",
      C && "columnHeader--numeric",
      "withBorderColor",
      s && "columnHeader--withRightBorder",
      a && "columnHeader--withLeftBorder",
      f === Nn.LEFT && "columnHeader--pinnedLeft",
      f === Nn.RIGHT && "columnHeader--pinnedRight",
      // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom
      // See https://github.com/mui/mui-x/pull/14559
      m && "columnHeader--lastUnpinned",
      g && "columnHeader--siblingFocused"
    ],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return mt(T, zn, n);
};
function o4(e) {
  var pe, be, we;
  const {
    colDef: t,
    columnMenuOpen: n,
    colIndex: r,
    headerHeight: o,
    isResizing: s,
    isLast: a,
    sortDirection: c,
    sortIndex: f,
    filterItemsCounter: m,
    hasFocus: g,
    tabIndex: y,
    disableReorder: w,
    separatorSide: C,
    showLeftBorder: T,
    showRightBorder: E,
    pinnedPosition: O,
    pinnedOffset: k
  } = e, I = $a(), M = Lt(), N = xc(), P = x.useRef(null), F = pr(), H = pr(), U = x.useRef(null), [z, A] = x.useState(n), q = x.useMemo(() => !M.disableColumnReorder && !w && !t.disableReorder, [M.disableColumnReorder, w, t.disableReorder]);
  let W;
  t.renderHeader && (W = t.renderHeader(I.current.getColumnHeaderParams(t.field)));
  const Y = J({}, e, {
    classes: M.classes,
    showRightBorder: E,
    showLeftBorder: T
  }), ee = Iye(Y), G = x.useCallback((_e) => (ce) => {
    MC(ce) || I.current.publishEvent(_e, I.current.getColumnHeaderParams(t.field), ce);
  }, [I, t.field]), K = x.useMemo(() => ({
    onClick: G("columnHeaderClick"),
    onContextMenu: G("columnHeaderContextMenu"),
    onDoubleClick: G("columnHeaderDoubleClick"),
    onMouseOver: G("columnHeaderOver"),
    // TODO remove as it's not used
    onMouseOut: G("columnHeaderOut"),
    // TODO remove as it's not used
    onMouseEnter: G("columnHeaderEnter"),
    // TODO remove as it's not used
    onMouseLeave: G("columnHeaderLeave"),
    // TODO remove as it's not used
    onKeyDown: G("columnHeaderKeyDown"),
    onFocus: G("columnHeaderFocus"),
    onBlur: G("columnHeaderBlur")
  }), [G]), X = x.useMemo(() => q ? {
    onDragStart: G("columnHeaderDragStart"),
    onDragEnter: G("columnHeaderDragEnter"),
    onDragOver: G("columnHeaderDragOver"),
    onDragEnd: G("columnHeaderDragEnd")
  } : {}, [q, G]), te = x.useMemo(() => ({
    onMouseDown: G("columnSeparatorMouseDown"),
    onDoubleClick: G("columnSeparatorDoubleClick")
  }), [G]);
  x.useEffect(() => {
    z || A(n);
  }, [z, n]);
  const re = x.useCallback(() => {
    A(!1);
  }, []), Q = !M.disableColumnMenu && !t.disableColumnMenu && /* @__PURE__ */ $.jsx(lye, {
    colDef: t,
    columnMenuId: F,
    columnMenuButtonId: H,
    open: z,
    iconButtonRef: U
  }), B = /* @__PURE__ */ $.jsx(XW, {
    columnMenuId: F,
    columnMenuButtonId: H,
    field: t.field,
    open: n,
    target: U.current,
    ContentComponent: M.slots.columnMenu,
    contentComponentProps: (pe = M.slotProps) == null ? void 0 : pe.columnMenu,
    onExited: re
  }), ie = t.sortingOrder ?? M.sortingOrder, de = (t.sortable || c != null) && !t.hideSortIcons && !M.disableColumnSorting, ue = /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [!M.disableColumnFilter && /* @__PURE__ */ $.jsx(M.slots.columnHeaderFilterIconButton, J({
      field: t.field,
      counter: m
    }, (be = M.slotProps) == null ? void 0 : be.columnHeaderFilterIconButton)), de && /* @__PURE__ */ $.jsx(M.slots.columnHeaderSortIcon, J({
      field: t.field,
      direction: c,
      index: f,
      sortingOrder: ie,
      disabled: !t.sortable
    }, (we = M.slotProps) == null ? void 0 : we.columnHeaderSortIcon))]
  });
  x.useLayoutEffect(() => {
    var ce;
    const _e = I.current.state.columnMenu;
    if (g && !_e.open) {
      const Ne = P.current.querySelector('[tabindex="0"]') || P.current;
      Ne == null || Ne.focus(), (ce = I.current.columnHeadersContainerRef) != null && ce.current && (I.current.columnHeadersContainerRef.current.scrollLeft = 0);
    }
  }, [I, g]);
  const he = typeof t.headerClassName == "function" ? t.headerClassName({
    field: t.field,
    colDef: t
  }) : t.headerClassName, ge = t.headerName ?? t.field, fe = x.useMemo(() => TO(J({}, e.style), N, O, k), [O, k, e.style, N]);
  return /* @__PURE__ */ $.jsx(r4, J({
    ref: P,
    classes: ee,
    columnMenuOpen: n,
    colIndex: r,
    height: o,
    isResizing: s,
    sortDirection: c,
    hasFocus: g,
    tabIndex: y,
    separatorSide: C,
    isDraggable: q,
    headerComponent: W,
    description: t.description,
    elementId: t.field,
    width: t.computedWidth,
    columnMenuIconButton: Q,
    columnTitleIconButtons: ue,
    headerClassName: et(he, a && se["columnHeader--last"]),
    label: ge,
    resizable: !M.disableColumnResize && !!t.resizable,
    "data-field": t.field,
    columnMenu: B,
    draggableContainerProps: X,
    columnHeaderSeparatorProps: te,
    style: fe
  }, K));
}
process.env.NODE_ENV !== "production" && (o4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  colIndex: u.number.isRequired,
  columnMenuOpen: u.bool.isRequired,
  disableReorder: u.bool,
  filterItemsCounter: u.number,
  hasFocus: u.bool,
  headerHeight: u.number.isRequired,
  isDragging: u.bool.isRequired,
  isLast: u.bool.isRequired,
  isLastUnpinned: u.bool.isRequired,
  isResizing: u.bool.isRequired,
  isSiblingFocused: u.bool.isRequired,
  pinnedOffset: u.number,
  pinnedPosition: u.oneOf([0, 1, 2, 3]),
  separatorSide: u.oneOf(["left", "right"]),
  showLeftBorder: u.bool.isRequired,
  showRightBorder: u.bool.isRequired,
  sortDirection: u.oneOf(["asc", "desc"]),
  sortIndex: u.number,
  style: u.object,
  tabIndex: u.oneOf([-1, 0]).isRequired
});
const Dye = Rd(o4), Aye = ["className"], Nye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["iconButtonContainer"]
  }, zn, t);
}, Lye = Lr("div", {
  name: "MuiDataGrid",
  slot: "IconButtonContainer",
  overridesResolver: (e, t) => t.iconButtonContainer
})(() => ({
  display: "flex",
  visibility: "hidden",
  width: 0
})), i4 = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, Aye), s = Lt(), a = Nye(s);
  return /* @__PURE__ */ $.jsx(Lye, J({
    className: et(a.root, r),
    ownerState: s
  }, o, {
    ref: n
  }));
}), $ye = ["direction", "index", "sortingOrder", "disabled", "className"], jye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["sortButton"],
    icon: ["sortIcon"]
  }, zn, t);
};
function Fye(e, t, n, r) {
  let o;
  const s = {};
  return t === "asc" ? o = e.columnSortedAscendingIcon : t === "desc" ? o = e.columnSortedDescendingIcon : (o = e.columnUnsortedIcon, s.sortingOrder = r), o ? /* @__PURE__ */ $.jsx(o, J({
    fontSize: "small",
    className: n
  }, s)) : null;
}
function s4(e) {
  var C;
  const {
    direction: t,
    index: n,
    sortingOrder: r,
    disabled: o,
    className: s
  } = e, a = qt(e, $ye), c = On(), f = Lt(), m = J({}, e, {
    classes: f.classes
  }), g = jye(m), y = Fye(f.slots, t, g.icon, r);
  if (!y)
    return null;
  const w = /* @__PURE__ */ $.jsx(f.slots.baseIconButton, J({
    tabIndex: -1,
    "aria-label": c.current.getLocaleText("columnHeaderSortIconLabel"),
    title: c.current.getLocaleText("columnHeaderSortIconLabel"),
    size: "small",
    disabled: o,
    className: et(g.root, s)
  }, (C = f.slotProps) == null ? void 0 : C.baseIconButton, a, {
    children: y
  }));
  return /* @__PURE__ */ $.jsxs(i4, {
    children: [n != null && /* @__PURE__ */ $.jsx(f.slots.baseBadge, {
      badgeContent: n,
      color: "default",
      overlap: "circular",
      children: w
    }), n == null && w]
  });
}
const zye = /* @__PURE__ */ x.memo(s4);
process.env.NODE_ENV !== "production" && (s4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  className: u.string,
  direction: u.oneOf(["asc", "desc"]),
  disabled: u.bool,
  field: u.string.isRequired,
  index: u.number,
  sortingOrder: u.arrayOf(u.oneOf(["asc", "desc"])).isRequired
});
const Bye = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    icon: ["filterIcon"]
  }, zn, t);
};
function a4(e) {
  return e.counter ? /* @__PURE__ */ $.jsx(l4, J({}, e)) : null;
}
process.env.NODE_ENV !== "production" && (a4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: u.number,
  field: u.string.isRequired,
  onClick: u.func
});
function l4(e) {
  var C, T;
  const {
    counter: t,
    field: n,
    onClick: r
  } = e, o = On(), s = Lt(), a = J({}, e, {
    classes: s.classes
  }), c = Bye(a), f = pr(), m = YS(o, dve, f), g = pr(), y = x.useCallback((E) => {
    E.preventDefault(), E.stopPropagation();
    const {
      open: O,
      openedPanelValue: k
    } = JS(o.current.state);
    O && k === dm.filters ? o.current.hideFilterPanel() : o.current.showFilterPanel(void 0, g, f), r && r(o.current.getColumnHeaderParams(n), E);
  }, [o, n, r, g, f]);
  if (!t)
    return null;
  const w = /* @__PURE__ */ $.jsx(s.slots.baseIconButton, J({
    id: f,
    onClick: y,
    color: "default",
    "aria-label": o.current.getLocaleText("columnHeaderFiltersLabel"),
    size: "small",
    tabIndex: -1,
    "aria-haspopup": "menu",
    "aria-expanded": m,
    "aria-controls": m ? g : void 0
  }, (C = s.slotProps) == null ? void 0 : C.baseIconButton, {
    children: /* @__PURE__ */ $.jsx(s.slots.columnFilteredIcon, {
      className: c.icon,
      fontSize: "small"
    })
  }));
  return /* @__PURE__ */ $.jsx(s.slots.baseTooltip, J({
    title: o.current.getLocaleText("columnHeaderFiltersTooltipActive")(t),
    enterDelay: 1e3
  }, (T = s.slotProps) == null ? void 0 : T.baseTooltip, {
    children: /* @__PURE__ */ $.jsxs(i4, {
      children: [t > 1 && /* @__PURE__ */ $.jsx(s.slots.baseBadge, {
        badgeContent: t,
        color: "default",
        children: w
      }), t === 1 && w]
    })
  }));
}
process.env.NODE_ENV !== "production" && (l4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  counter: u.number,
  field: u.string.isRequired,
  onClick: u.func
});
const hB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
}), "ArrowUpward"), mB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward"), gB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "KeyboardArrowRight"), vB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "ExpandMore"), Hye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
}), "FilterList"), yB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z"
}), "FilterAlt"), Vye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
}), "Search");
xn(/* @__PURE__ */ $.jsx("path", {
  d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
}), "Menu");
xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckCircle");
const Uye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
}), "ColumnIcon"), Wye = xn(/* @__PURE__ */ $.jsx("rect", {
  width: "1",
  height: "24",
  x: "11.5",
  rx: "0.5"
}), "Separator"), Gye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"
}), "ViewHeadline"), qye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z"
}), "TableRows"), Kye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M4 18h17v-6H4v6zM4 5v6h17V5H4z"
}), "ViewStream"), Yye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "TripleDotsVertical"), FP = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), bB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), "Add"), Xye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 13H5v-2h14v2z"
}), "Remove"), Qye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
}), "Load"), wB = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "Drag"), Jye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z"
}), "SaveAlt"), Zye = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
}), "Check"), ebe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
}), "MoreVert"), tbe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
}), "VisibilityOff"), nbe = xn(/* @__PURE__ */ $.jsx("g", {
  children: /* @__PURE__ */ $.jsx("path", {
    d: "M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z"
  })
}), "ViewColumn"), rbe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
xn(/* @__PURE__ */ $.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
const obe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"
}), "Delete");
function u4(e) {
  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;
}
const f_ = (e) => e.indexOf("Arrow") === 0 || e.indexOf("Page") === 0 || e === " " || e === "Home" || e === "End", ibe = (e) => !!e.key, c4 = (e) => e === "Tab" || e === "Escape";
function d4(e) {
  return (e.ctrlKey || e.metaKey) && // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,
  // for example, it would be another letter on a Dvorak physical keyboard.
  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,
  // for example, it would be ה on a Hebrew keyboard layout.
  // https://github.com/w3c/uievents/issues/377 could be a long-term solution
  String.fromCharCode(e.keyCode) === "V" && !e.shiftKey && !e.altKey;
}
function sbe(e) {
  return (e.ctrlKey || e.metaKey) && String.fromCharCode(e.keyCode) === "C" && !e.shiftKey && !e.altKey;
}
const abe = ["hideMenu", "colDef", "id", "labelledby", "className", "children", "open"], lbe = Ue(gC)(() => ({
  minWidth: 248
})), f4 = Yn(function(t, n) {
  const {
    hideMenu: r,
    id: o,
    labelledby: s,
    className: a,
    children: c,
    open: f
  } = t, m = qt(t, abe), g = x.useCallback((y) => {
    y.key === "Tab" && y.preventDefault(), c4(y.key) && r(y);
  }, [r]);
  return /* @__PURE__ */ $.jsx(lbe, J({
    id: o,
    className: et(se.menuList, a),
    "aria-labelledby": s,
    onKeyDown: g,
    autoFocus: f
  }, m, {
    ref: n,
    children: c
  }));
});
process.env.NODE_ENV !== "production" && (f4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  hideMenu: u.func.isRequired,
  id: u.string,
  labelledby: u.string,
  open: u.bool.isRequired
});
const ube = ["displayOrder"], cbe = (e) => {
  const t = $a(), n = Lt(), {
    defaultSlots: r,
    defaultSlotProps: o,
    slots: s = {},
    slotProps: a = {},
    hideMenu: c,
    colDef: f,
    addDividers: m = !0
  } = e, g = x.useMemo(() => J({}, r, s), [r, s]), y = x.useMemo(() => {
    if (!a || Object.keys(a).length === 0)
      return o;
    const T = J({}, a);
    return Object.entries(o).forEach(([E, O]) => {
      T[E] = J({}, O, a[E] || {});
    }), T;
  }, [o, a]), w = t.current.unstable_applyPipeProcessors("columnMenu", [], e.colDef), C = x.useMemo(() => {
    const T = Object.keys(r);
    return Object.keys(s).filter((E) => !T.includes(E));
  }, [s, r]);
  return x.useMemo(() => {
    const O = Array.from(/* @__PURE__ */ new Set([...w, ...C])).filter((k) => g[k] != null).sort((k, I) => {
      const M = y[k], N = y[I], P = Number.isFinite(M == null ? void 0 : M.displayOrder) ? M.displayOrder : 100, F = Number.isFinite(N == null ? void 0 : N.displayOrder) ? N.displayOrder : 100;
      return P - F;
    });
    return O.reduce((k, I, M) => {
      let N = {
        colDef: f,
        onClick: c
      };
      const P = y[I];
      if (P) {
        const F = qt(P, ube);
        N = J({}, N, F);
      }
      return m && M !== O.length - 1 ? [...k, [g[I], N], [n.slots.baseDivider, {}]] : [...k, [g[I], N]];
    }, []);
  }, [m, f, w, c, g, y, C, n.slots.baseDivider]);
};
function p4(e) {
  const {
    colDef: t,
    onClick: n
  } = e, r = On(), o = Lt(), c = po(r).filter((m) => m.disableColumnMenu !== !0).length === 1, f = x.useCallback((m) => {
    c || (r.current.setColumnVisibility(t.field, !1), n(m));
  }, [r, t.field, n, c]);
  return o.disableColumnSelector || t.hideable === !1 ? null : /* @__PURE__ */ $.jsxs(vl, {
    onClick: f,
    disabled: c,
    children: [/* @__PURE__ */ $.jsx(em, {
      children: /* @__PURE__ */ $.jsx(o.slots.columnMenuHideIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ $.jsx(tm, {
      children: r.current.getLocaleText("columnMenuHideColumn")
    })]
  });
}
process.env.NODE_ENV !== "production" && (p4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  onClick: u.func.isRequired
});
function h4(e) {
  const {
    onClick: t
  } = e, n = On(), r = Lt(), o = x.useCallback((s) => {
    t(s), n.current.showPreferences(dm.columns);
  }, [n, t]);
  return r.disableColumnSelector ? null : /* @__PURE__ */ $.jsxs(vl, {
    onClick: o,
    children: [/* @__PURE__ */ $.jsx(em, {
      children: /* @__PURE__ */ $.jsx(r.slots.columnMenuManageColumnsIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ $.jsx(tm, {
      children: n.current.getLocaleText("columnMenuManageColumns")
    })]
  });
}
process.env.NODE_ENV !== "production" && (h4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  onClick: u.func.isRequired
});
function m4(e) {
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(p4, J({}, e)), /* @__PURE__ */ $.jsx(h4, J({}, e))]
  });
}
process.env.NODE_ENV !== "production" && (m4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  onClick: u.func.isRequired
});
function g4(e) {
  const {
    colDef: t,
    onClick: n
  } = e, r = On(), o = Lt(), s = x.useCallback((a) => {
    n(a), r.current.showFilterPanel(t.field);
  }, [r, t.field, n]);
  return o.disableColumnFilter || !t.filterable ? null : /* @__PURE__ */ $.jsxs(vl, {
    onClick: s,
    children: [/* @__PURE__ */ $.jsx(em, {
      children: /* @__PURE__ */ $.jsx(o.slots.columnMenuFilterIcon, {
        fontSize: "small"
      })
    }), /* @__PURE__ */ $.jsx(tm, {
      children: r.current.getLocaleText("columnMenuFilter")
    })]
  });
}
process.env.NODE_ENV !== "production" && (g4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  onClick: u.func.isRequired
});
function v4(e) {
  const {
    colDef: t,
    onClick: n
  } = e, r = On(), o = Ze(r, iu), s = Lt(), a = x.useMemo(() => {
    if (!t)
      return null;
    const g = o.find((y) => y.field === t.field);
    return g == null ? void 0 : g.sort;
  }, [t, o]), c = t.sortingOrder ?? s.sortingOrder, f = x.useCallback((g) => {
    n(g);
    const y = g.currentTarget.getAttribute("data-value") || null;
    r.current.sortColumn(t.field, y === a ? null : y);
  }, [r, t, n, a]);
  if (s.disableColumnSorting || !t || !t.sortable || !c.some((g) => !!g))
    return null;
  const m = (g) => {
    const y = r.current.getLocaleText(g);
    return typeof y == "function" ? y(t) : y;
  };
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [c.includes("asc") && a !== "asc" ? /* @__PURE__ */ $.jsxs(vl, {
      onClick: f,
      "data-value": "asc",
      children: [/* @__PURE__ */ $.jsx(em, {
        children: /* @__PURE__ */ $.jsx(s.slots.columnMenuSortAscendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ $.jsx(tm, {
        children: m("columnMenuSortAsc")
      })]
    }) : null, c.includes("desc") && a !== "desc" ? /* @__PURE__ */ $.jsxs(vl, {
      onClick: f,
      "data-value": "desc",
      children: [/* @__PURE__ */ $.jsx(em, {
        children: /* @__PURE__ */ $.jsx(s.slots.columnMenuSortDescendingIcon, {
          fontSize: "small"
        })
      }), /* @__PURE__ */ $.jsx(tm, {
        children: m("columnMenuSortDesc")
      })]
    }) : null, c.includes(null) && a != null ? /* @__PURE__ */ $.jsxs(vl, {
      onClick: f,
      children: [/* @__PURE__ */ $.jsx(em, {}), /* @__PURE__ */ $.jsx(tm, {
        children: r.current.getLocaleText("columnMenuUnsort")
      })]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (v4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  onClick: u.func.isRequired
});
const dbe = ["defaultSlots", "defaultSlotProps", "slots", "slotProps"], fbe = {
  columnMenuSortItem: v4,
  columnMenuFilterItem: g4,
  columnMenuColumnsItem: m4
}, pbe = {
  columnMenuSortItem: {
    displayOrder: 10
  },
  columnMenuFilterItem: {
    displayOrder: 20
  },
  columnMenuColumnsItem: {
    displayOrder: 30
  }
}, y4 = Yn(function(t, n) {
  const {
    defaultSlots: r,
    defaultSlotProps: o,
    slots: s,
    slotProps: a
  } = t, c = qt(t, dbe), f = cbe(J({}, c, {
    defaultSlots: r,
    defaultSlotProps: o,
    slots: s,
    slotProps: a
  }));
  return /* @__PURE__ */ $.jsx(f4, J({}, c, {
    ref: n,
    children: f.map(([m, g], y) => /* @__PURE__ */ $.jsx(m, J({}, g), y))
  }));
});
process.env.NODE_ENV !== "production" && (y4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  /**
   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlotProps: u.object.isRequired,
  /**
   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages
   * @ignore - do not document.
   */
  defaultSlots: u.object.isRequired,
  hideMenu: u.func.isRequired,
  id: u.string,
  labelledby: u.string,
  open: u.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: u.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: u.object
});
const b4 = Yn(function(t, n) {
  return /* @__PURE__ */ $.jsx(y4, J({}, t, {
    ref: n,
    defaultSlots: fbe,
    defaultSlotProps: pbe
  }));
});
process.env.NODE_ENV !== "production" && (b4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  colDef: u.object.isRequired,
  hideMenu: u.func.isRequired,
  id: u.string,
  labelledby: u.string,
  open: u.bool.isRequired,
  /**
   * Could be used to pass new props or override props specific to a column menu component
   * e.g. `displayOrder`
   */
  slotProps: u.object,
  /**
   * `slots` could be used to add new and (or) override default column menu items
   * If you register a nee component you must pass it's `displayOrder` in `slotProps`
   * or it will be placed in the end of the list
   */
  slots: u.object
});
const hbe = ["className", "slotProps"], mbe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["panelWrapper"]
  }, zn, t);
}, gbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "PanelWrapper",
  overridesResolver: (e, t) => t.panelWrapper
})({
  display: "flex",
  flexDirection: "column",
  flex: 1,
  "&:focus": {
    outline: 0
  }
}), vbe = () => !0, eA = Yn(function(t, n) {
  const {
    className: r,
    slotProps: o = {}
  } = t, s = qt(t, hbe), a = Lt(), c = mbe(a);
  return /* @__PURE__ */ $.jsx(BS, J({
    open: !0,
    disableEnforceFocus: !0,
    isEnabled: vbe
  }, o.TrapFocus, {
    children: /* @__PURE__ */ $.jsx(gbe, J({
      tabIndex: -1,
      className: et(c.root, r),
      ownerState: a
    }, s, {
      ref: n
    }))
  }));
});
process.env.NODE_ENV !== "production" && (eA.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: u.object
});
function w4(e) {
  var n;
  const t = Lt();
  return /* @__PURE__ */ $.jsx(eA, J({}, e, {
    children: /* @__PURE__ */ $.jsx(t.slots.columnsManagement, J({}, (n = t.slotProps) == null ? void 0 : n.columnsManagement))
  }));
}
process.env.NODE_ENV !== "production" && (w4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  slotProps: u.object
});
const ybe = ["children", "className", "classes"], bbe = pn("MuiDataGrid", ["panel", "paper"]), wbe = Ue(lp, {
  name: "MuiDataGrid",
  slot: "Panel",
  overridesResolver: (e, t) => t.panel
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), Sbe = Ue(bu, {
  name: "MuiDataGrid",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  minWidth: 300,
  maxHeight: 450,
  display: "flex",
  maxWidth: `calc(100vw - ${e.spacing(0.5)})`,
  overflow: "auto"
})), S4 = Yn((e, t) => {
  const {
    children: n,
    className: r
  } = e, o = qt(e, ybe), s = On(), a = Lt(), c = bbe, [f, m] = x.useState(!1), g = x.useCallback(() => {
    s.current.hidePreferences();
  }, [s]), y = x.useCallback((E) => {
    E.key === "Escape" && s.current.hidePreferences();
  }, [s]), w = x.useMemo(() => [{
    name: "flip",
    enabled: !0,
    options: {
      rootBoundary: "document"
    }
  }, {
    name: "isPlaced",
    enabled: !0,
    phase: "main",
    fn: () => {
      m(!0);
    },
    effect: () => () => {
      m(!1);
    }
  }], []), [C, T] = x.useState(null);
  return x.useEffect(() => {
    var O, k;
    const E = (k = (O = s.current.rootElementRef) == null ? void 0 : O.current) == null ? void 0 : k.querySelector('[data-id="gridPanelAnchor"]');
    E && T(E);
  }, [s]), C ? /* @__PURE__ */ $.jsx(wbe, J({
    placement: "bottom-start",
    className: et(c.panel, r),
    ownerState: a,
    anchorEl: C,
    modifiers: w
  }, o, {
    ref: t,
    children: /* @__PURE__ */ $.jsx(zS, {
      mouseEvent: "onPointerUp",
      touchEvent: !1,
      onClickAway: g,
      children: /* @__PURE__ */ $.jsx(Sbe, {
        className: c.paper,
        ownerState: a,
        elevation: 8,
        onKeyDown: y,
        children: f && n
      })
    })
  })) : null;
});
process.env.NODE_ENV !== "production" && (S4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Popper render function or node.
   */
  children: u.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * If `true`, the component is shown.
   */
  open: u.bool.isRequired,
  ownerState: u.object
});
const Cbe = ["className"], xbe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["panelContent"]
  }, zn, t);
}, Ebe = Lr("div", {
  name: "MuiDataGrid",
  slot: "PanelContent",
  overridesResolver: (e, t) => t.panelContent
})({
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400
});
function C4(e) {
  const {
    className: t
  } = e, n = qt(e, Cbe), r = Lt(), o = xbe(r);
  return /* @__PURE__ */ $.jsx(Ebe, J({
    className: et(o.root, t),
    ownerState: r
  }, n));
}
process.env.NODE_ENV !== "production" && (C4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const Tbe = ["className"], _be = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["panelFooter"]
  }, zn, t);
}, Obe = Lr("div", {
  name: "MuiDataGrid",
  slot: "PanelFooter",
  overridesResolver: (e, t) => t.panelFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5),
  display: "flex",
  justifyContent: "space-between"
}));
function x4(e) {
  const {
    className: t
  } = e, n = qt(e, Tbe), r = Lt(), o = _be(r);
  return /* @__PURE__ */ $.jsx(Obe, J({
    className: et(o.root, t),
    ownerState: r
  }, n));
}
process.env.NODE_ENV !== "production" && (x4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const Rbe = ["item", "hasMultipleFilters", "deleteFilter", "applyFilterChanges", "showMultiFilterOperators", "disableMultiFilterOperator", "applyMultiFilterOperatorChanges", "focusElementRef", "logicOperators", "columnsSort", "filterColumns", "deleteIconProps", "logicOperatorInputProps", "operatorInputProps", "columnInputProps", "valueInputProps", "readOnly", "children"], kbe = ["InputComponentProps"], Pbe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["filterForm"],
    deleteIcon: ["filterFormDeleteIcon"],
    logicOperatorInput: ["filterFormLogicOperatorInput"],
    columnInput: ["filterFormColumnInput"],
    operatorInput: ["filterFormOperatorInput"],
    valueInput: ["filterFormValueInput"]
  }, zn, t);
}, Mbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterForm",
  overridesResolver: (e, t) => t.filterForm
})(({
  theme: e
}) => ({
  display: "flex",
  padding: e.spacing(1)
})), Ibe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormDeleteIcon",
  overridesResolver: (e, t) => t.filterFormDeleteIcon
})(({
  theme: e
}) => ({
  flexShrink: 0,
  justifyContent: "flex-end",
  marginRight: e.spacing(0.5),
  marginBottom: e.spacing(0.2)
})), Dbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormLogicOperatorInput",
  overridesResolver: (e, t) => t.filterFormLogicOperatorInput
})({
  minWidth: 55,
  marginRight: 5,
  justifyContent: "end"
}), Abe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormColumnInput",
  overridesResolver: (e, t) => t.filterFormColumnInput
})({
  width: 150
}), Nbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormOperatorInput",
  overridesResolver: (e, t) => t.filterFormOperatorInput
})({
  width: 150
}), Lbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "FilterFormValueInput",
  overridesResolver: (e, t) => t.filterFormValueInput
})({
  width: 190
}), $be = (e) => {
  switch (e) {
    case Ms.And:
      return "filterPanelOperatorAnd";
    case Ms.Or:
      return "filterPanelOperatorOr";
    default:
      throw new Error("MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.");
  }
}, Yw = (e) => e.headerName || e.field, SB = new Intl.Collator(), rI = Yn(function(t, n) {
  var Be, tt, $e, rt, ot, wt, gt, nt, Ft;
  const {
    item: r,
    hasMultipleFilters: o,
    deleteFilter: s,
    applyFilterChanges: a,
    showMultiFilterOperators: c,
    disableMultiFilterOperator: f,
    applyMultiFilterOperatorChanges: m,
    focusElementRef: g,
    logicOperators: y = [Ms.And, Ms.Or],
    columnsSort: w,
    filterColumns: C,
    deleteIconProps: T = {},
    logicOperatorInputProps: E = {},
    operatorInputProps: O = {},
    columnInputProps: k = {},
    valueInputProps: I = {},
    readOnly: M
  } = t, N = qt(t, Rbe), P = On(), F = Ze(P, kd), H = Ze(P, W5), U = Ze(P, Ei), z = pr(), A = pr(), q = pr(), W = pr(), Y = Lt(), ee = Pbe(Y), G = x.useRef(null), K = x.useRef(null), X = U.logicOperator ?? Ms.And, te = o && y.length > 0, re = ((Be = Y.slotProps) == null ? void 0 : Be.baseFormControl) || {}, B = (((tt = Y.slotProps) == null ? void 0 : tt.baseSelect) || {}).native ?? !1, ie = (($e = Y.slotProps) == null ? void 0 : $e.baseInputLabel) || {}, de = ((rt = Y.slotProps) == null ? void 0 : rt.baseSelectOption) || {}, {
    InputComponentProps: ue
  } = I, he = qt(I, kbe), {
    filteredColumns: ge,
    selectedField: fe
  } = x.useMemo(() => {
    let ut = r.field;
    const Et = F[r.field].filterable === !1 ? F[r.field] : null;
    if (Et)
      return {
        filteredColumns: [Et],
        selectedField: ut
      };
    if (C === void 0 || typeof C != "function")
      return {
        filteredColumns: H,
        selectedField: ut
      };
    const Tt = C({
      field: r.field,
      columns: H,
      currentFilters: (U == null ? void 0 : U.items) || []
    });
    return {
      filteredColumns: H.filter((At) => {
        const vt = Tt.includes(At.field);
        return At.field === r.field && !vt && (ut = void 0), vt;
      }),
      selectedField: ut
    };
  }, [C, U == null ? void 0 : U.items, H, r.field, F]), pe = x.useMemo(() => {
    switch (w) {
      case "asc":
        return ge.sort((ut, Et) => SB.compare(Yw(ut), Yw(Et)));
      case "desc":
        return ge.sort((ut, Et) => -SB.compare(Yw(ut), Yw(Et)));
      default:
        return ge;
    }
  }, [ge, w]), be = r.field ? P.current.getColumn(r.field) : null, we = x.useMemo(() => {
    var ut;
    return !r.operator || !be ? null : (ut = be.filterOperators) == null ? void 0 : ut.find((Et) => Et.value === r.operator);
  }, [r, be]), _e = x.useCallback((ut) => {
    const Et = ut.target.value, Tt = P.current.getColumn(Et);
    if (Tt.field === be.field)
      return;
    const At = Tt.filterOperators.find((Oe) => Oe.value === r.operator) || Tt.filterOperators[0];
    let Xe = !At.InputComponent || At.InputComponent !== (we == null ? void 0 : we.InputComponent) || Tt.type !== be.type ? void 0 : r.value;
    if (Tt.type === "singleSelect" && Xe !== void 0) {
      const Oe = Tt, Ie = cm(Oe);
      Array.isArray(Xe) ? Xe = Xe.filter((pt) => (
        // Only keep values that are in the new value options
        l_(pt, Ie, Oe == null ? void 0 : Oe.getOptionValue) !== void 0
      )) : l_(r.value, Ie, Oe == null ? void 0 : Oe.getOptionValue) === void 0 && (Xe = void 0);
    }
    a(J({}, r, {
      field: Et,
      operator: At.value,
      value: Xe
    }));
  }, [P, a, r, be, we]), ce = x.useCallback((ut) => {
    const Et = ut.target.value, Tt = be == null ? void 0 : be.filterOperators.find((vt) => vt.value === Et), At = !(Tt != null && Tt.InputComponent) || (Tt == null ? void 0 : Tt.InputComponent) !== (we == null ? void 0 : we.InputComponent);
    a(J({}, r, {
      operator: Et,
      value: At ? void 0 : r.value
    }));
  }, [a, r, be, we]), Ce = x.useCallback((ut) => {
    const Et = ut.target.value === Ms.And.toString() ? Ms.And : Ms.Or;
    m(Et);
  }, [m]), Ne = () => {
    s(r);
  };
  return x.useImperativeHandle(g, () => ({
    focus: () => {
      var ut;
      we != null && we.InputComponent ? (ut = G == null ? void 0 : G.current) == null || ut.focus() : K.current.focus();
    }
  }), [we]), /* @__PURE__ */ $.jsxs(Mbe, J({
    className: ee.root,
    "data-id": r.id,
    ownerState: Y
  }, N, {
    ref: n,
    children: [/* @__PURE__ */ $.jsx(Ibe, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, T, {
      className: et(ee.deleteIcon, re.className, T.className),
      ownerState: Y,
      children: /* @__PURE__ */ $.jsx(Y.slots.baseIconButton, J({
        "aria-label": P.current.getLocaleText("filterPanelDeleteIconLabel"),
        title: P.current.getLocaleText("filterPanelDeleteIconLabel"),
        onClick: Ne,
        size: "small",
        disabled: M
      }, (ot = Y.slotProps) == null ? void 0 : ot.baseIconButton, {
        children: /* @__PURE__ */ $.jsx(Y.slots.filterPanelDeleteIcon, {
          fontSize: "small"
        })
      }))
    })), /* @__PURE__ */ $.jsx(Dbe, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, E, {
      sx: [te ? {
        display: "flex"
      } : {
        display: "none"
      }, c ? {
        visibility: "visible"
      } : {
        visibility: "hidden"
      }, re.sx, E.sx],
      className: et(ee.logicOperatorInput, re.className, E.className),
      ownerState: Y,
      children: /* @__PURE__ */ $.jsx(Y.slots.baseSelect, J({
        inputProps: {
          "aria-label": P.current.getLocaleText("filterPanelLogicOperator")
        },
        value: X ?? "",
        onChange: Ce,
        disabled: !!f || y.length === 1,
        native: B
      }, (wt = Y.slotProps) == null ? void 0 : wt.baseSelect, {
        children: y.map((ut) => /* @__PURE__ */ x.createElement(Y.slots.baseSelectOption, J({}, de, {
          native: B,
          key: ut.toString(),
          value: ut.toString()
        }), P.current.getLocaleText($be(ut))))
      }))
    })), /* @__PURE__ */ $.jsxs(Abe, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, k, {
      className: et(ee.columnInput, re.className, k.className),
      ownerState: Y,
      children: [/* @__PURE__ */ $.jsx(Y.slots.baseInputLabel, J({}, ie, {
        htmlFor: z,
        id: A,
        children: P.current.getLocaleText("filterPanelColumns")
      })), /* @__PURE__ */ $.jsx(Y.slots.baseSelect, J({
        labelId: A,
        id: z,
        label: P.current.getLocaleText("filterPanelColumns"),
        value: fe ?? "",
        onChange: _e,
        native: B,
        disabled: M
      }, (gt = Y.slotProps) == null ? void 0 : gt.baseSelect, {
        children: pe.map((ut) => /* @__PURE__ */ x.createElement(Y.slots.baseSelectOption, J({}, de, {
          native: B,
          key: ut.field,
          value: ut.field
        }), Yw(ut)))
      }))]
    })), /* @__PURE__ */ $.jsxs(Nbe, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, O, {
      className: et(ee.operatorInput, re.className, O.className),
      ownerState: Y,
      children: [/* @__PURE__ */ $.jsx(Y.slots.baseInputLabel, J({}, ie, {
        htmlFor: q,
        id: W,
        children: P.current.getLocaleText("filterPanelOperator")
      })), /* @__PURE__ */ $.jsx(Y.slots.baseSelect, J({
        labelId: W,
        label: P.current.getLocaleText("filterPanelOperator"),
        id: q,
        value: r.operator,
        onChange: ce,
        native: B,
        inputRef: K,
        disabled: M
      }, (nt = Y.slotProps) == null ? void 0 : nt.baseSelect, {
        children: (Ft = be == null ? void 0 : be.filterOperators) == null ? void 0 : Ft.map((ut) => /* @__PURE__ */ x.createElement(Y.slots.baseSelectOption, J({}, de, {
          native: B,
          key: ut.value,
          value: ut.value
        }), ut.label || P.current.getLocaleText(`filterOperator${He(ut.value)}`)))
      }))]
    })), /* @__PURE__ */ $.jsx(Lbe, J({
      variant: "standard",
      as: Y.slots.baseFormControl
    }, re, he, {
      className: et(ee.valueInput, re.className, he.className),
      ownerState: Y,
      children: we != null && we.InputComponent ? /* @__PURE__ */ $.jsx(we.InputComponent, J({
        apiRef: P,
        item: r,
        applyValue: a,
        focusElementRef: G,
        disabled: M
      }, we.InputComponentProps, ue), r.field) : null
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (rI.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Callback called when the operator, column field or value is changed.
   * @param {GridFilterItem} item The updated [[GridFilterItem]].
   */
  applyFilterChanges: u.func.isRequired,
  /**
   * Callback called when the logic operator is changed.
   * @param {GridLogicOperator} operator The new logic operator.
   */
  applyMultiFilterOperatorChanges: u.func.isRequired,
  /**
   * @ignore - do not document.
   */
  children: u.node,
  /**
   * Props passed to the column input component.
   * @default {}
   */
  columnInputProps: u.any,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: u.oneOf(["asc", "desc"]),
  /**
   * Callback called when the delete button is clicked.
   * @param {GridFilterItem} item The deleted [[GridFilterItem]].
   */
  deleteFilter: u.func.isRequired,
  /**
   * Props passed to the delete icon.
   * @default {}
   */
  deleteIconProps: u.any,
  /**
   * If `true`, disables the logic operator field but still renders it.
   */
  disableMultiFilterOperator: u.bool,
  /**
   * Allows to filter the columns displayed in the filter form.
   * @param {FilterColumnsArgs} args The columns of the grid and name of field.
   * @returns {GridColDef['field'][]} The filtered fields array.
   */
  filterColumns: u.func,
  /**
   * A ref allowing to set imperative focus.
   * It can be passed to the el
   */
  focusElementRef: u.oneOfType([u.func, u.object]),
  /**
   * If `true`, the logic operator field is rendered.
   * The field will be invisible if `showMultiFilterOperators` is also `true`.
   */
  hasMultipleFilters: u.bool.isRequired,
  /**
   * The [[GridFilterItem]] representing this form.
   */
  item: u.shape({
    field: u.string.isRequired,
    id: u.oneOfType([u.number, u.string]),
    operator: u.string.isRequired,
    value: u.any
  }).isRequired,
  /**
   * Props passed to the logic operator input component.
   * @default {}
   */
  logicOperatorInputProps: u.any,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: u.arrayOf(u.oneOf(["and", "or"]).isRequired),
  /**
   * Props passed to the operator input component.
   * @default {}
   */
  operatorInputProps: u.any,
  /**
   * `true` if the filter is disabled/read only.
   * i.e. `colDef.fiterable = false` but passed in `filterModel`
   * @default false
   */
  readOnly: u.bool,
  /**
   * If `true`, the logic operator field is visible.
   */
  showMultiFilterOperators: u.bool,
  /**
   * Props passed to the value input component.
   * @default {}
   */
  valueInputProps: u.any
});
const jbe = ["logicOperators", "columnsSort", "filterFormProps", "getColumnForNewFilter", "children", "disableAddFilterButton", "disableRemoveAllButton"], CB = (e) => ({
  field: e.field,
  operator: e.filterOperators[0].value,
  id: Math.round(Math.random() * 1e5)
}), E4 = Yn(function(t, n) {
  var W, Y;
  const r = On(), o = Lt(), s = Ze(r, Ei), a = Ze(r, W5), c = Ze(r, Che), f = x.useRef(null), m = x.useRef(null), {
    logicOperators: g = [Ms.And, Ms.Or],
    columnsSort: y,
    filterFormProps: w,
    getColumnForNewFilter: C,
    disableAddFilterButton: T = !1,
    disableRemoveAllButton: E = !1
  } = t, O = qt(t, jbe), k = r.current.upsertFilterItem, I = x.useCallback((ee) => {
    r.current.setFilterLogicOperator(ee);
  }, [r]), M = x.useCallback(() => {
    let ee;
    if (C && typeof C == "function") {
      const G = C({
        currentFilters: (s == null ? void 0 : s.items) || [],
        columns: a
      });
      if (G === null)
        return null;
      ee = a.find(({
        field: K
      }) => K === G);
    } else
      ee = a.find((G) => {
        var K;
        return (K = G.filterOperators) == null ? void 0 : K.length;
      });
    return ee ? CB(ee) : null;
  }, [s == null ? void 0 : s.items, a, C]), N = x.useCallback(() => {
    if (C === void 0 || typeof C != "function")
      return M();
    const ee = s.items.length ? s.items : [M()].filter(Boolean), G = C({
      currentFilters: ee,
      columns: a
    });
    if (G === null)
      return null;
    const K = a.find(({
      field: X
    }) => X === G);
    return K ? CB(K) : null;
  }, [s.items, a, C, M]), P = x.useMemo(() => s.items.length ? s.items : (m.current || (m.current = M()), m.current ? [m.current] : []), [s.items, M]), F = P.length > 1, {
    readOnlyFilters: H,
    validFilters: U
  } = x.useMemo(() => P.reduce((ee, G) => (c[G.field] ? ee.validFilters.push(G) : ee.readOnlyFilters.push(G), ee), {
    readOnlyFilters: [],
    validFilters: []
  }), [P, c]), z = x.useCallback(() => {
    const ee = N();
    ee && r.current.upsertFilterItems([...P, ee]);
  }, [r, N, P]), A = x.useCallback((ee) => {
    const G = U.length === 1;
    r.current.deleteFilterItem(ee), G && r.current.hideFilterPanel();
  }, [r, U.length]), q = x.useCallback(() => U.length === 1 && U[0].value === void 0 ? (r.current.deleteFilterItem(U[0]), r.current.hideFilterPanel()) : r.current.setFilterModel(J({}, s, {
    items: H
  }), "removeAllFilterItems"), [r, H, s, U]);
  return x.useEffect(() => {
    g.length > 0 && s.logicOperator && !g.includes(s.logicOperator) && I(g[0]);
  }, [g, I, s.logicOperator]), x.useEffect(() => {
    U.length > 0 && f.current.focus();
  }, [U.length]), /* @__PURE__ */ $.jsxs(eA, J({}, O, {
    ref: n,
    children: [/* @__PURE__ */ $.jsxs(C4, {
      children: [H.map((ee, G) => /* @__PURE__ */ $.jsx(rI, J({
        item: ee,
        applyFilterChanges: k,
        deleteFilter: A,
        hasMultipleFilters: F,
        showMultiFilterOperators: G > 0,
        disableMultiFilterOperator: G !== 1,
        applyMultiFilterOperatorChanges: I,
        focusElementRef: null,
        readOnly: !0,
        logicOperators: g,
        columnsSort: y
      }, w), ee.id == null ? G : ee.id)), U.map((ee, G) => /* @__PURE__ */ $.jsx(rI, J({
        item: ee,
        applyFilterChanges: k,
        deleteFilter: A,
        hasMultipleFilters: F,
        showMultiFilterOperators: H.length + G > 0,
        disableMultiFilterOperator: H.length + G !== 1,
        applyMultiFilterOperatorChanges: I,
        focusElementRef: G === U.length - 1 ? f : null,
        logicOperators: g,
        columnsSort: y
      }, w), ee.id == null ? G + H.length : ee.id))]
    }), !o.disableMultipleColumnsFiltering && !(T && E) ? /* @__PURE__ */ $.jsxs(x4, {
      children: [T ? /* @__PURE__ */ $.jsx("span", {}) : /* @__PURE__ */ $.jsx(o.slots.baseButton, J({
        onClick: z,
        startIcon: /* @__PURE__ */ $.jsx(o.slots.filterPanelAddIcon, {})
      }, (W = o.slotProps) == null ? void 0 : W.baseButton, {
        children: r.current.getLocaleText("filterPanelAddFilter")
      })), !E && U.length > 0 ? /* @__PURE__ */ $.jsx(o.slots.baseButton, J({
        onClick: q,
        startIcon: /* @__PURE__ */ $.jsx(o.slots.filterPanelRemoveAllIcon, {})
      }, (Y = o.slotProps) == null ? void 0 : Y.baseButton, {
        children: r.current.getLocaleText("filterPanelRemoveAll")
      })) : null]
    }) : null]
  }));
});
process.env.NODE_ENV !== "production" && (E4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * @ignore - do not document.
   */
  children: u.node,
  /**
   * Changes how the options in the columns selector should be ordered.
   * If not specified, the order is derived from the `columns` prop.
   */
  columnsSort: u.oneOf(["asc", "desc"]),
  /**
   * If `true`, the `Add filter` button will not be displayed.
   * @default false
   */
  disableAddFilterButton: u.bool,
  /**
   * If `true`, the `Remove all` button will be disabled
   * @default false
   */
  disableRemoveAllButton: u.bool,
  /**
   * Props passed to each filter form.
   */
  filterFormProps: u.shape({
    columnInputProps: u.any,
    columnsSort: u.oneOf(["asc", "desc"]),
    deleteIconProps: u.any,
    filterColumns: u.func,
    logicOperatorInputProps: u.any,
    operatorInputProps: u.any,
    valueInputProps: u.any
  }),
  /**
   * Function that returns the next filter item to be picked as default filter.
   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.
   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.
   */
  getColumnForNewFilter: u.func,
  /**
   * Sets the available logic operators.
   * @default [GridLogicOperator.And, GridLogicOperator.Or]
   */
  logicOperators: u.arrayOf(u.oneOf(["and", "or"]).isRequired),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const Fbe = (e, t) => {
  const n = new Set(Object.keys(e).filter((s) => e[s] === !1)), r = new Set(Object.keys(t).filter((s) => t[s] === !1));
  if (n.size !== r.size)
    return !1;
  let o = !0;
  return n.forEach((s) => {
    r.has(s) || (o = !1);
  }), o;
}, zbe = (e, t) => (e.headerName || e.field).toLowerCase().indexOf(t) > -1, Bbe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["columnsManagement"],
    header: ["columnsManagementHeader"],
    searchInput: ["columnsManagementSearchInput"],
    footer: ["columnsManagementFooter"],
    row: ["columnsManagementRow"]
  }, zn, t);
}, xB = new Intl.Collator();
function T4(e) {
  var G, K, X, te;
  const t = On(), n = x.useRef(null), r = Ze(t, bl), o = Ol(() => ml(t)).current, s = Ze(t, ml), a = Lt(), [c, f] = x.useState(""), m = Bbe(a), {
    sort: g,
    searchPredicate: y = zbe,
    autoFocusSearchField: w = !0,
    disableShowHideToggle: C = !1,
    disableResetButton: T = !1,
    toggleAllMode: E = "all",
    getTogglableColumns: O,
    searchInputProps: k
  } = e, I = x.useMemo(() => Fbe(s, o), [s, o]), M = x.useMemo(() => {
    switch (g) {
      case "asc":
        return [...r].sort((re, Q) => xB.compare(re.headerName || re.field, Q.headerName || Q.field));
      case "desc":
        return [...r].sort((re, Q) => -xB.compare(re.headerName || re.field, Q.headerName || Q.field));
      default:
        return r;
    }
  }, [r, g]), N = (re) => {
    const {
      name: Q
    } = re.target;
    t.current.setColumnVisibility(Q, s[Q] === !1);
  }, P = x.useMemo(() => {
    const re = O ? O(M) : null, Q = re ? M.filter(({
      field: B
    }) => re.includes(B)) : M;
    return c ? Q.filter((B) => y(B, c.toLowerCase())) : Q;
  }, [M, c, y, O]), F = x.useCallback((re) => {
    const Q = ml(t), B = J({}, Q), ie = O ? O(r) : null;
    return (E === "filteredOnly" ? P : r).forEach((de) => {
      de.hideable && (ie == null || ie.includes(de.field)) && (re ? delete B[de.field] : B[de.field] = !1);
    }), t.current.setColumnVisibilityModel(B);
  }, [t, r, O, E, P]), H = x.useCallback((re) => {
    f(re.target.value);
  }, []), U = x.useMemo(() => P.filter((re) => re.hideable), [P]), z = x.useMemo(() => U.every((re) => s[re.field] == null || s[re.field] !== !1), [s, U]), A = x.useMemo(() => U.every((re) => s[re.field] === !1), [s, U]), q = x.useRef(null);
  x.useEffect(() => {
    w ? n.current.focus() : q.current && typeof q.current.focus == "function" && q.current.focus();
  }, [w]);
  let W = !1;
  const Y = (re) => W === !1 && re.hideable !== !1 ? (W = !0, !0) : !1, ee = x.useCallback(() => {
    f(""), n.current.focus();
  }, []);
  return /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(Vbe, {
      className: m.header,
      ownerState: a,
      children: /* @__PURE__ */ $.jsx(Ube, J({
        as: a.slots.baseTextField,
        ownerState: a,
        placeholder: t.current.getLocaleText("columnsManagementSearchTitle"),
        inputRef: n,
        className: m.searchInput,
        value: c,
        onChange: H,
        variant: "outlined",
        size: "small",
        type: "search",
        InputProps: {
          startAdornment: /* @__PURE__ */ $.jsx(a.slots.baseInputAdornment, {
            position: "start",
            children: /* @__PURE__ */ $.jsx(a.slots.quickFilterIcon, {})
          }),
          endAdornment: /* @__PURE__ */ $.jsx(a.slots.baseIconButton, J({
            "aria-label": t.current.getLocaleText("columnsManagementDeleteIconLabel"),
            size: "small",
            sx: [c ? {
              visibility: "visible"
            } : {
              visibility: "hidden"
            }],
            tabIndex: -1,
            onClick: ee
          }, (G = a.slotProps) == null ? void 0 : G.baseIconButton, {
            children: /* @__PURE__ */ $.jsx(a.slots.quickFilterClearIcon, {
              fontSize: "small"
            })
          }))
        },
        inputProps: {
          "aria-label": t.current.getLocaleText("columnsManagementSearchTitle")
        },
        autoComplete: "off",
        fullWidth: !0
      }, (K = a.slotProps) == null ? void 0 : K.baseTextField, k))
    }), /* @__PURE__ */ $.jsxs(Hbe, {
      className: m.root,
      ownerState: a,
      children: [P.map((re) => {
        var Q;
        return /* @__PURE__ */ $.jsx(yM, {
          className: m.row,
          control: /* @__PURE__ */ $.jsx(a.slots.baseCheckbox, J({
            disabled: re.hideable === !1,
            checked: s[re.field] !== !1,
            onClick: N,
            name: re.field,
            sx: {
              p: 0.5
            },
            inputRef: Y(re) ? q : void 0
          }, (Q = a.slotProps) == null ? void 0 : Q.baseCheckbox)),
          label: re.headerName || re.field
        }, re.field);
      }), P.length === 0 && /* @__PURE__ */ $.jsx(Gbe, {
        ownerState: a,
        children: t.current.getLocaleText("columnsManagementNoColumns")
      })]
    }), (!C || !T) && P.length > 0 ? /* @__PURE__ */ $.jsxs(Wbe, {
      ownerState: a,
      className: m.footer,
      children: [C ? /* @__PURE__ */ $.jsx("span", {}) : /* @__PURE__ */ $.jsx(yM, {
        control: /* @__PURE__ */ $.jsx(a.slots.baseCheckbox, J({
          disabled: U.length === 0,
          checked: z,
          indeterminate: !z && !A,
          onClick: () => F(!z),
          name: t.current.getLocaleText("columnsManagementShowHideAllText"),
          sx: {
            p: 0.5
          }
        }, (X = a.slotProps) == null ? void 0 : X.baseCheckbox)),
        label: t.current.getLocaleText("columnsManagementShowHideAllText")
      }), T ? null : /* @__PURE__ */ $.jsx(a.slots.baseButton, J({
        onClick: () => t.current.setColumnVisibilityModel(o),
        disabled: I
      }, (te = a.slotProps) == null ? void 0 : te.baseButton, {
        children: t.current.getLocaleText("columnsManagementReset")
      }))]
    }) : null]
  });
}
process.env.NODE_ENV !== "production" && (T4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the column search field will be focused automatically.
   * If `false`, the first column switch input will be focused automatically.
   * This helps to avoid input keyboard panel to popup automatically on touch devices.
   * @default true
   */
  autoFocusSearchField: u.bool,
  /**
   * If `true`, the `Reset` button will not be disabled
   * @default false
   */
  disableResetButton: u.bool,
  /**
   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.
   * @default false
   */
  disableShowHideToggle: u.bool,
  /**
   * Returns the list of togglable columns.
   * If used, only those columns will be displayed in the panel
   * which are passed as the return value of the function.
   * @param {GridColDef[]} columns The `ColDef` list of all columns.
   * @returns {GridColDef['field'][]} The list of togglable columns' field names.
   */
  getTogglableColumns: u.func,
  searchInputProps: u.object,
  searchPredicate: u.func,
  sort: u.oneOf(["asc", "desc"]),
  /**
   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:
   * - `all`: Will toggle all columns.
   * - `filteredOnly`: Will only toggle columns that match the search criteria.
   * @default 'all'
   */
  toggleAllMode: u.oneOf(["all", "filteredOnly"])
});
const Hbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagement",
  overridesResolver: (e, t) => t.columnsManagement
})(({
  theme: e
}) => ({
  padding: e.spacing(0, 3, 1.5),
  display: "flex",
  flexDirection: "column",
  overflow: "auto",
  flex: "1 1",
  maxHeight: 400,
  alignItems: "flex-start"
})), Vbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementHeader",
  overridesResolver: (e, t) => t.columnsManagementHeader
})(({
  theme: e
}) => ({
  padding: e.spacing(1.5, 3)
})), Ube = Ue(jf, {
  name: "MuiDataGrid",
  slot: "ColumnsManagementSearchInput",
  overridesResolver: (e, t) => t.columnsManagementSearchInput
})(({
  theme: e
}) => ({
  [`& .${Ti.root}`]: {
    padding: e.spacing(0, 1.5, 0, 1.5)
  },
  [`& .${Ti.input}::-webkit-search-decoration,
  & .${Ti.input}::-webkit-search-cancel-button,
  & .${Ti.input}::-webkit-search-results-button,
  & .${Ti.input}::-webkit-search-results-decoration`]: {
    /* clears the 'X' icon from Chrome */
    display: "none"
  }
})), Wbe = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnsManagementFooter",
  overridesResolver: (e, t) => t.columnsManagementFooter
})(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 1, 0.5, 3),
  display: "flex",
  justifyContent: "space-between",
  borderTop: `1px solid ${e.palette.divider}`
})), Gbe = Ue("div")(({
  theme: e
}) => ({
  padding: e.spacing(0.5, 0),
  color: e.palette.grey[500]
})), _4 = Yn(function(t, n) {
  var I, M;
  const {
    children: r,
    slotProps: o = {}
  } = t, s = o.button || {}, a = o.tooltip || {}, c = On(), f = Lt(), m = pr(), g = pr(), [y, w] = x.useState(!1), C = x.useRef(null), T = Pr(n, C), E = (N) => {
    var P;
    w((F) => !F), (P = s.onClick) == null || P.call(s, N);
  }, O = () => w(!1), k = (N) => {
    N.key === "Tab" && N.preventDefault(), c4(N.key) && O();
  };
  return r == null ? null : /* @__PURE__ */ $.jsxs(x.Fragment, {
    children: [/* @__PURE__ */ $.jsx(f.slots.baseTooltip, J({
      title: c.current.getLocaleText("toolbarExportLabel"),
      enterDelay: 1e3
    }, (I = f.slotProps) == null ? void 0 : I.baseTooltip, a, {
      children: /* @__PURE__ */ $.jsx(f.slots.baseButton, J({
        size: "small",
        startIcon: /* @__PURE__ */ $.jsx(f.slots.exportIcon, {}),
        "aria-expanded": y,
        "aria-label": c.current.getLocaleText("toolbarExportLabel"),
        "aria-haspopup": "menu",
        "aria-controls": y ? g : void 0,
        id: m
      }, (M = f.slotProps) == null ? void 0 : M.baseButton, s, {
        onClick: E,
        ref: T,
        children: c.current.getLocaleText("toolbarExport")
      }))
    })), /* @__PURE__ */ $.jsx(mO, {
      open: y,
      target: C.current,
      onClose: O,
      position: "bottom-start",
      children: /* @__PURE__ */ $.jsx(gC, {
        id: g,
        className: se.menuList,
        "aria-labelledby": m,
        onKeyDown: k,
        autoFocusItem: y,
        children: x.Children.map(r, (N) => /* @__PURE__ */ x.isValidElement(N) ? /* @__PURE__ */ x.cloneElement(N, {
          hideMenu: O
        }) : N)
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (_4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.object
});
const qbe = ["hideMenu", "options"], Kbe = ["hideMenu", "options"], Ybe = ["csvOptions", "printOptions", "excelOptions"];
function O4(e) {
  const t = On(), {
    hideMenu: n,
    options: r
  } = e, o = qt(e, qbe);
  return /* @__PURE__ */ $.jsx(vl, J({
    onClick: () => {
      t.current.exportDataAsCsv(r), n == null || n();
    }
  }, o, {
    children: t.current.getLocaleText("toolbarExportCSV")
  }));
}
process.env.NODE_ENV !== "production" && (O4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: u.func,
  options: u.shape({
    allColumns: u.bool,
    delimiter: u.string,
    disableToolbarButton: u.bool,
    escapeFormulas: u.bool,
    fields: u.arrayOf(u.string),
    fileName: u.string,
    getRowsToExport: u.func,
    includeColumnGroupsHeaders: u.bool,
    includeHeaders: u.bool,
    shouldAppendQuotes: u.bool,
    utf8WithBom: u.bool
  })
});
function R4(e) {
  const t = On(), {
    hideMenu: n,
    options: r
  } = e, o = qt(e, Kbe);
  return /* @__PURE__ */ $.jsx(vl, J({
    onClick: () => {
      t.current.exportDataAsPrint(r), n == null || n();
    }
  }, o, {
    children: t.current.getLocaleText("toolbarExportPrint")
  }));
}
process.env.NODE_ENV !== "production" && (R4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  hideMenu: u.func,
  options: u.shape({
    allColumns: u.bool,
    bodyClassName: u.string,
    copyStyles: u.bool,
    disableToolbarButton: u.bool,
    fields: u.arrayOf(u.string),
    fileName: u.string,
    getRowsToExport: u.func,
    hideFooter: u.bool,
    hideToolbar: u.bool,
    includeCheckboxes: u.bool,
    pageStyle: u.oneOfType([u.func, u.string])
  })
});
const Xbe = Yn(function(t, n) {
  const r = t, {
    csvOptions: o = {},
    printOptions: s = {},
    excelOptions: a
  } = r, c = qt(r, Ybe), m = On().current.unstable_applyPipeProcessors("exportMenu", [], {
    excelOptions: a,
    csvOptions: o,
    printOptions: s
  }).sort((g, y) => g.componentName > y.componentName ? 1 : -1);
  return m.length === 0 ? null : /* @__PURE__ */ $.jsx(_4, J({}, c, {
    ref: n,
    children: m.map((g, y) => /* @__PURE__ */ x.cloneElement(g.component, {
      key: y
    }))
  }));
});
process.env.NODE_ENV !== "production" && (Xbe.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  csvOptions: u.object,
  printOptions: u.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: u.object
});
const Qbe = ["className", "selectedRowCount"], Jbe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["selectedRowCount"]
  }, zn, t);
}, Zbe = Lr("div", {
  name: "MuiDataGrid",
  slot: "SelectedRowCount",
  overridesResolver: (e, t) => t.selectedRowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2),
  visibility: "hidden",
  width: 0,
  height: 0,
  [e.breakpoints.up("sm")]: {
    visibility: "visible",
    width: "auto",
    height: "auto"
  }
})), k4 = Yn(function(t, n) {
  const {
    className: r,
    selectedRowCount: o
  } = t, s = qt(t, Qbe), a = On(), c = Lt(), f = Jbe(c), m = a.current.getLocaleText("footerRowSelected")(o);
  return /* @__PURE__ */ $.jsx(Zbe, J({
    className: et(f.root, r),
    ownerState: c
  }, s, {
    ref: n,
    children: m
  }));
});
process.env.NODE_ENV !== "production" && (k4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  selectedRowCount: u.number.isRequired,
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const P4 = Yn(function(t, n) {
  var y, w;
  const r = On(), o = Lt(), s = Ze(r, ihe), a = Ze(r, lme), c = Ze(r, HD), f = !o.hideFooterSelectedRowCount && a > 0 ? /* @__PURE__ */ $.jsx(k4, {
    selectedRowCount: a
  }) : /* @__PURE__ */ $.jsx("div", {}), m = !o.hideFooterRowCount && !o.pagination ? /* @__PURE__ */ $.jsx(o.slots.footerRowCount, J({}, (y = o.slotProps) == null ? void 0 : y.footerRowCount, {
    rowCount: s,
    visibleRowCount: c
  })) : null, g = o.pagination && !o.hideFooterPagination && o.slots.pagination && /* @__PURE__ */ $.jsx(o.slots.pagination, J({}, (w = o.slotProps) == null ? void 0 : w.pagination));
  return /* @__PURE__ */ $.jsxs(YW, J({}, t, {
    ref: n,
    children: [f, m, g]
  }));
});
process.env.NODE_ENV !== "production" && (P4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const _S = (e, t, n, r, o, s) => {
  let a;
  switch (e) {
    case Nn.LEFT:
      a = r[n];
      break;
    case Nn.RIGHT:
      a = o - r[n] - t + s;
      break;
    default:
      a = void 0;
      break;
  }
  return a;
}, p_ = (e, t, n, r, o) => {
  const s = t === n - 1;
  return e === Nn.LEFT && s ? !0 : r ? e === Nn.LEFT ? !0 : e === Nn.RIGHT ? !s : !s || o : !1;
}, h_ = (e, t) => e === Nn.RIGHT && t === 0, Xw = {
  root: se.scrollbarFiller,
  header: se["scrollbarFiller--header"],
  borderTop: se["scrollbarFiller--borderTop"],
  borderBottom: se["scrollbarFiller--borderBottom"],
  pinnedRight: se["scrollbarFiller--pinnedRight"]
};
function tA({
  header: e,
  borderTop: t = !0,
  borderBottom: n,
  pinnedRight: r
}) {
  return /* @__PURE__ */ $.jsx("div", {
    role: "presentation",
    className: et(Xw.root, e && Xw.header, t && Xw.borderTop, n && Xw.borderBottom, r && Xw.pinnedRight)
  });
}
const ewe = Lr("div", {
  name: "MuiDataGrid",
  slot: "SkeletonLoadingOverlay",
  overridesResolver: (e, t) => t.skeletonLoadingOverlay
})({
  minWidth: "100%",
  width: "max-content",
  // prevents overflow: clip; cutting off the x axis
  height: "100%",
  overflow: "clip"
  // y axis is hidden while the x axis is allowed to overflow
}), twe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["skeletonLoadingOverlay"]
  }, zn, t);
}, EB = (e) => parseInt(e.getAttribute("data-colindex"), 10), nwe = Yn(function(t, n) {
  const r = Lt(), {
    slots: o
  } = r, s = xc(), a = twe({
    classes: r.classes
  }), c = x.useRef(null), f = Pr(c, n), m = On(), g = Ze(m, gi), y = (g == null ? void 0 : g.viewportInnerSize.height) ?? 0, w = Math.ceil(y / g.rowHeight), C = Ze(m, hO), T = Ze(m, dp), E = x.useMemo(() => T.filter((F) => F <= C).length, [C, T]), O = Ze(m, po), k = x.useMemo(() => O.slice(0, E), [O, E]), I = Ze(m, wy), M = x.useCallback((F) => {
    if (I.left.findIndex((H) => H.field === F) !== -1)
      return Nn.LEFT;
    if (I.right.findIndex((H) => H.field === F) !== -1)
      return Nn.RIGHT;
  }, [I.left, I.right]), N = x.useMemo(() => {
    const F = [];
    for (let H = 0; H < w; H += 1) {
      const U = [];
      for (let z = 0; z < k.length; z += 1) {
        const A = k[z], q = M(A.field), W = q === Nn.LEFT, Y = q === Nn.RIGHT, ee = WW(q, s), G = ee ? I[ee].length : k.length - I.left.length - I.right.length, K = ee ? I[ee].findIndex((we) => we.field === A.field) : z - I.left.length, X = g.hasScrollY ? g.scrollbarSize : 0, te = TO({}, s, q, _S(q, A.computedWidth, z, T, g.columnsTotalWidth, X)), re = g.columnsTotalWidth < g.viewportOuterSize.width, Q = p_(q, K, G, r.showCellVerticalBorder, re), B = h_(q, K), ie = z === k.length - 1, de = Y && K === 0, ue = de && re, he = ie && !de && re, ge = g.viewportOuterSize.width - g.columnsTotalWidth, fe = Math.max(0, ge), pe = /* @__PURE__ */ $.jsx(o.skeletonCell, {
          width: fe,
          empty: !0
        }, `skeleton-filler-column-${H}`), be = ie && X !== 0;
        ue && U.push(pe), U.push(/* @__PURE__ */ $.jsx(o.skeletonCell, {
          field: A.field,
          type: A.type,
          align: A.align,
          width: "var(--width)",
          height: g.rowHeight,
          "data-colindex": z,
          className: et(W && se["cell--pinnedLeft"], Y && se["cell--pinnedRight"], Q && se["cell--withRightBorder"], B && se["cell--withLeftBorder"]),
          style: J({
            "--width": `${A.computedWidth}px`
          }, te)
        }, `skeleton-column-${H}-${A.field}`)), he && U.push(pe), be && U.push(/* @__PURE__ */ $.jsx(tA, {
          pinnedRight: I.right.length > 0
        }, `skeleton-scrollbar-filler-${H}`));
      }
      F.push(/* @__PURE__ */ $.jsx("div", {
        className: et(se.row, se.rowSkeleton, H === 0 && se["row--firstVisible"]),
        children: U
      }, `skeleton-row-${H}`));
    }
    return F;
  }, [o, k, I, w, r.showCellVerticalBorder, g, T, M, s]);
  return Ot(m, "columnResize", (F) => {
    var K, X, te;
    const {
      colDef: H,
      width: U
    } = F, z = (K = c.current) == null ? void 0 : K.querySelectorAll(`[data-field="${Pd(H.field)}"]`);
    if (!z)
      throw new Error("MUI X: Expected skeleton cells to be defined with `data-field` attribute.");
    const A = k.findIndex((re) => re.field === H.field), q = M(H.field), W = q === Nn.LEFT, Y = q === Nn.RIGHT, ee = getComputedStyle(z[0]).getPropertyValue("--width"), G = parseInt(ee, 10) - U;
    if (z && z.forEach((re) => {
      re.style.setProperty("--width", `${U}px`);
    }), W) {
      const re = (X = c.current) == null ? void 0 : X.querySelectorAll(`.${se["cell--pinnedLeft"]}`);
      re == null || re.forEach((Q) => {
        EB(Q) > A && (Q.style.left = `${parseInt(getComputedStyle(Q).left, 10) - G}px`);
      });
    }
    if (Y) {
      const re = (te = c.current) == null ? void 0 : te.querySelectorAll(`.${se["cell--pinnedRight"]}`);
      re == null || re.forEach((Q) => {
        EB(Q) < A && (Q.style.right = `${parseInt(getComputedStyle(Q).right, 10) + G}px`);
      });
    }
  }), /* @__PURE__ */ $.jsx(ewe, J({
    className: a.root
  }, t, {
    ref: f,
    children: N
  }));
}), rwe = ["variant", "noRowsVariant", "style"], owe = {
  "circular-progress": {
    component: fC,
    style: {}
  },
  "linear-progress": {
    component: AV,
    style: {
      display: "block"
    }
  },
  skeleton: {
    component: nwe,
    style: {
      display: "block"
    }
  }
}, M4 = Yn(function(t, n) {
  const {
    variant: r = "circular-progress",
    noRowsVariant: o = "circular-progress",
    style: s
  } = t, a = qt(t, rwe), c = On(), f = Ze(c, EC), m = owe[f === 0 ? o : r];
  return /* @__PURE__ */ $.jsx(_O, J({
    style: J({}, m.style, s)
  }, a, {
    ref: n,
    children: /* @__PURE__ */ $.jsx(m.component, {})
  }));
});
process.env.NODE_ENV !== "production" && (M4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The variant of the overlay when no rows are displayed.
   * @default 'circular-progress'
   */
  noRowsVariant: u.oneOf(["circular-progress", "linear-progress", "skeleton"]),
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * The variant of the overlay.
   * @default 'circular-progress'
   */
  variant: u.oneOf(["circular-progress", "linear-progress", "skeleton"])
});
const I4 = Yn(function(t, n) {
  const o = On().current.getLocaleText("noRowsLabel");
  return /* @__PURE__ */ $.jsx(_O, J({}, t, {
    ref: n,
    children: o
  }));
});
process.env.NODE_ENV !== "production" && (I4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object])
});
const iwe = Ue(QV)(({
  theme: e
}) => ({
  maxHeight: "calc(100% + 1px)",
  // border width
  flexGrow: 1,
  [`& .${nm.selectLabel}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "block"
    }
  },
  [`& .${nm.input}`]: {
    display: "none",
    [e.breakpoints.up("sm")]: {
      display: "inline-flex"
    }
  }
})), swe = (e, t) => ({
  from: n,
  to: r,
  count: o,
  page: s
}) => e({
  from: n,
  to: r,
  count: o,
  page: s,
  estimated: t
}), awe = ({
  from: e,
  to: t,
  count: n,
  estimated: r
}) => r ? `${e}–${t} of ${n !== -1 ? n : `more than ${r > t ? r : t}`}` : `${e}–${t} of ${n !== -1 ? n : `more than ${t}`}`, D4 = Yn(function(t, n) {
  var N;
  const r = On(), o = Lt(), s = Ze(r, ms), a = Ze(r, Rv), c = Ze(r, yW), {
    paginationMode: f,
    loading: m,
    estimatedRowCount: g
  } = o, y = x.useMemo(() => a === -1 && f === "server" && m ? {
    backIconButtonProps: {
      disabled: !0
    },
    nextIconButtonProps: {
      disabled: !0
    }
  } : {}, [m, f, a]), w = x.useMemo(() => Math.max(0, c - 1), [c]), C = x.useMemo(() => a === -1 || s.page <= w ? s.page : w, [w, s.page, a]), T = x.useCallback((P) => {
    const F = Number(P.target.value);
    r.current.setPageSize(F);
  }, [r]), E = x.useCallback((P, F) => {
    r.current.setPage(F);
  }, [r]), O = (P) => {
    for (let F = 0; F < o.pageSizeOptions.length; F += 1) {
      const H = o.pageSizeOptions[F];
      if (typeof H == "number") {
        if (H === P)
          return !0;
      } else if (H.value === P)
        return !0;
    }
    return !1;
  };
  if (process.env.NODE_ENV !== "production") {
    const P = x.useRef(!1), F = ((N = o.paginationModel) == null ? void 0 : N.pageSize) ?? s.pageSize;
    !P.current && !o.autoPageSize && !O(F) && (console.warn([`MUI X: The page size \`${s.pageSize}\` is not present in the \`pageSizeOptions\`.`, "Add it to show the pagination select."].join(`
`)), P.current = !0);
  }
  const k = O(s.pageSize) ? o.pageSizeOptions : [], I = r.current.getLocaleText("MuiTablePagination"), M = swe(I.labelDisplayedRows || awe, g);
  return /* @__PURE__ */ $.jsx(iwe, J({
    component: "div",
    count: a,
    page: C,
    rowsPerPageOptions: k,
    rowsPerPage: s.pageSize,
    onPageChange: E,
    onRowsPerPageChange: T
  }, y, I, {
    labelDisplayedRows: M
  }, t, {
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (D4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  component: u.elementType
});
const lwe = ["className", "rowCount", "visibleRowCount"], uwe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["rowCount"]
  }, zn, t);
}, cwe = Lr("div", {
  name: "MuiDataGrid",
  slot: "RowCount",
  overridesResolver: (e, t) => t.rowCount
})(({
  theme: e
}) => ({
  alignItems: "center",
  display: "flex",
  margin: e.spacing(0, 2)
})), A4 = Yn(function(t, n) {
  const {
    className: r,
    rowCount: o,
    visibleRowCount: s
  } = t, a = qt(t, lwe), c = On(), f = Lt(), m = uwe(f);
  if (o === 0)
    return null;
  const g = s < o ? c.current.getLocaleText("footerTotalVisibleRows")(s, o) : o.toLocaleString();
  return /* @__PURE__ */ $.jsxs(cwe, J({
    className: et(m.root, r),
    ownerState: f
  }, a, {
    ref: n,
    children: [c.current.getLocaleText("footerTotalRows"), " ", g]
  }));
});
process.env.NODE_ENV !== "production" && (A4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  rowCount: u.number.isRequired,
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  visibleRowCount: u.number.isRequired
});
function dwe(e) {
  for (const t in e)
    return !1;
  return !0;
}
function fwe(e, t) {
  return mt(t, zn, e);
}
const pwe = ["selected", "rowId", "row", "index", "style", "rowHeight", "className", "visibleColumns", "pinnedColumns", "offsetLeft", "columnsTotalWidth", "firstColumnIndex", "lastColumnIndex", "focusedColumnIndex", "isFirstVisible", "isLastVisible", "isNotVisible", "showBottomBorder", "scrollbarWidth", "gridHasFiller", "onClick", "onDoubleClick", "onMouseEnter", "onMouseLeave", "onMouseOut", "onMouseOver"], hwe = xC(mi, (e, t) => t ? !!dwe(e) : !1), N4 = Yn(function(t, n) {
  var vt;
  const {
    selected: r,
    rowId: o,
    row: s,
    index: a,
    style: c,
    rowHeight: f,
    className: m,
    visibleColumns: g,
    pinnedColumns: y,
    offsetLeft: w,
    columnsTotalWidth: C,
    firstColumnIndex: T,
    lastColumnIndex: E,
    focusedColumnIndex: O,
    isFirstVisible: k,
    isLastVisible: I,
    isNotVisible: M,
    showBottomBorder: N,
    scrollbarWidth: P,
    gridHasFiller: F,
    onClick: H,
    onDoubleClick: U,
    onMouseEnter: z,
    onMouseLeave: A,
    onMouseOut: q,
    onMouseOver: W
  } = t, Y = qt(t, pwe), ee = $a(), G = JD(), K = x.useRef(null), X = Lt(), te = YD(ee), re = Ze(ee, iu), Q = Ze(ee, vm), B = Ze(ee, dp), ie = X.rowReordering, de = YS(ee, hwe, ie), ue = Pr(K, n), he = ee.current.getRowNode(o), ge = YS(ee, VW, {
    rowId: o,
    editMode: X.editMode
  }), fe = X.editMode === wc.Row, pe = O !== void 0, be = pe && O >= y.left.length && O < T, we = pe && O < g.length - y.right.length && O >= E, _e = fwe(X.classes, {
    root: ["row", r && "selected", fe && "row--editable", ge && "row--editing", k && "row--firstVisible", I && "row--lastVisible", N && "row--borderBottom", f === "auto" && "row--dynamicHeight"]
  }), ce = G.hooks.useGridRowAriaAttributes();
  x.useLayoutEffect(() => {
    if (te.range) {
      const Xe = ee.current.getRowIndexRelativeToVisibleRows(o);
      Xe !== void 0 && ee.current.unstable_setLastMeasuredRowIndex(Xe);
    }
    if (K.current && f === "auto")
      return ee.current.observeRowHeight(K.current, o);
  }, [ee, te.range, f, o]);
  const Ce = x.useCallback((Xe, Oe) => (Ie) => {
    MC(Ie) || ee.current.getRow(o) && (ee.current.publishEvent(Xe, ee.current.getRowParams(o), Ie), Oe && Oe(Ie));
  }, [ee, o]), Ne = x.useCallback((Xe) => {
    const Oe = d_(Xe.target, se.cell), Ie = Oe == null ? void 0 : Oe.getAttribute("data-field");
    if (Ie) {
      if (Ie === xy.field || Ie === yO || Ie === "__reorder__" || ee.current.getCellMode(o, Ie) === cr.Edit)
        return;
      const pt = ee.current.getColumn(Ie);
      if ((pt == null ? void 0 : pt.type) === gO)
        return;
    }
    Ce("rowClick", H)(Xe);
  }, [ee, H, Ce, o]), {
    slots: Be,
    slotProps: tt,
    disableColumnReorder: $e
  } = X, rt = Ze(ee, () => J({}, ee.current.getRowHeightEntry(o)), DD), ot = x.useMemo(() => {
    if (M)
      return {
        opacity: 0,
        width: 0,
        height: 0
      };
    const Xe = J({}, c, {
      maxHeight: f === "auto" ? "none" : f,
      // max-height doesn't support "auto"
      minHeight: f,
      "--height": typeof f == "number" ? `${f}px` : f
    });
    if (rt.spacingTop) {
      const Oe = X.rowSpacingType === "border" ? "borderTopWidth" : "marginTop";
      Xe[Oe] = rt.spacingTop;
    }
    if (rt.spacingBottom) {
      const Oe = X.rowSpacingType === "border" ? "borderBottomWidth" : "marginBottom";
      let Ie = Xe[Oe];
      typeof Ie != "number" && (Ie = parseInt(Ie || "0", 10)), Ie += rt.spacingBottom, Xe[Oe] = Ie;
    }
    return Xe;
  }, [M, f, c, rt, X.rowSpacingType]), wt = ee.current.unstable_applyPipeProcessors("rowClassName", [], o), gt = ce(he, a);
  if (typeof X.getRowClassName == "function") {
    const Xe = a - (((vt = te.range) == null ? void 0 : vt.firstRowIndex) || 0), Oe = J({}, ee.current.getRowParams(o), {
      isFirstVisible: Xe === 0,
      isLastVisible: Xe === te.rows.length - 1,
      indexRelativeToCurrentPage: Xe
    });
    wt.push(X.getRowClassName(Oe));
  }
  const nt = (Xe, Oe, Ie, pt, yt = Nn.NONE) => {
    const zt = ee.current.unstable_getCellColSpanInfo(o, Ie);
    if (zt != null && zt.spannedByColSpan)
      return null;
    const bt = (zt == null ? void 0 : zt.cellProps.width) ?? Xe.computedWidth, We = (zt == null ? void 0 : zt.cellProps.colSpan) ?? 1, St = _S(yt, Xe.computedWidth, Ie, B, C, P);
    if (he.type === "skeletonRow")
      return /* @__PURE__ */ $.jsx(Be.skeletonCell, {
        type: Xe.type,
        width: bt,
        height: f,
        field: Xe.field,
        align: Xe.align
      }, Xe.field);
    const $t = Xe.field === "__reorder__", wn = !($e || Xe.disableReorder), cn = de && !re.length && Q <= 1, Tr = !(wn || $t && cn), sr = yt === Nn.VIRTUAL, $r = h_(yt, Oe), _r = p_(yt, Oe, pt, X.showCellVerticalBorder, F);
    return /* @__PURE__ */ $.jsx(Be.cell, J({
      column: Xe,
      width: bt,
      rowId: o,
      align: Xe.align || "left",
      colIndex: Ie,
      colSpan: We,
      disableDragEvents: Tr,
      isNotVisible: sr,
      pinnedOffset: St,
      pinnedPosition: yt,
      showLeftBorder: $r,
      showRightBorder: _r,
      row: s,
      rowNode: he
    }, tt == null ? void 0 : tt.cell), Xe.field);
  }, Ft = y.left.map((Xe, Oe) => nt(Xe, Oe, Oe, y.left.length, Nn.LEFT)), ut = y.right.map((Xe, Oe) => {
    const Ie = g.length - y.right.length + Oe;
    return nt(Xe, Oe, Ie, y.right.length, Nn.RIGHT);
  }), Et = g.length - y.left.length - y.right.length, Tt = [];
  be && Tt.push(nt(g[O], O - y.left.length, O, Et, Nn.VIRTUAL));
  for (let Xe = T; Xe < E; Xe += 1) {
    const Oe = g[Xe], Ie = Xe - y.left.length;
    Oe && Tt.push(nt(Oe, Ie, Xe, Et));
  }
  we && Tt.push(nt(g[O], O - y.left.length, O, Et, Nn.VIRTUAL));
  const At = s ? {
    onClick: Ne,
    onDoubleClick: Ce("rowDoubleClick", U),
    onMouseEnter: Ce("rowMouseEnter", z),
    onMouseLeave: Ce("rowMouseLeave", A),
    onMouseOut: Ce("rowMouseOut", q),
    onMouseOver: Ce("rowMouseOver", W)
  } : null;
  return /* @__PURE__ */ $.jsxs("div", J({
    "data-id": o,
    "data-rowindex": a,
    role: "row",
    className: et(...wt, _e.root, m),
    style: ot
  }, gt, At, Y, {
    ref: ue,
    children: [Ft, /* @__PURE__ */ $.jsx("div", {
      role: "presentation",
      className: se.cellOffsetLeft,
      style: {
        width: w
      }
    }), Tt, /* @__PURE__ */ $.jsx("div", {
      role: "presentation",
      className: et(se.cell, se.cellEmpty)
    }), ut, P !== 0 && /* @__PURE__ */ $.jsx(tA, {
      pinnedRight: y.right.length > 0,
      borderTop: !k
    })]
  }));
});
process.env.NODE_ENV !== "production" && (N4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnsTotalWidth: u.number.isRequired,
  firstColumnIndex: u.number.isRequired,
  /**
   * Determines which cell has focus.
   * If `null`, no cell in this row has focus.
   */
  focusedColumnIndex: u.number,
  gridHasFiller: u.bool.isRequired,
  /**
   * Index of the row in the whole sorted and filtered dataset.
   * If some rows above have expanded children, this index also take those children into account.
   */
  index: u.number.isRequired,
  isFirstVisible: u.bool.isRequired,
  isLastVisible: u.bool.isRequired,
  isNotVisible: u.bool.isRequired,
  lastColumnIndex: u.number.isRequired,
  offsetLeft: u.number.isRequired,
  onClick: u.func,
  onDoubleClick: u.func,
  onMouseEnter: u.func,
  onMouseLeave: u.func,
  pinnedColumns: u.object.isRequired,
  row: u.object.isRequired,
  rowHeight: u.oneOfType([u.oneOf(["auto"]), u.number]).isRequired,
  rowId: u.oneOfType([u.number, u.string]).isRequired,
  scrollbarWidth: u.number.isRequired,
  selected: u.bool.isRequired,
  showBottomBorder: u.bool.isRequired,
  visibleColumns: u.arrayOf(u.object).isRequired
});
const mwe = Rd(N4), gwe = () => {
  const e = $a(), t = Lt(), n = Ze(e, po), r = Ze(e, BD), o = Ze(e, kC), s = Ze(e, D5);
  return {
    role: "grid",
    "aria-colcount": n.length,
    "aria-rowcount": o + 1 + s + r,
    "aria-multiselectable": VD(t)
  };
}, vwe = () => {
  const e = $a(), t = Ze(e, Gf), n = Ze(e, kC);
  return x.useCallback((r, o) => {
    const s = {}, a = o + n + 2;
    return s["aria-rowindex"] = a, e.current.isRowSelectable(r.id) && (s["aria-selected"] = t[r.id] !== void 0), s;
  }, [e, t, n]);
};
function ywe({
  privateApiRef: e,
  configuration: t,
  props: n,
  children: r
}) {
  const o = x.useRef(e.current.getPublicApi());
  return /* @__PURE__ */ $.jsx(QD.Provider, {
    value: t,
    children: /* @__PURE__ */ $.jsx(kD.Provider, {
      value: n,
      children: /* @__PURE__ */ $.jsx(KD.Provider, {
        value: e,
        children: /* @__PURE__ */ $.jsx(RD.Provider, {
          value: o,
          children: r
        })
      })
    })
  });
}
const bwe = (e) => {
  const t = x.useRef(null), n = x.useRef(null), r = x.useRef(null), o = x.useRef(null), s = x.useRef(null), a = x.useRef(null);
  e.current.register("public", {
    rootElementRef: t
  }), e.current.register("private", {
    mainElementRef: n,
    virtualScrollerRef: r,
    virtualScrollbarVerticalRef: o,
    virtualScrollbarHorizontalRef: s,
    columnHeadersContainerRef: a
  });
}, wwe = (e) => {
  const t = xc();
  e.current.state.isRtl === void 0 && (e.current.state.isRtl = t);
  const n = x.useRef(!0);
  x.useEffect(() => {
    n.current ? n.current = !1 : e.current.setState((r) => J({}, r, {
      isRtl: t
    }));
  }, [e, t]);
}, Swe = vhe() && window.localStorage.getItem("DEBUG") != null, dS = () => {
}, Cwe = {
  debug: dS,
  info: dS,
  warn: dS,
  error: dS
}, TB = ["debug", "info", "warn", "error"];
function _B(e, t, n = console) {
  const r = TB.indexOf(t);
  if (r === -1)
    throw new Error(`MUI X: Log level ${t} not recognized.`);
  return TB.reduce((s, a, c) => (c >= r ? s[a] = (...f) => {
    const [m, ...g] = f;
    n[a](`MUI X: ${e} - ${m}`, ...g);
  } : s[a] = dS, s), {});
}
const xwe = (e, t) => {
  const n = x.useCallback((r) => Swe ? _B(r, "debug", t.logger) : t.logLevel ? _B(r, t.logLevel.toString(), t.logger) : Cwe, [t.logLevel, t.logger]);
  Tn(e, {
    getLogger: n
  }, "private");
};
class Ewe {
  constructor() {
    this.maxListeners = 20, this.warnOnce = !1, this.events = {};
  }
  on(t, n, r = {}) {
    let o = this.events[t];
    if (o || (o = {
      highPriority: /* @__PURE__ */ new Map(),
      regular: /* @__PURE__ */ new Map()
    }, this.events[t] = o), r.isFirst ? o.highPriority.set(n, !0) : o.regular.set(n, !0), process.env.NODE_ENV !== "production") {
      const s = o.highPriority.size + o.regular.size;
      s > this.maxListeners && !this.warnOnce && (this.warnOnce = !0, console.warn([`Possible EventEmitter memory leak detected. ${s} ${t} listeners added.`].join(`
`)));
    }
  }
  removeListener(t, n) {
    this.events[t] && (this.events[t].regular.delete(n), this.events[t].highPriority.delete(n));
  }
  removeAllListeners() {
    this.events = {};
  }
  emit(t, ...n) {
    const r = this.events[t];
    if (!r)
      return;
    const o = Array.from(r.highPriority.keys()), s = Array.from(r.regular.keys());
    for (let a = o.length - 1; a >= 0; a -= 1) {
      const c = o[a];
      r.highPriority.has(c) && c.apply(this, n);
    }
    for (let a = 0; a < s.length; a += 1) {
      const c = s[a];
      r.regular.has(c) && c.apply(this, n);
    }
  }
  once(t, n) {
    const r = this;
    this.on(t, function o(...s) {
      r.removeListener(t, o), n.apply(r, s);
    });
  }
}
class nA {
  static create(t) {
    return new nA(t);
  }
  constructor(t) {
    this.value = void 0, this.listeners = void 0, this.subscribe = (n) => (this.listeners.add(n), () => {
      this.listeners.delete(n);
    }), this.getSnapshot = () => this.value, this.update = (n) => {
      this.value = n, this.listeners.forEach((r) => r(n));
    }, this.value = t, this.listeners = /* @__PURE__ */ new Set();
  }
}
const L4 = Symbol("mui.api_private"), Twe = (e) => e.isPropagationStopped !== void 0;
let OB = 0;
function _we(e) {
  var o;
  const t = (o = e.current) == null ? void 0 : o[L4];
  if (t)
    return t;
  const n = {}, r = {
    state: n,
    store: nA.create(n),
    instanceId: {
      id: OB
    }
  };
  return OB += 1, r.getPublicApi = () => e.current, r.register = (s, a) => {
    Object.keys(a).forEach((c) => {
      const f = a[c], m = r[c];
      if ((m == null ? void 0 : m.spying) === !0 ? m.target = f : r[c] = f, s === "public") {
        const g = e.current, y = g[c];
        (y == null ? void 0 : y.spying) === !0 ? y.target = f : g[c] = f;
      }
    });
  }, r.register("private", {
    caches: {},
    eventManager: new Ewe()
  }), r;
}
function Owe(e) {
  return {
    get state() {
      return e.current.state;
    },
    get store() {
      return e.current.store;
    },
    get instanceId() {
      return e.current.instanceId;
    },
    [L4]: e.current
  };
}
function Rwe(e, t) {
  var a;
  const n = x.useRef(null), r = x.useRef(null);
  r.current || (r.current = _we(n)), n.current || (n.current = Owe(r));
  const o = x.useCallback((...c) => {
    const [f, m, g = {}] = c;
    if (g.defaultMuiPrevented = !1, Twe(g) && g.isPropagationStopped())
      return;
    const y = t.signature === Da.DataGridPro || t.signature === Da.DataGridPremium ? {
      api: r.current.getPublicApi()
    } : {};
    r.current.eventManager.emit(f, m, g, y);
  }, [r, t.signature]), s = x.useCallback((c, f, m) => {
    r.current.eventManager.on(c, f, m);
    const g = r.current;
    return () => {
      g.eventManager.removeListener(c, f);
    };
  }, [r]);
  return Tn(r, {
    subscribeEvent: s,
    publishEvent: o
  }, "public"), e && !((a = e.current) != null && a.state) && (e.current = n.current), x.useImperativeHandle(e, () => n.current, [n]), x.useEffect(() => {
    const c = r.current;
    return () => {
      c.publishEvent("unmount");
    };
  }, [r]), r;
}
const kwe = (e, t) => {
  const n = x.useCallback((r) => {
    if (t.localeText[r] == null)
      throw new Error(`Missing translation for key ${r}.`);
    return t.localeText[r];
  }, [t.localeText]);
  e.current.register("public", {
    getLocaleText: n
  });
};
function ZS(e) {
  "@babel/helpers - typeof";
  return ZS = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, ZS(e);
}
function Pwe(e, t) {
  if (ZS(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t);
    if (ZS(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(e);
}
function eC(e) {
  var t = Pwe(e, "string");
  return ZS(t) == "symbol" ? t : t + "";
}
const Mwe = (e) => {
  const t = x.useRef({}), n = x.useRef(!1), r = x.useCallback((g) => {
    n.current || !g || (n.current = !0, Object.values(g.appliers).forEach((y) => {
      y();
    }), n.current = !1);
  }, []), o = x.useCallback((g, y, w) => {
    t.current[g] || (t.current[g] = {
      processors: /* @__PURE__ */ new Map(),
      processorsAsArray: [],
      appliers: {}
    });
    const C = t.current[g];
    return C.processors.get(y) !== w && (C.processors.set(y, w), C.processorsAsArray = Array.from(t.current[g].processors.values()).filter((E) => E !== null), r(C)), () => {
      t.current[g].processors.set(y, null), t.current[g].processorsAsArray = Array.from(t.current[g].processors.values()).filter((E) => E !== null);
    };
  }, [r]), s = x.useCallback((g, y, w) => (t.current[g] || (t.current[g] = {
    processors: /* @__PURE__ */ new Map(),
    processorsAsArray: [],
    appliers: {}
  }), t.current[g].appliers[y] = w, () => {
    const C = t.current[g].appliers, T = qt(C, [y].map(eC));
    t.current[g].appliers = T;
  }), []), a = x.useCallback((g) => {
    r(t.current[g]);
  }, [r]), c = x.useCallback((...g) => {
    const [y, w, C] = g;
    if (!t.current[y])
      return w;
    const T = t.current[y].processorsAsArray;
    let E = w;
    for (let O = 0; O < T.length; O += 1)
      E = T[O](E, C);
    return E;
  }, []), f = {
    registerPipeProcessor: o,
    registerPipeApplier: s,
    requestPipeProcessorsApplication: a
  }, m = {
    unstable_applyPipeProcessors: c
  };
  Tn(e, f, "private"), Tn(e, m, "public");
}, to = (e, t, n, r = !0) => {
  const o = x.useRef(null), s = x.useRef(`mui-${Math.round(Math.random() * 1e9)}`), a = x.useCallback(() => {
    o.current = e.current.registerPipeProcessor(t, s.current, n);
  }, [e, n, t]);
  TC(() => {
    r && a();
  });
  const c = x.useRef(!0);
  x.useEffect(() => (c.current ? c.current = !1 : r && a(), () => {
    o.current && (o.current(), o.current = null);
  }), [a, r]);
}, rA = (e, t, n) => {
  const r = x.useRef(null), o = x.useRef(`mui-${Math.round(Math.random() * 1e9)}`), s = x.useCallback(() => {
    r.current = e.current.registerPipeApplier(t, o.current, n);
  }, [e, n, t]);
  TC(() => {
    s();
  });
  const a = x.useRef(!0);
  x.useEffect(() => (a.current ? a.current = !1 : s(), () => {
    r.current && (r.current(), r.current = null);
  }), [s]);
}, m_ = (e, t, n, r) => {
  const o = x.useCallback(() => {
    e.current.registerStrategyProcessor(t, n, r);
  }, [e, r, n, t]);
  TC(() => {
    o();
  });
  const s = x.useRef(!0);
  x.useEffect(() => {
    s.current ? s.current = !1 : o();
  }, [o]);
}, fm = "none", RB = {
  rowTreeCreation: "rowTree",
  filtering: "rowTree",
  sorting: "rowTree",
  visibleRowsLookupCreation: "rowTree"
}, Iwe = (e) => {
  const t = x.useRef(/* @__PURE__ */ new Map()), n = x.useRef({}), r = x.useCallback((f, m, g) => {
    const y = () => {
      const T = n.current[m], E = qt(T, [f].map(eC));
      n.current[m] = E;
    };
    n.current[m] || (n.current[m] = {});
    const w = n.current[m], C = w[f];
    return w[f] = g, !C || C === g || f === e.current.getActiveStrategy(RB[m]) && e.current.publishEvent("activeStrategyProcessorChange", m), y;
  }, [e]), o = x.useCallback((f, m) => {
    const g = e.current.getActiveStrategy(RB[f]);
    if (g == null)
      throw new Error("Can't apply a strategy processor before defining an active strategy");
    const y = n.current[f];
    if (!y || !y[g])
      throw new Error(`No processor found for processor "${f}" on strategy "${g}"`);
    const w = y[g];
    return w(m);
  }, [e]), s = x.useCallback((f) => {
    const g = Array.from(t.current.entries()).find(([, y]) => y.group !== f ? !1 : y.isAvailable());
    return (g == null ? void 0 : g[0]) ?? fm;
  }, []), a = x.useCallback((f, m, g) => {
    t.current.set(m, {
      group: f,
      isAvailable: g
    }), e.current.publishEvent("strategyAvailabilityChange");
  }, [e]);
  Tn(e, {
    registerStrategyProcessor: r,
    applyStrategyProcessor: o,
    getActiveStrategy: s,
    setStrategyAvailability: a
  }, "private");
}, Dwe = (e) => {
  const t = x.useRef({}), n = x.useCallback((f) => {
    t.current[f.stateId] = f;
  }, []), r = x.useCallback((f, m) => {
    let g;
    if (ghe(f) ? g = f(e.current.state) : g = f, e.current.state === g)
      return !1;
    let y = !1;
    const w = [];
    if (Object.keys(t.current).forEach((C) => {
      const T = t.current[C], E = T.stateSelector(e.current.state, e.current.instanceId), O = T.stateSelector(g, e.current.instanceId);
      O !== E && (w.push({
        stateId: T.stateId,
        hasPropChanged: O !== T.propModel
      }), T.propModel !== void 0 && O !== T.propModel && (y = !0));
    }), w.length > 1)
      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${w[0].stateId}, therefore, you're not allowed to update ${w.map((C) => C.stateId).join(", ")} in the same transaction.`);
    if (y || (e.current.state = g, e.current.publishEvent("stateChange", g), e.current.store.update(g)), w.length === 1) {
      const {
        stateId: C,
        hasPropChanged: T
      } = w[0], E = t.current[C], O = E.stateSelector(g, e.current.instanceId);
      E.propOnChange && T && E.propOnChange(O, {
        reason: m,
        api: e.current
      }), y || e.current.publishEvent(E.changeEvent, O, {
        reason: m
      });
    }
    return !y;
  }, [e]), o = x.useCallback((f, m, g) => e.current.setState((y) => J({}, y, {
    [f]: m(y[f])
  }), g), [e]), s = x.useCallback(() => {
  }, []), a = {
    setState: r,
    forceUpdate: s
  }, c = {
    updateControlState: o,
    registerControlState: n
  };
  Tn(e, a, "public"), Tn(e, c, "private");
}, Awe = (e, t) => J({}, e, {
  props: {
    getRowId: t.getRowId
  }
}), Nwe = (e, t) => {
  x.useEffect(() => {
    e.current.setState((n) => J({}, n, {
      props: {
        getRowId: t.getRowId
      }
    }));
  }, [e, t.getRowId]);
}, Lwe = (e, t) => {
  const n = Rwe(e, t);
  return bwe(n), Nwe(n, t), wwe(n), xwe(n, t), Dwe(n), Mwe(n), Iwe(n), kwe(n, t), n.current.register("private", {
    rootProps: t
  }), n;
}, pi = (e, t, n) => {
  const r = x.useRef(!1);
  r.current || (t.current.state = e(t.current.state, n, t), r.current = !0);
};
function oI(e, t) {
  if (e == null)
    return "";
  const n = typeof e == "string" ? e : `${e}`;
  if (t.shouldAppendQuotes || t.escapeFormulas) {
    const r = n.replace(/"/g, '""');
    return t.escapeFormulas && ["=", "+", "-", "@", "	", "\r"].includes(r[0]) ? `"'${r}"` : [t.delimiter, `
`, "\r", '"'].some((o) => n.includes(o)) ? `"${r}"` : r;
  }
  return n;
}
const $4 = (e, t) => {
  var s, a;
  const {
    csvOptions: n,
    ignoreValueFormatter: r
  } = t;
  let o;
  if (r) {
    const c = e.colDef.type;
    c === "number" ? o = String(e.value) : c === "date" || c === "dateTime" ? o = (s = e.value) == null ? void 0 : s.toISOString() : typeof ((a = e.value) == null ? void 0 : a.toString) == "function" ? o = e.value.toString() : o = e.value;
  } else
    o = e.formattedValue;
  return oI(o, n);
};
class iI {
  constructor(t) {
    this.options = void 0, this.rowString = "", this.isEmpty = !0, this.options = t;
  }
  addValue(t) {
    this.isEmpty || (this.rowString += this.options.csvOptions.delimiter), typeof this.options.sanitizeCellValue == "function" ? this.rowString += this.options.sanitizeCellValue(t, this.options.csvOptions) : this.rowString += t, this.isEmpty = !1;
  }
  getRowString() {
    return this.rowString;
  }
}
const $we = ({
  id: e,
  columns: t,
  getCellParams: n,
  csvOptions: r,
  ignoreValueFormatter: o
}) => {
  const s = new iI({
    csvOptions: r
  });
  return t.forEach((a) => {
    const c = n(e, a.field);
    process.env.NODE_ENV !== "production" && String(c.formattedValue) === "[object Object]" && yl(["MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.", "You can provide a `valueFormatter` with a string representation to be used."]), s.addValue($4(c, {
      ignoreValueFormatter: o,
      csvOptions: r
    }));
  }), s.getRowString();
};
function jwe(e) {
  const {
    columns: t,
    rowIds: n,
    csvOptions: r,
    ignoreValueFormatter: o,
    apiRef: s
  } = e, a = n.reduce((y, w) => `${y}${$we({
    id: w,
    columns: t,
    getCellParams: s.current.getCellParams,
    ignoreValueFormatter: o,
    csvOptions: r
  })}\r
`, "").trim();
  if (!r.includeHeaders)
    return a;
  const c = t.filter((y) => y.field !== xy.field), f = [];
  if (r.includeColumnGroupsHeaders) {
    const y = s.current.getAllGroupDetails();
    let w = 0;
    const C = c.reduce((T, E) => {
      const O = s.current.getColumnGroupPath(E.field);
      return T[E.field] = O, w = Math.max(w, O.length), T;
    }, {});
    for (let T = 0; T < w; T += 1) {
      const E = new iI({
        csvOptions: r,
        sanitizeCellValue: oI
      });
      f.push(E), c.forEach((O) => {
        const k = (C[O.field] || [])[T], I = y[k];
        E.addValue(I ? I.headerName || I.groupId : "");
      });
    }
  }
  const m = new iI({
    csvOptions: r,
    sanitizeCellValue: oI
  });
  return c.forEach((y) => {
    m.addValue(y.headerName || y.field);
  }), f.push(m), `${`${f.map((y) => y.getRowString()).join(`\r
`)}\r
`}${a}`.trim();
}
function kB(e) {
  const t = document.createElement("span");
  t.style.whiteSpace = "pre", t.style.userSelect = "all", t.style.opacity = "0px", t.textContent = e, document.body.appendChild(t);
  const n = document.createRange();
  n.selectNode(t);
  const r = window.getSelection();
  r.removeAllRanges(), r.addRange(n);
  try {
    document.execCommand("copy");
  } finally {
    document.body.removeChild(t);
  }
}
function Fwe(e) {
  navigator.clipboard ? navigator.clipboard.writeText(e).catch(() => {
    kB(e);
  }) : kB(e);
}
function zwe(e) {
  var t;
  return !!((t = window.getSelection()) != null && t.toString() || e && (e.selectionEnd || 0) - (e.selectionStart || 0) > 0);
}
const Bwe = (e, t) => {
  const n = t.ignoreValueFormatterDuringExport, r = (typeof n == "object" ? n == null ? void 0 : n.clipboardExport : n) || !1, o = t.clipboardCopyCellDelimiter, s = x.useCallback((a) => {
    if (!sbe(a) || zwe(a.target))
      return;
    let c = "";
    if (e.current.getSelectedRows().size > 0)
      c = e.current.getDataAsCsv({
        includeHeaders: !1,
        delimiter: o,
        shouldAppendQuotes: !1,
        escapeFormulas: !1
      });
    else {
      const m = Ps(e);
      if (m) {
        const g = e.current.getCellParams(m.id, m.field);
        c = $4(g, {
          csvOptions: {
            delimiter: o,
            shouldAppendQuotes: !1,
            escapeFormulas: !1
          },
          ignoreValueFormatter: r
        });
      }
    }
    c = e.current.unstable_applyPipeProcessors("clipboardCopy", c), c && (Fwe(c), e.current.publishEvent("clipboardCopy", c));
  }, [e, r, o]);
  fW(e, () => e.current.rootElementRef.current, "keydown", s), fr(e, "clipboardCopy", t.onClipboardCopy);
}, Hwe = (e) => J({}, e, {
  columnMenu: {
    open: !1
  }
}), Vwe = (e) => {
  const t = vi(e, "useGridColumnMenu"), n = x.useCallback((a) => {
    const c = ST(e.current.state), f = {
      open: !0,
      field: a
    };
    (f.open !== c.open || f.field !== c.field) && (e.current.setState((g) => g.columnMenu.open && g.columnMenu.field === a ? g : (t.debug("Opening Column Menu"), J({}, g, {
      columnMenu: {
        open: !0,
        field: a
      }
    }))), e.current.hidePreferences());
  }, [e, t]), r = x.useCallback(() => {
    const a = ST(e.current.state);
    if (a.field) {
      const m = kd(e), g = ml(e), y = Ed(e);
      let w = a.field;
      if (m[w] || (w = y[0]), g[w] === !1) {
        const C = y.filter((E) => E === w ? !0 : g[E] !== !1), T = C.indexOf(w);
        w = C[T + 1] || C[T - 1];
      }
      e.current.setColumnHeaderFocus(w);
    }
    const c = {
      open: !1,
      field: void 0
    };
    (c.open !== a.open || c.field !== a.field) && e.current.setState((m) => (t.debug("Hiding Column Menu"), J({}, m, {
      columnMenu: c
    })));
  }, [e, t]), o = x.useCallback((a) => {
    t.debug("Toggle Column Menu");
    const c = ST(e.current.state);
    !c.open || c.field !== a ? n(a) : r();
  }, [e, t, n, r]);
  Tn(e, {
    showColumnMenu: n,
    hideColumnMenu: r,
    toggleColumnMenu: o
  }, "public"), Ot(e, "columnResizeStart", r), Ot(e, "virtualScrollerWheel", e.current.hideColumnMenu), Ot(e, "virtualScrollerTouchMove", e.current.hideColumnMenu);
}, Uwe = (e, t, n) => {
  var o, s, a;
  const r = xv({
    apiRef: n,
    columnsToUpsert: t.columns,
    initialState: (o = t.initialState) == null ? void 0 : o.columns,
    columnVisibilityModel: t.columnVisibilityModel ?? ((a = (s = t.initialState) == null ? void 0 : s.columns) == null ? void 0 : a.columnVisibilityModel) ?? {},
    keepOnlyColumnsToUpsert: !0
  });
  return J({}, e, {
    columns: r,
    // In pro/premium, this part of the state is defined. We give it an empty but defined value
    // for the community version.
    pinnedColumns: e.pinnedColumns ?? s_
  });
};
function Wwe(e, t) {
  var A, q;
  const n = vi(e, "useGridColumns"), r = x.useRef(t.columns);
  e.current.registerControlState({
    stateId: "visibleColumns",
    propModel: t.columnVisibilityModel,
    propOnChange: t.onColumnVisibilityModelChange,
    stateSelector: ml,
    changeEvent: "columnVisibilityModelChange"
  });
  const o = x.useCallback((W) => {
    n.debug("Updating columns state."), e.current.setState(PB(W)), e.current.publishEvent("columnsChange", W.orderedFields);
  }, [n, e]), s = x.useCallback((W) => kd(e)[W], [e]), a = x.useCallback(() => bl(e), [e]), c = x.useCallback(() => po(e), [e]), f = x.useCallback((W, Y = !0) => (Y ? po(e) : bl(e)).findIndex((G) => G.field === W), [e]), m = x.useCallback((W) => {
    const Y = f(W);
    return dp(e)[Y];
  }, [e, f]), g = x.useCallback((W) => {
    var ee, G;
    ml(e) !== W && (e.current.setState((K) => J({}, K, {
      columns: xv({
        apiRef: e,
        columnsToUpsert: [],
        initialState: void 0,
        columnVisibilityModel: W,
        keepOnlyColumnsToUpsert: !1
      })
    })), (G = (ee = e.current).updateRenderContext) == null || G.call(ee), e.current.forceUpdate());
  }, [e]), y = x.useCallback((W) => {
    const Y = xv({
      apiRef: e,
      columnsToUpsert: W,
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    o(Y);
  }, [e, o]), w = x.useCallback((W, Y) => {
    const ee = ml(e), G = ee[W] ?? !0;
    if (Y !== G) {
      const K = J({}, ee, {
        [W]: Y
      });
      e.current.setColumnVisibilityModel(K);
    }
  }, [e]), C = x.useCallback((W) => Ed(e).findIndex((ee) => ee === W), [e]), T = x.useCallback((W, Y) => {
    const ee = Ed(e), G = C(W);
    if (G === Y)
      return;
    n.debug(`Moving column ${W} to index ${Y}`);
    const K = [...ee], X = K.splice(G, 1)[0];
    K.splice(Y, 0, X), o(J({}, gc(e.current.state), {
      orderedFields: K
    }));
    const te = {
      column: e.current.getColumn(W),
      targetIndex: e.current.getColumnIndexRelativeToVisibleColumns(W),
      oldIndex: G
    };
    e.current.publishEvent("columnIndexChange", te);
  }, [e, n, o, C]), E = x.useCallback((W, Y) => {
    n.debug(`Updating column ${W} width to ${Y}`);
    const ee = gc(e.current.state), G = ee.lookup[W], K = J({}, G, {
      width: Y,
      hasBeenResized: !0
    });
    o(eI(J({}, ee, {
      lookup: J({}, ee.lookup, {
        [W]: K
      })
    }), e.current.getRootDimensions())), e.current.publishEvent("columnWidthChange", {
      element: e.current.getColumnHeaderElement(W),
      colDef: K,
      width: Y
    });
  }, [e, n, o]), O = {
    getColumn: s,
    getAllColumns: a,
    getColumnIndex: f,
    getColumnPosition: m,
    getVisibleColumns: c,
    getColumnIndexRelativeToVisibleColumns: C,
    updateColumns: y,
    setColumnVisibilityModel: g,
    setColumnVisibility: w,
    setColumnWidth: E
  }, k = {
    setColumnIndex: T
  };
  Tn(e, O, "public"), Tn(e, k, t.signature === Da.DataGrid ? "private" : "public");
  const I = x.useCallback((W, Y) => {
    var re, Q;
    const ee = {}, G = ml(e);
    // Always export if the `exportOnlyDirtyModels` property is not activated
    (!Y.exportOnlyDirtyModels || // Always export if the model is controlled
    t.columnVisibilityModel != null || // Always export if the model has been initialized
    // TODO v6 Do a nullish check instead to export even if the initial model equals "{}"
    Object.keys(((Q = (re = t.initialState) == null ? void 0 : re.columns) == null ? void 0 : Q.columnVisibilityModel) ?? {}).length > 0 || // Always export if the model is not empty
    Object.keys(G).length > 0) && (ee.columnVisibilityModel = G), ee.orderedFields = Ed(e);
    const X = bl(e), te = {};
    return X.forEach((B) => {
      if (B.hasBeenResized) {
        const ie = {};
        kW.forEach((de) => {
          let ue = B[de];
          ue === 1 / 0 && (ue = -1), ie[de] = ue;
        }), te[B.field] = ie;
      }
    }), Object.keys(te).length > 0 && (ee.dimensions = te), J({}, W, {
      columns: ee
    });
  }, [e, t.columnVisibilityModel, (A = t.initialState) == null ? void 0 : A.columns]), M = x.useCallback((W, Y) => {
    var X;
    const ee = (X = Y.stateToRestore.columns) == null ? void 0 : X.columnVisibilityModel, G = Y.stateToRestore.columns;
    if (ee == null && G == null)
      return W;
    const K = xv({
      apiRef: e,
      columnsToUpsert: [],
      initialState: G,
      columnVisibilityModel: ee,
      keepOnlyColumnsToUpsert: !1
    });
    return e.current.setState(PB(K)), G != null && e.current.publishEvent("columnsChange", K.orderedFields), W;
  }, [e]), N = x.useCallback((W, Y) => {
    var ee;
    if (Y === dm.columns) {
      const G = t.slots.columnsPanel;
      return /* @__PURE__ */ $.jsx(G, J({}, (ee = t.slotProps) == null ? void 0 : ee.columnsPanel));
    }
    return W;
  }, [t.slots.columnsPanel, (q = t.slotProps) == null ? void 0 : q.columnsPanel]), P = x.useCallback((W) => t.disableColumnSelector ? W : [...W, "columnMenuColumnsItem"], [t.disableColumnSelector]);
  to(e, "columnMenu", P), to(e, "exportState", I), to(e, "restoreState", M), to(e, "preferencePanel", N);
  const F = x.useRef(null);
  Ot(e, "viewportInnerSizeChange", (W) => {
    if (F.current !== W.width) {
      if (F.current = W.width, !po(e).some((ee) => ee.flex && ee.flex > 0))
        return;
      o(eI(gc(e.current.state), e.current.getRootDimensions()));
    }
  });
  const U = x.useCallback(() => {
    n.info("Columns pipe processing have changed, regenerating the columns");
    const W = xv({
      apiRef: e,
      columnsToUpsert: [],
      initialState: void 0,
      keepOnlyColumnsToUpsert: !1
    });
    o(W);
  }, [e, n, o]);
  rA(e, "hydrateColumns", U);
  const z = x.useRef(!0);
  x.useEffect(() => {
    if (z.current) {
      z.current = !1;
      return;
    }
    if (n.info(`GridColumns have changed, new length ${t.columns.length}`), r.current === t.columns)
      return;
    const W = xv({
      apiRef: e,
      initialState: void 0,
      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`
      columnsToUpsert: t.columns,
      keepOnlyColumnsToUpsert: !0
    });
    r.current = t.columns, o(W);
  }, [n, e, o, t.columns]), x.useEffect(() => {
    t.columnVisibilityModel !== void 0 && e.current.setColumnVisibilityModel(t.columnVisibilityModel);
  }, [e, n, t.columnVisibilityModel]);
}
function PB(e) {
  return (t) => J({}, t, {
    columns: e
  });
}
const Gwe = (e, t) => {
  var n;
  return J({}, e, {
    density: ((n = t.initialState) == null ? void 0 : n.density) ?? t.density ?? "standard"
  });
}, qwe = (e, t) => {
  var c;
  const n = vi(e, "useDensity");
  e.current.registerControlState({
    stateId: "density",
    propModel: t.density,
    propOnChange: t.onDensityChange,
    stateSelector: Ov,
    changeEvent: "densityChange"
  });
  const o = {
    setDensity: jn((f) => {
      Ov(e.current.state) !== f && (n.debug(`Set grid density to ${f}`), e.current.setState((g) => J({}, g, {
        density: f
      })));
    })
  };
  Tn(e, o, "public");
  const s = x.useCallback((f, m) => {
    var w;
    const g = Ov(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !m.exportOnlyDirtyModels || // Always export if the `density` is controlled
      t.density != null || // Always export if the `density` has been initialized
      ((w = t.initialState) == null ? void 0 : w.density) != null ? J({}, f, {
        density: g
      }) : f
    );
  }, [e, t.density, (c = t.initialState) == null ? void 0 : c.density]), a = x.useCallback((f, m) => {
    var y;
    const g = (y = m.stateToRestore) != null && y.density ? m.stateToRestore.density : Ov(e.current.state);
    return e.current.setState((w) => J({}, w, {
      density: g
    })), f;
  }, [e]);
  to(e, "exportState", s), to(e, "restoreState", a), x.useEffect(() => {
    t.density && e.current.setDensity(t.density);
  }, [e, t.density]);
};
function Kwe(e, t = "csv", n = document.title || "untitled") {
  const r = `${n}.${t}`;
  if ("download" in HTMLAnchorElement.prototype) {
    const o = URL.createObjectURL(e), s = document.createElement("a");
    s.href = o, s.download = r, s.click(), setTimeout(() => {
      URL.revokeObjectURL(o);
    });
    return;
  }
  throw new Error("MUI X: exportAs not supported.");
}
const j4 = ({
  apiRef: e,
  options: t
}) => {
  const n = bl(e);
  return t.fields ? t.fields.reduce((o, s) => {
    const a = n.find((c) => c.field === s);
    return a && o.push(a), o;
  }, []) : (t.allColumns ? n : po(e)).filter((o) => !o.disableExport);
}, F4 = ({
  apiRef: e
}) => {
  var f, m;
  const t = sW(e), n = Yo(e), r = e.current.getSelectedRows(), o = t.filter((g) => n[g].type !== "footer"), s = yy(e), a = ((f = s == null ? void 0 : s.top) == null ? void 0 : f.map((g) => g.id)) || [], c = ((m = s == null ? void 0 : s.bottom) == null ? void 0 : m.map((g) => g.id)) || [];
  return o.unshift(...a), o.push(...c), r.size > 0 ? o.filter((g) => r.has(g)) : o;
}, Ywe = (e, t) => {
  const n = vi(e, "useGridCsvExport"), r = t.ignoreValueFormatterDuringExport, o = (typeof r == "object" ? r == null ? void 0 : r.csvExport : r) || !1, s = x.useCallback((m = {}) => {
    n.debug("Get data as CSV");
    const g = j4({
      apiRef: e,
      options: m
    }), w = (m.getRowsToExport ?? F4)({
      apiRef: e
    });
    return jwe({
      columns: g,
      rowIds: w,
      csvOptions: {
        delimiter: m.delimiter || ",",
        shouldAppendQuotes: m.shouldAppendQuotes ?? !0,
        includeHeaders: m.includeHeaders ?? !0,
        includeColumnGroupsHeaders: m.includeColumnGroupsHeaders ?? !0,
        escapeFormulas: m.escapeFormulas ?? !0
      },
      ignoreValueFormatter: o,
      apiRef: e
    });
  }, [n, e, o]), a = x.useCallback((m) => {
    n.debug("Export data as CSV");
    const g = s(m), y = new Blob([m != null && m.utf8WithBom ? new Uint8Array([239, 187, 191]) : "", g], {
      type: "text/csv"
    });
    Kwe(y, "csv", m == null ? void 0 : m.fileName);
  }, [n, s]);
  Tn(e, {
    getDataAsCsv: s,
    exportDataAsCsv: a
  }, "public");
  const f = x.useCallback((m, g) => {
    var y;
    return (y = g.csvOptions) != null && y.disableToolbarButton ? m : [...m, {
      component: /* @__PURE__ */ $.jsx(O4, {
        options: g.csvOptions
      }),
      componentName: "csvExport"
    }];
  }, []);
  to(e, "exportMenu", f);
}, CT = (e, t, n) => {
  let r = e.paginationModel;
  const o = e.rowCount, s = (n == null ? void 0 : n.pageSize) ?? r.pageSize, a = (n == null ? void 0 : n.page) ?? r.page, c = pW(o, s, a);
  n && ((n == null ? void 0 : n.page) !== r.page || (n == null ? void 0 : n.pageSize) !== r.pageSize) && (r = n);
  const f = s === -1 ? 0 : Cme(r.page, c);
  return f !== r.page && (r = J({}, r, {
    page: f
  })), mW(r.pageSize, t), r;
}, Xwe = (e, t) => {
  var I, M;
  const n = vi(e, "useGridPaginationModel"), r = Ze(e, vy), o = x.useRef(Ei(e)), s = Math.floor(t.rowHeight * r);
  e.current.registerControlState({
    stateId: "paginationModel",
    propModel: t.paginationModel,
    propOnChange: t.onPaginationModelChange,
    stateSelector: ms,
    changeEvent: "paginationModelChange"
  });
  const a = x.useCallback((N) => {
    const P = ms(e);
    N !== P.page && (n.debug(`Setting page to ${N}`), e.current.setPaginationModel({
      page: N,
      pageSize: P.pageSize
    }));
  }, [e, n]), c = x.useCallback((N) => {
    const P = ms(e);
    N !== P.pageSize && (n.debug(`Setting page size to ${N}`), e.current.setPaginationModel({
      pageSize: N,
      page: P.page
    }));
  }, [e, n]), f = x.useCallback((N) => {
    const P = ms(e);
    N !== P && (n.debug("Setting 'paginationModel' to", N), e.current.setState((F) => J({}, F, {
      pagination: J({}, F.pagination, {
        paginationModel: CT(F.pagination, t.signature, N)
      })
    }), "setPaginationModel"));
  }, [e, n, t.signature]);
  Tn(e, {
    setPage: a,
    setPageSize: c,
    setPaginationModel: f
  }, "public");
  const g = x.useCallback((N, P) => {
    var U, z;
    const F = ms(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !P.exportOnlyDirtyModels || // Always export if the `paginationModel` is controlled
      t.paginationModel != null || // Always export if the `paginationModel` has been initialized
      ((z = (U = t.initialState) == null ? void 0 : U.pagination) == null ? void 0 : z.paginationModel) != null || // Export if `page` or `pageSize` is not equal to the default value
      F.page !== 0 && F.pageSize !== Sme(t.autoPageSize) ? J({}, N, {
        pagination: J({}, N.pagination, {
          paginationModel: F
        })
      }) : N
    );
  }, [e, t.paginationModel, (M = (I = t.initialState) == null ? void 0 : I.pagination) == null ? void 0 : M.paginationModel, t.autoPageSize]), y = x.useCallback((N, P) => {
    var H, U;
    const F = (H = P.stateToRestore.pagination) != null && H.paginationModel ? J({}, hW(t.autoPageSize), (U = P.stateToRestore.pagination) == null ? void 0 : U.paginationModel) : ms(e);
    return e.current.setState((z) => J({}, z, {
      pagination: J({}, z.pagination, {
        paginationModel: CT(z.pagination, t.signature, F)
      })
    }), "stateRestorePreProcessing"), N;
  }, [e, t.autoPageSize, t.signature]);
  to(e, "exportState", g), to(e, "restoreState", y);
  const w = () => {
    var P;
    const N = ms(e);
    (P = e.current.virtualScrollerRef) != null && P.current && e.current.scrollToIndexes({
      rowIndex: N.page * N.pageSize
    });
  }, C = x.useCallback(() => {
    if (!t.autoPageSize)
      return;
    const N = e.current.getRootDimensions(), P = Math.max(1, Math.floor(N.viewportInnerSize.height / s));
    e.current.setPageSize(P);
  }, [e, t.autoPageSize, s]), T = x.useCallback((N) => {
    if (N == null)
      return;
    const P = ms(e);
    if (P.page === 0)
      return;
    const F = yW(e);
    P.page > F - 1 && e.current.setPage(Math.max(0, F - 1));
  }, [e]), E = x.useCallback(() => {
    ms(e).page !== 0 && e.current.setPage(0), e.current.getScrollPosition().top !== 0 && e.current.scroll({
      top: 0
    });
  }, [e]), O = x.useCallback((N) => {
    const P = J({}, N, {
      // replace items with the active items
      items: lW(e)
    });
    Wf(P, o.current) || (o.current = P, E());
  }, [e, E]);
  Ot(e, "viewportInnerSizeChange", C), Ot(e, "paginationModelChange", w), Ot(e, "rowCountChange", T), Ot(e, "sortModelChange", Wh(t.resetPageOnSortFilter, E)), Ot(e, "filterModelChange", Wh(t.resetPageOnSortFilter, O));
  const k = x.useRef(!0);
  x.useEffect(() => {
    if (k.current) {
      k.current = !1;
      return;
    }
    t.pagination && e.current.setState((N) => J({}, N, {
      pagination: J({}, N.pagination, {
        paginationModel: CT(N.pagination, t.signature, t.paginationModel)
      })
    }));
  }, [e, t.paginationModel, t.signature, t.pagination]), x.useEffect(() => {
    e.current.setState((N) => {
      const P = t.pagination === !0;
      return N.pagination.paginationMode === t.paginationMode || N.pagination.enabled === P ? N : J({}, N, {
        pagination: J({}, N.pagination, {
          paginationMode: t.paginationMode,
          enabled: t.pagination === !0
        })
      });
    });
  }, [e, t.paginationMode, t.pagination]), x.useEffect(C, [C]);
};
function Qwe() {
  return new Promise((e) => {
    requestAnimationFrame(() => {
      e();
    });
  });
}
function Jwe(e) {
  const t = document.createElement("iframe");
  return t.style.position = "absolute", t.style.width = "0px", t.style.height = "0px", t.title = e || document.title, t;
}
const Zwe = (e, t) => {
  const n = e.current.rootElementRef.current !== null, r = vi(e, "useGridPrintExport"), o = x.useRef(null), s = x.useRef(null), a = x.useRef({}), c = x.useRef([]), f = x.useRef(null);
  x.useEffect(() => {
    o.current = ho(e.current.rootElementRef.current);
  }, [e, n]);
  const m = x.useCallback((O, k, I) => new Promise((M) => {
    const N = j4({
      apiRef: e,
      options: {
        fields: O,
        allColumns: k
      }
    }).map((H) => H.field), P = bl(e), F = {};
    P.forEach((H) => {
      F[H.field] = N.includes(H.field);
    }), I && (F[xy.field] = !0), e.current.setColumnVisibilityModel(F), M();
  }), [e]), g = x.useCallback((O) => {
    const I = O({
      apiRef: e
    }).reduce((M, N) => {
      const P = e.current.getRow(N);
      return P[ty] || M.push(P), M;
    }, []);
    e.current.setRows(I);
  }, [e]), y = x.useCallback((O, k) => {
    var G, K, X;
    const I = J({
      copyStyles: !0,
      hideToolbar: !1,
      hideFooter: !1,
      includeCheckboxes: !1
    }, k), M = O.contentDocument;
    if (!M)
      return;
    const N = Ey(e.current.state), P = e.current.rootElementRef.current, F = P.cloneNode(!0), H = F.querySelector(`.${se.main}`);
    H.style.overflow = "visible", F.style.contain = "size";
    let U = ((G = P.querySelector(`.${se.toolbarContainer}`)) == null ? void 0 : G.offsetHeight) || 0, z = ((K = P.querySelector(`.${se.footerContainer}`)) == null ? void 0 : K.offsetHeight) || 0;
    const A = F.querySelector(`.${se.footerContainer}`);
    I.hideToolbar && ((X = F.querySelector(`.${se.toolbarContainer}`)) == null || X.remove(), U = 0), I.hideFooter && A && (A.remove(), z = 0);
    const q = N.currentPageTotalHeight + xO(e, t) + U + z;
    F.style.height = `${q}px`, F.style.boxSizing = "content-box", !I.hideFooter && A && (A.style.position = "absolute", A.style.width = "100%", A.style.top = `${q - z}px`);
    const W = document.createElement("div");
    W.appendChild(F), M.body.style.marginTop = "0px", M.body.innerHTML = W.innerHTML;
    const Y = typeof I.pageStyle == "function" ? I.pageStyle() : I.pageStyle;
    if (typeof Y == "string") {
      const te = M.createElement("style");
      te.appendChild(M.createTextNode(Y)), M.head.appendChild(te);
    }
    I.bodyClassName && M.body.classList.add(...I.bodyClassName.split(" "));
    const ee = [];
    if (I.copyStyles) {
      const te = P.getRootNode(), Q = (te.constructor.name === "ShadowRoot" ? te : o.current).querySelectorAll("style, link[rel='stylesheet']");
      for (let B = 0; B < Q.length; B += 1) {
        const ie = Q[B];
        if (ie.tagName === "STYLE") {
          const de = M.createElement(ie.tagName), ue = ie.sheet;
          if (ue) {
            let he = "";
            for (let ge = 0; ge < ue.cssRules.length; ge += 1)
              typeof ue.cssRules[ge].cssText == "string" && (he += `${ue.cssRules[ge].cssText}\r
`);
            de.appendChild(M.createTextNode(he)), M.head.appendChild(de);
          }
        } else if (ie.getAttribute("href")) {
          const de = M.createElement(ie.tagName);
          for (let ue = 0; ue < ie.attributes.length; ue += 1) {
            const he = ie.attributes[ue];
            he && de.setAttribute(he.nodeName, he.nodeValue || "");
          }
          ee.push(new Promise((ue) => {
            de.addEventListener("load", () => ue());
          })), M.head.appendChild(de);
        }
      }
    }
    process.env.NODE_ENV !== "test" && Promise.all(ee).then(() => {
      O.contentWindow.print();
    });
  }, [e, o, t]), w = x.useCallback((O) => {
    var k, I;
    o.current.body.removeChild(O), e.current.restoreState(s.current || {}), (I = (k = s.current) == null ? void 0 : k.columns) != null && I.columnVisibilityModel || e.current.setColumnVisibilityModel(a.current), e.current.setState((M) => J({}, M, {
      virtualization: f.current
    })), e.current.setRows(c.current), s.current = null, a.current = {}, c.current = [];
  }, [e]), T = {
    exportDataAsPrint: x.useCallback(async (O) => {
      if (r.debug("Export data as Print"), !e.current.rootElementRef.current)
        throw new Error("MUI X: No grid root element available.");
      if (s.current = e.current.exportState(), a.current = ml(e), c.current = e.current.getSortedRows().filter((I) => !I[ty]), t.pagination) {
        const M = {
          page: 0,
          pageSize: BD(e)
        };
        e.current.setState((N) => J({}, N, {
          pagination: J({}, N.pagination, {
            paginationModel: CT(
              N.pagination,
              // Using signature `DataGridPro` to allow more than 100 rows in the print export
              "DataGridPro",
              M
            )
          })
        }));
      }
      f.current = e.current.state.virtualization, e.current.setState((I) => J({}, I, {
        virtualization: J({}, I.virtualization, {
          enabled: !1,
          enabledForColumns: !1
        })
      })), await m(O == null ? void 0 : O.fields, O == null ? void 0 : O.allColumns, O == null ? void 0 : O.includeCheckboxes), g((O == null ? void 0 : O.getRowsToExport) ?? F4), await Qwe();
      const k = Jwe(O == null ? void 0 : O.fileName);
      process.env.NODE_ENV === "test" ? (o.current.body.appendChild(k), y(k, O), w(k)) : (k.onload = () => {
        y(k, O), k.contentWindow.matchMedia("print").addEventListener("change", (M) => {
          M.matches === !1 && w(k);
        });
      }, o.current.body.appendChild(k));
    }, [t, r, e, y, w, m, g])
  };
  Tn(e, T, "public");
  const E = x.useCallback((O, k) => {
    var I;
    return (I = k.printOptions) != null && I.disableToolbarButton ? O : [...O, {
      component: /* @__PURE__ */ $.jsx(R4, {
        options: k.printOptions
      }),
      componentName: "printExport"
    }];
  }, []);
  to(e, "exportMenu", E);
}, eSe = (e, t, n) => {
  var o, s;
  const r = t.filterModel ?? ((s = (o = t.initialState) == null ? void 0 : o.filter) == null ? void 0 : s.filterModel) ?? XS();
  return J({}, e, {
    filter: J({
      filterModel: jD(r, t.disableMultipleColumnsFiltering, n)
    }, z5),
    visibleRowsLookup: {}
  });
}, tSe = (e) => e.filteredRowsLookup;
function MB(e, t) {
  return e.current.applyStrategyProcessor("visibleRowsLookupCreation", {
    tree: t.rows.tree,
    filteredRowsLookup: t.filter.filteredRowsLookup
  });
}
function nSe() {
  return S5(Object.values);
}
const rSe = (e, t) => {
  var z, A, q;
  const n = vi(e, "useGridFilter");
  e.current.registerControlState({
    stateId: "filter",
    propModel: t.filterModel,
    propOnChange: t.onFilterModelChange,
    stateSelector: Ei,
    changeEvent: "filterModelChange"
  });
  const r = x.useCallback(() => {
    e.current.setState((W) => {
      const Y = Ei(W, e.current.instanceId), ee = e.current.getFilterState(Y), G = J({}, W, {
        filter: J({}, W.filter, ee)
      }), K = MB(e, G);
      return J({}, G, {
        visibleRowsLookup: K
      });
    }), e.current.publishEvent("filteredRowsSet");
  }, [e]), o = x.useCallback((W, Y) => Y == null || Y.filterable === !1 || t.disableColumnFilter ? W : [...W, "columnMenuFilterItem"], [t.disableColumnFilter]), s = x.useCallback(() => {
    r(), e.current.forceUpdate();
  }, [e, r]), a = x.useCallback((W) => {
    const Y = Ei(e), ee = [...Y.items], G = ee.findIndex((K) => K.id === W.id);
    G === -1 ? ee.push(W) : ee[G] = W, e.current.setFilterModel(J({}, Y, {
      items: ee
    }), "upsertFilterItem");
  }, [e]), c = x.useCallback((W) => {
    const Y = Ei(e), ee = [...Y.items];
    W.forEach((G) => {
      const K = ee.findIndex((X) => X.id === G.id);
      K === -1 ? ee.push(G) : ee[K] = G;
    }), e.current.setFilterModel(J({}, Y, {
      items: ee
    }), "upsertFilterItems");
  }, [e]), f = x.useCallback((W) => {
    const Y = Ei(e), ee = Y.items.filter((G) => G.id !== W.id);
    ee.length !== Y.items.length && e.current.setFilterModel(J({}, Y, {
      items: ee
    }), "deleteFilterItem");
  }, [e]), m = x.useCallback((W, Y, ee) => {
    if (n.debug("Displaying filter panel"), W) {
      const G = Ei(e), K = G.items.filter((Q) => {
        var ue;
        if (Q.value !== void 0)
          return !(Array.isArray(Q.value) && Q.value.length === 0);
        const ie = (ue = e.current.getColumn(Q.field).filterOperators) == null ? void 0 : ue.find((he) => he.value === Q.operator);
        return !(typeof (ie == null ? void 0 : ie.requiresFilterValue) > "u" ? !0 : ie == null ? void 0 : ie.requiresFilterValue);
      });
      let X;
      const te = K.find((Q) => Q.field === W), re = e.current.getColumn(W);
      te ? X = K : t.disableMultipleColumnsFiltering ? X = [JM({
        field: W,
        operator: re.filterOperators[0].value
      }, e)] : X = [...K, JM({
        field: W,
        operator: re.filterOperators[0].value
      }, e)], e.current.setFilterModel(J({}, G, {
        items: X
      }));
    }
    e.current.showPreferences(dm.filters, Y, ee);
  }, [e, n, t.disableMultipleColumnsFiltering]), g = x.useCallback(() => {
    n.debug("Hiding filter panel"), e.current.hidePreferences();
  }, [e, n]), y = x.useCallback((W) => {
    const Y = Ei(e);
    Y.logicOperator !== W && e.current.setFilterModel(J({}, Y, {
      logicOperator: W
    }), "changeLogicOperator");
  }, [e]), w = x.useCallback((W) => {
    const Y = Ei(e);
    Wf(Y.quickFilterValues, W) || e.current.setFilterModel(J({}, Y, {
      quickFilterValues: [...W]
    }));
  }, [e]), C = x.useCallback((W, Y) => {
    Ei(e) !== W && (n.debug("Setting filter model"), e.current.updateControlState("filter", Wz(W, t.disableMultipleColumnsFiltering, e), Y), e.current.unstable_applyFilters());
  }, [e, n, t.disableMultipleColumnsFiltering]), T = x.useCallback((W) => {
    const Y = jD(W, t.disableMultipleColumnsFiltering, e), ee = t.filterMode === "client" ? Ohe(Y, e, t.disableEval) : null, G = e.current.applyStrategyProcessor("filtering", {
      isRowMatchingFilters: ee,
      filterModel: Y ?? XS()
    });
    return J({}, G, {
      filterModel: Y
    });
  }, [t.disableMultipleColumnsFiltering, t.filterMode, t.disableEval, e]), E = {
    setFilterLogicOperator: y,
    unstable_applyFilters: s,
    deleteFilterItem: f,
    upsertFilterItem: a,
    upsertFilterItems: c,
    setFilterModel: C,
    showFilterPanel: m,
    hideFilterPanel: g,
    setQuickFilterValues: w,
    ignoreDiacritics: t.ignoreDiacritics,
    getFilterState: T
  };
  Tn(e, E, "public");
  const O = x.useCallback((W, Y) => {
    var K, X;
    const ee = Ei(e);
    return ee.items.forEach((te) => {
      delete te.fromInput;
    }), // Always export if the `exportOnlyDirtyModels` property is not activated
    !Y.exportOnlyDirtyModels || // Always export if the model is controlled
    t.filterModel != null || // Always export if the model has been initialized
    ((X = (K = t.initialState) == null ? void 0 : K.filter) == null ? void 0 : X.filterModel) != null || // Export if the model is not equal to the default value
    !Wf(ee, XS()) ? J({}, W, {
      filter: {
        filterModel: ee
      }
    }) : W;
  }, [e, t.filterModel, (A = (z = t.initialState) == null ? void 0 : z.filter) == null ? void 0 : A.filterModel]), k = x.useCallback((W, Y) => {
    var G;
    const ee = (G = Y.stateToRestore.filter) == null ? void 0 : G.filterModel;
    return ee == null ? W : (e.current.updateControlState("filter", Wz(ee, t.disableMultipleColumnsFiltering, e), "restoreState"), J({}, W, {
      callbacks: [...W.callbacks, e.current.unstable_applyFilters]
    }));
  }, [e, t.disableMultipleColumnsFiltering]), I = x.useCallback((W, Y) => {
    var ee;
    if (Y === dm.filters) {
      const G = t.slots.filterPanel;
      return /* @__PURE__ */ $.jsx(G, J({}, (ee = t.slotProps) == null ? void 0 : ee.filterPanel));
    }
    return W;
  }, [t.slots.filterPanel, (q = t.slotProps) == null ? void 0 : q.filterPanel]), {
    getRowId: M
  } = t, N = Ol(nSe), P = x.useCallback((W) => {
    var B;
    if (t.filterMode !== "client" || !W.isRowMatchingFilters || !W.filterModel.items.length && !((B = W.filterModel.quickFilterValues) != null && B.length))
      return z5;
    const Y = hl(e), ee = {}, {
      isRowMatchingFilters: G
    } = W, K = {}, X = {
      passingFilterItems: null,
      passingQuickFilterValues: null
    }, te = N.current(e.current.state.rows.dataRowIdToModelLookup);
    for (let ie = 0; ie < te.length; ie += 1) {
      const de = te[ie], ue = M ? M(de) : de.id;
      G(de, void 0, X);
      const he = khe([X.passingFilterItems], [X.passingQuickFilterValues], W.filterModel, e, K);
      ee[ue] = he;
    }
    const re = "auto-generated-group-footer-root";
    return Y[re] && (ee[re] = !0), {
      filteredRowsLookup: ee,
      filteredChildrenCountLookup: {},
      filteredDescendantCountLookup: {}
    };
  }, [e, t.filterMode, M, N]);
  to(e, "columnMenu", o), to(e, "exportState", O), to(e, "restoreState", k), to(e, "preferencePanel", I), m_(e, fm, "filtering", P), m_(e, fm, "visibleRowsLookupCreation", tSe);
  const F = x.useCallback(() => {
    n.debug("onColUpdated - GridColumns changed, applying filters");
    const W = Ei(e), Y = kd(e), ee = W.items.filter((G) => G.field && Y[G.field]);
    ee.length < W.items.length && e.current.setFilterModel(J({}, W, {
      items: ee
    }));
  }, [e, n]), H = x.useCallback((W) => {
    W === "filtering" && e.current.unstable_applyFilters();
  }, [e]), U = x.useCallback(() => {
    e.current.setState((W) => J({}, W, {
      visibleRowsLookup: MB(e, W)
    })), e.current.forceUpdate();
  }, [e]);
  Ot(e, "rowsSet", r), Ot(e, "columnsChange", F), Ot(e, "activeStrategyProcessorChange", H), Ot(e, "rowExpansionChange", U), Ot(e, "columnVisibilityModelChange", () => {
    const W = Ei(e);
    W.quickFilterValues && q5(W) && e.current.unstable_applyFilters();
  }), TC(() => {
    e.current.unstable_applyFilters();
  }), Nr(() => {
    t.filterModel !== void 0 && e.current.setFilterModel(t.filterModel);
  }, [e, n, t.filterModel]);
}, oSe = (e) => J({}, e, {
  focus: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  },
  tabIndex: {
    cell: null,
    columnHeader: null,
    columnHeaderFilter: null,
    columnGroupHeader: null
  }
}), iSe = (e, t) => {
  const n = vi(e, "useGridFocus"), r = x.useRef(null), o = e.current.rootElementRef.current !== null, s = x.useCallback((U, z) => {
    U && e.current.getRow(U.id) && e.current.publishEvent("cellFocusOut", e.current.getCellParams(U.id, U.field), z);
  }, [e]), a = x.useCallback((U, z) => {
    const A = Ps(e);
    (A == null ? void 0 : A.id) === U && (A == null ? void 0 : A.field) === z || (e.current.setState((q) => (n.debug(`Focusing on cell with id=${U} and field=${z}`), J({}, q, {
      tabIndex: {
        cell: {
          id: U,
          field: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      },
      focus: {
        cell: {
          id: U,
          field: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate(), e.current.getRow(U) && (A && s(A, {}), e.current.publishEvent("cellFocusIn", e.current.getCellParams(U, z))));
  }, [e, n, s]), c = x.useCallback((U, z = {}) => {
    const A = Ps(e);
    s(A, z), e.current.setState((q) => (n.debug(`Focusing on column header with colIndex=${U}`), J({}, q, {
      tabIndex: {
        columnHeader: {
          field: U
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: {
          field: U
        },
        columnHeaderFilter: null,
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, s]), f = x.useCallback((U, z = {}) => {
    const A = Ps(e);
    s(A, z), e.current.setState((q) => (n.debug(`Focusing on column header filter with colIndex=${U}`), J({}, q, {
      tabIndex: {
        columnHeader: null,
        columnHeaderFilter: {
          field: U
        },
        cell: null,
        columnGroupHeader: null
      },
      focus: {
        columnHeader: null,
        columnHeaderFilter: {
          field: U
        },
        cell: null,
        columnGroupHeader: null
      }
    }))), e.current.forceUpdate();
  }, [e, n, s]), m = x.useCallback((U, z, A = {}) => {
    const q = Ps(e);
    q && e.current.publishEvent("cellFocusOut", e.current.getCellParams(q.id, q.field), A), e.current.setState((W) => J({}, W, {
      tabIndex: {
        columnGroupHeader: {
          field: U,
          depth: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      },
      focus: {
        columnGroupHeader: {
          field: U,
          depth: z
        },
        columnHeader: null,
        columnHeaderFilter: null,
        cell: null
      }
    })), e.current.forceUpdate();
  }, [e]), g = x.useCallback(() => a_(e), [e]), y = x.useCallback((U, z, A) => {
    let q = e.current.getColumnIndex(z);
    const W = po(e), Y = qf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    }), ee = yy(e), G = [].concat(ee.top || [], Y.rows, ee.bottom || []);
    let K = G.findIndex((Q) => Q.id === U);
    A === "right" ? q += 1 : A === "left" ? q -= 1 : K += 1, q >= W.length ? (K += 1, K < G.length && (q = 0)) : q < 0 && (K -= 1, K >= 0 && (q = W.length - 1)), K = Aa(K, 0, G.length - 1);
    const X = G[K];
    if (!X)
      return;
    const te = e.current.unstable_getCellColSpanInfo(X.id, q);
    te && te.spannedByColSpan && (A === "left" || A === "below" ? q = te.leftVisibleCellIndex : A === "right" && (q = te.rightVisibleCellIndex)), q = Aa(q, 0, W.length - 1);
    const re = W[q];
    e.current.setCellFocus(X.id, re.field);
  }, [e, t.pagination, t.paginationMode]), w = x.useCallback(({
    id: U,
    field: z
  }) => {
    e.current.setCellFocus(U, z);
  }, [e]), C = x.useCallback((U, z) => {
    z.key === "Enter" || z.key === "Tab" || z.key === "Shift" || f_(z.key) || e.current.setCellFocus(U.id, U.field);
  }, [e]), T = x.useCallback(({
    field: U
  }, z) => {
    z.target === z.currentTarget && e.current.setColumnHeaderFocus(U, z);
  }, [e]), E = x.useCallback(({
    fields: U,
    depth: z
  }, A) => {
    if (A.target !== A.currentTarget)
      return;
    const q = a_(e);
    q !== null && q.depth === z && U.includes(q.field) || e.current.setColumnGroupHeaderFocus(U[0], z, A);
  }, [e]), O = x.useCallback((U, z) => {
    var A, q;
    (q = (A = z.relatedTarget) == null ? void 0 : A.getAttribute("class")) != null && q.includes(se.columnHeader) || (n.debug("Clearing focus"), e.current.setState((W) => J({}, W, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })));
  }, [n, e]), k = x.useCallback((U) => {
    r.current = U;
  }, []), I = x.useCallback((U) => {
    const z = r.current;
    r.current = null;
    const A = Ps(e);
    if (!e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: U,
      cell: z
    }))
      return;
    if (!A) {
      z && e.current.setCellFocus(z.id, z.field);
      return;
    }
    if ((z == null ? void 0 : z.id) === A.id && (z == null ? void 0 : z.field) === A.field)
      return;
    const W = e.current.getCellElement(A.id, A.field);
    W != null && W.contains(U.target) || (z ? e.current.setCellFocus(z.id, z.field) : (e.current.setState((Y) => J({}, Y, {
      focus: {
        cell: null,
        columnHeader: null,
        columnHeaderFilter: null,
        columnGroupHeader: null
      }
    })), e.current.forceUpdate(), s(A, U)));
  }, [e, s]), M = x.useCallback((U) => {
    if (U.cellMode === "view")
      return;
    const z = Ps(e);
    ((z == null ? void 0 : z.id) !== U.id || (z == null ? void 0 : z.field) !== U.field) && e.current.setCellFocus(U.id, U.field);
  }, [e]), N = x.useCallback(() => {
    const U = Ps(e);
    if (U && !e.current.getRow(U.id)) {
      const z = U.id;
      let A = null;
      if (typeof z < "u") {
        const q = e.current.getRowElement(z), W = q != null && q.dataset.rowindex ? Number(q == null ? void 0 : q.dataset.rowindex) : 0, Y = qf(e, {
          pagination: t.pagination,
          paginationMode: t.paginationMode
        }), ee = Y.rows[Aa(W, 0, Y.rows.length - 1)];
        A = (ee == null ? void 0 : ee.id) ?? null;
      }
      e.current.setState((q) => J({}, q, {
        focus: {
          cell: A === null ? null : {
            id: A,
            field: U.field
          },
          columnHeader: null,
          columnHeaderFilter: null,
          columnGroupHeader: null
        }
      }));
    }
  }, [e, t.pagination, t.paginationMode]), P = jn(() => {
    const U = Ps(e);
    if (!U)
      return;
    const z = qf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (z.rows.find((W) => W.id === U.id))
      return;
    const q = po(e);
    e.current.setState((W) => J({}, W, {
      tabIndex: {
        cell: {
          id: z.rows[0].id,
          field: q[0].field
        },
        columnGroupHeader: null,
        columnHeader: null,
        columnHeaderFilter: null
      }
    }));
  }), F = {
    setCellFocus: a,
    setColumnHeaderFocus: c,
    setColumnHeaderFilterFocus: f
  }, H = {
    moveFocusToRelativeCell: y,
    setColumnGroupHeaderFocus: m,
    getColumnGroupHeaderFocus: g
  };
  Tn(e, F, "public"), Tn(e, H, "private"), x.useEffect(() => {
    const U = ho(e.current.rootElementRef.current);
    return U.addEventListener("mouseup", I), () => {
      U.removeEventListener("mouseup", I);
    };
  }, [e, o, I]), Ot(e, "columnHeaderBlur", O), Ot(e, "cellDoubleClick", w), Ot(e, "cellMouseDown", k), Ot(e, "cellKeyDown", C), Ot(e, "cellModeChange", M), Ot(e, "columnHeaderFocus", T), Ot(e, "columnGroupHeaderFocus", E), Ot(e, "rowsSet", N), Ot(e, "paginationModelChange", P);
}, zP = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: r
}) => {
  if (r) {
    if (e < n)
      return e + 1;
  } else if (!r && e > t)
    return e - 1;
  return null;
}, BP = ({
  currentColIndex: e,
  firstColIndex: t,
  lastColIndex: n,
  isRtl: r
}) => {
  if (r) {
    if (e > t)
      return e - 1;
  } else if (!r && e < n)
    return e + 1;
  return null;
};
function sSe(e, t, n, r) {
  var c, f;
  const o = LW(e);
  if (!((c = o[t]) != null && c[n]))
    return t;
  const s = sW(e);
  let a = s.indexOf(t) + (r === "down" ? 1 : -1);
  for (; a >= 0 && a < s.length; ) {
    const m = s[a];
    if (!((f = o[m]) != null && f[n]))
      return m;
    a += r === "down" ? 1 : -1;
  }
  return t;
}
const aSe = ir(OC, yy, (e, t) => (t.top || []).concat(e.rows, t.bottom || [])), lSe = (e, t) => {
  const n = vi(e, "useGridKeyboardNavigation"), r = xc(), o = t.unstable_listView, s = x.useCallback(() => aSe(e), [e]), a = t.signature !== "DataGrid" && t.headerFilters, c = x.useCallback((k, I, M = "left", N = "up") => {
    const P = fp(e), F = e.current.unstable_getCellColSpanInfo(I, k);
    F && F.spannedByColSpan && (M === "left" ? k = F.leftVisibleCellIndex : M === "right" && (k = F.rightVisibleCellIndex));
    const H = o ? oy(e.current.state).field : by(e)[k], U = sSe(e, I, H, N), z = P.findIndex((A) => A.id === U);
    n.debug(`Navigating to cell row ${z}, col ${k}`), e.current.scrollToIndexes({
      colIndex: k,
      rowIndex: z
    }), e.current.setCellFocus(U, H);
  }, [e, n, o]), f = x.useCallback((k, I) => {
    n.debug(`Navigating to header col ${k}`), e.current.scrollToIndexes({
      colIndex: k
    });
    const M = e.current.getVisibleColumns()[k].field;
    e.current.setColumnHeaderFocus(M, I);
  }, [e, n]), m = x.useCallback((k, I) => {
    n.debug(`Navigating to header filter col ${k}`), e.current.scrollToIndexes({
      colIndex: k
    });
    const M = e.current.getVisibleColumns()[k].field;
    e.current.setColumnHeaderFilterFocus(M, I);
  }, [e, n]), g = x.useCallback((k, I, M) => {
    n.debug(`Navigating to header col ${k}`), e.current.scrollToIndexes({
      colIndex: k
    });
    const {
      field: N
    } = e.current.getVisibleColumns()[k];
    e.current.setColumnGroupHeaderFocus(N, I, M);
  }, [e, n]), y = x.useCallback((k) => {
    var I;
    return (I = s()[k]) == null ? void 0 : I.id;
  }, [s]), w = x.useCallback((k, I) => {
    const M = I.currentTarget.querySelector(`.${se.columnHeaderTitleContainerContent}`);
    if (!!M && M.contains(I.target) && k.field !== xy.field)
      return;
    const P = s(), F = e.current.getViewportPageSize(), H = k.field ? e.current.getColumnIndex(k.field) : 0, U = P.length > 0 ? 0 : null, z = P.length - 1, A = 0, q = po(e).length - 1, W = kC(e);
    let Y = !0;
    switch (I.key) {
      case "ArrowDown": {
        a ? m(H, I) : U !== null && c(H, y(U));
        break;
      }
      case "ArrowRight": {
        const ee = BP({
          currentColIndex: H,
          firstColIndex: A,
          lastColIndex: q,
          isRtl: r
        });
        ee !== null && f(ee, I);
        break;
      }
      case "ArrowLeft": {
        const ee = zP({
          currentColIndex: H,
          firstColIndex: A,
          lastColIndex: q,
          isRtl: r
        });
        ee !== null && f(ee, I);
        break;
      }
      case "ArrowUp": {
        W > 0 && g(H, W - 1, I);
        break;
      }
      case "PageDown": {
        U !== null && z !== null && c(H, y(Math.min(U + F, z)));
        break;
      }
      case "Home": {
        f(A, I);
        break;
      }
      case "End": {
        f(q, I);
        break;
      }
      case "Enter": {
        (I.ctrlKey || I.metaKey) && e.current.toggleColumnMenu(k.field);
        break;
      }
      case " ":
        break;
      default:
        Y = !1;
    }
    Y && I.preventDefault();
  }, [e, s, a, m, c, y, r, f, g]), C = x.useCallback((k, I) => {
    const M = rge(e) === k.field, N = oge(e) === k.field;
    if (M || N || !f_(I.key))
      return;
    const P = s(), F = e.current.getViewportPageSize(), H = k.field ? e.current.getColumnIndex(k.field) : 0, U = 0, z = P.length - 1, A = 0, q = po(e).length - 1;
    let W = !0;
    switch (I.key) {
      case "ArrowDown": {
        const Y = y(U);
        Y != null && c(H, Y);
        break;
      }
      case "ArrowRight": {
        const Y = BP({
          currentColIndex: H,
          firstColIndex: A,
          lastColIndex: q,
          isRtl: r
        });
        Y !== null && m(Y, I);
        break;
      }
      case "ArrowLeft": {
        const Y = zP({
          currentColIndex: H,
          firstColIndex: A,
          lastColIndex: q,
          isRtl: r
        });
        Y !== null ? m(Y, I) : e.current.setColumnHeaderFilterFocus(k.field, I);
        break;
      }
      case "ArrowUp": {
        f(H, I);
        break;
      }
      case "PageDown": {
        z !== null && c(H, y(Math.min(U + F, z)));
        break;
      }
      case "Home": {
        m(A, I);
        break;
      }
      case "End": {
        m(q, I);
        break;
      }
      case " ":
        break;
      default:
        W = !1;
    }
    W && I.preventDefault();
  }, [e, s, m, r, f, c, y]), T = x.useCallback((k, I) => {
    const M = a_(e);
    if (M === null)
      return;
    const {
      field: N,
      depth: P
    } = M, {
      fields: F,
      depth: H,
      maxDepth: U
    } = k, z = s(), A = e.current.getViewportPageSize(), q = e.current.getColumnIndex(N), W = N ? e.current.getColumnIndex(N) : 0, Y = 0, ee = z.length - 1, G = 0, K = po(e).length - 1;
    let X = !0;
    switch (I.key) {
      case "ArrowDown": {
        H === U - 1 ? f(q, I) : g(q, P + 1, I);
        break;
      }
      case "ArrowUp": {
        H > 0 && g(q, P - 1, I);
        break;
      }
      case "ArrowRight": {
        const te = F.length - F.indexOf(N) - 1;
        q + te + 1 <= K && g(q + te + 1, P, I);
        break;
      }
      case "ArrowLeft": {
        const te = F.indexOf(N);
        q - te - 1 >= G && g(q - te - 1, P, I);
        break;
      }
      case "PageDown": {
        ee !== null && c(W, y(Math.min(Y + A, ee)));
        break;
      }
      case "Home": {
        g(G, P, I);
        break;
      }
      case "End": {
        g(K, P, I);
        break;
      }
      case " ":
        break;
      default:
        X = !1;
    }
    X && I.preventDefault();
  }, [e, s, f, g, c, y]), E = x.useCallback((k, I) => {
    if (MC(I))
      return;
    const M = e.current.getCellParams(k.id, k.field);
    if (M.cellMode === cr.Edit || !f_(I.key) || !e.current.unstable_applyPipeProcessors("canUpdateFocus", !0, {
      event: I,
      cell: M
    }))
      return;
    const P = s();
    if (P.length === 0)
      return;
    const F = e.current.getViewportPageSize(), H = o ? () => 0 : e.current.getColumnIndex, U = k.field ? H(k.field) : 0, z = P.findIndex((K) => K.id === k.id), A = 0, q = P.length - 1, W = 0, ee = (o ? [oy(e.current.state)] : po(e)).length - 1;
    let G = !0;
    switch (I.key) {
      case "ArrowDown": {
        z < q && c(U, y(z + 1), r ? "right" : "left", "down");
        break;
      }
      case "ArrowUp": {
        z > A ? c(U, y(z - 1)) : a ? m(U, I) : f(U, I);
        break;
      }
      case "ArrowRight": {
        const K = BP({
          currentColIndex: U,
          firstColIndex: W,
          lastColIndex: ee,
          isRtl: r
        });
        K !== null && c(K, y(z), r ? "left" : "right");
        break;
      }
      case "ArrowLeft": {
        const K = zP({
          currentColIndex: U,
          firstColIndex: W,
          lastColIndex: ee,
          isRtl: r
        });
        K !== null && c(K, y(z), r ? "right" : "left");
        break;
      }
      case "Tab": {
        I.shiftKey && U > W ? c(U - 1, y(z), "left") : !I.shiftKey && U < ee && c(U + 1, y(z), "right");
        break;
      }
      case " ": {
        if (k.field === yO)
          break;
        const X = k.colDef;
        if (X && (X.field === Uhe || Ove(X.field)))
          break;
        !I.shiftKey && z < q && c(U, y(Math.min(z + F, q)));
        break;
      }
      case "PageDown": {
        z < q && c(U, y(Math.min(z + F, q)));
        break;
      }
      case "PageUp": {
        const K = Math.max(z - F, A);
        K !== z && K >= A ? c(U, y(K)) : f(U, I);
        break;
      }
      case "Home": {
        I.ctrlKey || I.metaKey || I.shiftKey ? c(W, y(A)) : c(W, y(z));
        break;
      }
      case "End": {
        I.ctrlKey || I.metaKey || I.shiftKey ? c(ee, y(q)) : c(ee, y(z));
        break;
      }
      default:
        G = !1;
    }
    G && I.preventDefault();
  }, [e, s, r, c, y, a, m, f, o]), O = x.useCallback((k, {
    event: I
  }) => I.key === " " ? !1 : k, []);
  to(e, "canStartEditing", O), Ot(e, "columnHeaderKeyDown", w), Ot(e, "headerFilterKeyDown", C), Ot(e, "columnGroupHeaderKeyDown", T), Ot(e, "cellKeyDown", E);
}, uSe = (e, t) => {
  var T, E;
  const n = vi(e, "useGridRowCount"), r = Ze(e, HD), o = Ze(e, Rv), s = Ze(e, cS), a = Ze(e, ms), c = Ol(() => ms(e).pageSize);
  e.current.registerControlState({
    stateId: "paginationRowCount",
    propModel: t.rowCount,
    propOnChange: t.onRowCountChange,
    stateSelector: Rv,
    changeEvent: "rowCountChange"
  });
  const m = {
    setRowCount: x.useCallback((O) => {
      o !== O && (n.debug("Setting 'rowCount' to", O), e.current.setState((k) => J({}, k, {
        pagination: J({}, k.pagination, {
          rowCount: O
        })
      })));
    }, [e, n, o])
  };
  Tn(e, m, "public");
  const g = x.useCallback((O, k) => {
    var N, P;
    const I = Rv(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !k.exportOnlyDirtyModels || // Always export if the `rowCount` is controlled
      t.rowCount != null || // Always export if the `rowCount` has been initialized
      ((P = (N = t.initialState) == null ? void 0 : N.pagination) == null ? void 0 : P.rowCount) != null ? J({}, O, {
        pagination: J({}, O.pagination, {
          rowCount: I
        })
      }) : O
    );
  }, [e, t.rowCount, (E = (T = t.initialState) == null ? void 0 : T.pagination) == null ? void 0 : E.rowCount]), y = x.useCallback((O, k) => {
    var M;
    const I = (M = k.stateToRestore.pagination) != null && M.rowCount ? k.stateToRestore.pagination.rowCount : Rv(e);
    return e.current.setState((N) => J({}, N, {
      pagination: J({}, N.pagination, {
        rowCount: I
      })
    })), O;
  }, [e]);
  to(e, "exportState", g), to(e, "restoreState", y);
  const w = x.useCallback((O) => {
    t.paginationMode === "client" || !c.current || O.pageSize !== c.current && (c.current = O.pageSize, o === -1 && e.current.setPage(0));
  }, [t.paginationMode, c, o, e]);
  Ot(e, "paginationModelChange", w), x.useEffect(() => {
    t.paginationMode === "client" ? e.current.setRowCount(r) : t.rowCount != null && e.current.setRowCount(t.rowCount);
  }, [e, t.paginationMode, r, t.rowCount]);
  const C = s.hasNextPage === !1;
  x.useEffect(() => {
    C && o === -1 && e.current.setRowCount(a.pageSize * a.page + r);
  }, [e, r, C, o, a]);
}, cSe = (e, t) => {
  var f, m;
  const n = vi(e, "useGridPaginationMeta"), r = Ze(e, cS);
  e.current.registerControlState({
    stateId: "paginationMeta",
    propModel: t.paginationMeta,
    propOnChange: t.onPaginationMetaChange,
    stateSelector: cS,
    changeEvent: "paginationMetaChange"
  });
  const s = {
    setPaginationMeta: x.useCallback((g) => {
      r !== g && (n.debug("Setting 'paginationMeta' to", g), e.current.setState((y) => J({}, y, {
        pagination: J({}, y.pagination, {
          meta: g
        })
      })));
    }, [e, n, r])
  };
  Tn(e, s, "public");
  const a = x.useCallback((g, y) => {
    var T, E;
    const w = cS(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !y.exportOnlyDirtyModels || // Always export if the `paginationMeta` is controlled
      t.paginationMeta != null || // Always export if the `paginationMeta` has been initialized
      ((E = (T = t.initialState) == null ? void 0 : T.pagination) == null ? void 0 : E.meta) != null ? J({}, g, {
        pagination: J({}, g.pagination, {
          meta: w
        })
      }) : g
    );
  }, [e, t.paginationMeta, (m = (f = t.initialState) == null ? void 0 : f.pagination) == null ? void 0 : m.meta]), c = x.useCallback((g, y) => {
    var C;
    const w = (C = y.stateToRestore.pagination) != null && C.meta ? y.stateToRestore.pagination.meta : cS(e);
    return e.current.setState((T) => J({}, T, {
      pagination: J({}, T.pagination, {
        meta: w
      })
    })), g;
  }, [e]);
  to(e, "exportState", a), to(e, "restoreState", c), x.useEffect(() => {
    t.paginationMeta && e.current.setPaginationMeta(t.paginationMeta);
  }, [e, t.paginationMeta]);
}, dSe = (e, t) => {
  var s, a, c, f, m, g, y;
  const n = J({}, hW(t.autoPageSize), t.paginationModel ?? ((a = (s = t.initialState) == null ? void 0 : s.pagination) == null ? void 0 : a.paginationModel));
  mW(n.pageSize, t.signature);
  const r = t.rowCount ?? ((f = (c = t.initialState) == null ? void 0 : c.pagination) == null ? void 0 : f.rowCount) ?? (t.paginationMode === "client" ? (m = e.rows) == null ? void 0 : m.totalRowCount : void 0), o = t.paginationMeta ?? ((y = (g = t.initialState) == null ? void 0 : g.pagination) == null ? void 0 : y.meta) ?? {};
  return J({}, e, {
    pagination: J({}, e.pagination, {
      paginationModel: n,
      rowCount: r,
      meta: o,
      enabled: t.pagination === !0,
      paginationMode: t.paginationMode
    })
  });
}, fSe = (e, t) => {
  cSe(e, t), Xwe(e, t), uSe(e, t);
}, pSe = (e, t) => {
  var n;
  return J({}, e, {
    preferencePanel: ((n = t.initialState) == null ? void 0 : n.preferencePanel) ?? {
      open: !1
    }
  });
}, hSe = (e, t) => {
  var c;
  const n = vi(e, "useGridPreferencesPanel"), r = x.useCallback(() => {
    e.current.setState((f) => {
      if (!f.preferencePanel.open)
        return f;
      n.debug("Hiding Preferences Panel");
      const m = JS(f);
      return e.current.publishEvent("preferencePanelClose", {
        openedPanelValue: m.openedPanelValue
      }), J({}, f, {
        preferencePanel: {
          open: !1
        }
      });
    });
  }, [e, n]), o = x.useCallback((f, m, g) => {
    n.debug("Opening Preferences Panel"), e.current.setState((y) => J({}, y, {
      preferencePanel: J({}, y.preferencePanel, {
        open: !0,
        openedPanelValue: f,
        panelId: m,
        labelId: g
      })
    })), e.current.publishEvent("preferencePanelOpen", {
      openedPanelValue: f
    });
  }, [n, e]);
  Tn(e, {
    showPreferences: o,
    hidePreferences: r
  }, "public");
  const s = x.useCallback((f, m) => {
    var w;
    const g = JS(e.current.state);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !m.exportOnlyDirtyModels || // Always export if the panel was initialized
      ((w = t.initialState) == null ? void 0 : w.preferencePanel) != null || // Always export if the panel is opened
      g.open ? J({}, f, {
        preferencePanel: g
      }) : f
    );
  }, [e, (c = t.initialState) == null ? void 0 : c.preferencePanel]), a = x.useCallback((f, m) => {
    const g = m.stateToRestore.preferencePanel;
    return g != null && e.current.setState((y) => J({}, y, {
      preferencePanel: g
    })), f;
  }, [e]);
  to(e, "exportState", s), to(e, "restoreState", a);
}, sI = (e) => {
  switch (e.type) {
    case "boolean":
      return !1;
    case "date":
    case "dateTime":
    case "number":
      return;
    case "singleSelect":
      return null;
    case "string":
    default:
      return "";
  }
}, mSe = ["id", "field"], gSe = ["id", "field"], vSe = (e, t) => {
  const [n, r] = x.useState({}), o = x.useRef(n), s = x.useRef({}), {
    processRowUpdate: a,
    onProcessRowUpdateError: c,
    cellModesModel: f,
    onCellModesModelChange: m
  } = t, g = (G) => (...K) => {
    t.editMode === wc.Cell && G(...K);
  }, y = x.useCallback((G, K) => {
    const X = e.current.getCellParams(G, K);
    if (!e.current.isCellEditable(X))
      throw new Error(`MUI X: The cell with id=${G} and field=${K} is not editable.`);
  }, [e]), w = x.useCallback((G, K, X) => {
    if (e.current.getCellMode(G, K) !== X)
      throw new Error(`MUI X: The cell with id=${G} and field=${K} is not in ${X} mode.`);
  }, [e]), C = x.useCallback((G, K) => {
    if (!G.isEditable || G.cellMode === cr.Edit)
      return;
    const X = J({}, G, {
      reason: yd.cellDoubleClick
    });
    e.current.publishEvent("cellEditStart", X, K);
  }, [e]), T = x.useCallback((G, K) => {
    if (G.cellMode === cr.View || e.current.getCellMode(G.id, G.field) === cr.View)
      return;
    const X = J({}, G, {
      reason: ou.cellFocusOut
    });
    e.current.publishEvent("cellEditStop", X, K);
  }, [e]), E = x.useCallback((G, K) => {
    if (G.cellMode === cr.Edit) {
      if (K.which === 229)
        return;
      let X;
      if (K.key === "Escape" ? X = ou.escapeKeyDown : K.key === "Enter" ? X = ou.enterKeyDown : K.key === "Tab" && (X = K.shiftKey ? ou.shiftTabKeyDown : ou.tabKeyDown, K.preventDefault()), X) {
        const te = J({}, G, {
          reason: X
        });
        e.current.publishEvent("cellEditStop", te, K);
      }
    } else if (G.isEditable) {
      let X;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: K,
        cellParams: G,
        editMode: "cell"
      }))
        return;
      if (u4(K) ? X = yd.printableKeyDown : d4(K) ? X = yd.pasteKeyDown : K.key === "Enter" ? X = yd.enterKeyDown : (K.key === "Backspace" || K.key === "Delete") && (X = yd.deleteKeyDown), X) {
        const re = J({}, G, {
          reason: X,
          key: K.key
        });
        e.current.publishEvent("cellEditStart", re, K);
      }
    }
  }, [e]), O = x.useCallback((G) => {
    const {
      id: K,
      field: X,
      reason: te
    } = G, re = {
      id: K,
      field: X
    };
    (te === yd.printableKeyDown || te === yd.deleteKeyDown || te === yd.pasteKeyDown) && (re.deleteValue = !0), e.current.startCellEditMode(re);
  }, [e]), k = x.useCallback((G) => {
    const {
      id: K,
      field: X,
      reason: te
    } = G;
    e.current.runPendingEditCellValueMutation(K, X);
    let re;
    te === ou.enterKeyDown ? re = "below" : te === ou.tabKeyDown ? re = "right" : te === ou.shiftTabKeyDown && (re = "left");
    const Q = te === "escapeKeyDown";
    e.current.stopCellEditMode({
      id: K,
      field: X,
      ignoreModifications: Q,
      cellToFocusAfter: re
    });
  }, [e]), I = (G) => async (...K) => {
    var X;
    if (G) {
      const {
        id: te,
        field: re
      } = K[0];
      ((X = e.current.state.editRows[te][re]) == null ? void 0 : X.error) || G(...K);
    }
  };
  Ot(e, "cellDoubleClick", g(C)), Ot(e, "cellFocusOut", g(T)), Ot(e, "cellKeyDown", g(E)), Ot(e, "cellEditStart", g(O)), Ot(e, "cellEditStop", g(k)), fr(e, "cellEditStart", t.onCellEditStart), fr(e, "cellEditStop", I(t.onCellEditStop));
  const M = x.useCallback((G, K) => {
    const X = mi(e.current.state);
    return X[G] && X[G][K] ? cr.Edit : cr.View;
  }, [e]), N = jn((G) => {
    const K = G !== t.cellModesModel;
    m && K && m(G, {
      api: e.current
    }), !(t.cellModesModel && K) && (r(G), o.current = G, e.current.publishEvent("cellModesModelChange", G));
  }), P = x.useCallback((G, K, X) => {
    const te = J({}, o.current);
    if (X !== null)
      te[G] = J({}, te[G], {
        [K]: J({}, X)
      });
    else {
      const re = te[G], Q = qt(re, [K].map(eC));
      te[G] = Q, Object.keys(te[G]).length === 0 && delete te[G];
    }
    N(te);
  }, [N]), F = x.useCallback((G, K, X) => {
    e.current.setState((te) => {
      const re = J({}, te.editRows);
      return X !== null ? re[G] = J({}, re[G], {
        [K]: J({}, X)
      }) : (delete re[G][K], Object.keys(re[G]).length === 0 && delete re[G]), J({}, te, {
        editRows: re
      });
    }), e.current.forceUpdate();
  }, [e]), H = x.useCallback((G) => {
    const {
      id: K,
      field: X
    } = G, te = qt(G, mSe);
    y(K, X), w(K, X, cr.View), P(K, X, J({
      mode: cr.Edit
    }, te));
  }, [y, w, P]), U = jn(async (G) => {
    const {
      id: K,
      field: X,
      deleteValue: te,
      initialValue: re
    } = G, Q = e.current.getCellValue(K, X);
    let B = Q;
    te ? B = sI(e.current.getColumn(X)) : re && (B = re);
    const ie = e.current.getColumn(X), de = !!ie.preProcessEditCellProps && te;
    let ue = {
      value: B,
      error: !1,
      isProcessingProps: de
    };
    if (F(K, X, ue), e.current.setCellFocus(K, X), de && (ue = await Promise.resolve(ie.preProcessEditCellProps({
      id: K,
      row: e.current.getRow(K),
      props: ue,
      hasChanged: B !== Q
    })), e.current.getCellMode(K, X) === cr.Edit)) {
      const he = mi(e.current.state);
      F(K, X, J({}, ue, {
        value: he[K][X].value,
        isProcessingProps: !1
      }));
    }
  }), z = x.useCallback((G) => {
    const {
      id: K,
      field: X
    } = G, te = qt(G, gSe);
    w(K, X, cr.Edit), P(K, X, J({
      mode: cr.View
    }, te));
  }, [w, P]), A = jn(async (G) => {
    const {
      id: K,
      field: X,
      ignoreModifications: te,
      cellToFocusAfter: re = "none"
    } = G;
    w(K, X, cr.Edit), e.current.runPendingEditCellValueMutation(K, X);
    const Q = () => {
      F(K, X, null), P(K, X, null), re !== "none" && e.current.moveFocusToRelativeCell(K, X, re);
    };
    if (te) {
      Q();
      return;
    }
    const B = mi(e.current.state), {
      error: ie,
      isProcessingProps: de
    } = B[K][X];
    if (ie || de) {
      s.current[K][X].mode = cr.Edit, P(K, X, {
        mode: cr.Edit
      });
      return;
    }
    const ue = e.current.getRowWithUpdatedValuesFromCellEditing(K, X);
    if (a) {
      const he = (ge) => {
        s.current[K][X].mode = cr.Edit, P(K, X, {
          mode: cr.Edit
        }), c ? c(ge) : process.env.NODE_ENV !== "production" && yl(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        const ge = e.current.getRow(K);
        Promise.resolve(a(ue, ge, {
          rowId: K
        })).then((fe) => {
          e.current.updateRows([fe]), Q();
        }).catch(he);
      } catch (ge) {
        he(ge);
      }
    } else
      e.current.updateRows([ue]), Q();
  }), q = x.useCallback(async (G) => {
    var ge, fe;
    const {
      id: K,
      field: X,
      value: te,
      debounceMs: re,
      unstable_skipValueParser: Q
    } = G;
    y(K, X), w(K, X, cr.Edit);
    const B = e.current.getColumn(X), ie = e.current.getRow(K);
    let de = te;
    B.valueParser && !Q && (de = B.valueParser(te, ie, B, e));
    let ue = mi(e.current.state), he = J({}, ue[K][X], {
      value: de,
      changeReason: re ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    if (B.preProcessEditCellProps) {
      const pe = te !== ue[K][X].value;
      he = J({}, he, {
        isProcessingProps: !0
      }), F(K, X, he), he = await Promise.resolve(B.preProcessEditCellProps({
        id: K,
        row: ie,
        props: he,
        hasChanged: pe
      }));
    }
    return e.current.getCellMode(K, X) === cr.View ? !1 : (ue = mi(e.current.state), he = J({}, he, {
      isProcessingProps: !1
    }), he.value = B.preProcessEditCellProps ? ue[K][X].value : de, F(K, X, he), ue = mi(e.current.state), !((fe = (ge = ue[K]) == null ? void 0 : ge[X]) != null && fe.error));
  }, [e, y, w, F]), W = x.useCallback((G, K) => {
    const X = e.current.getColumn(K), te = mi(e.current.state), re = e.current.getRow(G);
    if (!te[G] || !te[G][K])
      return e.current.getRow(G);
    const {
      value: Q
    } = te[G][K];
    return X.valueSetter ? X.valueSetter(Q, re, X, e) : J({}, re, {
      [K]: Q
    });
  }, [e]), Y = {
    getCellMode: M,
    startCellEditMode: H,
    stopCellEditMode: z
  }, ee = {
    setCellEditingEditCellValue: q,
    getRowWithUpdatedValuesFromCellEditing: W
  };
  Tn(e, Y, "public"), Tn(e, ee, "private"), x.useEffect(() => {
    f && N(f);
  }, [f, N]), Nr(() => {
    const G = hl(e), K = s.current;
    s.current = j5(n), Object.entries(n).forEach(([X, te]) => {
      Object.entries(te).forEach(([re, Q]) => {
        var de, ue;
        const B = ((ue = (de = K[X]) == null ? void 0 : de[re]) == null ? void 0 : ue.mode) || cr.View, ie = G[X] ? e.current.getRowId(G[X]) : X;
        Q.mode === cr.Edit && B === cr.View ? U(J({
          id: ie,
          field: re
        }, Q)) : Q.mode === cr.View && B === cr.Edit && A(J({
          id: ie,
          field: re
        }, Q));
      });
    });
  }, [e, n, U, A]);
}, ySe = ["id"], bSe = ["id"], wSe = (e, t) => {
  const [n, r] = x.useState({}), o = x.useRef(n), s = x.useRef({}), a = x.useRef({}), c = x.useRef(void 0), f = x.useRef(null), {
    processRowUpdate: m,
    onProcessRowUpdateError: g,
    rowModesModel: y,
    onRowModesModelChange: w
  } = t, C = (Q) => (...B) => {
    t.editMode === wc.Row && Q(...B);
  }, T = x.useCallback((Q, B) => {
    const ie = e.current.getCellParams(Q, B);
    if (!e.current.isCellEditable(ie))
      throw new Error(`MUI X: The cell with id=${Q} and field=${B} is not editable.`);
  }, [e]), E = x.useCallback((Q, B) => {
    if (e.current.getRowMode(Q) !== B)
      throw new Error(`MUI X: The row with id=${Q} is not in ${B} mode.`);
  }, [e]), O = x.useCallback((Q) => {
    const B = mi(e.current.state);
    return Object.values(B[Q]).some((ie) => ie.error);
  }, [e]), k = x.useCallback((Q, B) => {
    if (!Q.isEditable || e.current.getRowMode(Q.id) === Ur.Edit)
      return;
    const ie = e.current.getRowParams(Q.id), de = J({}, ie, {
      field: Q.field,
      reason: If.cellDoubleClick
    });
    e.current.publishEvent("rowEditStart", de, B);
  }, [e]), I = x.useCallback((Q) => {
    f.current = Q;
  }, []), M = x.useCallback((Q, B) => {
    Q.isEditable && e.current.getRowMode(Q.id) !== Ur.View && (f.current = null, c.current = setTimeout(() => {
      var ie;
      if (((ie = f.current) == null ? void 0 : ie.id) !== Q.id) {
        if (!e.current.getRow(Q.id) || e.current.getRowMode(Q.id) === Ur.View || O(Q.id))
          return;
        const de = e.current.getRowParams(Q.id), ue = J({}, de, {
          field: Q.field,
          reason: ic.rowFocusOut
        });
        e.current.publishEvent("rowEditStop", ue, B);
      }
    }));
  }, [e, O]);
  x.useEffect(() => () => {
    clearTimeout(c.current);
  }, []);
  const N = x.useCallback((Q, B) => {
    if (Q.cellMode === Ur.Edit) {
      if (B.which === 229)
        return;
      let ie;
      if (B.key === "Escape")
        ie = ic.escapeKeyDown;
      else if (B.key === "Enter")
        ie = ic.enterKeyDown;
      else if (B.key === "Tab") {
        const de = by(e).filter((ue) => e.current.getColumn(ue).type === gO ? !0 : e.current.isCellEditable(e.current.getCellParams(Q.id, ue)));
        if (B.shiftKey ? Q.field === de[0] && (ie = ic.shiftTabKeyDown) : Q.field === de[de.length - 1] && (ie = ic.tabKeyDown), B.preventDefault(), !ie) {
          const ue = de.findIndex((ge) => ge === Q.field), he = de[B.shiftKey ? ue - 1 : ue + 1];
          e.current.setCellFocus(Q.id, he);
        }
      }
      if (ie) {
        if (ie !== ic.escapeKeyDown && O(Q.id))
          return;
        const de = J({}, e.current.getRowParams(Q.id), {
          reason: ie,
          field: Q.field
        });
        e.current.publishEvent("rowEditStop", de, B);
      }
    } else if (Q.isEditable) {
      let ie;
      if (!e.current.unstable_applyPipeProcessors("canStartEditing", !0, {
        event: B,
        cellParams: Q,
        editMode: "row"
      }))
        return;
      if (u4(B) || d4(B) ? ie = If.printableKeyDown : B.key === "Enter" ? ie = If.enterKeyDown : (B.key === "Backspace" || B.key === "Delete") && (ie = If.deleteKeyDown), ie) {
        const ue = e.current.getRowParams(Q.id), he = J({}, ue, {
          field: Q.field,
          reason: ie
        });
        e.current.publishEvent("rowEditStart", he, B);
      }
    }
  }, [e, O]), P = x.useCallback((Q) => {
    const {
      id: B,
      field: ie,
      reason: de
    } = Q, ue = {
      id: B,
      fieldToFocus: ie
    };
    (de === If.printableKeyDown || de === If.deleteKeyDown) && (ue.deleteValue = !!ie), e.current.startRowEditMode(ue);
  }, [e]), F = x.useCallback((Q) => {
    const {
      id: B,
      reason: ie,
      field: de
    } = Q;
    e.current.runPendingEditCellValueMutation(B);
    let ue;
    ie === ic.enterKeyDown ? ue = "below" : ie === ic.tabKeyDown ? ue = "right" : ie === ic.shiftTabKeyDown && (ue = "left");
    const he = ie === "escapeKeyDown";
    e.current.stopRowEditMode({
      id: B,
      ignoreModifications: he,
      field: de,
      cellToFocusAfter: ue
    });
  }, [e]);
  Ot(e, "cellDoubleClick", C(k)), Ot(e, "cellFocusIn", C(I)), Ot(e, "cellFocusOut", C(M)), Ot(e, "cellKeyDown", C(N)), Ot(e, "rowEditStart", C(P)), Ot(e, "rowEditStop", C(F)), fr(e, "rowEditStart", t.onRowEditStart), fr(e, "rowEditStop", t.onRowEditStop);
  const H = x.useCallback((Q) => VW(e, {
    rowId: Q,
    editMode: t.editMode
  }) ? Ur.Edit : Ur.View, [e, t.editMode]), U = jn((Q) => {
    const B = Q !== t.rowModesModel;
    w && B && w(Q, {
      api: e.current
    }), !(t.rowModesModel && B) && (r(Q), o.current = Q, e.current.publishEvent("rowModesModelChange", Q));
  }), z = x.useCallback((Q, B) => {
    const ie = J({}, o.current);
    B !== null ? ie[Q] = J({}, B) : delete ie[Q], U(ie);
  }, [U]), A = x.useCallback((Q, B) => {
    e.current.setState((ie) => {
      const de = J({}, ie.editRows);
      return B !== null ? de[Q] = B : delete de[Q], J({}, ie, {
        editRows: de
      });
    }), e.current.forceUpdate();
  }, [e]), q = x.useCallback((Q, B, ie) => {
    e.current.setState((de) => {
      const ue = J({}, de.editRows);
      return ie !== null ? ue[Q] = J({}, ue[Q], {
        [B]: J({}, ie)
      }) : (delete ue[Q][B], Object.keys(ue[Q]).length === 0 && delete ue[Q]), J({}, de, {
        editRows: ue
      });
    }), e.current.forceUpdate();
  }, [e]), W = x.useCallback((Q) => {
    const {
      id: B
    } = Q, ie = qt(Q, ySe);
    E(B, Ur.View), z(B, J({
      mode: Ur.Edit
    }, ie));
  }, [E, z]), Y = jn((Q) => {
    const {
      id: B,
      fieldToFocus: ie,
      deleteValue: de,
      initialValue: ue
    } = Q, he = e.current.getRow(B), ge = bl(e), fe = ge.reduce((pe, be) => {
      const we = be.field;
      if (!e.current.getCellParams(B, we).isEditable)
        return pe;
      const ce = e.current.getColumn(we);
      let Ce = e.current.getCellValue(B, we);
      return ie === we && (de || ue) && (de ? Ce = sI(ce) : ue && (Ce = ue)), pe[we] = {
        value: Ce,
        error: !1,
        isProcessingProps: ce.editable && !!ce.preProcessEditCellProps && de
      }, pe;
    }, {});
    a.current[B] = he, A(B, fe), ie && e.current.setCellFocus(B, ie), ge.filter((pe) => e.current.getCellParams(B, pe.field).isEditable && pe.editable && !!pe.preProcessEditCellProps && de).forEach((pe) => {
      const be = pe.field, we = e.current.getCellValue(B, be), _e = de ? sI(pe) : ue ?? we;
      Promise.resolve(pe.preProcessEditCellProps({
        id: B,
        row: he,
        props: fe[be],
        hasChanged: _e !== we
      })).then((ce) => {
        if (e.current.getRowMode(B) === Ur.Edit) {
          const Ce = mi(e.current.state);
          q(B, be, J({}, ce, {
            value: Ce[B][be].value,
            isProcessingProps: !1
          }));
        }
      });
    });
  }), ee = x.useCallback((Q) => {
    const {
      id: B
    } = Q, ie = qt(Q, bSe);
    E(B, Ur.Edit), z(B, J({
      mode: Ur.View
    }, ie));
  }, [E, z]), G = jn((Q) => {
    const {
      id: B,
      ignoreModifications: ie,
      field: de,
      cellToFocusAfter: ue = "none"
    } = Q;
    e.current.runPendingEditCellValueMutation(B);
    const he = () => {
      ue !== "none" && de && e.current.moveFocusToRelativeCell(B, de, ue), A(B, null), z(B, null), delete a.current[B];
    };
    if (ie) {
      he();
      return;
    }
    const ge = mi(e.current.state), fe = a.current[B];
    if (Object.values(ge[B]).some((we) => we.isProcessingProps)) {
      s.current[B].mode = Ur.Edit;
      return;
    }
    if (O(B)) {
      s.current[B].mode = Ur.Edit, z(B, {
        mode: Ur.Edit
      });
      return;
    }
    const be = e.current.getRowWithUpdatedValuesFromRowEditing(B);
    if (m) {
      const we = (_e) => {
        s.current[B] && (s.current[B].mode = Ur.Edit, z(B, {
          mode: Ur.Edit
        })), g ? g(_e) : process.env.NODE_ENV !== "production" && yl(["MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.", "To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.", "For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence."], "error");
      };
      try {
        Promise.resolve(m(be, fe, {
          rowId: B
        })).then((_e) => {
          e.current.updateRows([_e]), he();
        }).catch(we);
      } catch (_e) {
        we(_e);
      }
    } else
      e.current.updateRows([be]), he();
  }), K = x.useCallback((Q) => {
    const {
      id: B,
      field: ie,
      value: de,
      debounceMs: ue,
      unstable_skipValueParser: he
    } = Q;
    T(B, ie);
    const ge = e.current.getColumn(ie), fe = e.current.getRow(B);
    let pe = de;
    ge.valueParser && !he && (pe = ge.valueParser(de, fe, ge, e));
    let be = mi(e.current.state), we = J({}, be[B][ie], {
      value: pe,
      changeReason: ue ? "debouncedSetEditCellValue" : "setEditCellValue"
    });
    return ge.preProcessEditCellProps || q(B, ie, we), new Promise((_e) => {
      const ce = [];
      if (ge.preProcessEditCellProps) {
        const Ce = we.value !== be[B][ie].value;
        we = J({}, we, {
          isProcessingProps: !0
        }), q(B, ie, we);
        const Ne = be[B], Be = qt(Ne, [ie].map(eC)), tt = Promise.resolve(ge.preProcessEditCellProps({
          id: B,
          row: fe,
          props: we,
          hasChanged: Ce,
          otherFieldsProps: Be
        })).then(($e) => {
          if (e.current.getRowMode(B) === Ur.View) {
            _e(!1);
            return;
          }
          be = mi(e.current.state), $e = J({}, $e, {
            isProcessingProps: !1
          }), $e.value = ge.preProcessEditCellProps ? be[B][ie].value : pe, q(B, ie, $e);
        });
        ce.push(tt);
      }
      Object.entries(be[B]).forEach(([Ce, Ne]) => {
        if (Ce === ie)
          return;
        const Be = e.current.getColumn(Ce);
        if (!Be.preProcessEditCellProps)
          return;
        Ne = J({}, Ne, {
          isProcessingProps: !0
        }), q(B, Ce, Ne), be = mi(e.current.state);
        const tt = be[B], $e = qt(tt, [Ce].map(eC)), rt = Promise.resolve(Be.preProcessEditCellProps({
          id: B,
          row: fe,
          props: Ne,
          hasChanged: !1,
          otherFieldsProps: $e
        })).then((ot) => {
          if (e.current.getRowMode(B) === Ur.View) {
            _e(!1);
            return;
          }
          ot = J({}, ot, {
            isProcessingProps: !1
          }), q(B, Ce, ot);
        });
        ce.push(rt);
      }), Promise.all(ce).then(() => {
        e.current.getRowMode(B) === Ur.Edit ? (be = mi(e.current.state), _e(!be[B][ie].error)) : _e(!1);
      });
    });
  }, [e, T, q]), X = x.useCallback((Q) => {
    const B = mi(e.current.state), ie = e.current.getRow(Q);
    if (!B[Q])
      return e.current.getRow(Q);
    let de = J({}, a.current[Q], ie);
    return Object.entries(B[Q]).forEach(([ue, he]) => {
      const ge = e.current.getColumn(ue);
      ge != null && ge.valueSetter ? de = ge.valueSetter(he.value, de, ge, e) : de[ue] = he.value;
    }), de;
  }, [e]), te = {
    getRowMode: H,
    startRowEditMode: W,
    stopRowEditMode: ee
  }, re = {
    setRowEditingEditCellValue: K,
    getRowWithUpdatedValuesFromRowEditing: X
  };
  Tn(e, te, "public"), Tn(e, re, "private"), x.useEffect(() => {
    y && U(y);
  }, [y, U]), Nr(() => {
    const Q = hl(e), B = s.current;
    s.current = j5(n);
    const ie = /* @__PURE__ */ new Set([...Object.keys(n), ...Object.keys(B)]);
    Array.from(ie).forEach((de) => {
      var fe;
      const ue = n[de] ?? {
        mode: Ur.View
      }, he = ((fe = B[de]) == null ? void 0 : fe.mode) || Ur.View, ge = Q[de] ? e.current.getRowId(Q[de]) : de;
      ue.mode === Ur.Edit && he === Ur.View ? Y(J({
        id: ge
      }, ue)) : ue.mode === Ur.View && he === Ur.Edit && G(J({
        id: ge
      }, ue));
    });
  }, [e, n, Y, G]);
}, SSe = (e) => J({}, e, {
  editRows: {}
}), CSe = (e, t) => {
  vSe(e, t), wSe(e, t);
  const n = x.useRef({}), {
    isCellEditable: r
  } = t, o = x.useCallback((w) => ny(w.rowNode) || !w.colDef.editable || !w.colDef.renderEditCell ? !1 : r ? r(w) : !0, [r]), s = (w, C, T, E) => {
    if (!T) {
      E();
      return;
    }
    if (n.current[w] || (n.current[w] = {}), n.current[w][C]) {
      const [I] = n.current[w][C];
      clearTimeout(I);
    }
    const O = () => {
      const [I] = n.current[w][C];
      clearTimeout(I), E(), delete n.current[w][C];
    }, k = setTimeout(() => {
      E(), delete n.current[w][C];
    }, T);
    n.current[w][C] = [k, O];
  };
  x.useEffect(() => {
    const w = n.current;
    return () => {
      Object.entries(w).forEach(([C, T]) => {
        Object.keys(T).forEach((E) => {
          const [O] = w[C][E];
          clearTimeout(O), delete w[C][E];
        });
      });
    };
  }, []);
  const a = x.useCallback((w, C) => {
    if (n.current[w]) {
      if (!C)
        Object.keys(n.current[w]).forEach((T) => {
          const [, E] = n.current[w][T];
          E();
        });
      else if (n.current[w][C]) {
        const [, T] = n.current[w][C];
        T();
      }
    }
  }, []), c = x.useCallback((w) => {
    const {
      id: C,
      field: T,
      debounceMs: E
    } = w;
    return new Promise((O) => {
      s(C, T, E, async () => {
        const k = t.editMode === wc.Row ? e.current.setRowEditingEditCellValue : e.current.setCellEditingEditCellValue;
        if (e.current.getCellMode(C, T) === cr.Edit) {
          const I = await k(w);
          O(I);
        }
      });
    });
  }, [e, t.editMode]), f = x.useCallback((w, C) => t.editMode === wc.Cell ? e.current.getRowWithUpdatedValuesFromCellEditing(w, C) : e.current.getRowWithUpdatedValuesFromRowEditing(w), [e, t.editMode]), m = x.useCallback((w, C) => {
    var E;
    return ((E = mi(e.current.state)[w]) == null ? void 0 : E[C]) ?? null;
  }, [e]), g = {
    isCellEditable: o,
    setEditCellValue: c,
    getRowWithUpdatedValues: f,
    unstable_getEditCellMeta: m
  }, y = {
    runPendingEditCellValueMutation: a
  };
  Tn(e, g, "public"), Tn(e, y, "private");
}, xSe = (e, t, n) => {
  const r = !!t.unstable_dataSource;
  return n.current.caches.rows = bT({
    rows: r ? [] : t.rows,
    getRowId: t.getRowId,
    loading: t.loading,
    rowCount: t.rowCount
  }), J({}, e, {
    rows: X5({
      apiRef: n,
      rowCountProp: t.rowCount,
      loadingProp: r ? !0 : t.loading,
      previousTree: null,
      previousTreeDepths: null
    })
  });
}, ESe = (e, t) => {
  if (process.env.NODE_ENV !== "production")
    try {
      Object.freeze(t.rows);
    } catch {
    }
  const n = vi(e, "useGridRows"), r = x.useRef(Date.now()), o = x.useRef(t.rowCount), s = Ma(), a = x.useCallback((G) => {
    const K = hl(e)[G];
    if (K)
      return K;
    const X = e.current.getRowNode(G);
    return X && ny(X) ? {
      [ty]: G
    } : null;
  }, [e]), c = x.useCallback((G) => RC(e.current.state, G), [e]), f = x.useCallback(({
    cache: G,
    throttle: K
  }) => {
    const X = () => {
      r.current = Date.now(), e.current.setState((re) => J({}, re, {
        rows: X5({
          apiRef: e,
          rowCountProp: t.rowCount,
          loadingProp: t.loading,
          previousTree: Yo(e),
          previousTreeDepths: Bz(e),
          previousGroupsToFetch: she(e)
        })
      })), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
    };
    if (s.clear(), e.current.caches.rows = G, !K) {
      X();
      return;
    }
    const te = t.throttleRowsMs - (Date.now() - r.current);
    if (te > 0) {
      s.start(te, X);
      return;
    }
    X();
  }, [t.throttleRowsMs, t.rowCount, t.loading, e, s]), m = x.useCallback((G) => {
    n.debug(`Updating all rows, new length ${G.length}`);
    const K = bT({
      rows: G,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), X = e.current.caches.rows;
    K.rowsBeforePartialUpdates = X.rowsBeforePartialUpdates, f({
      cache: K,
      throttle: !0
    });
  }, [n, t.getRowId, t.loading, t.rowCount, f, e]), g = x.useCallback((G) => {
    if (t.signature === Da.DataGrid && G.length > 1)
      throw new Error(["MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    const K = Jz(e, G, t.getRowId), X = Qz({
      updates: K,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows
    });
    f({
      cache: X,
      throttle: !0
    });
  }, [t.signature, t.getRowId, f, e]), y = x.useCallback((G, K) => {
    const X = Jz(e, G, t.getRowId), te = Qz({
      updates: X,
      getRowId: t.getRowId,
      previousCache: e.current.caches.rows,
      groupKeys: K ?? []
    });
    f({
      cache: te,
      throttle: !1
    });
  }, [t.getRowId, f, e]), w = x.useCallback((G) => {
    G !== t.loading && (n.debug(`Setting loading to ${G}`), e.current.setState((K) => J({}, K, {
      rows: J({}, K.rows, {
        loading: G
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = G);
  }, [t.loading, e, n]), C = x.useCallback(() => {
    const G = uS(e), K = hl(e);
    return new Map(G.map((X) => [X, K[X] ?? {}]));
  }, [e]), T = x.useCallback(() => EC(e), [e]), E = x.useCallback(() => uS(e), [e]), O = x.useCallback((G) => {
    const K = e.current.getRow(G), {
      rowToIndexMap: X
    } = qf(e);
    return X.get(K);
  }, [e]), k = x.useCallback((G, K) => {
    const X = e.current.getRowNode(G);
    if (!X)
      throw new Error(`MUI X: No row with id #${G} found.`);
    if (X.type !== "group")
      throw new Error("MUI X: Only group nodes can be expanded or collapsed.");
    const te = J({}, X, {
      childrenExpanded: K
    });
    e.current.setState((re) => J({}, re, {
      rows: J({}, re.rows, {
        tree: J({}, re.rows.tree, {
          [G]: te
        })
      })
    })), e.current.forceUpdate(), e.current.publishEvent("rowExpansionChange", te);
  }, [e]), I = x.useCallback((G) => Yo(e)[G] ?? null, [e]), M = x.useCallback(({
    skipAutoGeneratedRows: G = !0,
    groupId: K,
    applySorting: X,
    applyFiltering: te
  }) => {
    const re = Yo(e);
    let Q;
    if (X) {
      const B = re[K];
      if (!B)
        return [];
      const ie = Sy(e);
      Q = [];
      const de = ie.findIndex((ue) => ue === K) + 1;
      for (let ue = de; ue < ie.length && re[ie[ue]].depth > B.depth; ue += 1) {
        const he = ie[ue];
        (!G || !ny(re[he])) && Q.push(he);
      }
    } else
      Q = FD(re, K, G);
    if (te) {
      const B = Cy(e);
      Q = Q.filter((ie) => B[ie] !== !1);
    }
    return Q;
  }, [e]), N = x.useCallback((G, K) => {
    const X = e.current.getRowNode(G);
    if (!X)
      throw new Error(`MUI X: No row with id #${G} found.`);
    if (X.parent !== qi)
      throw new Error("MUI X: The row reordering do not support reordering of grouped rows yet.");
    if (X.type !== "leaf")
      throw new Error("MUI X: The row reordering do not support reordering of footer or grouping rows.");
    e.current.setState((te) => {
      const re = Yo(te, e.current.instanceId)[qi], Q = re.children, B = Q.findIndex((de) => de === G);
      if (B === -1 || B === K)
        return te;
      n.debug(`Moving row ${G} to index ${K}`);
      const ie = [...Q];
      return ie.splice(K, 0, ie.splice(B, 1)[0]), J({}, te, {
        rows: J({}, te.rows, {
          tree: J({}, te.rows.tree, {
            [qi]: J({}, re, {
              children: ie
            })
          })
        })
      });
    }), e.current.publishEvent("rowsSet");
  }, [e, n]), P = x.useCallback((G, K) => {
    if (t.signature === Da.DataGrid && K.length > 1)
      throw new Error(["MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join(`
`));
    if (K.length === 0)
      return;
    if (vm(e) > 1)
      throw new Error("`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping");
    const te = J({}, Yo(e)), re = J({}, hl(e)), Q = J({}, zz(e)), B = te[qi], ie = [...B.children], de = /* @__PURE__ */ new Set();
    for (let he = 0; he < K.length; he += 1) {
      const ge = K[he], fe = vO(ge, t.getRowId, "A row was provided without id when calling replaceRows()."), [pe] = ie.splice(G + he, 1, fe);
      de.has(pe) || (delete re[pe], delete Q[pe], delete te[pe]);
      const be = {
        id: fe,
        depth: 0,
        parent: qi,
        type: "leaf",
        groupingKey: null
      };
      re[fe] = ge, Q[fe] = fe, te[fe] = be, de.add(fe);
    }
    te[qi] = J({}, B, {
      children: ie
    });
    const ue = ie.filter((he) => {
      var ge;
      return ((ge = te[he]) == null ? void 0 : ge.type) === "leaf";
    });
    e.current.caches.rows.dataRowIdToModelLookup = re, e.current.caches.rows.dataRowIdToIdLookup = Q, e.current.setState((he) => J({}, he, {
      rows: J({}, he.rows, {
        dataRowIdToModelLookup: re,
        dataRowIdToIdLookup: Q,
        dataRowIds: ue,
        tree: te
      })
    })), e.current.publishEvent("rowsSet");
  }, [e, t.signature, t.getRowId]), F = {
    getRow: a,
    setLoading: w,
    getRowId: c,
    getRowModels: C,
    getRowsCount: T,
    getAllRowIds: E,
    setRows: m,
    updateRows: g,
    getRowNode: I,
    getRowIndexRelativeToVisibleRows: O,
    unstable_replaceRows: P
  }, H = {
    setRowIndex: N,
    setRowChildrenExpansion: k,
    getRowGroupChildren: M
  }, U = {
    updateServerRows: y
  }, z = x.useCallback(() => {
    n.info("Row grouping pre-processing have changed, regenerating the row tree");
    let G;
    e.current.caches.rows.rowsBeforePartialUpdates === t.rows ? G = J({}, e.current.caches.rows, {
      updates: {
        type: "full",
        rows: uS(e)
      }
    }) : G = bT({
      rows: t.rows,
      getRowId: t.getRowId,
      loading: t.loading,
      rowCount: t.rowCount
    }), f({
      cache: G,
      throttle: !1
    });
  }, [n, e, t.rows, t.getRowId, t.loading, t.rowCount, f]), A = Ol(() => t.unstable_dataSource), q = x.useCallback((G) => {
    if (t.unstable_dataSource && t.unstable_dataSource !== A.current) {
      A.current = t.unstable_dataSource;
      return;
    }
    G === "rowTreeCreation" && z();
  }, [z, A, t.unstable_dataSource]), W = x.useCallback(() => {
    e.current.getActiveStrategy("rowTree") !== ahe(e) && z();
  }, [e, z]);
  Ot(e, "activeStrategyProcessorChange", q), Ot(e, "strategyAvailabilityChange", W);
  const Y = x.useCallback(() => {
    e.current.setState((G) => {
      const K = e.current.unstable_applyPipeProcessors("hydrateRows", {
        tree: Yo(G, e.current.instanceId),
        treeDepths: Bz(G, e.current.instanceId),
        dataRowIds: uS(G, e.current.instanceId),
        dataRowIdToModelLookup: hl(G, e.current.instanceId),
        dataRowIdToIdLookup: zz(G, e.current.instanceId)
      });
      return J({}, G, {
        rows: J({}, G.rows, K, {
          totalTopLevelRowCount: Y5({
            tree: K.tree,
            rowCountProp: t.rowCount
          })
        })
      });
    }), e.current.publishEvent("rowsSet"), e.current.forceUpdate();
  }, [e, t.rowCount]);
  rA(e, "hydrateRows", Y), Tn(e, F, "public"), Tn(e, H, t.signature === Da.DataGrid ? "private" : "public"), Tn(e, U, "private");
  const ee = x.useRef(!0);
  x.useEffect(() => {
    var re;
    if (ee.current) {
      ee.current = !1;
      return;
    }
    let G = !1;
    t.rowCount !== o.current && (G = !0, o.current = t.rowCount);
    const K = e.current.caches.rows.rowsBeforePartialUpdates === t.rows, X = e.current.caches.rows.loadingPropBeforePartialUpdates === t.loading, te = e.current.caches.rows.rowCountPropBeforePartialUpdates === t.rowCount;
    K && (X || (e.current.setState((Q) => J({}, Q, {
      rows: J({}, Q.rows, {
        loading: t.loading
      })
    })), e.current.caches.rows.loadingPropBeforePartialUpdates = t.loading, e.current.forceUpdate()), te || (e.current.setState((Q) => J({}, Q, {
      rows: J({}, Q.rows, {
        totalRowCount: Math.max(t.rowCount || 0, Q.rows.totalRowCount),
        totalTopLevelRowCount: Math.max(t.rowCount || 0, Q.rows.totalTopLevelRowCount)
      })
    })), e.current.caches.rows.rowCountPropBeforePartialUpdates = t.rowCount, e.current.forceUpdate()), !G) || (n.debug(`Updating all rows, new length ${(re = t.rows) == null ? void 0 : re.length}`), f({
      cache: bT({
        rows: t.rows,
        getRowId: t.getRowId,
        loading: t.loading,
        rowCount: t.rowCount
      }),
      throttle: !1
    }));
  }, [t.rows, t.rowCount, t.getRowId, t.loading, n, f, e]);
}, TSe = (e) => {
  const t = {
    [qi]: J({}, zhe(), {
      children: e
    })
  };
  for (let n = 0; n < e.length; n += 1) {
    const r = e[n];
    t[r] = {
      id: r,
      depth: 0,
      parent: qi,
      type: "leaf",
      groupingKey: null
    };
  }
  return {
    groupingName: fm,
    tree: t,
    treeDepths: {
      0: e.length
    },
    dataRowIds: e
  };
}, _Se = ({
  previousTree: e,
  actions: t
}) => {
  const n = J({}, e), r = {};
  for (let a = 0; a < t.remove.length; a += 1) {
    const c = t.remove[a];
    r[c] = !0, delete n[c];
  }
  for (let a = 0; a < t.insert.length; a += 1) {
    const c = t.insert[a];
    n[c] = {
      id: c,
      depth: 0,
      parent: qi,
      type: "leaf",
      groupingKey: null
    };
  }
  const o = n[qi];
  let s = [...o.children, ...t.insert];
  return Object.values(r).length && (s = s.filter((a) => !r[a])), n[qi] = J({}, o, {
    children: s
  }), {
    groupingName: fm,
    tree: n,
    treeDepths: {
      0: s.length
    },
    dataRowIds: s
  };
}, OSe = (e) => e.updates.type === "full" ? TSe(e.updates.rows) : _Se({
  previousTree: e.previousTree,
  actions: e.updates.actions
}), RSe = (e) => {
  m_(e, fm, "rowTreeCreation", OSe);
};
class HP extends Error {
}
function kSe(e, t) {
  var T;
  const n = x.useCallback((E) => ({
    field: E,
    colDef: e.current.getColumn(E)
  }), [e]), r = x.useCallback((E) => {
    const O = e.current.getRow(E);
    if (!O)
      throw new HP(`No row with id #${E} found`);
    return {
      id: E,
      columns: e.current.getAllColumns(),
      row: O
    };
  }, [e]), o = x.useCallback((E, O, k, {
    cellMode: I,
    colDef: M,
    hasFocus: N,
    rowNode: P,
    tabIndex: F
  }) => {
    const H = k[O], U = M != null && M.valueGetter ? M.valueGetter(H, k, M, e) : H, z = {
      id: E,
      field: O,
      row: k,
      rowNode: P,
      colDef: M,
      cellMode: I,
      hasFocus: N,
      tabIndex: F,
      value: U,
      formattedValue: U,
      isEditable: !1,
      api: e.current
    };
    return M && M.valueFormatter && (z.formattedValue = M.valueFormatter(U, k, M, e)), z.isEditable = M && e.current.isCellEditable(z), z;
  }, [e]), s = x.useCallback((E, O) => {
    var F;
    const k = e.current.getRow(E), I = e.current.getRowNode(E);
    if (!k || !I)
      throw new HP(`No row with id #${E} found`);
    const M = Ps(e), N = UD(e), P = e.current.getCellMode(E, O);
    return e.current.getCellParamsForRow(E, O, k, {
      colDef: t.unstable_listView && ((F = t.unstable_listColumn) == null ? void 0 : F.field) === O ? oy(e.current.state) : e.current.getColumn(O),
      rowNode: I,
      hasFocus: M !== null && M.field === O && M.id === E,
      tabIndex: N && N.field === O && N.id === E ? 0 : -1,
      cellMode: P
    });
  }, [e, t.unstable_listView, (T = t.unstable_listColumn) == null ? void 0 : T.field]), a = x.useCallback((E, O) => {
    const k = e.current.getColumn(O), I = e.current.getRow(E);
    if (!I)
      throw new HP(`No row with id #${E} found`);
    return !k || !k.valueGetter ? I[O] : k.valueGetter(I[k.field], I, k, e);
  }, [e]), c = x.useCallback((E, O) => {
    const k = O.field;
    if (!O || !O.valueGetter)
      return E[k];
    const I = E[O.field];
    return O.valueGetter(I, E, O, e);
  }, [e]), f = x.useCallback((E, O) => {
    const k = c(E, O);
    return !O || !O.valueFormatter ? k : O.valueFormatter(k, E, O, e);
  }, [e, c]), m = x.useCallback((E) => e.current.rootElementRef.current ? cye(e.current.rootElementRef.current, E) : null, [e]), g = x.useCallback((E) => e.current.rootElementRef.current ? dye(e.current.rootElementRef.current, E) : null, [e]), y = x.useCallback((E, O) => e.current.rootElementRef.current ? fye(e.current.rootElementRef.current, {
    id: E,
    field: O
  }) : null, [e]), w = {
    getCellValue: a,
    getCellParams: s,
    getCellElement: y,
    getRowValue: c,
    getRowFormattedValue: f,
    getRowParams: r,
    getRowElement: g,
    getColumnHeaderParams: n,
    getColumnHeaderElement: m
  }, C = {
    getCellParamsForRow: o
  };
  Tn(e, w, "public"), Tn(e, C, "private");
}
const z4 = (e, t) => e == null || Array.isArray(e) ? e : t && t[0] === e ? t : [e], PSe = (e, t) => J({}, e, {
  rowSelection: t.rowSelection ? z4(t.rowSelectionModel) ?? [] : []
}), MSe = (e, t) => {
  var te, re, Q, B, ie, de, ue, he, ge;
  const n = vi(e, "useGridSelection"), r = x.useCallback((fe) => (...pe) => {
    t.rowSelection && fe(...pe);
  }, [t.rowSelection]), o = t.signature !== Da.DataGrid && (((te = t.rowSelectionPropagation) == null ? void 0 : te.parents) || ((re = t.rowSelectionPropagation) == null ? void 0 : re.descendants)), s = x.useMemo(() => z4(t.rowSelectionModel, _a(e.current.state)), [e, t.rowSelectionModel]), a = x.useRef(null);
  e.current.registerControlState({
    stateId: "rowSelection",
    propModel: s,
    propOnChange: t.onRowSelectionModelChange,
    stateSelector: _a,
    changeEvent: "rowSelectionChange"
  });
  const {
    checkboxSelection: c,
    disableRowSelectionOnClick: f,
    isRowSelectable: m
  } = t, g = VD(t), y = Ze(e, Yo), w = Ze(e, vm) > 1, C = x.useCallback((fe) => {
    let pe = fe;
    const be = a.current ?? fe, we = e.current.isRowSelected(fe);
    if (we) {
      const _e = jv(e), ce = _e.findIndex((Ne) => Ne === be), Ce = _e.findIndex((Ne) => Ne === pe);
      if (ce === Ce)
        return;
      ce > Ce ? pe = _e[Ce + 1] : pe = _e[Ce - 1];
    }
    a.current = fe, e.current.selectRowRange({
      startId: be,
      endId: pe
    }, !we);
  }, [e]), T = x.useCallback((fe) => {
    if (t.signature === Da.DataGrid && !g && Array.isArray(fe) && fe.length > 1)
      throw new Error(["MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.", "You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection."].join(`
`));
    _a(e.current.state) !== fe && (n.debug("Setting selection model"), e.current.setState((be) => J({}, be, {
      rowSelection: t.rowSelection ? fe : []
    })), e.current.forceUpdate());
  }, [e, n, t.rowSelection, t.signature, g]), E = x.useCallback((fe) => _a(e.current.state).includes(fe), [e]), O = x.useCallback((fe) => {
    if (t.rowSelection === !1 || m && !m(e.current.getRowParams(fe)))
      return !1;
    const pe = Yo(e)[fe];
    return !((pe == null ? void 0 : pe.type) === "footer" || (pe == null ? void 0 : pe.type) === "pinnedRow");
  }, [e, t.rowSelection, m]), k = x.useCallback(() => ume(e), [e]), I = x.useCallback((fe, pe = !0, be = !1) => {
    var we, _e, ce, Ce, Ne, Be;
    if (e.current.isRowSelectable(fe))
      if (a.current = fe, be) {
        n.debug(`Setting selection for row ${fe}`);
        const tt = [], $e = (rt) => {
          tt.push(rt);
        };
        pe && ($e(fe), o && Kw(e, y, fe, ((we = t.rowSelectionPropagation) == null ? void 0 : we.descendants) ?? !1, ((_e = t.rowSelectionPropagation) == null ? void 0 : _e.parents) ?? !1, $e)), e.current.setRowSelectionModel(tt);
      } else {
        n.debug(`Toggling selection for row ${fe}`);
        const tt = _a(e.current.state), $e = new Set(tt);
        $e.delete(fe);
        const rt = (gt) => {
          $e.add(gt);
        }, ot = (gt) => {
          $e.delete(gt);
        };
        pe ? (rt(fe), o && Kw(e, y, fe, ((ce = t.rowSelectionPropagation) == null ? void 0 : ce.descendants) ?? !1, ((Ce = t.rowSelectionPropagation) == null ? void 0 : Ce.parents) ?? !1, rt)) : o && eB(e, y, fe, ((Ne = t.rowSelectionPropagation) == null ? void 0 : Ne.descendants) ?? !1, ((Be = t.rowSelectionPropagation) == null ? void 0 : Be.parents) ?? !1, ot), ($e.size < 2 || g) && e.current.setRowSelectionModel(Array.from($e));
      }
  }, [e, n, o, y, (Q = t.rowSelectionPropagation) == null ? void 0 : Q.descendants, (B = t.rowSelectionPropagation) == null ? void 0 : B.parents, g]), M = x.useCallback((fe, pe = !0, be = !1) => {
    n.debug("Setting selection for several rows");
    const we = fe.filter((Ce) => e.current.isRowSelectable(Ce));
    let _e;
    if (be) {
      if (pe) {
        if (_e = new Set(we), o) {
          const Ne = (Be) => {
            _e.add(Be);
          };
          we.forEach((Be) => {
            var tt, $e;
            Kw(e, y, Be, ((tt = t.rowSelectionPropagation) == null ? void 0 : tt.descendants) ?? !1, (($e = t.rowSelectionPropagation) == null ? void 0 : $e.parents) ?? !1, Ne);
          });
        }
      } else
        _e = /* @__PURE__ */ new Set();
      const Ce = Gf(e);
      if (_e.size === Object.keys(Ce).length && Array.from(_e).every((Ne) => Ce[Ne] === Ne))
        return;
    } else {
      _e = new Set(Object.values(Gf(e)));
      const Ce = (Be) => {
        _e.add(Be);
      }, Ne = (Be) => {
        _e.delete(Be);
      };
      we.forEach((Be) => {
        var tt, $e, rt, ot;
        pe ? (_e.add(Be), o && Kw(e, y, Be, ((tt = t.rowSelectionPropagation) == null ? void 0 : tt.descendants) ?? !1, (($e = t.rowSelectionPropagation) == null ? void 0 : $e.parents) ?? !1, Ce)) : (Ne(Be), o && eB(e, y, Be, ((rt = t.rowSelectionPropagation) == null ? void 0 : rt.descendants) ?? !1, ((ot = t.rowSelectionPropagation) == null ? void 0 : ot.parents) ?? !1, Ne));
      });
    }
    (_e.size < 2 || g) && e.current.setRowSelectionModel(Array.from(_e));
  }, [n, o, g, e, y, (ie = t.rowSelectionPropagation) == null ? void 0 : ie.descendants, (de = t.rowSelectionPropagation) == null ? void 0 : de.parents]), N = x.useCallback((fe) => {
    var we, _e;
    if (!w || !o || fe.length === 0)
      return fe;
    const pe = new Set(fe), be = (ce) => {
      pe.add(ce);
    };
    for (const ce of fe)
      Kw(e, y, ce, ((we = t.rowSelectionPropagation) == null ? void 0 : we.descendants) ?? !1, ((_e = t.rowSelectionPropagation) == null ? void 0 : _e.parents) ?? !1, be, pe);
    return Array.from(pe);
  }, [e, y, (ue = t.rowSelectionPropagation) == null ? void 0 : ue.descendants, (he = t.rowSelectionPropagation) == null ? void 0 : he.parents, w, o]), P = x.useCallback(({
    startId: fe,
    endId: pe
  }, be = !0, we = !1) => {
    if (!e.current.getRow(fe) || !e.current.getRow(pe))
      return;
    n.debug(`Expanding selection from row ${fe} to row ${pe}`);
    const _e = jv(e), ce = _e.indexOf(fe), Ce = _e.indexOf(pe), [Ne, Be] = ce > Ce ? [Ce, ce] : [ce, Ce], tt = _e.slice(Ne, Be + 1);
    e.current.selectRows(tt, be, we);
  }, [e, n]), F = {
    selectRow: I,
    setRowSelectionModel: T,
    getSelectedRows: k,
    isRowSelected: E,
    isRowSelectable: O
  }, H = {
    selectRows: M,
    selectRowRange: P,
    getPropagatedRowSelectionModel: N
  };
  Tn(e, F, "public"), Tn(e, H, t.signature === Da.DataGrid ? "private" : "public");
  const U = x.useRef(!0), z = x.useCallback((fe = !1) => {
    var Be;
    if (U.current)
      return;
    const pe = _a(e.current.state), be = hl(e), we = Cy(e), _e = J({}, Gf(e)), ce = (tt) => t.filterMode === "server" ? !be[tt] : !be[tt] || we[tt] === !1;
    let Ce = !1;
    pe.forEach((tt) => {
      var rt;
      if (ce(tt)) {
        if (t.keepNonExistentRowsSelected)
          return;
        delete _e[tt], Ce = !0;
        return;
      }
      if (!((rt = t.rowSelectionPropagation) != null && rt.parents))
        return;
      const $e = y[tt];
      if ($e.type === "group") {
        if ($e.isAutoGenerated) {
          delete _e[tt], Ce = !0;
          return;
        }
        $e.children.every((wt) => we[wt] === !1) || (delete _e[tt], Ce = !0);
      }
    });
    const Ne = w && ((Be = t.rowSelectionPropagation) == null ? void 0 : Be.parents) && Object.keys(_e).length > 0;
    if (Ce || Ne && !fe) {
      const tt = Object.values(_e);
      Ne ? e.current.selectRows(tt, !0, !0) : e.current.setRowSelectionModel(tt);
    }
  }, [e, w, (ge = t.rowSelectionPropagation) == null ? void 0 : ge.parents, t.keepNonExistentRowsSelected, t.filterMode, y]), A = x.useCallback((fe, pe) => {
    const be = pe.metaKey || pe.ctrlKey, we = !c && !be && !ibe(pe), _e = !g || we, ce = e.current.isRowSelected(fe);
    _e ? e.current.selectRow(fe, we ? !0 : !ce, !0) : e.current.selectRow(fe, !ce, !1);
  }, [e, g, c]), q = x.useCallback((fe, pe) => {
    var _e;
    if (f)
      return;
    const be = (_e = pe.target.closest(`.${se.cell}`)) == null ? void 0 : _e.getAttribute("data-field");
    if (be === xy.field || be === yO)
      return;
    if (be) {
      const ce = e.current.getColumn(be);
      if ((ce == null ? void 0 : ce.type) === gO)
        return;
    }
    Yo(e)[fe.id].type !== "pinnedRow" && (pe.shiftKey && g ? C(fe.id) : A(fe.id, pe));
  }, [f, g, e, C, A]), W = x.useCallback((fe, pe) => {
    var be;
    g && pe.shiftKey && ((be = window.getSelection()) == null || be.removeAllRanges());
  }, [g]), Y = x.useCallback((fe, pe) => {
    g && pe.nativeEvent.shiftKey ? C(fe.id) : e.current.selectRow(fe.id, fe.value, !g);
  }, [e, C, g]), ee = x.useCallback((fe) => {
    const pe = t.pagination && t.checkboxSelectionVisibleOnly && t.paginationMode === "client" ? bW(e) : jv(e);
    e.current.selectRows(pe, fe.value);
  }, [e, t.checkboxSelectionVisibleOnly, t.pagination, t.paginationMode]), G = x.useCallback((fe, pe) => {
    if (e.current.getCellMode(fe.id, fe.field) !== cr.Edit && !MC(pe)) {
      if (f_(pe.key) && pe.shiftKey) {
        const be = Ps(e);
        if (be && be.id !== fe.id) {
          pe.preventDefault();
          const we = e.current.isRowSelected(be.id);
          if (!g) {
            e.current.selectRow(be.id, !we, !0);
            return;
          }
          const _e = e.current.getRowIndexRelativeToVisibleRows(be.id), ce = e.current.getRowIndexRelativeToVisibleRows(fe.id);
          let Ce, Ne;
          _e > ce ? we ? (Ce = ce, Ne = _e - 1) : (Ce = ce, Ne = _e) : we ? (Ce = _e + 1, Ne = ce) : (Ce = _e, Ne = ce);
          const tt = qf(e).rows.slice(Ce, Ne + 1).map(($e) => $e.id);
          e.current.selectRows(tt, !we);
          return;
        }
      }
      if (pe.key === " " && pe.shiftKey) {
        pe.preventDefault(), A(fe.id, pe);
        return;
      }
      String.fromCharCode(pe.keyCode) === "A" && (pe.ctrlKey || pe.metaKey) && (pe.preventDefault(), M(e.current.getAllRowIds(), !0));
    }
  }, [e, A, M, g]), K = jn(() => {
    if (!t.rowSelection) {
      e.current.setRowSelectionModel([]);
      return;
    }
    if (s === void 0)
      return;
    if (!o || !w || s.length === 0) {
      e.current.setRowSelectionModel(s);
      return;
    }
    const fe = e.current.getPropagatedRowSelectionModel(s);
    if (fe.length !== s.length || !fe.every((pe) => s.includes(pe))) {
      e.current.setRowSelectionModel(fe);
      return;
    }
    e.current.setRowSelectionModel(s);
  });
  Ot(e, "sortedRowsSet", r(() => z(!0))), Ot(e, "filteredRowsSet", r(() => z())), Ot(e, "rowClick", r(q)), Ot(e, "rowSelectionCheckboxChange", r(Y)), Ot(e, "headerSelectionCheckboxChange", ee), Ot(e, "cellMouseDown", r(W)), Ot(e, "cellKeyDown", r(G)), x.useEffect(() => {
    K();
  }, [e, s, t.rowSelection, K]);
  const X = s != null;
  x.useEffect(() => {
    if (X || !t.rowSelection)
      return;
    const fe = _a(e.current.state);
    if (O) {
      const pe = fe.filter((be) => O(be));
      pe.length < fe.length && e.current.setRowSelectionModel(pe);
    }
  }, [e, O, X, t.rowSelection]), x.useEffect(() => {
    if (!t.rowSelection || X)
      return;
    const fe = _a(e.current.state);
    !g && fe.length > 1 && e.current.setRowSelectionModel([]);
  }, [e, g, c, X, t.rowSelection]), x.useEffect(() => {
    r(z);
  }, [z, r]), x.useEffect(() => {
    U.current && (U.current = !1);
  }, []);
}, ISe = (e) => {
  const {
    classes: t
  } = e;
  return x.useMemo(() => mt({
    cellCheckbox: ["cellCheckbox"],
    columnHeaderCheckbox: ["columnHeaderCheckbox"]
  }, zn, t), [t]);
}, DSe = (e, t) => {
  const n = {
    classes: t.classes
  }, r = ISe(n), o = x.useCallback((s) => {
    const a = J({}, xy, {
      cellClassName: r.cellCheckbox,
      headerClassName: r.columnHeaderCheckbox,
      headerName: e.current.getLocaleText("checkboxSelectionHeaderName")
    }), c = t.checkboxSelection, f = s.lookup[cl] != null;
    return c && !f ? (s.lookup[cl] = a, s.orderedFields = [cl, ...s.orderedFields]) : !c && f ? (delete s.lookup[cl], s.orderedFields = s.orderedFields.filter((m) => m !== cl)) : c && f && (s.lookup[cl] = J({}, a, s.lookup[cl]), t.columns.some((m) => m.field === cl) || (s.orderedFields = [cl, ...s.orderedFields.filter((m) => m !== cl)])), s;
  }, [e, r, t.columns, t.checkboxSelection]);
  to(e, "hydrateColumns", o);
}, ASe = (e, t) => {
  var r, o;
  const n = t.sortModel ?? ((o = (r = t.initialState) == null ? void 0 : r.sorting) == null ? void 0 : o.sortModel) ?? [];
  return J({}, e, {
    sorting: {
      sortModel: A5(n, t.disableMultipleColumnsSorting),
      sortedRows: []
    }
  });
}, NSe = (e, t) => {
  var P, F;
  const n = vi(e, "useGridSorting");
  e.current.registerControlState({
    stateId: "sortModel",
    propModel: t.sortModel,
    propOnChange: t.onSortModelChange,
    stateSelector: iu,
    changeEvent: "sortModelChange"
  });
  const r = x.useCallback((H, U) => {
    const z = iu(e), A = z.findIndex((W) => W.field === H);
    let q = [...z];
    return A > -1 ? (U == null ? void 0 : U.sort) == null ? q.splice(A, 1) : q.splice(A, 1, U) : q = [...z, U], q;
  }, [e]), o = x.useCallback((H, U) => {
    const A = iu(e).find((q) => q.field === H.field);
    if (A) {
      const q = U === void 0 ? Vz(H.sortingOrder ?? t.sortingOrder, A.sort) : U;
      return q === void 0 ? void 0 : J({}, A, {
        sort: q
      });
    }
    return {
      field: H.field,
      sort: U === void 0 ? Vz(H.sortingOrder ?? t.sortingOrder) : U
    };
  }, [e, t.sortingOrder]), s = x.useCallback((H, U) => U == null || U.sortable === !1 || t.disableColumnSorting ? H : (U.sortingOrder || t.sortingOrder).some((A) => !!A) ? [...H, "columnMenuSortItem"] : H, [t.sortingOrder, t.disableColumnSorting]), a = x.useCallback(() => {
    e.current.setState((H) => {
      if (t.sortingMode === "server")
        return n.debug("Skipping sorting rows as sortingMode = server"), J({}, H, {
          sorting: J({}, H.sorting, {
            sortedRows: FD(Yo(e), qi, !1)
          })
        });
      const U = iu(H, e.current.instanceId), z = fhe(U, e), A = e.current.applyStrategyProcessor("sorting", {
        sortRowList: z
      });
      return J({}, H, {
        sorting: J({}, H.sorting, {
          sortedRows: A
        })
      });
    }), e.current.publishEvent("sortedRowsSet"), e.current.forceUpdate();
  }, [e, n, t.sortingMode]), c = x.useCallback((H) => {
    iu(e) !== H && (n.debug("Setting sort model"), e.current.setState(Hz(H, t.disableMultipleColumnsSorting)), e.current.forceUpdate(), e.current.applySorting());
  }, [e, n, t.disableMultipleColumnsSorting]), f = x.useCallback((H, U, z) => {
    const A = e.current.getColumn(H), q = o(A, U);
    let W;
    !z || t.disableMultipleColumnsSorting ? W = (q == null ? void 0 : q.sort) == null ? [] : [q] : W = r(A.field, q), e.current.setSortModel(W);
  }, [e, r, o, t.disableMultipleColumnsSorting]), m = x.useCallback(() => iu(e), [e]), g = x.useCallback(() => zD(e).map((U) => U.model), [e]), y = x.useCallback(() => Sy(e), [e]), w = x.useCallback((H) => e.current.getSortedRowIds()[H], [e]);
  Tn(e, {
    getSortModel: m,
    getSortedRows: g,
    getSortedRowIds: y,
    getRowIdFromRowIndex: w,
    setSortModel: c,
    sortColumn: f,
    applySorting: a
  }, "public");
  const T = x.useCallback((H, U) => {
    var q, W;
    const z = iu(e);
    return (
      // Always export if the `exportOnlyDirtyModels` property is not activated
      !U.exportOnlyDirtyModels || // Always export if the model is controlled
      t.sortModel != null || // Always export if the model has been initialized
      ((W = (q = t.initialState) == null ? void 0 : q.sorting) == null ? void 0 : W.sortModel) != null || // Export if the model is not empty
      z.length > 0 ? J({}, H, {
        sorting: {
          sortModel: z
        }
      }) : H
    );
  }, [e, t.sortModel, (F = (P = t.initialState) == null ? void 0 : P.sorting) == null ? void 0 : F.sortModel]), E = x.useCallback((H, U) => {
    var A;
    const z = (A = U.stateToRestore.sorting) == null ? void 0 : A.sortModel;
    return z == null ? H : (e.current.setState(Hz(z, t.disableMultipleColumnsSorting)), J({}, H, {
      callbacks: [...H.callbacks, e.current.applySorting]
    }));
  }, [e, t.disableMultipleColumnsSorting]), O = x.useCallback((H) => {
    const U = Yo(e), z = U[qi], A = H.sortRowList ? H.sortRowList(z.children.map((q) => U[q])) : [...z.children];
    return z.footerId != null && A.push(z.footerId), A;
  }, [e]);
  to(e, "exportState", T), to(e, "restoreState", E), m_(e, fm, "sorting", O);
  const k = x.useCallback(({
    field: H,
    colDef: U
  }, z) => {
    if (!U.sortable || t.disableColumnSorting)
      return;
    const A = z.shiftKey || z.metaKey || z.ctrlKey;
    f(H, void 0, A);
  }, [f, t.disableColumnSorting]), I = x.useCallback(({
    field: H,
    colDef: U
  }, z) => {
    !U.sortable || t.disableColumnSorting || z.key === "Enter" && !z.ctrlKey && !z.metaKey && f(H, void 0, z.shiftKey);
  }, [f, t.disableColumnSorting]), M = x.useCallback(() => {
    const H = iu(e), U = kd(e);
    if (H.length > 0) {
      const z = H.filter((A) => U[A.field]);
      z.length < H.length && e.current.setSortModel(z);
    }
  }, [e]), N = x.useCallback((H) => {
    H === "sorting" && e.current.applySorting();
  }, [e]);
  to(e, "columnMenu", s), Ot(e, "columnHeaderClick", k), Ot(e, "columnHeaderKeyDown", I), Ot(e, "rowsSet", e.current.applySorting), Ot(e, "columnsChange", M), Ot(e, "activeStrategyProcessorChange", N), TC(() => {
    e.current.applySorting();
  }), Nr(() => {
    t.sortModel !== void 0 && e.current.setSortModel(t.sortModel);
  }, [e, t.sortModel]);
};
function IB(e) {
  const {
    containerSize: t,
    scrollPosition: n,
    elementSize: r,
    elementOffset: o
  } = e, s = o + r;
  if (r > t)
    return o;
  if (s - t > n)
    return s - t;
  if (o < n)
    return o;
}
const LSe = (e, t) => {
  const n = xc(), r = vi(e, "useGridScroll"), o = e.current.columnHeadersContainerRef, s = e.current.virtualScrollerRef, a = Ze(e, fp), c = x.useCallback((y) => {
    var k;
    const w = gi(e.current.state), C = EC(e), T = t.unstable_listView ? [oy(e.current.state)] : po(e);
    if (!(y.rowIndex == null) && C === 0 || T.length === 0)
      return !1;
    r.debug(`Scrolling to cell at row ${y.rowIndex}, col: ${y.colIndex} `);
    let O = {};
    if (y.colIndex !== void 0) {
      const I = dp(e);
      let M;
      if (typeof y.rowIndex < "u") {
        const N = (k = a[y.rowIndex]) == null ? void 0 : k.id, P = e.current.unstable_getCellColSpanInfo(N, y.colIndex);
        P && !P.spannedByColSpan && (M = P.cellProps.width);
      }
      typeof M > "u" && (M = T[y.colIndex].computedWidth), O.left = IB({
        containerSize: w.viewportOuterSize.width,
        scrollPosition: Math.abs(s.current.scrollLeft),
        elementSize: M,
        elementOffset: I[y.colIndex]
      });
    }
    if (y.rowIndex !== void 0) {
      const I = Ey(e.current.state), M = Eme(e), N = vW(e), P = t.pagination ? y.rowIndex - M * N : y.rowIndex, F = I.positions[P + 1] ? I.positions[P + 1] - I.positions[P] : I.currentPageTotalHeight - I.positions[P];
      O.top = IB({
        containerSize: w.viewportInnerSize.height,
        scrollPosition: s.current.scrollTop,
        elementSize: F,
        elementOffset: I.positions[P]
      });
    }
    return O = e.current.unstable_applyPipeProcessors("scrollToIndexes", O, y), typeof O.left !== void 0 || typeof O.top !== void 0 ? (e.current.scroll(O), !0) : !1;
  }, [r, e, s, t.pagination, a, t.unstable_listView]), f = x.useCallback((y) => {
    if (s.current && y.left !== void 0 && o.current) {
      const w = n ? -1 : 1;
      o.current.scrollLeft = y.left, s.current.scrollLeft = w * y.left, r.debug(`Scrolling left: ${y.left}`);
    }
    s.current && y.top !== void 0 && (s.current.scrollTop = y.top, r.debug(`Scrolling top: ${y.top}`)), r.debug("Scrolling, updating container, and viewport");
  }, [s, n, o, r]), m = x.useCallback(() => s != null && s.current ? {
    top: s.current.scrollTop,
    left: s.current.scrollLeft
  } : {
    top: 0,
    left: 0
  }, [s]);
  Tn(e, {
    scroll: f,
    scrollToIndexes: c,
    getScrollPosition: m
  }, "public");
};
function $Se(e, t) {
  fr(e, "columnHeaderClick", t.onColumnHeaderClick), fr(e, "columnHeaderContextMenu", t.onColumnHeaderContextMenu), fr(e, "columnHeaderDoubleClick", t.onColumnHeaderDoubleClick), fr(e, "columnHeaderOver", t.onColumnHeaderOver), fr(e, "columnHeaderOut", t.onColumnHeaderOut), fr(e, "columnHeaderEnter", t.onColumnHeaderEnter), fr(e, "columnHeaderLeave", t.onColumnHeaderLeave), fr(e, "cellClick", t.onCellClick), fr(e, "cellDoubleClick", t.onCellDoubleClick), fr(e, "cellKeyDown", t.onCellKeyDown), fr(e, "preferencePanelClose", t.onPreferencePanelClose), fr(e, "preferencePanelOpen", t.onPreferencePanelOpen), fr(e, "menuOpen", t.onMenuOpen), fr(e, "menuClose", t.onMenuClose), fr(e, "rowDoubleClick", t.onRowDoubleClick), fr(e, "rowClick", t.onRowClick), fr(e, "stateChange", t.onStateChange);
}
function jSe(e, t = 166) {
  let n, r;
  const o = () => {
    n = void 0, e(...r);
  };
  function s(...a) {
    r = a, n === void 0 && (n = setTimeout(o, t));
  }
  return s.clear = () => {
    clearTimeout(n), n = void 0;
  }, s;
}
const aI = {
  autoHeight: !1,
  autoPageSize: !1,
  autosizeOnMount: !1,
  checkboxSelection: !1,
  checkboxSelectionVisibleOnly: !1,
  clipboardCopyCellDelimiter: "	",
  columnBufferPx: 150,
  columnHeaderHeight: 56,
  disableAutosize: !1,
  disableColumnFilter: !1,
  disableColumnMenu: !1,
  disableColumnReorder: !1,
  disableColumnResize: !1,
  disableColumnSelector: !1,
  disableColumnSorting: !1,
  disableDensitySelector: !1,
  disableEval: !1,
  disableMultipleColumnsFiltering: !1,
  disableMultipleColumnsSorting: !1,
  disableMultipleRowSelection: !1,
  disableRowSelectionOnClick: !1,
  disableVirtualization: !1,
  editMode: wc.Cell,
  filterDebounceMs: 150,
  filterMode: "client",
  hideFooter: !1,
  hideFooterPagination: !1,
  hideFooterRowCount: !1,
  hideFooterSelectedRowCount: !1,
  ignoreDiacritics: !1,
  ignoreValueFormatterDuringExport: !1,
  // TODO v8: Update to 'select'
  indeterminateCheckboxAction: "deselect",
  keepColumnPositionIfDraggedOutside: !1,
  keepNonExistentRowsSelected: !1,
  loading: !1,
  logger: console,
  logLevel: process.env.NODE_ENV === "production" ? "error" : "warn",
  pageSizeOptions: [25, 50, 100],
  pagination: !1,
  paginationMode: "client",
  resetPageOnSortFilter: !1,
  resizeThrottleMs: 60,
  rowBufferPx: 150,
  rowHeight: 52,
  rowPositionsDebounceMs: 166,
  rows: [],
  rowSelection: !0,
  rowSpacingType: "margin",
  showCellVerticalBorder: !1,
  showColumnVerticalBorder: !1,
  sortingMode: "client",
  sortingOrder: ["asc", "desc", null],
  throttleRowsMs: 0,
  unstable_rowSpanning: !1,
  virtualizeColumnsWithAutoRowHeight: !1
}, Ev = {
  width: 0,
  height: 0
}, FSe = {
  isReady: !1,
  root: Ev,
  viewportOuterSize: Ev,
  viewportInnerSize: Ev,
  contentSize: Ev,
  minimumSize: Ev,
  hasScrollX: !1,
  hasScrollY: !1,
  scrollbarSize: 0,
  headerHeight: 0,
  groupHeaderHeight: 0,
  headerFilterHeight: 0,
  rowWidth: 0,
  rowHeight: 0,
  columnsTotalWidth: 0,
  leftPinnedWidth: 0,
  rightPinnedWidth: 0,
  headersTotalHeight: 0,
  topContainerHeight: 0,
  bottomContainerHeight: 0
}, zSe = (e, t, n) => {
  const r = FSe, o = vy(n);
  return J({}, e, {
    dimensions: J({}, r, H4(t, n, o, wy(n)))
  });
}, B4 = en(po, dp, (e, t) => {
  const n = e.length;
  return n === 0 ? 0 : kv(t[n - 1] + e[n - 1].computedWidth, 1);
});
function BSe(e, t) {
  const n = vi(e, "useResizeContainer"), r = x.useRef(!1), o = x.useRef(Ev), s = Ze(e, wy), a = Ze(e, vy), c = Ze(e, B4), f = x.useRef(!0), {
    rowHeight: m,
    headerHeight: g,
    groupHeaderHeight: y,
    headerFilterHeight: w,
    headersTotalHeight: C,
    leftPinnedWidth: T,
    rightPinnedWidth: E
  } = H4(t, e, a, s), O = x.useRef(void 0), k = x.useCallback(() => gi(e.current.state), [e]), I = x.useCallback((W) => {
    e.current.setState((Y) => J({}, Y, {
      dimensions: W
    })), e.current.rootElementRef.current && DB(e.current.rootElementRef.current, gi(e.current.state));
  }, [e]), M = x.useCallback(() => {
    const W = e.current.mainElementRef.current;
    if (!W)
      return;
    const Y = Cl(W).getComputedStyle(W), ee = {
      width: parseFloat(Y.width) || 0,
      height: parseFloat(Y.height) || 0
    };
    (!O.current || !NB(O.current, ee)) && (e.current.publishEvent("resize", ee), O.current = ee);
  }, [e]), N = x.useCallback(() => {
    const W = gi(e.current.state);
    if (!W.isReady)
      return 0;
    const Y = qf(e);
    if (t.getRowHeight) {
      const G = PC(e), K = G.lastRowIndex - G.firstRowIndex;
      return Math.min(K - 1, Y.rows.length);
    }
    const ee = Math.floor(W.viewportInnerSize.height / m);
    return Math.min(ee, Y.rows.length);
  }, [e, t.getRowHeight, m]), P = x.useCallback(() => {
    var ge, fe;
    if (f.current)
      return;
    const W = HSe(e.current.mainElementRef.current, t.scrollbarSize), Y = Ey(e.current.state), ee = C + Y.pinnedTopRowsTotalHeight, G = Y.pinnedBottomRowsTotalHeight, X = {
      width: c - T - E,
      height: kv(Y.currentPageTotalHeight, 1)
    };
    let te, re, Q = !1, B = !1;
    if (t.autoHeight)
      B = !1, Q = Math.round(c) > Math.round(o.current.width), te = {
        width: o.current.width,
        height: ee + G + X.height
      }, re = {
        width: Math.max(0, te.width - (B ? W : 0)),
        height: Math.max(0, te.height - (Q ? W : 0))
      };
    else {
      te = {
        width: o.current.width,
        height: o.current.height
      }, re = {
        width: Math.max(0, te.width - T - E),
        height: Math.max(0, te.height - ee - G)
      };
      const pe = X, be = re, we = pe.width > be.width, _e = pe.height > be.height;
      (we || _e) && (B = _e, Q = pe.width + (B ? W : 0) > be.width, Q && (B = pe.height + W > be.height)), B && (re.width -= W), Q && (re.height -= W);
    }
    const ie = Math.max(te.width, c + (B ? W : 0)), de = {
      width: c,
      height: ee + X.height + G
    }, ue = {
      isReady: !0,
      root: o.current,
      viewportOuterSize: te,
      viewportInnerSize: re,
      contentSize: X,
      minimumSize: de,
      hasScrollX: Q,
      hasScrollY: B,
      scrollbarSize: W,
      headerHeight: g,
      groupHeaderHeight: y,
      headerFilterHeight: w,
      rowWidth: ie,
      rowHeight: m,
      columnsTotalWidth: c,
      leftPinnedWidth: T,
      rightPinnedWidth: E,
      headersTotalHeight: C,
      topContainerHeight: ee,
      bottomContainerHeight: G
    }, he = e.current.state.dimensions;
    Wf(he, ue) || (I(ue), NB(ue.viewportInnerSize, he.viewportInnerSize) || e.current.publishEvent("viewportInnerSizeChange", ue.viewportInnerSize), (fe = (ge = e.current).updateRenderContext) == null || fe.call(ge));
  }, [e, I, t.scrollbarSize, t.autoHeight, m, g, y, w, c, C, T, E]), F = jn(P), H = x.useMemo(() => t.resizeThrottleMs > 0 ? jSe(() => {
    F(), e.current.publishEvent("debouncedResize", o.current);
  }, t.resizeThrottleMs) : void 0, [e, t.resizeThrottleMs, F]);
  x.useEffect(() => H == null ? void 0 : H.clear, [H]);
  const U = {
    resize: M,
    getRootDimensions: k
  }, z = {
    updateDimensions: P,
    getViewportPageSize: N
  };
  Nr(P, [P]), Tn(e, U, "public"), Tn(e, z, "private");
  const A = x.useCallback((W) => {
    DB(W, gi(e.current.state));
  }, [e]), q = x.useCallback((W) => {
    if (o.current = W, W.height === 0 && !r.current && !t.autoHeight && !c_ && (n.error(["The parent DOM element of the Data Grid has an empty height.", "Please make sure that this element has an intrinsic height.", "The grid displays with a height of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), r.current = !0), W.width === 0 && !r.current && !c_ && (n.error(["The parent DOM element of the Data Grid has an empty width.", "Please make sure that this element has an intrinsic width.", "The grid displays with a width of 0px.", "", "More details: https://mui.com/r/x-data-grid-no-dimensions."].join(`
`)), r.current = !0), f.current || !H) {
      f.current = !1, P();
      return;
    }
    H();
  }, [P, t.autoHeight, H, n]);
  fr(e, "rootMount", A), fr(e, "resize", q), fr(e, "debouncedResize", t.onResize);
}
function DB(e, t) {
  const n = (r, o) => e.style.setProperty(r, o);
  n("--DataGrid-hasScrollX", `${Number(t.hasScrollX)}`), n("--DataGrid-hasScrollY", `${Number(t.hasScrollY)}`), n("--DataGrid-scrollbarSize", `${t.scrollbarSize}px`), n("--DataGrid-rowWidth", `${t.rowWidth}px`), n("--DataGrid-columnsTotalWidth", `${t.columnsTotalWidth}px`), n("--DataGrid-leftPinnedWidth", `${t.leftPinnedWidth}px`), n("--DataGrid-rightPinnedWidth", `${t.rightPinnedWidth}px`), n("--DataGrid-headerHeight", `${t.headerHeight}px`), n("--DataGrid-headersTotalHeight", `${t.headersTotalHeight}px`), n("--DataGrid-topContainerHeight", `${t.topContainerHeight}px`), n("--DataGrid-bottomContainerHeight", `${t.bottomContainerHeight}px`), n("--height", `${t.rowHeight}px`);
}
function H4(e, t, n, r) {
  const o = J5(e.rowHeight, aI.rowHeight, Hhe);
  return {
    rowHeight: Math.floor(o * n),
    headerHeight: Math.floor(e.columnHeaderHeight * n),
    groupHeaderHeight: Math.floor((e.columnGroupHeaderHeight ?? e.columnHeaderHeight) * n),
    headerFilterHeight: Math.floor((e.headerFilterHeight ?? e.columnHeaderHeight) * n),
    columnsTotalWidth: B4(t),
    headersTotalHeight: xO(t, e),
    leftPinnedWidth: r.left.reduce((s, a) => s + a.computedWidth, 0),
    rightPinnedWidth: r.right.reduce((s, a) => s + a.computedWidth, 0)
  };
}
const AB = /* @__PURE__ */ new WeakMap();
function HSe(e, t) {
  if (t !== void 0)
    return t;
  if (e === null)
    return 0;
  const n = AB.get(e);
  if (n !== void 0)
    return n;
  const o = ho(e).createElement("div");
  o.style.width = "99px", o.style.height = "99px", o.style.position = "absolute", o.style.overflow = "scroll", o.className = "scrollDiv", e.appendChild(o);
  const s = o.offsetWidth - o.clientWidth;
  return e.removeChild(o), AB.set(e, s), s;
}
function NB(e, t) {
  return e.width === t.width && e.height === t.height;
}
const VSe = typeof globalThis.ResizeObserver < "u" ? globalThis.ResizeObserver : class {
  observe() {
  }
  unobserve() {
  }
  disconnect() {
  }
}, USe = (e, t, n) => {
  n.current.caches.rowsMeta = {
    heights: /* @__PURE__ */ new Map()
  };
  const r = AD(n.current.state), o = EC(n), s = _C(n.current.state), a = Math.min(s.enabled ? s.paginationModel.pageSize : o, o);
  return J({}, e, {
    rowsMeta: {
      currentPageTotalHeight: a * r,
      positions: Array.from({
        length: a
      }, (c, f) => f * r),
      pinnedTopRowsTotalHeight: 0,
      pinnedBottomRowsTotalHeight: 0
    }
  });
}, WSe = (e, t) => {
  const {
    getRowHeight: n,
    getRowSpacing: r,
    getEstimatedRowHeight: o
  } = t, s = e.current.caches.rowsMeta.heights, a = x.useRef(-1), c = x.useRef(!1), f = x.useRef(!1), m = Ze(e, vy), g = YD(e), y = Ze(e, yy), w = Ze(e, AD), C = (A) => {
    let q = s.get(A);
    return q === void 0 && (q = {
      content: w,
      spacingTop: 0,
      spacingBottom: 0,
      detail: 0,
      autoHeight: !1,
      needsFirstMeasurement: !0
    }, s.set(A, q)), q;
  }, T = x.useCallback((A) => {
    const q = gi(e.current.state).rowHeight, W = e.current.getRowHeightEntry(A.id);
    if (!n)
      W.content = q, W.needsFirstMeasurement = !1;
    else {
      const Y = n(J({}, A, {
        densityFactor: m
      }));
      if (Y === "auto") {
        if (W.needsFirstMeasurement) {
          const ee = o ? o(J({}, A, {
            densityFactor: m
          })) : q;
          W.content = ee ?? q;
        }
        c.current = !0, W.autoHeight = !0;
      } else
        W.content = J5(Y, q, Vhe), W.needsFirstMeasurement = !1, W.autoHeight = !1;
    }
    if (r) {
      const Y = e.current.getRowIndexRelativeToVisibleRows(A.id), ee = r(J({}, A, {
        isFirstVisible: Y === 0,
        isLastVisible: Y === g.rows.length - 1,
        indexRelativeToCurrentPage: Y
      }));
      W.spacingTop = ee.top ?? 0, W.spacingBottom = ee.bottom ?? 0;
    } else
      W.spacingTop = 0, W.spacingBottom = 0;
    return e.current.unstable_applyPipeProcessors("rowHeight", W, A), W;
  }, [e, g.rows, n, o, w, r, m]), E = x.useCallback(() => {
    c.current = !1;
    const A = y.top.reduce((K, X) => {
      const te = T(X);
      return K + te.content + te.spacingTop + te.spacingBottom + te.detail;
    }, 0), q = y.bottom.reduce((K, X) => {
      const te = T(X);
      return K + te.content + te.spacingTop + te.spacingBottom + te.detail;
    }, 0), W = [], Y = g.rows.reduce((K, X) => {
      W.push(K);
      const te = T(X), re = te.content + te.spacingTop + te.spacingBottom + te.detail;
      return K + re;
    }, 0);
    c.current || (a.current = 1 / 0);
    const ee = A !== e.current.state.rowsMeta.pinnedTopRowsTotalHeight || q !== e.current.state.rowsMeta.pinnedBottomRowsTotalHeight || Y !== e.current.state.rowsMeta.currentPageTotalHeight, G = {
      currentPageTotalHeight: Y,
      positions: W,
      pinnedTopRowsTotalHeight: A,
      pinnedBottomRowsTotalHeight: q
    };
    e.current.setState((K) => J({}, K, {
      rowsMeta: G
    })), ee && e.current.updateDimensions(), f.current = !0;
  }, [e, y, g.rows, T]), O = (A) => {
    var q;
    return ((q = s.get(A)) == null ? void 0 : q.content) ?? w;
  }, k = (A, q) => {
    const W = e.current.getRowHeightEntry(A), Y = W.content !== q;
    W.needsFirstMeasurement = !1, W.content = q, f.current && (f.current = !Y);
  }, I = (A) => {
    var q;
    return ((q = s.get(A)) == null ? void 0 : q.autoHeight) ?? !1;
  }, M = () => a.current, N = (A) => {
    c.current && A > a.current && (a.current = A);
  }, P = () => {
    s.clear(), E();
  }, F = Ol(() => new VSe((A) => {
    var q;
    for (let W = 0; W < A.length; W += 1) {
      const Y = A[W], ee = Y.borderBoxSize && Y.borderBoxSize.length > 0 ? Y.borderBoxSize[0].blockSize : Y.contentRect.height, G = Y.target.__mui_id;
      if (((q = $W(e)) == null ? void 0 : q.id) === G && ee === 0)
        return;
      e.current.unstable_storeRowHeightMeasurement(G, ee);
    }
    f.current || requestAnimationFrame(() => {
      e.current.requestPipeProcessorsApplication("rowHeight");
    });
  })).current, H = (A, q) => (A.__mui_id = q, F.observe(A), () => F.unobserve(A));
  rA(e, "rowHeight", E), Nr(() => {
    E();
  }, [E]);
  const U = {
    unstable_getRowHeight: O,
    unstable_setLastMeasuredRowIndex: N,
    unstable_storeRowHeightMeasurement: k,
    resetRowHeights: P
  }, z = {
    hydrateRowsMeta: E,
    observeRowHeight: H,
    rowHasAutoHeight: I,
    getRowHeightEntry: C,
    getLastMeasuredRowIndex: M
  };
  Tn(e, U, "public"), Tn(e, z, "private");
}, GSe = (e) => {
  const t = x.useCallback((o = {}) => e.current.unstable_applyPipeProcessors("exportState", {}, o), [e]), n = x.useCallback((o) => {
    e.current.unstable_applyPipeProcessors("restoreState", {
      callbacks: []
    }, {
      stateToRestore: o
    }).callbacks.forEach((a) => {
      a();
    }), e.current.forceUpdate();
  }, [e]);
  Tn(e, {
    exportState: t,
    restoreState: n
  }, "public");
}, qSe = (e) => {
  const t = x.useRef({}), n = (c, f) => {
    var m;
    return (m = t.current[c]) == null ? void 0 : m[f];
  }, r = () => {
    t.current = {};
  }, o = x.useCallback(({
    rowId: c,
    minFirstColumn: f,
    maxLastColumn: m,
    columns: g
  }) => {
    for (let y = f; y < m; y += 1) {
      const w = KSe({
        apiRef: e,
        lookup: t.current,
        columnIndex: y,
        rowId: c,
        minFirstColumnIndex: f,
        maxLastColumnIndex: m,
        columns: g
      });
      w.colSpan > 1 && (y += w.colSpan - 1);
    }
  }, [e]), s = {
    unstable_getCellColSpanInfo: n
  }, a = {
    resetColSpan: r,
    calculateColSpan: o
  };
  Tn(e, s, "public"), Tn(e, a, "private"), Ot(e, "columnOrderChange", r);
};
function KSe(e) {
  const {
    apiRef: t,
    lookup: n,
    columnIndex: r,
    rowId: o,
    minFirstColumnIndex: s,
    maxLastColumnIndex: a,
    columns: c
  } = e, f = c.length, m = c[r], g = t.current.getRow(o), y = t.current.getRowValue(g, m), w = typeof m.colSpan == "function" ? m.colSpan(y, g, m, t) : m.colSpan;
  if (!w || w === 1)
    return VP(n, o, r, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: 1,
        width: m.computedWidth
      }
    }), {
      colSpan: 1
    };
  let C = m.computedWidth;
  for (let T = 1; T < w; T += 1) {
    const E = r + T;
    if (E >= s && E < a) {
      const O = c[E];
      C += O.computedWidth, VP(n, o, r + T, {
        spannedByColSpan: !0,
        rightVisibleCellIndex: Math.min(r + w, f - 1),
        leftVisibleCellIndex: r
      });
    }
    VP(n, o, r, {
      spannedByColSpan: !1,
      cellProps: {
        colSpan: w,
        width: C
      }
    });
  }
  return {
    colSpan: w
  };
}
function VP(e, t, n, r) {
  e[t] || (e[t] = {}), e[t][n] = r;
}
const V4 = (e, t, n) => {
  if (F5(e)) {
    if (n[e.field] !== void 0)
      throw new Error(["MUI X: columnGroupingModel contains duplicated field", `column field ${e.field} occurs two times in the grouping model:`, `- ${n[e.field].join(" > ")}`, `- ${t.join(" > ")}`].join(`
`));
    n[e.field] = t;
    return;
  }
  const {
    groupId: r,
    children: o
  } = e;
  o.forEach((s) => {
    V4(s, [...t, r], n);
  });
}, lI = (e) => {
  if (!e)
    return {};
  const t = {};
  return e.forEach((n) => {
    V4(n, [], t);
  }), t;
}, uI = (e, t, n) => {
  const r = (f) => t[f] ?? [], o = [], s = Math.max(...e.map((f) => r(f).length)), a = (f, m, g) => Wf(r(f).slice(0, g + 1), r(m).slice(0, g + 1)), c = (f, m) => !!(n != null && n.left && n.left.includes(f) && !n.left.includes(m) || n != null && n.right && !n.right.includes(f) && n.right.includes(m));
  for (let f = 0; f < s; f += 1) {
    const m = e.reduce((g, y) => {
      const w = r(y)[f] ?? null;
      if (g.length === 0)
        return [{
          columnFields: [y],
          groupId: w
        }];
      const C = g[g.length - 1], T = C.columnFields[C.columnFields.length - 1];
      return C.groupId !== w || !a(T, y, f) || // Fix for https://github.com/mui/mui-x/issues/7041
      c(T, y) ? [...g, {
        columnFields: [y],
        groupId: w
      }] : [...g.slice(0, g.length - 1), {
        columnFields: [...C.columnFields, y],
        groupId: w
      }];
    }, []);
    o.push(m);
  }
  return o;
}, YSe = ["groupId", "children"], oA = (e) => {
  let t = {};
  return e.forEach((n) => {
    if (F5(n))
      return;
    const {
      groupId: r,
      children: o
    } = n, s = qt(n, YSe);
    if (!r)
      throw new Error("MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.");
    process.env.NODE_ENV !== "production" && (o || console.warn(`MUI X: group groupId=${r} has no children.`));
    const a = J({}, s, {
      groupId: r
    }), c = oA(o);
    if (c[r] !== void 0 || t[r] !== void 0)
      throw new Error(`MUI X: The groupId ${r} is used multiple times in the columnGroupingModel.`);
    t = J({}, t, c, {
      [r]: a
    });
  }), J({}, t);
}, XSe = (e, t, n) => {
  if (!t.columnGroupingModel)
    return e;
  const r = Ed(n), o = by(n), s = oA(t.columnGroupingModel ?? []), a = lI(t.columnGroupingModel ?? []), c = uI(r, a, n.current.state.pinnedColumns ?? {}), f = o.length === 0 ? 0 : Math.max(...o.map((m) => {
    var g;
    return ((g = a[m]) == null ? void 0 : g.length) ?? 0;
  }));
  return J({}, e, {
    columnGrouping: {
      lookup: s,
      unwrappedGroupingModel: a,
      headerStructure: c,
      maxDepth: f
    }
  });
}, QSe = (e, t) => {
  const n = x.useCallback((c) => OW(e)[c] ?? [], [e]), r = x.useCallback(() => RW(e), [e]);
  Tn(e, {
    getColumnGroupPath: n,
    getAllGroupDetails: r
  }, "public");
  const s = x.useCallback(() => {
    const c = lI(t.columnGroupingModel ?? []);
    e.current.setState((f) => {
      var w;
      const m = ((w = f.columns) == null ? void 0 : w.orderedFields) ?? [], g = f.pinnedColumns ?? {}, y = uI(m, c, g);
      return J({}, f, {
        columnGrouping: J({}, f.columnGrouping, {
          headerStructure: y
        })
      });
    });
  }, [e, t.columnGroupingModel]), a = x.useCallback((c) => {
    var E, O;
    const f = ((O = (E = e.current).getPinnedColumns) == null ? void 0 : O.call(E)) ?? {}, m = Ed(e), g = by(e), y = oA(c ?? []), w = lI(c ?? []), C = uI(m, w, f), T = g.length === 0 ? 0 : Math.max(...g.map((k) => {
      var I;
      return ((I = w[k]) == null ? void 0 : I.length) ?? 0;
    }));
    e.current.setState((k) => J({}, k, {
      columnGrouping: {
        lookup: y,
        unwrappedGroupingModel: w,
        headerStructure: C,
        maxDepth: T
      }
    }));
  }, [e]);
  Ot(e, "columnIndexChange", s), Ot(e, "columnsChange", () => {
    a(t.columnGroupingModel);
  }), Ot(e, "columnVisibilityModelChange", () => {
    a(t.columnGroupingModel);
  }), x.useEffect(() => {
    a(t.columnGroupingModel);
  }, [a, t.columnGroupingModel]);
};
function JSe() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function LB(e, t) {
  if (t !== void 0 && e.changedTouches) {
    for (let n = 0; n < e.changedTouches.length; n += 1) {
      const r = e.changedTouches[n];
      if (r.identifier === t)
        return {
          x: r.clientX,
          y: r.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function $B(e, t, n, r) {
  let o = e;
  return r === "Right" ? o += t - n.left : o += n.right - t, o;
}
function ZSe(e, t, n) {
  return n === "Left" ? e - t.left : t.right - e;
}
function eCe(e) {
  return e === "Right" ? "Left" : "Right";
}
function tCe(e, t) {
  const n = e.classList.contains(se["columnSeparator--sideRight"]) ? "Right" : "Left";
  return t ? eCe(n) : n;
}
function jB(e) {
  e.preventDefault(), e.stopImmediatePropagation();
}
function nCe(e) {
  const t = x.useRef(void 0), n = () => NW(e), r = Ze(e, n);
  return x.useEffect(() => {
    t.current && r === !1 && (t.current.resolve(), t.current = void 0);
  }), () => {
    if (!t.current) {
      if (n() === !1)
        return Promise.resolve();
      t.current = JSe();
    }
    return t.current;
  };
}
function rCe(e, t) {
  if (e.length < 4)
    return e;
  const n = e.slice();
  n.sort((c, f) => c - f);
  const r = n[Math.floor(n.length * 0.25)], o = n[Math.floor(n.length * 0.75) - 1], s = o - r, a = s < 5 ? 5 : s * t;
  return n.filter((c) => c > r - a && c < o + a);
}
function oCe(e, t, n) {
  const r = {}, o = e.current.rootElementRef.current;
  return o.classList.add(se.autosizing), n.forEach((s) => {
    const c = xye(e.current, s.field).map((T) => T.getBoundingClientRect().width ?? 0), f = t.includeOutliers ? c : rCe(c, t.outliersFactor);
    if (t.includeHeaders) {
      const T = Cye(e.current, s.field);
      if (T) {
        const E = T.querySelector(`.${se.columnHeaderTitle}`), O = T.querySelector(`.${se.columnHeaderTitleContainerContent}`), k = T.querySelector(`.${se.iconButtonContainer}`), I = T.querySelector(`.${se.menuIcon}`), M = E ?? O, N = window.getComputedStyle(T, null), P = parseInt(N.paddingLeft, 10) + parseInt(N.paddingRight, 10), H = M.scrollWidth + 1 + P + ((k == null ? void 0 : k.clientWidth) ?? 0) + ((I == null ? void 0 : I.clientWidth) ?? 0);
        f.push(H);
      }
    }
    const m = s.minWidth !== -1 / 0 && s.minWidth !== void 0, g = s.maxWidth !== 1 / 0 && s.maxWidth !== void 0, y = m ? s.minWidth : 0, w = g ? s.maxWidth : 1 / 0, C = f.length === 0 ? 0 : Math.max(...f);
    r[s.field] = Aa(C, y, w);
  }), o.classList.remove(se.autosizing), r;
}
const iCe = (e) => J({}, e, {
  columnResize: {
    resizingColumnField: ""
  }
});
function sCe() {
  return {
    colDef: void 0,
    initialColWidth: 0,
    initialTotalWidth: 0,
    previousMouseClickEvent: void 0,
    columnHeaderElement: void 0,
    headerFilterElement: void 0,
    groupHeaderElements: [],
    cellElements: [],
    leftPinnedCellsAfter: [],
    rightPinnedCellsBefore: [],
    fillerLeft: void 0,
    fillerRight: void 0,
    leftPinnedHeadersAfter: [],
    rightPinnedHeadersBefore: []
  };
}
const aCe = (e, t) => {
  const n = xc(), r = vi(e, "useGridColumnResize"), o = Ol(sCe).current, s = x.useRef(null), a = x.useRef(null), c = Ma(), f = x.useRef(void 0), m = (z) => {
    var G, K;
    r.debug(`Updating width to ${z} for col ${o.colDef.field}`);
    const A = o.columnHeaderElement.offsetWidth, q = z - A, W = z - o.initialColWidth;
    if (W > 0) {
      const X = o.initialTotalWidth + W;
      (K = (G = e.current.rootElementRef) == null ? void 0 : G.current) == null || K.style.setProperty("--DataGrid-rowWidth", `${X}px`);
    }
    o.colDef.computedWidth = z, o.colDef.width = z, o.colDef.flex = 0, o.columnHeaderElement.style.width = `${z}px`;
    const Y = o.headerFilterElement;
    Y && (Y.style.width = `${z}px`), o.groupHeaderElements.forEach((X) => {
      const te = X;
      let re;
      te.getAttribute("aria-colspan") === "1" ? re = `${z}px` : re = `${te.offsetWidth + q}px`, te.style.width = re;
    }), o.cellElements.forEach((X) => {
      const te = X;
      let re;
      te.getAttribute("aria-colspan") === "1" ? re = `${z}px` : re = `${te.offsetWidth + q}px`, te.style.setProperty("--width", re);
    });
    const ee = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, o.colDef.field);
    ee === Df.LEFT && (bv(o.fillerLeft, "width", q), o.leftPinnedCellsAfter.forEach((X) => {
      bv(X, "left", q);
    }), o.leftPinnedHeadersAfter.forEach((X) => {
      bv(X, "left", q);
    })), ee === Df.RIGHT && (bv(o.fillerRight, "width", q), o.rightPinnedCellsBefore.forEach((X) => {
      bv(X, "right", q);
    }), o.rightPinnedHeadersBefore.forEach((X) => {
      bv(X, "right", q);
    }));
  }, g = (z) => {
    if (k(), o.previousMouseClickEvent) {
      const A = o.previousMouseClickEvent, q = A.timeStamp, W = A.clientX, Y = A.clientY;
      if (z.timeStamp - q < 300 && z.clientX === W && z.clientY === Y) {
        o.previousMouseClickEvent = void 0, e.current.publishEvent("columnResizeStop", null, z);
        return;
      }
    }
    if (o.colDef) {
      e.current.setColumnWidth(o.colDef.field, o.colDef.width), r.debug(`Updating col ${o.colDef.field} with new width: ${o.colDef.width}`);
      const A = gc(e.current.state);
      o.groupHeaderElements.forEach((q) => {
        const W = mye(q), Y = q, G = `${W.reduce((K, X) => A.columnVisibilityModel[X] !== !1 ? K + A.lookup[X].computedWidth : K, 0)}px`;
        Y.style.width = G;
      });
    }
    c.start(0, () => {
      e.current.publishEvent("columnResizeStop", null, z);
    });
  }, y = (z, A, q) => {
    var G;
    const W = e.current.rootElementRef.current;
    o.initialColWidth = z.computedWidth, o.initialTotalWidth = e.current.getRootDimensions().rowWidth, o.colDef = z, o.columnHeaderElement = hye(e.current.columnHeadersContainerRef.current, z.field);
    const Y = W.querySelector(`.${se.headerFilterRow} [data-field="${Pd(z.field)}"]`);
    Y && (o.headerFilterElement = Y), o.groupHeaderElements = gye((G = e.current.columnHeadersContainerRef) == null ? void 0 : G.current, z.field), o.cellElements = vye(o.columnHeaderElement, e.current), o.fillerLeft = pB(e.current, n ? "filler--pinnedRight" : "filler--pinnedLeft"), o.fillerRight = pB(e.current, n ? "filler--pinnedLeft" : "filler--pinnedRight");
    const ee = e.current.unstable_applyPipeProcessors("isColumnPinned", !1, o.colDef.field);
    o.leftPinnedCellsAfter = ee !== Df.LEFT ? [] : yye(e.current, o.columnHeaderElement, n), o.rightPinnedCellsBefore = ee !== Df.RIGHT ? [] : bye(e.current, o.columnHeaderElement, n), o.leftPinnedHeadersAfter = ee !== Df.LEFT ? [] : wye(e.current, o.columnHeaderElement, n), o.rightPinnedHeadersBefore = ee !== Df.RIGHT ? [] : Sye(e.current, o.columnHeaderElement, n), a.current = tCe(A, n), s.current = ZSe(q, o.columnHeaderElement.getBoundingClientRect(), a.current);
  }, w = jn(g), C = jn((z) => {
    if (z.buttons === 0) {
      w(z);
      return;
    }
    let A = $B(s.current, z.clientX, o.columnHeaderElement.getBoundingClientRect(), a.current);
    A = Aa(A, o.colDef.minWidth, o.colDef.maxWidth), m(A);
    const q = {
      element: o.columnHeaderElement,
      colDef: o.colDef,
      width: A
    };
    e.current.publishEvent("columnResize", q, z);
  }), T = jn((z) => {
    LB(z, f.current) && g(z);
  }), E = jn((z) => {
    const A = LB(z, f.current);
    if (!A)
      return;
    if (z.type === "mousemove" && z.buttons === 0) {
      T(z);
      return;
    }
    let q = $B(s.current, A.x, o.columnHeaderElement.getBoundingClientRect(), a.current);
    q = Aa(q, o.colDef.minWidth, o.colDef.maxWidth), m(q);
    const W = {
      element: o.columnHeaderElement,
      colDef: o.colDef,
      width: q
    };
    e.current.publishEvent("columnResize", W, z);
  }), O = jn((z) => {
    const A = d_(z.target, se["columnSeparator--resizable"]);
    if (!A)
      return;
    const q = z.changedTouches[0];
    q != null && (f.current = q.identifier);
    const W = d_(z.target, se.columnHeader), Y = pye(W), ee = e.current.getColumn(Y);
    r.debug(`Start Resize on col ${ee.field}`), e.current.publishEvent("columnResizeStart", {
      field: Y
    }, z), y(ee, A, q.clientX);
    const G = ho(z.currentTarget);
    G.addEventListener("touchmove", E), G.addEventListener("touchend", T);
  }), k = x.useCallback(() => {
    const z = ho(e.current.rootElementRef.current);
    z.body.style.removeProperty("cursor"), z.removeEventListener("mousemove", C), z.removeEventListener("mouseup", w), z.removeEventListener("touchmove", E), z.removeEventListener("touchend", T), setTimeout(() => {
      z.removeEventListener("click", jB, !0);
    }, 100), o.columnHeaderElement && (o.columnHeaderElement.style.pointerEvents = "unset");
  }, [e, o, C, w, E, T]), I = x.useCallback(({
    field: z
  }) => {
    e.current.setState((A) => J({}, A, {
      columnResize: J({}, A.columnResize, {
        resizingColumnField: z
      })
    })), e.current.forceUpdate();
  }, [e]), M = x.useCallback(() => {
    e.current.setState((z) => J({}, z, {
      columnResize: J({}, z.columnResize, {
        resizingColumnField: ""
      })
    })), e.current.forceUpdate();
  }, [e]), N = jn(({
    colDef: z
  }, A) => {
    if (A.button !== 0 || !A.currentTarget.classList.contains(se["columnSeparator--resizable"]))
      return;
    A.preventDefault(), r.debug(`Start Resize on col ${z.field}`), e.current.publishEvent("columnResizeStart", {
      field: z.field
    }, A), y(z, A.currentTarget, A.clientX);
    const q = ho(e.current.rootElementRef.current);
    q.body.style.cursor = "col-resize", o.previousMouseClickEvent = A.nativeEvent, q.addEventListener("mousemove", C), q.addEventListener("mouseup", w), q.addEventListener("click", jB, !0);
  }), P = jn((z, A) => {
    if (t.disableAutosize || A.button !== 0)
      return;
    const q = e.current.state.columns.lookup[z.field];
    q.resizable !== !1 && e.current.autosizeColumns(J({}, t.autosizeOptions, {
      disableColumnVirtualization: !1,
      columns: [q.field]
    }));
  }), F = nCe(e), H = x.useRef(!1), U = x.useCallback(async (z) => {
    var ee;
    if (!((ee = e.current.rootElementRef) == null ? void 0 : ee.current) || H.current)
      return;
    H.current = !0;
    const q = gc(e.current.state), W = J({}, uve, z, {
      columns: (z == null ? void 0 : z.columns) ?? q.orderedFields
    });
    W.columns = W.columns.filter((G) => q.columnVisibilityModel[G] !== !1);
    const Y = W.columns.map((G) => e.current.state.columns.lookup[G]);
    try {
      !t.disableVirtualization && W.disableColumnVirtualization && (e.current.unstable_setColumnVirtualization(!1), await F());
      const G = oCe(e, W, Y), K = Y.map((X) => J({}, X, {
        width: G[X.field],
        computedWidth: G[X.field],
        flex: 0
      }));
      if (W.expand) {
        const te = q.orderedFields.map((ie) => q.lookup[ie]).filter((ie) => q.columnVisibilityModel[ie.field] !== !1).reduce((ie, de) => ie + (G[de.field] ?? de.computedWidth ?? de.width), 0), B = e.current.getRootDimensions().viewportInnerSize.width - te;
        if (B > 0) {
          const ie = B / (K.length || 1);
          K.forEach((de) => {
            de.width += ie, de.computedWidth += ie;
          });
        }
      }
      e.current.updateColumns(K), K.forEach((X, te) => {
        if (X.width !== Y[te].width) {
          const re = X.width;
          e.current.publishEvent("columnWidthChange", {
            element: e.current.getColumnHeaderElement(X.field),
            colDef: X,
            width: re
          });
        }
      });
    } finally {
      t.disableVirtualization || e.current.unstable_setColumnVirtualization(!0), H.current = !1;
    }
  }, [e, F, t.disableVirtualization]);
  x.useEffect(() => k, [k]), LI(() => {
    t.autosizeOnMount && Promise.resolve().then(() => {
      e.current.autosizeColumns(t.autosizeOptions);
    });
  }), fW(e, () => {
    var z;
    return (z = e.current.columnHeadersContainerRef) == null ? void 0 : z.current;
  }, "touchstart", O, {
    passive: !0
  }), Tn(e, {
    autosizeColumns: U
  }, "public"), Ot(e, "columnResizeStop", M), Ot(e, "columnResizeStart", I), Ot(e, "columnSeparatorMouseDown", N), Ot(e, "columnSeparatorDoubleClick", P), fr(e, "columnResize", t.onColumnResize), fr(e, "columnWidthChange", t.onColumnWidthChange);
};
function bv(e, t, n) {
  e && (e.style[t] = `${parseInt(e.style[t], 10) + n}px`);
}
function lCe(e, t) {
  return e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? null : e.firstRowIndex >= t.firstRowIndex && e.lastRowIndex > t.lastRowIndex ? {
    firstRowIndex: t.lastRowIndex,
    lastRowIndex: e.lastRowIndex
  } : e.firstRowIndex < t.firstRowIndex && e.lastRowIndex <= t.lastRowIndex ? {
    firstRowIndex: e.firstRowIndex,
    lastRowIndex: t.firstRowIndex - 1
  } : e;
}
function FB(e) {
  return e.firstRowIndex !== 0 || e.lastRowIndex !== 0;
}
const UP = (e, t, n) => {
  if (!e)
    return null;
  let r = e[t.field];
  const o = t.rowSpanValueGetter ?? t.valueGetter;
  return o && (r = o(r, e, t, n)), r;
}, Pv = {
  spannedCells: {},
  hiddenCells: {},
  hiddenCellOriginMap: {}
}, g_ = {
  firstRowIndex: 0,
  lastRowIndex: 0
}, uCe = /* @__PURE__ */ new Set([cl, "__reorder__", yO]), zB = 20, U4 = (e, t, n, r, o, s, a) => {
  const c = s ? {} : J({}, e.current.state.rowSpanning.spannedCells), f = s ? {} : J({}, e.current.state.rowSpanning.hiddenCells), m = s ? {} : J({}, e.current.state.rowSpanning.hiddenCellOriginMap);
  return s && (a = g_), t.forEach((g) => {
    var y;
    if (!uCe.has(g.field)) {
      for (let w = o.firstRowIndex; w < o.lastRowIndex; w += 1) {
        const C = n[w];
        if ((y = f[C.id]) != null && y[g.field])
          continue;
        const T = UP(C.model, g, e);
        if (T == null)
          continue;
        let E = C.id, O = w, k = 0;
        const I = [];
        if (w === o.firstRowIndex) {
          let N = w - 1, P = n[N];
          for (; N >= r.firstRowIndex && P && UP(P.model, g, e) === T; ) {
            const F = n[N + 1];
            f[F.id] ? f[F.id][g.field] = !0 : f[F.id] = {
              [g.field]: !0
            }, I.push(w), k += 1, E = P.id, O = N, N -= 1, P = n[N];
          }
        }
        I.forEach((N) => {
          m[N] ? m[N][g.field] = O : m[N] = {
            [g.field]: O
          };
        });
        let M = w + 1;
        for (; M <= r.lastRowIndex && n[M] && UP(n[M].model, g, e) === T; ) {
          const N = n[M];
          f[N.id] ? f[N.id][g.field] = !0 : f[N.id] = {
            [g.field]: !0
          }, m[M] ? m[M][g.field] = O : m[M] = {
            [g.field]: O
          }, M += 1, k += 1;
        }
        k > 0 && (c[E] ? c[E][g.field] = k + 1 : c[E] = {
          [g.field]: k + 1
        });
      }
      a = {
        firstRowIndex: Math.min(a.firstRowIndex, o.firstRowIndex),
        lastRowIndex: Math.max(a.lastRowIndex, o.lastRowIndex)
      };
    }
  }), {
    spannedCells: c,
    hiddenCells: f,
    hiddenCellOriginMap: m,
    processedRange: a
  };
}, W4 = (e, t) => {
  const n = uS(t).length;
  if (e.pagination) {
    const r = vW(t);
    let o = zB;
    return r > 0 && (o = r - 1), {
      firstRowIndex: 0,
      lastRowIndex: Math.min(o, n)
    };
  }
  return {
    firstRowIndex: 0,
    lastRowIndex: Math.min(zB, n)
  };
}, cCe = (e, t, n) => {
  var T;
  if (!t.unstable_rowSpanning)
    return J({}, e, {
      rowSpanning: Pv
    });
  const r = e.rows.dataRowIds || [], o = e.columns.orderedFields || [], s = e.rows.dataRowIdToModelLookup, a = e.columns.lookup, c = !!e.filter.filterModel.items.length || !!((T = e.filter.filterModel.quickFilterValues) != null && T.length);
  if (!r.length || !o.length || !s || !a || c)
    return J({}, e, {
      rowSpanning: Pv
    });
  const f = W4(t, n), m = r.map((E) => ({
    id: E,
    model: s[E]
  })), g = o.map((E) => a[E]), {
    spannedCells: y,
    hiddenCells: w,
    hiddenCellOriginMap: C
  } = U4(n, g, m, f, f, !0, g_);
  return J({}, e, {
    rowSpanning: {
      spannedCells: y,
      hiddenCells: w,
      hiddenCellOriginMap: C
    }
  });
}, dCe = (e, t) => {
  const n = Ol(() => e.current.state.rowSpanning !== Pv ? W4(t, e) : g_), r = x.useCallback((s, a = !1) => {
    const {
      range: c,
      rows: f
    } = qf(e, {
      pagination: t.pagination,
      paginationMode: t.paginationMode
    });
    if (c === null || !FB(s))
      return;
    a && (n.current = g_);
    const m = lCe({
      firstRowIndex: s.firstRowIndex,
      lastRowIndex: Math.min(s.lastRowIndex, c.lastRowIndex + 1)
    }, n.current);
    if (m === null)
      return;
    const g = po(e), {
      spannedCells: y,
      hiddenCells: w,
      hiddenCellOriginMap: C,
      processedRange: T
    } = U4(e, g, f, c, m, a, n.current);
    n.current = T;
    const E = Object.keys(y).length, O = Object.keys(w).length, k = Object.keys(e.current.state.rowSpanning.spannedCells).length, I = Object.keys(e.current.state.rowSpanning.hiddenCells).length;
    !(a || E !== k || O !== I) || E === 0 && k === 0 || e.current.setState((P) => J({}, P, {
      rowSpanning: {
        spannedCells: y,
        hiddenCells: w,
        hiddenCellOriginMap: C
      }
    }));
  }, [e, n, t.pagination, t.paginationMode]), o = x.useCallback(() => {
    const s = PC(e);
    FB(s) && r(s, !0);
  }, [e, r]);
  Ot(e, "renderedRowsIntervalChange", Wh(t.unstable_rowSpanning, r)), Ot(e, "sortedRowsSet", Wh(t.unstable_rowSpanning, o)), Ot(e, "paginationModelChange", Wh(t.unstable_rowSpanning, o)), Ot(e, "filteredRowsSet", Wh(t.unstable_rowSpanning, o)), Ot(e, "columnsChange", Wh(t.unstable_rowSpanning, o)), x.useEffect(() => {
    t.unstable_rowSpanning ? e.current.state.rowSpanning === Pv && o() : e.current.state.rowSpanning !== Pv && e.current.setState((s) => J({}, s, {
      rowSpanning: Pv
    }));
  }, [e, o, t.unstable_rowSpanning]);
}, fCe = (e, t, n) => J({}, e, {
  listViewColumn: t.unstable_listColumn ? J({}, t.unstable_listColumn, {
    computedWidth: cI(n)
  }) : void 0
});
function pCe(e, t) {
  const n = () => {
    e.current.setState((s) => s.listViewColumn ? J({}, s, {
      listViewColumn: J({}, s.listViewColumn, {
        computedWidth: cI(e)
      })
    }) : s);
  }, r = x.useRef(null);
  Ot(e, "viewportInnerSizeChange", (s) => {
    r.current !== s.width && (r.current = s.width, n());
  }), Ot(e, "columnVisibilityModelChange", n), Nr(() => {
    const s = t.unstable_listColumn;
    s && e.current.setState((a) => J({}, a, {
      listViewColumn: J({}, s, {
        computedWidth: cI(e)
      })
    }));
  }, [e, t.unstable_listColumn]), x.useEffect(() => {
    t.unstable_listView && !t.unstable_listColumn && yl(["MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.", 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: "example", renderCell: (params) => <div>{params.row.id}</div> }`.', "For more details, see https://mui.com/x/react-data-grid/list-view/"]);
  }, [t.unstable_listView, t.unstable_listColumn]);
}
function cI(e) {
  return gi(e.current.state).viewportInnerSize.width;
}
const hCe = (e, t) => {
  const n = Lwe(e, t);
  return DSe(n, t), RSe(n), pi(Awe, n, t), pi(PSe, n, t), pi(Uwe, n, t), pi(xSe, n, t), pi(dSe, n, t), pi(SSe, n, t), pi(oSe, n, t), pi(ASe, n, t), pi(pSe, n, t), pi(eSe, n, t), pi(cCe, n, t), pi(Gwe, n, t), pi(iCe, n, t), pi(Hwe, n, t), pi(XSe, n, t), pi(xge, n, t), pi(zSe, n, t), pi(USe, n, t), pi(fCe, n, t), lSe(n, t), MSe(n, t), Wwe(n, t), ESe(n, t), dCe(n, t), kSe(n, t), qSe(n), QSe(n, t), CSe(n, t), iSe(n, t), hSe(n, t), rSe(n, t), NSe(n, t), qwe(n, t), aCe(n, t), fSe(n, t), WSe(n, t), LSe(n, t), Vwe(n), Ywe(n, t), Zwe(n, t), Bwe(n, t), BSe(n, t), $Se(n, t), GSe(n), Ege(n, t), pCe(n, t), n;
}, mCe = (e) => {
  const {
    classes: t,
    headerAlign: n,
    isDragging: r,
    isLastColumn: o,
    showLeftBorder: s,
    showRightBorder: a,
    groupId: c,
    pinnedPosition: f
  } = e, m = {
    root: ["columnHeader", n === "left" && "columnHeader--alignLeft", n === "center" && "columnHeader--alignCenter", n === "right" && "columnHeader--alignRight", r && "columnHeader--moving", a && "columnHeader--withRightBorder", s && "columnHeader--withLeftBorder", "withBorderColor", c === null ? "columnHeader--emptyGroup" : "columnHeader--filledGroup", f === Nn.LEFT && "columnHeader--pinnedLeft", f === Nn.RIGHT && "columnHeader--pinnedRight", o && "columnHeader--last"],
    draggableContainer: ["columnHeaderDraggableContainer"],
    titleContainer: ["columnHeaderTitleContainer", "withBorderColor"],
    titleContainerContent: ["columnHeaderTitleContainerContent"]
  };
  return mt(m, zn, t);
};
function gCe(e) {
  var te;
  const {
    groupId: t,
    width: n,
    depth: r,
    maxDepth: o,
    fields: s,
    height: a,
    colIndex: c,
    hasFocus: f,
    tabIndex: m,
    isLastColumn: g,
    pinnedPosition: y,
    pinnedOffset: w
  } = e, C = Lt(), T = xc(), E = x.useRef(null), O = On(), k = Ze(O, RW), I = t ? k[t] : {}, {
    headerName: M = t ?? "",
    description: N = "",
    headerAlign: P = void 0
  } = I;
  let F;
  const H = t && ((te = k[t]) == null ? void 0 : te.renderHeaderGroup), U = x.useMemo(() => ({
    groupId: t,
    headerName: M,
    description: N,
    depth: r,
    maxDepth: o,
    fields: s,
    colIndex: c,
    isLastColumn: g
  }), [t, M, N, r, o, s, c, g]);
  t && H && (F = H(U));
  const z = J({}, e, {
    classes: C.classes,
    headerAlign: P,
    depth: r,
    isDragging: !1
  }), A = M ?? t, q = pr(), W = t === null ? `empty-group-cell-${q}` : t, Y = mCe(z);
  x.useLayoutEffect(() => {
    if (f) {
      const Q = E.current.querySelector('[tabindex="0"]') || E.current;
      Q == null || Q.focus();
    }
  }, [O, f]);
  const ee = x.useCallback(
    (re) => (Q) => {
      MC(Q) || O.current.publishEvent(re, U, Q);
    },
    // For now this is stupid, because renderParams change all the time.
    // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters
    [O, U]
  ), G = x.useMemo(() => ({
    onKeyDown: ee("columnGroupHeaderKeyDown"),
    onFocus: ee("columnGroupHeaderFocus"),
    onBlur: ee("columnGroupHeaderBlur")
  }), [ee]), K = typeof I.headerClassName == "function" ? I.headerClassName(U) : I.headerClassName, X = x.useMemo(() => TO(J({}, e.style), T, y, w), [y, w, e.style, T]);
  return /* @__PURE__ */ $.jsx(r4, J({
    ref: E,
    classes: Y,
    columnMenuOpen: !1,
    colIndex: c,
    height: a,
    isResizing: !1,
    sortDirection: null,
    hasFocus: !1,
    tabIndex: m,
    isDraggable: !1,
    headerComponent: F,
    headerClassName: K,
    description: N,
    elementId: W,
    width: n,
    columnMenuIconButton: null,
    columnTitleIconButtons: null,
    resizable: !1,
    label: A,
    "aria-colspan": s.length,
    "data-fields": `|-${s.join("-|-")}-|`,
    style: X
  }, G));
}
const BB = Ue("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaderRow",
  overridesResolver: (e, t) => t.columnHeaderRow
})({
  display: "flex"
}), vCe = (e) => {
  const {
    visibleColumns: t,
    sortColumnLookup: n,
    filterColumnLookup: r,
    columnHeaderTabIndexState: o,
    columnGroupHeaderTabIndexState: s,
    columnHeaderFocus: a,
    columnGroupHeaderFocus: c,
    headerGroupingMaxDepth: f,
    columnMenuState: m,
    columnVisibility: g,
    columnGroupsHeaderStructure: y,
    hasOtherElementInTabSequence: w
  } = e, [C, T] = x.useState(""), [E, O] = x.useState(""), k = $a(), I = Lt(), M = Ze(k, OW), N = Ze(k, dp), P = Ze(k, Cge), F = Ze(k, wy), H = Ze(k, kd), U = jW(N, P, F.left.length), z = Ze(k, hO), A = Ze(k, P5), q = Ze(k, Bpe), W = Ze(k, Hpe), Y = Ze(k, M5), ee = x.useCallback((ge) => O(ge.field), []), G = x.useCallback(() => O(""), []), K = x.useCallback((ge) => T(ge.field), []), X = x.useCallback(() => T(""), []), te = x.useMemo(() => F.left.length ? {
    firstColumnIndex: 0,
    lastColumnIndex: F.left.length
  } : null, [F.left.length]), re = x.useMemo(() => F.right.length ? {
    firstColumnIndex: t.length - F.right.length,
    lastColumnIndex: t.length
  } : null, [F.right.length, t.length]);
  Ot(k, "columnResizeStart", ee), Ot(k, "columnResizeStop", G), Ot(k, "columnHeaderDragStart", K), Ot(k, "columnHeaderDragEnd", X);
  const Q = (ge) => {
    const {
      renderContext: fe = P
    } = ge || {}, pe = fe.firstColumnIndex, be = fe.lastColumnIndex;
    return {
      renderedColumns: t.slice(pe, be),
      firstColumnToRender: pe,
      lastColumnToRender: be
    };
  }, B = (ge, fe, pe, be = !1) => {
    const we = (ge == null ? void 0 : ge.position) === Nn.RIGHT, _e = (ge == null ? void 0 : ge.position) === void 0, ce = F.right.length > 0 && we || F.right.length === 0 && _e, Ce = U - pe;
    return /* @__PURE__ */ $.jsxs(x.Fragment, {
      children: [_e && /* @__PURE__ */ $.jsx("div", {
        role: "presentation",
        style: {
          width: Ce
        }
      }), fe, _e && /* @__PURE__ */ $.jsx("div", {
        role: "presentation",
        className: et(se.filler, be && se["filler--borderBottom"])
      }), ce && /* @__PURE__ */ $.jsx(tA, {
        header: !0,
        pinnedRight: we,
        borderBottom: be,
        borderTop: !1
      })]
    });
  }, ie = (ge, fe = {}) => {
    const {
      renderedColumns: pe,
      firstColumnToRender: be
    } = Q(ge), we = [];
    for (let _e = 0; _e < pe.length; _e += 1) {
      const ce = pe[_e], Ce = be + _e, Ne = Ce === 0, Be = o !== null && o.field === ce.field || Ne && !w ? 0 : -1, tt = a !== null && a.field === ce.field, $e = m.open && m.field === ce.field, rt = ge == null ? void 0 : ge.position, ot = _S(rt, ce.computedWidth, Ce, N, z, Y), wt = rt === Nn.RIGHT ? pe[_e - 1] : pe[_e + 1], gt = wt ? a !== null && a.field === wt.field : !1, nt = Ce + 1 === N.length - F.right.length, Ft = _e, ut = pe.length, Et = h_(rt, Ft), Tt = p_(rt, Ft, ut, I.showColumnVerticalBorder, A);
      we.push(/* @__PURE__ */ $.jsx(Dye, J({}, n[ce.field], {
        columnMenuOpen: $e,
        filterItemsCounter: r[ce.field] && r[ce.field].length,
        headerHeight: q,
        isDragging: ce.field === C,
        colDef: ce,
        colIndex: Ce,
        isResizing: E === ce.field,
        isLast: Ce === N.length - 1,
        hasFocus: tt,
        tabIndex: Be,
        pinnedPosition: rt,
        pinnedOffset: ot,
        isLastUnpinned: nt,
        isSiblingFocused: gt,
        showLeftBorder: Et,
        showRightBorder: Tt
      }, fe), ce.field));
    }
    return B(ge, we, 0);
  }, de = () => /* @__PURE__ */ $.jsxs(BB, {
    role: "row",
    "aria-rowindex": f + 1,
    ownerState: I,
    className: se["row--borderBottom"],
    children: [te && ie({
      position: Nn.LEFT,
      renderContext: te
    }, {
      disableReorder: !0
    }), ie({
      renderContext: P
    }), re && ie({
      position: Nn.RIGHT,
      renderContext: re
    }, {
      disableReorder: !0,
      separatorSide: ZD.Left
    })]
  }), ue = ({
    depth: ge,
    params: fe
  }) => {
    var ut, Et;
    const pe = Q(fe);
    if (pe.renderedColumns.length === 0)
      return null;
    const {
      firstColumnToRender: be,
      lastColumnToRender: we
    } = pe, _e = y[ge], ce = t[be].field, Ce = ((ut = M[ce]) == null ? void 0 : ut[ge]) ?? null, Ne = _e.findIndex(({
      groupId: Tt,
      columnFields: At
    }) => Tt === Ce && At.includes(ce)), Be = t[we - 1].field, tt = ((Et = M[Be]) == null ? void 0 : Et[ge]) ?? null, $e = _e.findIndex(({
      groupId: Tt,
      columnFields: At
    }) => Tt === tt && At.includes(Be)), rt = _e.slice(Ne, $e + 1).map((Tt) => J({}, Tt, {
      columnFields: Tt.columnFields.filter((At) => g[At] !== !1)
    })).filter((Tt) => Tt.columnFields.length > 0), ot = rt[0].columnFields.indexOf(ce), gt = rt[0].columnFields.slice(0, ot).reduce((Tt, At) => {
      const vt = H[At];
      return Tt + (vt.computedWidth ?? 0);
    }, 0);
    let nt = be;
    const Ft = rt.map(({
      groupId: Tt,
      columnFields: At
    }, vt) => {
      const Xe = c !== null && c.depth === ge && At.includes(c.field), Oe = s !== null && s.depth === ge && At.includes(s.field) ? 0 : -1, Ie = {
        width: At.reduce((bt, We) => bt + H[We].computedWidth, 0),
        fields: At,
        colIndex: nt
      }, pt = fe.position, yt = _S(pt, Ie.width, nt, N, z, Y);
      nt += At.length;
      let zt = vt;
      return pt === Nn.LEFT && (zt = nt - 1), /* @__PURE__ */ $.jsx(gCe, {
        groupId: Tt,
        width: Ie.width,
        fields: Ie.fields,
        colIndex: Ie.colIndex,
        depth: ge,
        isLastColumn: vt === rt.length - 1,
        maxDepth: f,
        height: W,
        hasFocus: Xe,
        tabIndex: Oe,
        pinnedPosition: pt,
        pinnedOffset: yt,
        showLeftBorder: h_(pt, zt),
        showRightBorder: p_(pt, zt, rt.length, I.showColumnVerticalBorder, A)
      }, vt);
    });
    return B(fe, Ft, gt);
  };
  return {
    renderContext: P,
    leftRenderContext: te,
    rightRenderContext: re,
    pinnedColumns: F,
    visibleColumns: t,
    columnPositions: N,
    getFillers: B,
    getColumnHeadersRow: de,
    getColumnsToRender: Q,
    getColumnGroupHeadersRows: () => {
      if (f === 0)
        return null;
      const ge = [];
      for (let fe = 0; fe < f; fe += 1)
        ge.push(/* @__PURE__ */ $.jsxs(BB, {
          role: "row",
          "aria-rowindex": fe + 1,
          ownerState: I,
          children: [te && ue({
            depth: fe,
            params: {
              position: Nn.LEFT,
              renderContext: te,
              maxLastColumn: te.lastColumnIndex
            }
          }), ue({
            depth: fe,
            params: {
              renderContext: P
            }
          }), re && ue({
            depth: fe,
            params: {
              position: Nn.RIGHT,
              renderContext: re,
              maxLastColumn: re.lastColumnIndex
            }
          })]
        }, fe));
      return ge;
    },
    getPinnedCellOffset: _S,
    isDragging: !!C,
    getInnerProps: () => ({
      role: "rowgroup"
    })
  };
}, yCe = ["className"], bCe = (e) => {
  const {
    classes: t
  } = e;
  return mt({
    root: ["columnHeaders"]
  }, zn, t);
}, wCe = Lr("div", {
  name: "MuiDataGrid",
  slot: "ColumnHeaders",
  overridesResolver: (e, t) => t.columnHeaders
})({
  display: "flex",
  flexDirection: "column",
  borderTopLeftRadius: "var(--unstable_DataGrid-radius)",
  borderTopRightRadius: "var(--unstable_DataGrid-radius)"
}), SCe = Yn(function(t, n) {
  const {
    className: r
  } = t, o = qt(t, yCe), s = Lt(), a = bCe(s);
  return /* @__PURE__ */ $.jsx(wCe, J({
    className: et(a.root, r),
    ownerState: s
  }, o, {
    role: "presentation",
    ref: n
  }));
}), CCe = ["className", "visibleColumns", "sortColumnLookup", "filterColumnLookup", "columnHeaderTabIndexState", "columnGroupHeaderTabIndexState", "columnHeaderFocus", "columnGroupHeaderFocus", "headerGroupingMaxDepth", "columnMenuState", "columnVisibility", "columnGroupsHeaderStructure", "hasOtherElementInTabSequence"], G4 = Yn(function(t, n) {
  const {
    visibleColumns: r,
    sortColumnLookup: o,
    filterColumnLookup: s,
    columnHeaderTabIndexState: a,
    columnGroupHeaderTabIndexState: c,
    columnHeaderFocus: f,
    columnGroupHeaderFocus: m,
    headerGroupingMaxDepth: g,
    columnMenuState: y,
    columnVisibility: w,
    columnGroupsHeaderStructure: C,
    hasOtherElementInTabSequence: T
  } = t, E = qt(t, CCe), {
    getInnerProps: O,
    getColumnHeadersRow: k,
    getColumnGroupHeadersRows: I
  } = vCe({
    visibleColumns: r,
    sortColumnLookup: o,
    filterColumnLookup: s,
    columnHeaderTabIndexState: a,
    columnGroupHeaderTabIndexState: c,
    columnHeaderFocus: f,
    columnGroupHeaderFocus: m,
    headerGroupingMaxDepth: g,
    columnMenuState: y,
    columnVisibility: w,
    columnGroupsHeaderStructure: C,
    hasOtherElementInTabSequence: T
  });
  return /* @__PURE__ */ $.jsxs(SCe, J({}, E, O(), {
    ref: n,
    children: [I(), k()]
  }));
});
process.env.NODE_ENV !== "production" && (G4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  columnGroupHeaderFocus: u.shape({
    depth: u.number.isRequired,
    field: u.string.isRequired
  }),
  columnGroupHeaderTabIndexState: u.shape({
    depth: u.number.isRequired,
    field: u.string.isRequired
  }),
  columnGroupsHeaderStructure: u.arrayOf(u.arrayOf(u.shape({
    columnFields: u.arrayOf(u.string).isRequired,
    groupId: u.string
  }))).isRequired,
  columnHeaderFocus: u.shape({
    field: u.string.isRequired
  }),
  columnHeaderTabIndexState: u.shape({
    field: u.string.isRequired
  }),
  columnMenuState: u.shape({
    field: u.string,
    open: u.bool.isRequired
  }).isRequired,
  columnVisibility: u.object.isRequired,
  filterColumnLookup: u.object.isRequired,
  hasOtherElementInTabSequence: u.bool.isRequired,
  headerGroupingMaxDepth: u.number.isRequired,
  sortColumnLookup: u.object.isRequired,
  visibleColumns: u.arrayOf(u.object).isRequired
});
const xCe = Rd(G4);
function ECe(e) {
  return null;
}
function TCe(e) {
  return null;
}
const _Ce = Yn(function(t, n) {
  const o = On().current.getLocaleText("noResultsOverlayLabel");
  return /* @__PURE__ */ $.jsx(_O, J({}, t, {
    ref: n,
    children: o
  }));
}), OCe = ["sortingOrder"], RCe = /* @__PURE__ */ x.memo(function(t) {
  const {
    sortingOrder: n
  } = t, r = qt(t, OCe), o = Lt(), [s] = n, a = s === "asc" ? o.slots.columnSortedAscendingIcon : o.slots.columnSortedDescendingIcon;
  return a ? /* @__PURE__ */ $.jsx(a, J({}, r)) : null;
}), kCe = ["native"];
function PCe(e) {
  let {
    native: t
  } = e, n = qt(e, kCe);
  return t ? /* @__PURE__ */ $.jsx("option", J({}, n)) : /* @__PURE__ */ $.jsx(vl, J({}, n));
}
const MCe = {
  booleanCellTrueIcon: Zye,
  booleanCellFalseIcon: FP,
  columnMenuIcon: Yye,
  openFilterButtonIcon: Hye,
  filterPanelDeleteIcon: FP,
  columnFilteredIcon: yB,
  columnSelectorIcon: Uye,
  columnUnsortedIcon: RCe,
  columnSortedAscendingIcon: hB,
  columnSortedDescendingIcon: mB,
  columnResizeIcon: Wye,
  densityCompactIcon: Gye,
  densityStandardIcon: qye,
  densityComfortableIcon: Kye,
  exportIcon: Jye,
  moreActionsIcon: ebe,
  treeDataCollapseIcon: vB,
  treeDataExpandIcon: gB,
  groupingCriteriaCollapseIcon: vB,
  groupingCriteriaExpandIcon: gB,
  detailPanelExpandIcon: bB,
  detailPanelCollapseIcon: Xye,
  rowReorderIcon: wB,
  quickFilterIcon: Vye,
  quickFilterClearIcon: FP,
  columnMenuHideIcon: tbe,
  columnMenuSortAscendingIcon: hB,
  columnMenuSortDescendingIcon: mB,
  columnMenuFilterIcon: yB,
  columnMenuManageColumnsIcon: nbe,
  columnMenuClearIcon: rbe,
  loadIcon: Qye,
  filterPanelAddIcon: bB,
  filterPanelRemoveAllIcon: obe,
  columnReorderIcon: wB
}, ICe = J({}, MCe, {
  baseBadge: bV,
  baseCheckbox: EV,
  baseDivider: HS,
  baseTextField: jf,
  baseFormControl: U_,
  baseSelect: fy,
  baseButton: lm,
  baseIconButton: cu,
  baseInputAdornment: aD,
  baseTooltip: qV,
  basePopper: lp,
  baseInputLabel: G_,
  baseSelectOption: PCe,
  baseChip: Av
}), DCe = J({}, ICe, {
  cell: Mve,
  skeletonCell: $ve,
  columnHeaderFilterIconButton: a4,
  columnHeaderSortIcon: zye,
  columnMenu: b4,
  columnHeaders: xCe,
  detailPanels: ECe,
  footer: P4,
  footerRowCount: A4,
  toolbar: null,
  pinnedRows: TCe,
  loadingOverlay: M4,
  noResultsOverlay: _Ce,
  noRowsOverlay: I4,
  pagination: D4,
  filterPanel: E4,
  columnsPanel: w4,
  columnsManagement: T4,
  panel: S4,
  row: mwe
}), ACe = {
  disableMultipleColumnsFiltering: !0,
  disableMultipleColumnsSorting: !0,
  throttleRowsMs: void 0,
  hideFooterRowCount: !1,
  pagination: !0,
  checkboxSelectionVisibleOnly: !1,
  disableColumnReorder: !0,
  keepColumnPositionIfDraggedOutside: !1,
  signature: "DataGrid",
  unstable_listView: !1
}, NCe = DCe, LCe = (e) => {
  const t = sp(), n = xve(x.useMemo(() => hpe({
    props: e,
    theme: t,
    name: "MuiDataGrid"
  }), [t, e])), r = x.useMemo(() => J({}, Upe, n.localeText), [n.localeText]), o = x.useMemo(() => Sve({
    defaultSlots: NCe,
    slots: n.slots
  }), [n.slots]), s = x.useMemo(() => Object.keys(aI).reduce((a, c) => (a[c] = n[c] ?? aI[c], a), {}), [n]);
  return x.useMemo(() => J({}, n, s, {
    localeText: r,
    slots: o
  }, ACe), [n, r, o, s]);
}, $Ce = {
  hooks: {
    useGridAriaAttributes: gwe,
    useGridRowAriaAttributes: vwe,
    useCellAggregationResult: () => null
  }
}, q4 = Yn(function(t, n) {
  var s;
  const r = LCe(t), o = hCe(r.apiRef, r);
  return process.env.NODE_ENV !== "production" && Tve(r, Eve), /* @__PURE__ */ $.jsx(ywe, {
    privateApiRef: o,
    configuration: $Ce,
    props: r,
    children: /* @__PURE__ */ $.jsx(eye, J({
      className: r.className,
      style: r.style,
      sx: r.sx
    }, r.forwardedProps, (s = r.slotProps) == null ? void 0 : s.root, {
      ref: n
    }))
  });
}), jCe = /* @__PURE__ */ x.memo(q4);
q4.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.
   */
  apiRef: u.shape({
    current: u.object.isRequired
  }),
  /**
   * The label of the Data Grid.
   */
  "aria-label": u.string,
  /**
   * The id of the element containing a label for the Data Grid.
   */
  "aria-labelledby": u.string,
  /**
   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.
   * @default false
   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container
   * @example
   * <div style={{ display: 'flex', flexDirection: 'column' }}>
   *   <DataGrid />
   * </div>
   */
  autoHeight: u.bool,
  /**
   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.
   * @default false
   */
  autoPageSize: u.bool,
  /**
   * If `true`, columns are autosized after the datagrid is mounted.
   * @default false
   */
  autosizeOnMount: u.bool,
  /**
   * The options for autosize when user-initiated.
   */
  autosizeOptions: u.shape({
    columns: u.arrayOf(u.string),
    disableColumnVirtualization: u.bool,
    expand: u.bool,
    includeHeaders: u.bool,
    includeOutliers: u.bool,
    outliersFactor: u.number
  }),
  /**
   * Controls the modes of the cells.
   */
  cellModesModel: u.object,
  /**
   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.
   * @default false
   */
  checkboxSelection: u.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: u.object,
  /**
   * The character used to separate cell values when copying to the clipboard.
   * @default '\t'
   */
  clipboardCopyCellDelimiter: u.string,
  /**
   * Column region in pixels to render before/after the viewport
   * @default 150
   */
  columnBufferPx: u.number,
  /**
   * Sets the height in pixels of the column group headers in the Data Grid.
   * Inherits the `columnHeaderHeight` value if not set.
   */
  columnGroupHeaderHeight: u.number,
  columnGroupingModel: u.arrayOf(u.object),
  /**
   * Sets the height in pixel of the column headers in the Data Grid.
   * @default 56
   */
  columnHeaderHeight: u.number,
  /**
   * Set of columns of type [[GridColDef]][].
   */
  columns: u.arrayOf(u.object).isRequired,
  /**
   * Set the column visibility model of the Data Grid.
   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].
   */
  columnVisibilityModel: u.object,
  /**
   * Set the density of the Data Grid.
   * @default "standard"
   */
  density: u.oneOf(["comfortable", "compact", "standard"]),
  /**
   * If `true`, column autosizing on header separator double-click is disabled.
   * @default false
   */
  disableAutosize: u.bool,
  /**
   * If `true`, column filters are disabled.
   * @default false
   */
  disableColumnFilter: u.bool,
  /**
   * If `true`, the column menu is disabled.
   * @default false
   */
  disableColumnMenu: u.bool,
  /**
   * If `true`, resizing columns is disabled.
   * @default false
   */
  disableColumnResize: u.bool,
  /**
   * If `true`, hiding/showing columns is disabled.
   * @default false
   */
  disableColumnSelector: u.bool,
  /**
   * If `true`, the column sorting feature will be disabled.
   * @default false
   */
  disableColumnSorting: u.bool,
  /**
   * If `true`, the density selector is disabled.
   * @default false
   */
  disableDensitySelector: u.bool,
  /**
   * If `true`, `eval()` is not used for performance optimization.
   * @default false
   */
  disableEval: u.bool,
  /**
   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.
   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.
   * @default false (`!props.checkboxSelection` for MIT Data Grid)
   */
  disableMultipleRowSelection: u.bool,
  /**
   * If `true`, the selection on click on a row or cell is disabled.
   * @default false
   */
  disableRowSelectionOnClick: u.bool,
  /**
   * If `true`, the virtualization is disabled.
   * @default false
   */
  disableVirtualization: u.bool,
  /**
   * Controls whether to use the cell or row editing.
   * @default "cell"
   */
  editMode: u.oneOf(["cell", "row"]),
  /**
   * Use if the actual rowCount is not known upfront, but an estimation is available.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Applicable only with `paginationMode="server"` and when `rowCount="-1"`
   */
  estimatedRowCount: u.number,
  /**
   * Unstable features, breaking changes might be introduced.
   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.
   */
  experimentalFeatures: u.shape({
    warnIfFocusStateIsNotSynced: u.bool
  }),
  /**
   * The milliseconds delay to wait after a keystroke before triggering filtering.
   * @default 150
   */
  filterDebounceMs: u.number,
  /**
   * Filtering can be processed on the server or client-side.
   * Set it to 'server' if you would like to handle filtering on the server-side.
   * @default "client"
   */
  filterMode: u.oneOf(["client", "server"]),
  /**
   * Set the filter model of the Data Grid.
   */
  filterModel: u.shape({
    items: u.arrayOf(u.shape({
      field: u.string.isRequired,
      id: u.oneOfType([u.number, u.string]),
      operator: u.string.isRequired,
      value: u.any
    })).isRequired,
    logicOperator: u.oneOf(["and", "or"]),
    quickFilterExcludeHiddenColumns: u.bool,
    quickFilterLogicOperator: u.oneOf(["and", "or"]),
    quickFilterValues: u.array
  }),
  /**
   * Forwarded props for the Data Grid root element.
   * @ignore - do not document.
   */
  forwardedProps: u.object,
  /**
   * Function that applies CSS classes dynamically on cells.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {string} The CSS class to apply to the cell.
   */
  getCellClassName: u.func,
  /**
   * Function that returns the element to render in row detail.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {React.JSX.Element} The row detail element.
   */
  getDetailPanelContent: u.func,
  /**
   * Function that returns the estimated height for a row.
   * Only works if dynamic row height is used.
   * Once the row height is measured this value is discarded.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.
   */
  getEstimatedRowHeight: u.func,
  /**
   * Function that applies CSS classes dynamically on rows.
   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].
   * @returns {string} The CSS class to apply to the row.
   */
  getRowClassName: u.func,
  /**
   * Function that sets the row height per row.
   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If "auto" then the row height is calculated based on the content.
   */
  getRowHeight: u.func,
  /**
   * Return the id of a given [[GridRowModel]].
   * Ensure the reference of this prop is stable to avoid performance implications.
   * It could be done by either defining the prop outside of the component or by memoizing it.
   */
  getRowId: u.func,
  /**
   * Function that allows to specify the spacing between rows.
   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].
   * @returns {GridRowSpacing} The row spacing values.
   */
  getRowSpacing: u.func,
  /**
   * If `true`, the footer component is hidden.
   * @default false
   */
  hideFooter: u.bool,
  /**
   * If `true`, the pagination component in the footer is hidden.
   * @default false
   */
  hideFooterPagination: u.bool,
  /**
   * If `true`, the selected row count in the footer is hidden.
   * @default false
   */
  hideFooterSelectedRowCount: u.bool,
  /**
   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.
   * E.g. when filter value is `cafe`, the rows with `café` will be visible.
   * @default false
   */
  ignoreDiacritics: u.bool,
  /**
   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.
   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.
   * @default false
   */
  ignoreValueFormatterDuringExport: u.oneOfType([u.shape({
    clipboardExport: u.bool,
    csvExport: u.bool
  }), u.bool]),
  /**
   * If `select`, a group header checkbox in indeterminate state (like "Select All" checkbox)
   * will select all the rows under it.
   * If `deselect`, it will deselect all the rows under it.
   * Works only if `checkboxSelection` is enabled.
   * @default "deselect"
   * @deprecated `select` will be the default behavior from v8 onwards
   */
  indeterminateCheckboxAction: u.oneOf(["deselect", "select"]),
  /**
   * The initial state of the DataGrid.
   * The data in it will be set in the state on initialization but will not be controlled.
   * If one of the data in `initialState` is also being controlled, then the control state wins.
   */
  initialState: u.object,
  /**
   * Callback fired when a cell is rendered, returns true if the cell is editable.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @returns {boolean} A boolean indicating if the cell is editable.
   */
  isCellEditable: u.func,
  /**
   * Determines if a row can be selected.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @returns {boolean} A boolean indicating if the row is selectable.
   */
  isRowSelectable: u.func,
  /**
   * If `true`, the selection model will retain selected rows that do not exist.
   * Useful when using server side pagination and row selections need to be retained
   * when changing pages.
   * @default false
   */
  keepNonExistentRowsSelected: u.bool,
  /**
   * If `true`, a loading overlay is displayed.
   * @default false
   */
  loading: u.bool,
  /**
   * Set the locale text of the Data Grid.
   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.
   */
  localeText: u.object,
  /**
   * Pass a custom logger in the components that implements the [[Logger]] interface.
   * @default console
   */
  logger: u.shape({
    debug: u.func.isRequired,
    error: u.func.isRequired,
    info: u.func.isRequired,
    warn: u.func.isRequired
  }),
  /**
   * Allows to pass the logging level or false to turn off logging.
   * @default "error" ("warn" in dev mode)
   */
  logLevel: u.oneOf(["debug", "error", "info", "warn", !1]),
  /**
   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).
   */
  nonce: u.string,
  /**
   * Callback fired when any cell is clicked.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellClick: u.func,
  /**
   * Callback fired when a double click event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellDoubleClick: u.func,
  /**
   * Callback fired when the cell turns to edit mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStart: u.func,
  /**
   * Callback fired when the cell turns to view mode.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onCellEditStop: u.func,
  /**
   * Callback fired when a keydown event comes from a cell element.
   * @param {GridCellParams} params With all properties from [[GridCellParams]].
   * @param {MuiEvent<React.KeyboardEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellKeyDown: u.func,
  /**
   * Callback fired when the `cellModesModel` prop changes.
   * @param {GridCellModesModel} cellModesModel Object containing which cells are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onCellModesModelChange: u.func,
  /**
   * Callback called when the data is copied to the clipboard.
   * @param {string} data The data copied to the clipboard.
   */
  onClipboardCopy: u.func,
  /**
   * Callback fired when a click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderClick: u.func,
  /**
   * Callback fired when a contextmenu event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   */
  onColumnHeaderContextMenu: u.func,
  /**
   * Callback fired when a double click event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderDoubleClick: u.func,
  /**
   * Callback fired when a mouse enter event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderEnter: u.func,
  /**
   * Callback fired when a mouse leave event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderLeave: u.func,
  /**
   * Callback fired when a mouseout event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOut: u.func,
  /**
   * Callback fired when a mouseover event comes from a column header element.
   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnHeaderOver: u.func,
  /**
   * Callback fired when a column is reordered.
   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnOrderChange: u.func,
  /**
   * Callback fired while a column is being resized.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnResize: u.func,
  /**
   * Callback fired when the column visibility model changes.
   * @param {GridColumnVisibilityModel} model The new model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnVisibilityModelChange: u.func,
  /**
   * Callback fired when the width of a column is changed.
   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onColumnWidthChange: u.func,
  /**
   * Callback fired when the density changes.
   * @param {GridDensity} density New density value.
   */
  onDensityChange: u.func,
  /**
   * Callback fired when the Filter model changes before the filters are applied.
   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onFilterModelChange: u.func,
  /**
   * Callback fired when the menu is closed.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuClose: u.func,
  /**
   * Callback fired when the menu is opened.
   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onMenuOpen: u.func,
  /**
   * Callback fired when the pagination meta has changed.
   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.
   */
  onPaginationMetaChange: u.func,
  /**
   * Callback fired when the pagination model has changed.
   * @param {GridPaginationModel} model Updated pagination model.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPaginationModelChange: u.func,
  /**
   * Callback fired when the preferences panel is closed.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelClose: u.func,
  /**
   * Callback fired when the preferences panel is opened.
   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onPreferencePanelOpen: u.func,
  /**
   * Callback called when `processRowUpdate` throws an error or rejects.
   * @param {any} error The error thrown.
   */
  onProcessRowUpdateError: u.func,
  /**
   * Callback fired when the Data Grid is resized.
   * @param {ElementSize} containerSize With all properties from [[ElementSize]].
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onResize: u.func,
  /**
   * Callback fired when a row is clicked.
   * Not called if the target clicked is an interactive element added by the built-in columns.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowClick: u.func,
  /**
   * Callback fired when the row count has changed.
   * @param {number} count Updated row count.
   */
  onRowCountChange: u.func,
  /**
   * Callback fired when a double click event comes from a row container element.
   * @param {GridRowParams} params With all properties from [[RowParams]].
   * @param {MuiEvent<React.MouseEvent>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowDoubleClick: u.func,
  /**
   * Callback fired when the row turns to edit mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStart: u.func,
  /**
   * Callback fired when the row turns to view mode.
   * @param {GridRowParams} params With all properties from [[GridRowParams]].
   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
   */
  onRowEditStop: u.func,
  /**
   * Callback fired when the `rowModesModel` prop changes.
   * @param {GridRowModesModel} rowModesModel Object containing which rows are in "edit" mode.
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowModesModelChange: u.func,
  /**
   * Callback fired when the selection state of one or multiple rows changes.
   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onRowSelectionModelChange: u.func,
  /**
   * Callback fired when the sort model changes before a column is sorted.
   * @param {GridSortModel} model With all properties from [[GridSortModel]].
   * @param {GridCallbackDetails} details Additional details for this callback.
   */
  onSortModelChange: u.func,
  /**
   * Callback fired when the state of the Data Grid is updated.
   * @param {GridState} state The new state.
   * @param {MuiEvent<{}>} event The event object.
   * @param {GridCallbackDetails} details Additional details for this callback.
   * @ignore - do not document.
   */
  onStateChange: u.func,
  /**
   * Select the pageSize dynamically using the component UI.
   * @default [25, 50, 100]
   */
  pageSizeOptions: u.arrayOf(u.oneOfType([u.number, u.shape({
    label: u.string.isRequired,
    value: u.number.isRequired
  })]).isRequired),
  pagination: u.oneOf([!0]),
  /**
   * The extra information about the pagination state of the Data Grid.
   * Only applicable with `paginationMode="server"`.
   */
  paginationMeta: u.shape({
    hasNextPage: u.bool
  }),
  /**
   * Pagination can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle the pagination on the client-side.
   * Set it to 'server' if you would like to handle the pagination on the server-side.
   * @default "client"
   */
  paginationMode: u.oneOf(["client", "server"]),
  /**
   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.
   */
  paginationModel: u.shape({
    page: u.number.isRequired,
    pageSize: u.number.isRequired
  }),
  /**
   * Callback called before updating a row with new values in the row and cell editing.
   * @template R
   * @param {R} newRow Row object with the new values.
   * @param {R} oldRow Row object with the old values.
   * @param {{ rowId: GridRowId }} params Additional parameters.
   * @returns {Promise<R> | R} The final values to update the row.
   */
  processRowUpdate: u.func,
  /**
   * If `true`, the page is set to 0 after each sorting or filtering.
   * This prop will be removed in the next major version and resetting the page will become the default behavior.
   * @default false
   */
  resetPageOnSortFilter: u.bool,
  /**
   * The milliseconds throttle delay for resizing the grid.
   * @default 60
   */
  resizeThrottleMs: u.number,
  /**
   * Row region in pixels to render before/after the viewport
   * @default 150
   */
  rowBufferPx: u.number,
  /**
   * Set the total number of rows, if it is different from the length of the value `rows` prop.
   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.
   * Only works with `paginationMode="server"`, ignored when `paginationMode="client"`.
   */
  rowCount: u.number,
  /**
   * Sets the height in pixel of a row in the Data Grid.
   * @default 52
   */
  rowHeight: u.number,
  /**
   * Controls the modes of the rows.
   */
  rowModesModel: u.object,
  /**
   * The milliseconds delay to wait after measuring the row height before recalculating row positions.
   * Setting it to a lower value could be useful when using dynamic row height,
   * but might reduce performance when displaying a large number of rows.
   * @default 166
   * @deprecated
   */
  rowPositionsDebounceMs: u.number,
  /**
   * Set of rows of type [[GridRowsProp]].
   * @default []
   */
  rows: u.arrayOf(u.object),
  /**
   * If `false`, the row selection mode is disabled.
   * @default true
   */
  rowSelection: u.bool,
  /**
   * Sets the row selection model of the Data Grid.
   */
  rowSelectionModel: u.oneOfType([u.arrayOf(u.oneOfType([u.number, u.string]).isRequired), u.number, u.string]),
  /**
   * Sets the type of space between rows added by `getRowSpacing`.
   * @default "margin"
   */
  rowSpacingType: u.oneOf(["border", "margin"]),
  /**
   * Override the height/width of the Data Grid inner scrollbar.
   */
  scrollbarSize: u.number,
  /**
   * If `true`, vertical borders will be displayed between cells.
   * @default false
   */
  showCellVerticalBorder: u.bool,
  /**
   * If `true`, vertical borders will be displayed between column header items.
   * @default false
   */
  showColumnVerticalBorder: u.bool,
  /**
   * Overridable components props dynamically passed to the component at rendering.
   */
  slotProps: u.object,
  /**
   * Overridable components.
   */
  slots: u.object,
  /**
   * Sorting can be processed on the server or client-side.
   * Set it to 'client' if you would like to handle sorting on the client-side.
   * Set it to 'server' if you would like to handle sorting on the server-side.
   * @default "client"
   */
  sortingMode: u.oneOf(["client", "server"]),
  /**
   * The order of the sorting sequence.
   * @default ['asc', 'desc', null]
   */
  sortingOrder: u.arrayOf(u.oneOf(["asc", "desc"])),
  /**
   * Set the sort model of the Data Grid.
   */
  sortModel: u.arrayOf(u.shape({
    field: u.string.isRequired,
    sort: u.oneOf(["asc", "desc"])
  })),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: u.oneOfType([u.arrayOf(u.oneOfType([u.func, u.object, u.bool])), u.func, u.object]),
  /**
   * If `true`, the Data Grid will auto span the cells over the rows having the same value.
   * @default false
   */
  unstable_rowSpanning: u.bool,
  /**
   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.
   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.
   * For datasets with a large number of columns, this can cause performance issues.
   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.
   * @default false
   */
  virtualizeColumnsWithAutoRowHeight: u.bool
};
const FCe = xn(/* @__PURE__ */ $.jsx("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"
}), "Edit");
function zCe({ products: e, loading: t, onEdit: n }) {
  const r = [
    { field: "name", headerName: "Product", flex: 1 },
    {
      field: "price",
      headerName: "Price",
      flex: 1,
      valueGetter: (o, s) => {
        var a;
        return (a = s.price) != null && a.unit_amount ? `$${(s.price.unit_amount / 100).toFixed(2)} ${s.price.currency.toUpperCase()}` : "—";
      }
    },
    {
      field: "interval",
      headerName: "Billing",
      flex: 1,
      valueGetter: (o, s) => {
        var a;
        return ((a = s.price) == null ? void 0 : a.interval) ?? "—";
      },
      renderCell: (o) => o.value && o.value !== "one_time" ? /* @__PURE__ */ $.jsx(Av, { label: o.value, size: "small", color: "primary" }) : /* @__PURE__ */ $.jsx(Av, { label: o.value ?? "one time", size: "small", variant: "outlined" })
    },
    {
      field: "status",
      headerName: "Status",
      flex: 1,
      renderCell: (o) => /* @__PURE__ */ $.jsx(
        Av,
        {
          label: o.value === "active" ? "Active" : "Archived",
          color: o.value === "active" ? "success" : "default",
          size: "small"
        }
      )
    },
    {
      field: "actions",
      headerName: "",
      width: 80,
      sortable: !1,
      filterable: !1,
      renderCell: (o) => /* @__PURE__ */ $.jsx(cu, { color: "primary", onClick: () => n(o.row), children: /* @__PURE__ */ $.jsx(FCe, {}) })
    }
  ];
  return /* @__PURE__ */ $.jsx(H_, { sx: { height: 520, bgcolor: "white", borderRadius: 2, boxShadow: 1 }, children: /* @__PURE__ */ $.jsx(
    jCe,
    {
      rows: e,
      getRowId: (o) => o.id,
      columns: r,
      loading: t,
      disableRowSelectionOnClick: !0
    }
  ) });
}
const BCe = [
  { label: "One time", value: "one_time" },
  { label: "Monthly", value: "month" },
  { label: "Yearly", value: "year" }
];
function HCe({ open: e, product: t, onClose: n, onUpdated: r }) {
  const [o, s] = x.useState(""), [a, c] = x.useState(""), [f, m] = x.useState(""), [g, y] = x.useState("one_time"), [w, C] = x.useState("usd"), [T, E] = x.useState(!1), [O, k] = x.useState(null), [I, M] = x.useState(null);
  x.useEffect(() => {
    var P, F, H;
    t ? (s(t.name), c(t.description ?? ""), (P = t.price) != null && P.unit_amount ? m((t.price.unit_amount / 100).toFixed(2)) : m(""), y(((F = t.price) == null ? void 0 : F.interval) ?? "one_time"), C(((H = t.price) == null ? void 0 : H.currency) ?? "usd")) : (s(""), c(""), m(""), y("one_time"), C("usd")), k(null), M(null);
  }, [t, e]);
  async function N(P) {
    var F;
    P.preventDefault(), E(!0), k(null), M(null);
    try {
      const H = Math.round(Number(f) * 100);
      if (Number.isNaN(H)) {
        k("Enter a valid price value.");
        return;
      }
      t ? (await Bae({
        productId: t.id,
        priceId: (F = t.price) == null ? void 0 : F.id,
        price: H,
        currency: w,
        interval: g
      }), M("Product updated successfully.")) : (await zae({
        name: o,
        description: a,
        price: H,
        currency: w,
        interval: g
      }), M("Product created successfully.")), await r();
    } catch (H) {
      H instanceof Error ? k(H.message) : k("Something went wrong. Please try again.");
    } finally {
      E(!1);
    }
  }
  return /* @__PURE__ */ $.jsx(MV, { anchor: "right", open: e, onClose: n, PaperProps: { sx: { width: 420, p: 3 } }, children: /* @__PURE__ */ $.jsxs(ra, { component: "form", spacing: 3, onSubmit: N, children: [
    /* @__PURE__ */ $.jsxs("div", { children: [
      /* @__PURE__ */ $.jsx(Po, { variant: "h5", fontWeight: 600, gutterBottom: !0, children: t ? "Edit product" : "Create new product" }),
      /* @__PURE__ */ $.jsx(Po, { variant: "body2", color: "text.secondary", children: "Sync updates across Supabase and Stripe instantly." })
    ] }),
    /* @__PURE__ */ $.jsx(HS, {}),
    /* @__PURE__ */ $.jsxs(ra, { spacing: 2, children: [
      /* @__PURE__ */ $.jsx(jf, { label: "Product name", value: o, onChange: (P) => s(P.target.value), required: !0 }),
      /* @__PURE__ */ $.jsx(
        jf,
        {
          label: "Description",
          value: a,
          multiline: !0,
          minRows: 3,
          onChange: (P) => c(P.target.value)
        }
      ),
      /* @__PURE__ */ $.jsx(
        jf,
        {
          label: "Price",
          value: f,
          onChange: (P) => m(P.target.value),
          InputProps: { startAdornment: /* @__PURE__ */ $.jsx(aD, { position: "start", children: "$" }) },
          required: !0
        }
      ),
      /* @__PURE__ */ $.jsxs(U_, { fullWidth: !0, children: [
        /* @__PURE__ */ $.jsx(G_, { id: "billing-label", children: "Billing" }),
        /* @__PURE__ */ $.jsx(
          fy,
          {
            labelId: "billing-label",
            label: "Billing",
            value: g,
            onChange: (P) => y(P.target.value),
            children: BCe.map((P) => /* @__PURE__ */ $.jsx(vl, { value: P.value, children: P.label }, P.value))
          }
        )
      ] }),
      /* @__PURE__ */ $.jsx(
        jf,
        {
          label: "Currency",
          value: w,
          onChange: (P) => C(P.target.value.toLowerCase()),
          inputProps: { maxLength: 3, style: { textTransform: "uppercase" } }
        }
      )
    ] }),
    O && /* @__PURE__ */ $.jsx(LS, { severity: "error", children: O }),
    I && /* @__PURE__ */ $.jsx(LS, { severity: "success", children: I }),
    /* @__PURE__ */ $.jsxs(ra, { direction: "row", spacing: 2, children: [
      /* @__PURE__ */ $.jsx(lm, { variant: "contained", type: "submit", disabled: T, fullWidth: !0, children: t ? "Save changes" : "Create product" }),
      /* @__PURE__ */ $.jsx(lm, { variant: "outlined", onClick: n, fullWidth: !0, children: "Cancel" })
    ] })
  ] }) });
}
function VCe() {
  const e = rC(), [t, n] = x.useState([]), [r, o] = x.useState(!0), [s, a] = x.useState(!1), [c, f] = x.useState(null), m = x.useMemo(
    () => [
      { label: "MRR", value: "$3,840", change: 12 },
      { label: "Active subscribers", value: "482", change: 8 },
      { label: "Conversion rate", value: "6.4%", change: -2 }
    ],
    []
  ), g = x.useMemo(
    () => Array.from({ length: 12 }).map((C, T) => ({
      date: `2024-${String(T + 1).padStart(2, "0")}-01`,
      amount: Math.round(2e3 + Math.random() * 1500)
    })),
    []
  );
  x.useEffect(() => {
    y();
  }, []);
  async function y() {
    try {
      o(!0);
      const C = await Fae();
      n(C);
    } catch (C) {
      console.error("Failed to load products", C);
    } finally {
      o(!1);
    }
  }
  async function w() {
    await Jf.auth.signOut(), e("/login");
  }
  return /* @__PURE__ */ $.jsxs(H_, { sx: { minHeight: "100vh", bgcolor: "grey.100" }, children: [
    /* @__PURE__ */ $.jsx(rV, { position: "sticky", color: "primary", enableColorOnDark: !0, children: /* @__PURE__ */ $.jsxs(dD, { children: [
      /* @__PURE__ */ $.jsx(Po, { variant: "h6", sx: { flexGrow: 1 }, children: "Harmony Sheets — Admin" }),
      /* @__PURE__ */ $.jsx(cu, { color: "inherit", onClick: w, children: /* @__PURE__ */ $.jsx($ae, {}) })
    ] }) }),
    /* @__PURE__ */ $.jsx(iD, { sx: { py: 4 }, children: /* @__PURE__ */ $.jsxs(ra, { spacing: 6, children: [
      /* @__PURE__ */ $.jsxs(ra, { spacing: 3, children: [
        /* @__PURE__ */ $.jsxs(ra, { spacing: 1, children: [
          /* @__PURE__ */ $.jsx(Po, { variant: "h4", fontWeight: 600, children: "Business overview" }),
          /* @__PURE__ */ $.jsx(Po, { variant: "body2", color: "text.secondary", children: "Track sales performance and customer growth across Harmony Sheets." })
        ] }),
        /* @__PURE__ */ $.jsx(Uae, { kpis: m }),
        /* @__PURE__ */ $.jsx(rfe, { data: g })
      ] }),
      /* @__PURE__ */ $.jsxs(ra, { spacing: 3, children: [
        /* @__PURE__ */ $.jsxs(
          ra,
          {
            direction: { xs: "column", sm: "row" },
            justifyContent: "space-between",
            alignItems: { xs: "flex-start", sm: "center" },
            spacing: 2,
            children: [
              /* @__PURE__ */ $.jsxs(ra, { spacing: 1, children: [
                /* @__PURE__ */ $.jsx(Po, { variant: "h4", fontWeight: 600, children: "Product catalog" }),
                /* @__PURE__ */ $.jsx(Po, { variant: "body2", color: "text.secondary", children: "Create, update, and archive products synced with Stripe." })
              ] }),
              /* @__PURE__ */ $.jsx(
                lm,
                {
                  variant: "contained",
                  startIcon: /* @__PURE__ */ $.jsx(jae, {}),
                  onClick: () => {
                    f(null), a(!0);
                  },
                  children: "New product"
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ $.jsx(
          zCe,
          {
            products: t,
            loading: r,
            onEdit: (C) => {
              f(C), a(!0);
            }
          }
        )
      ] })
    ] }) }),
    /* @__PURE__ */ $.jsx(
      HCe,
      {
        open: s,
        product: c,
        onClose: () => a(!1),
        onUpdated: async () => {
          a(!1), await y();
        }
      }
    )
  ] });
}
function HB({ children: e }) {
  const t = rC(), n = tp(), [r, o] = x.useState(!0), [s, a] = x.useState(!1);
  return x.useEffect(() => {
    async function c() {
      const {
        data: { session: m }
      } = await Jf.auth.getSession(), g = u2(m == null ? void 0 : m.user);
      a(g), o(!1), !g && n.pathname !== "/login" && t("/login");
    }
    c();
    const { data: f } = Jf.auth.onAuthStateChange((m, g) => {
      const y = u2(g == null ? void 0 : g.user);
      a(y), y || t("/login");
    });
    return () => {
      f.subscription.unsubscribe();
    };
  }, [n.pathname, t]), r ? /* @__PURE__ */ $.jsx(H_, { sx: { display: "grid", placeItems: "center", height: "100vh" }, children: /* @__PURE__ */ $.jsx(fC, {}) }) : s ? /* @__PURE__ */ $.jsx($.Fragment, { children: e }) : null;
}
const UCe = N_({
  palette: {
    mode: "light",
    primary: {
      main: "#6054d0"
    },
    secondary: {
      main: "#f48fb1"
    }
  }
});
function WCe() {
  return /* @__PURE__ */ $.jsxs(EJ, { theme: UCe, children: [
    /* @__PURE__ */ $.jsx(_V, {}),
    /* @__PURE__ */ $.jsxs(LK, { children: [
      /* @__PURE__ */ $.jsx(Ah, { path: "/login", element: /* @__PURE__ */ $.jsx(Lae, {}) }),
      /* @__PURE__ */ $.jsx(
        Ah,
        {
          path: "/",
          element: /* @__PURE__ */ $.jsx(HB, { children: /* @__PURE__ */ $.jsx(_E, { to: "/dashboard", replace: !0 }) })
        }
      ),
      /* @__PURE__ */ $.jsx(
        Ah,
        {
          path: "/dashboard",
          element: /* @__PURE__ */ $.jsx(HB, { children: /* @__PURE__ */ $.jsx(VCe, {}) })
        }
      ),
      /* @__PURE__ */ $.jsx(Ah, { path: "/products", element: /* @__PURE__ */ $.jsx(_E, { to: "/dashboard", replace: !0 }) }),
      /* @__PURE__ */ $.jsx(Ah, { path: "/analytics", element: /* @__PURE__ */ $.jsx(_E, { to: "/dashboard", replace: !0 }) }),
      /* @__PURE__ */ $.jsx(Ah, { path: "*", element: /* @__PURE__ */ $.jsx(_E, { to: "/login", replace: !0 }) })
    ] })
  ] });
}
const GCe = "/admin/".replace(/\/$/, "");
Jw.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ $.jsx(uu.StrictMode, { children: /* @__PURE__ */ $.jsx(QK, { basename: GCe, children: /* @__PURE__ */ $.jsx(WCe, {}) }) })
);
